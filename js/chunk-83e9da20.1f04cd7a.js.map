{"version":3,"sources":["webpack:///./node_modules/@ckeditor/ckeditor5-core/theme/icons/object-center.svg","webpack:///./node_modules/@ckeditor/ckeditor5-core/theme/icons/object-right.svg","webpack:///./node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/italic.svg","webpack:///./node_modules/@ckeditor/ckeditor5-core/theme/icons/image.svg","webpack:///./src/components/Pagination.vue?e791","webpack:///src/components/Pagination.vue","webpack:///./src/components/Pagination.vue?23e0","webpack:///./src/components/Pagination.vue","webpack:///./node_modules/@ckeditor/ckeditor5-link/theme/icons/unlink.svg","webpack:///./node_modules/@ckeditor/ckeditor5-core/theme/icons/check.svg","webpack:///./node_modules/@ckeditor/ckeditor5-core/theme/icons/object-left.svg","webpack:///./node_modules/@ckeditor/ckeditor5-media-embed/theme/icons/media-placeholder.svg","webpack:///./node_modules/@ckeditor/ckeditor5-core/theme/icons/three-vertical-dots.svg","webpack:///./node_modules/@ckeditor/ckeditor5-core/theme/icons/align-left.svg","webpack:///./node_modules/@ckeditor/ckeditor5-ckfinder/theme/icons/browse-files.svg","webpack:///./node_modules/@ckeditor/ckeditor5-core/theme/icons/pencil.svg","webpack:///./node_modules/lodash-es/_root.js","webpack:///./node_modules/@ckeditor/ckeditor5-core/theme/icons/align-center.svg","webpack:///./node_modules/@ckeditor/ckeditor5-media-embed/theme/icons/media.svg","webpack:///./node_modules/lodash-es/stubFalse.js","webpack:///./node_modules/@ckeditor/ckeditor5-undo/theme/icons/redo.svg","webpack:///./node_modules/@ckeditor/ckeditor5-image/theme/icons/image_placeholder.svg","webpack:///./node_modules/@ckeditor/ckeditor5-ui/theme/icons/dropdown-arrow.svg","webpack:///./node_modules/@ckeditor/ckeditor5-core/theme/icons/low-vision.svg","webpack:///./node_modules/lodash-es/isBuffer.js","webpack:///./node_modules/@ckeditor/ckeditor5-widget/theme/icons/drag-handle.svg","webpack:///./node_modules/lodash-es/_freeGlobal.js","webpack:///./node_modules/@ckeditor/ckeditor5-core/theme/icons/align-justify.svg","webpack:///./node_modules/@ckeditor/ckeditor5-core/theme/icons/object-full-width.svg","webpack:///./node_modules/@ckeditor/ckeditor5-ui/theme/icons/previous-arrow.svg","webpack:///./node_modules/@ckeditor/ckeditor5-font/theme/icons/font-color.svg","webpack:///./node_modules/@ckeditor/ckeditor5-link/theme/icons/link.svg","webpack:///./node_modules/@ckeditor/ckeditor5-font/theme/icons/font-size.svg","webpack:///./node_modules/@ckeditor/ckeditor5-list/theme/icons/bulletedlist.svg","webpack:///./node_modules/@ckeditor/ckeditor5-font/theme/icons/font-background.svg","webpack:///./node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/bold.svg","webpack:///./node_modules/@ckeditor/ckeditor5-core/theme/icons/eraser.svg","webpack:///./node_modules/@ckeditor/ckeditor5-ui/theme/icons/color-tile-check.svg","webpack:///./node_modules/@ckeditor/ckeditor5-core/theme/icons/cancel.svg","webpack:///./src/components/HeaderBox.vue?b1cb","webpack:///src/components/HeaderBox.vue","webpack:///./src/components/HeaderBox.vue?5ed5","webpack:///./src/components/HeaderBox.vue","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/lodash-es/_nodeUtil.js","webpack:///./node_modules/@ckeditor/ckeditor5-widget/theme/icons/return-arrow.svg","webpack:///./node_modules/@ckeditor/ckeditor5-font/theme/icons/font-family.svg","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./node_modules/@ckeditor/ckeditor5-list/theme/icons/numberedlist.svg","webpack:///./node_modules/lodash-es/_cloneBuffer.js","webpack:///./node_modules/@ckeditor/ckeditor5-core/theme/icons/align-right.svg","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/version.js","webpack:///./src/views/Calendar/Events.vue?f48b","webpack:///./node_modules/lodash-es/_Symbol.js","webpack:///./node_modules/lodash-es/_getRawTag.js","webpack:///./node_modules/lodash-es/_objectToString.js","webpack:///./node_modules/lodash-es/_baseGetTag.js","webpack:///./node_modules/lodash-es/_overArg.js","webpack:///./node_modules/lodash-es/_getPrototype.js","webpack:///./node_modules/lodash-es/isObjectLike.js","webpack:///./node_modules/lodash-es/isPlainObject.js","webpack:///./node_modules/lodash-es/_listCacheClear.js","webpack:///./node_modules/lodash-es/eq.js","webpack:///./node_modules/lodash-es/_assocIndexOf.js","webpack:///./node_modules/lodash-es/_listCacheDelete.js","webpack:///./node_modules/lodash-es/_listCacheGet.js","webpack:///./node_modules/lodash-es/_listCacheHas.js","webpack:///./node_modules/lodash-es/_listCacheSet.js","webpack:///./node_modules/lodash-es/_ListCache.js","webpack:///./node_modules/lodash-es/_stackClear.js","webpack:///./node_modules/lodash-es/_stackDelete.js","webpack:///./node_modules/lodash-es/_stackGet.js","webpack:///./node_modules/lodash-es/_stackHas.js","webpack:///./node_modules/lodash-es/isObject.js","webpack:///./node_modules/lodash-es/isFunction.js","webpack:///./node_modules/lodash-es/_coreJsData.js","webpack:///./node_modules/lodash-es/_isMasked.js","webpack:///./node_modules/lodash-es/_toSource.js","webpack:///./node_modules/lodash-es/_baseIsNative.js","webpack:///./node_modules/lodash-es/_getValue.js","webpack:///./node_modules/lodash-es/_getNative.js","webpack:///./node_modules/lodash-es/_Map.js","webpack:///./node_modules/lodash-es/_nativeCreate.js","webpack:///./node_modules/lodash-es/_hashClear.js","webpack:///./node_modules/lodash-es/_hashDelete.js","webpack:///./node_modules/lodash-es/_hashGet.js","webpack:///./node_modules/lodash-es/_hashHas.js","webpack:///./node_modules/lodash-es/_hashSet.js","webpack:///./node_modules/lodash-es/_Hash.js","webpack:///./node_modules/lodash-es/_mapCacheClear.js","webpack:///./node_modules/lodash-es/_isKeyable.js","webpack:///./node_modules/lodash-es/_getMapData.js","webpack:///./node_modules/lodash-es/_mapCacheDelete.js","webpack:///./node_modules/lodash-es/_mapCacheGet.js","webpack:///./node_modules/lodash-es/_mapCacheHas.js","webpack:///./node_modules/lodash-es/_mapCacheSet.js","webpack:///./node_modules/lodash-es/_MapCache.js","webpack:///./node_modules/lodash-es/_stackSet.js","webpack:///./node_modules/lodash-es/_Stack.js","webpack:///./node_modules/lodash-es/_arrayEach.js","webpack:///./node_modules/lodash-es/_defineProperty.js","webpack:///./node_modules/lodash-es/_baseAssignValue.js","webpack:///./node_modules/lodash-es/_assignValue.js","webpack:///./node_modules/lodash-es/_copyObject.js","webpack:///./node_modules/lodash-es/_baseTimes.js","webpack:///./node_modules/lodash-es/_baseIsArguments.js","webpack:///./node_modules/lodash-es/isArguments.js","webpack:///./node_modules/lodash-es/isArray.js","webpack:///./node_modules/lodash-es/_isIndex.js","webpack:///./node_modules/lodash-es/isLength.js","webpack:///./node_modules/lodash-es/_baseIsTypedArray.js","webpack:///./node_modules/lodash-es/_baseUnary.js","webpack:///./node_modules/lodash-es/isTypedArray.js","webpack:///./node_modules/lodash-es/_arrayLikeKeys.js","webpack:///./node_modules/lodash-es/_isPrototype.js","webpack:///./node_modules/lodash-es/_nativeKeys.js","webpack:///./node_modules/lodash-es/_baseKeys.js","webpack:///./node_modules/lodash-es/isArrayLike.js","webpack:///./node_modules/lodash-es/keys.js","webpack:///./node_modules/lodash-es/_baseAssign.js","webpack:///./node_modules/lodash-es/_nativeKeysIn.js","webpack:///./node_modules/lodash-es/_baseKeysIn.js","webpack:///./node_modules/lodash-es/keysIn.js","webpack:///./node_modules/lodash-es/_baseAssignIn.js","webpack:///./node_modules/lodash-es/_copyArray.js","webpack:///./node_modules/lodash-es/_arrayFilter.js","webpack:///./node_modules/lodash-es/stubArray.js","webpack:///./node_modules/lodash-es/_getSymbols.js","webpack:///./node_modules/lodash-es/_copySymbols.js","webpack:///./node_modules/lodash-es/_arrayPush.js","webpack:///./node_modules/lodash-es/_getSymbolsIn.js","webpack:///./node_modules/lodash-es/_copySymbolsIn.js","webpack:///./node_modules/lodash-es/_baseGetAllKeys.js","webpack:///./node_modules/lodash-es/_getAllKeys.js","webpack:///./node_modules/lodash-es/_getAllKeysIn.js","webpack:///./node_modules/lodash-es/_DataView.js","webpack:///./node_modules/lodash-es/_Promise.js","webpack:///./node_modules/lodash-es/_Set.js","webpack:///./node_modules/lodash-es/_WeakMap.js","webpack:///./node_modules/lodash-es/_getTag.js","webpack:///./node_modules/lodash-es/_initCloneArray.js","webpack:///./node_modules/lodash-es/_Uint8Array.js","webpack:///./node_modules/lodash-es/_cloneArrayBuffer.js","webpack:///./node_modules/lodash-es/_cloneDataView.js","webpack:///./node_modules/lodash-es/_cloneRegExp.js","webpack:///./node_modules/lodash-es/_cloneSymbol.js","webpack:///./node_modules/lodash-es/_cloneTypedArray.js","webpack:///./node_modules/lodash-es/_initCloneByTag.js","webpack:///./node_modules/lodash-es/_baseCreate.js","webpack:///./node_modules/lodash-es/_initCloneObject.js","webpack:///./node_modules/lodash-es/_baseIsMap.js","webpack:///./node_modules/lodash-es/isMap.js","webpack:///./node_modules/lodash-es/_baseIsSet.js","webpack:///./node_modules/lodash-es/isSet.js","webpack:///./node_modules/lodash-es/_baseClone.js","webpack:///./node_modules/lodash-es/cloneDeepWith.js","webpack:///./node_modules/lodash-es/isElement.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/config.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/spy.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/eventinfo.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/uid.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/priorities.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/emittermixin.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/isiterable.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/mix.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/collection.js","webpack:///./node_modules/@ckeditor/ckeditor5-core/src/plugincollection.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/translation-service.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/locale.js","webpack:///./node_modules/@ckeditor/ckeditor5-core/src/context.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/comparearrays.js","webpack:///./node_modules/lodash-es/clone.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/node.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/text.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/textproxy.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/objecttomap.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/tomap.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/matcher.js","webpack:///./node_modules/lodash-es/isSymbol.js","webpack:///./node_modules/lodash-es/_isKey.js","webpack:///./node_modules/lodash-es/memoize.js","webpack:///./node_modules/lodash-es/_memoizeCapped.js","webpack:///./node_modules/lodash-es/_stringToPath.js","webpack:///./node_modules/lodash-es/_arrayMap.js","webpack:///./node_modules/lodash-es/_baseToString.js","webpack:///./node_modules/lodash-es/toString.js","webpack:///./node_modules/lodash-es/_castPath.js","webpack:///./node_modules/lodash-es/last.js","webpack:///./node_modules/lodash-es/_toKey.js","webpack:///./node_modules/lodash-es/_baseGet.js","webpack:///./node_modules/lodash-es/_baseSlice.js","webpack:///./node_modules/lodash-es/_parent.js","webpack:///./node_modules/lodash-es/_baseUnset.js","webpack:///./node_modules/lodash-es/unset.js","webpack:///./node_modules/lodash-es/get.js","webpack:///./node_modules/lodash-es/_assignMergeValue.js","webpack:///./node_modules/lodash-es/_createBaseFor.js","webpack:///./node_modules/lodash-es/_baseFor.js","webpack:///./node_modules/lodash-es/isArrayLikeObject.js","webpack:///./node_modules/lodash-es/_safeGet.js","webpack:///./node_modules/lodash-es/toPlainObject.js","webpack:///./node_modules/lodash-es/_baseMergeDeep.js","webpack:///./node_modules/lodash-es/_baseMerge.js","webpack:///./node_modules/lodash-es/identity.js","webpack:///./node_modules/lodash-es/_apply.js","webpack:///./node_modules/lodash-es/_overRest.js","webpack:///./node_modules/lodash-es/constant.js","webpack:///./node_modules/lodash-es/_baseSetToString.js","webpack:///./node_modules/lodash-es/_shortOut.js","webpack:///./node_modules/lodash-es/_setToString.js","webpack:///./node_modules/lodash-es/_baseRest.js","webpack:///./node_modules/lodash-es/_isIterateeCall.js","webpack:///./node_modules/lodash-es/_createAssigner.js","webpack:///./node_modules/lodash-es/merge.js","webpack:///./node_modules/lodash-es/_baseSet.js","webpack:///./node_modules/lodash-es/set.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/stylesmap.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/element.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/containerelement.js","webpack:///./node_modules/lodash-es/assignIn.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/observablemixin.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/editableelement.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/rooteditableelement.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/treewalker.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/position.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/range.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/count.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/selection.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/documentselection.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/document.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/attributeelement.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/emptyelement.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/env.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/keyboard.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/uielement.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/documentfragment.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/downcastwriter.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/istext.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/filler.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/fastdiff.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/diff.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/insertat.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/remove.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/isnode.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/renderer.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/global.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/indexof.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/getancestors.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/getcommonancestor.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/domconverter.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/iswindow.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/emittermixin.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/observer.js","webpack:///./node_modules/lodash-es/_setCacheAdd.js","webpack:///./node_modules/lodash-es/_setCacheHas.js","webpack:///./node_modules/lodash-es/_SetCache.js","webpack:///./node_modules/lodash-es/_arraySome.js","webpack:///./node_modules/lodash-es/_cacheHas.js","webpack:///./node_modules/lodash-es/_equalArrays.js","webpack:///./node_modules/lodash-es/_mapToArray.js","webpack:///./node_modules/lodash-es/_setToArray.js","webpack:///./node_modules/lodash-es/_equalByTag.js","webpack:///./node_modules/lodash-es/_equalObjects.js","webpack:///./node_modules/lodash-es/_baseIsEqualDeep.js","webpack:///./node_modules/lodash-es/_baseIsEqual.js","webpack:///./node_modules/lodash-es/isEqualWith.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/mutationobserver.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/domeventdata.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/keyobserver.js","webpack:///./node_modules/lodash-es/now.js","webpack:///./node_modules/lodash-es/toNumber.js","webpack:///./node_modules/lodash-es/debounce.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/fakeselectionobserver.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/selectionobserver.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/focusobserver.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/compositionobserver.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/inputobserver.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/isrange.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/getborderwidths.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/rect.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/scroll.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/view.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/node.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/text.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/textproxy.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/nodelist.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/element.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/treewalker.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/position.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/range.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/conversion/mapper.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/conversion/modelconsumable.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/conversion/downcastdispatcher.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/selection.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/liverange.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/documentselection.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/conversion/conversionhelpers.js","webpack:///./node_modules/lodash-es/cloneDeep.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/conversion/downcasthelpers.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/conversion/upcasthelpers.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/controller/editingcontroller.js","webpack:///./node_modules/@ckeditor/ckeditor5-core/src/commandcollection.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/conversion/viewconsumable.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/schema.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/conversion/upcastdispatcher.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/controller/datacontroller.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/conversion/conversion.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/batch.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/operation.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/documentfragment.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/utils.js","webpack:///./node_modules/lodash-es/isEqual.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/attributeoperation.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/detachoperation.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/moveoperation.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/insertoperation.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/markeroperation.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/renameoperation.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/rootattributeoperation.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/mergeoperation.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/splitoperation.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/rootelement.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/writer.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/differ.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/history.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/unicode.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/document.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/markercollection.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/nooperation.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/operationfactory.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/liveposition.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/insertcontent.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/deletecontent.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/modifyselection.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/getselectedcontent.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/selection-post-fixer.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/model.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/keystrokehandler.js","webpack:///./node_modules/@ckeditor/ckeditor5-core/src/editingkeystrokehandler.js","webpack:///./node_modules/@ckeditor/ckeditor5-core/src/editor/editor.js","webpack:///./node_modules/@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/setdatainelement.js","webpack:///./node_modules/@ckeditor/ckeditor5-core/src/editor/utils/elementapimixin.js","webpack:///./node_modules/@ckeditor/ckeditor5-core/src/editor/utils/attachtoform.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/dataprocessor/basichtmlwriter.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/componentfactory.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/focustracker.js","webpack:///./node_modules/@ckeditor/ckeditor5-core/src/editor/editorui.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/normalizetoolbarconfig.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/placeholder.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/elementreplacer.js","webpack:///./node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditorui.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/viewcollection.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/template.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/view.js","webpack:///./node_modules/lodash-es/isString.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/createelement.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/editorui/bodycollection.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/editorui/editoruiview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/label/labelview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/editorui/boxed/boxededitoruiview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/editableui/editableuiview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/tounit.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/panel/sticky/stickypanelview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/focuscycler.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/toolbarseparatorview.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/resizeobserver.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/bindings/preventdefault.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownpanelview.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/getpositionedancestor.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/position.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/icon/iconview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/tooltip/tooltipview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/button/buttonview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/button/dropdownbuttonview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/list/listview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/list/listitemview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/list/listseparatorview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/button/switchbuttonview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/toolbarview.js","webpack:///./node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditoruiview.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/dom/getdatafromelement.js","webpack:///./node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditor.js","webpack:///./node_modules/@ckeditor/ckeditor5-core/src/plugin.js","webpack:///./node_modules/@ckeditor/ckeditor5-clipboard/src/datatransfer.js","webpack:///./node_modules/@ckeditor/ckeditor5-clipboard/src/clipboardobserver.js","webpack:///./node_modules/@ckeditor/ckeditor5-clipboard/src/utils/plaintexttohtml.js","webpack:///./node_modules/@ckeditor/ckeditor5-clipboard/src/utils/normalizeclipboarddata.js","webpack:///./node_modules/@ckeditor/ckeditor5-clipboard/src/utils/viewtoplaintext.js","webpack:///./node_modules/@ckeditor/ckeditor5-clipboard/src/clipboard.js","webpack:///./node_modules/@ckeditor/ckeditor5-core/src/command.js","webpack:///./node_modules/@ckeditor/ckeditor5-enter/src/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-enter/src/entercommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-enter/src/enterobserver.js","webpack:///./node_modules/@ckeditor/ckeditor5-enter/src/enter.js","webpack:///./node_modules/@ckeditor/ckeditor5-enter/src/shiftentercommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-enter/src/shiftenter.js","webpack:///./node_modules/@ckeditor/ckeditor5-select-all/src/selectallcommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-select-all/src/selectallediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-select-all/src/selectallui.js","webpack:///./node_modules/@ckeditor/ckeditor5-select-all/src/selectall.js","webpack:///./node_modules/@ckeditor/ckeditor5-typing/src/utils/changebuffer.js","webpack:///./node_modules/@ckeditor/ckeditor5-typing/src/inputcommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-typing/src/utils/injectunsafekeystrokeshandling.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/difftochanges.js","webpack:///./node_modules/@ckeditor/ckeditor5-typing/src/utils/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-typing/src/utils/injecttypingmutationshandling.js","webpack:///./node_modules/@ckeditor/ckeditor5-typing/src/input.js","webpack:///./node_modules/@ckeditor/ckeditor5-typing/src/deletecommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-typing/src/deleteobserver.js","webpack:///./node_modules/@ckeditor/ckeditor5-typing/src/delete.js","webpack:///./node_modules/@ckeditor/ckeditor5-typing/src/typing.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/transform.js","webpack:///./node_modules/@ckeditor/ckeditor5-undo/src/basecommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-undo/src/undocommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-undo/src/redocommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-undo/src/undoediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-undo/src/undoui.js","webpack:///./node_modules/@ckeditor/ckeditor5-undo/src/undo.js","webpack:///./node_modules/@ckeditor/ckeditor5-essentials/src/essentials.js","webpack:///./node_modules/@ckeditor/ckeditor5-basic-styles/src/attributecommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-basic-styles/src/bold/boldediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-basic-styles/src/bold/boldui.js","webpack:///./node_modules/@ckeditor/ckeditor5-basic-styles/src/bold.js","webpack:///./node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicui.js","webpack:///./node_modules/@ckeditor/ckeditor5-basic-styles/src/italic.js","webpack:///./node_modules/@ckeditor/ckeditor5-link/src/findlinkrange.js","webpack:///./node_modules/@ckeditor/ckeditor5-link/src/linkcommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-link/src/unlinkcommand.js","webpack:///./node_modules/lodash-es/_castSlice.js","webpack:///./node_modules/lodash-es/_hasUnicode.js","webpack:///./node_modules/lodash-es/_asciiToArray.js","webpack:///./node_modules/lodash-es/_unicodeToArray.js","webpack:///./node_modules/lodash-es/_stringToArray.js","webpack:///./node_modules/lodash-es/_createCaseFirst.js","webpack:///./node_modules/lodash-es/upperFirst.js","webpack:///./node_modules/@ckeditor/ckeditor5-link/src/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-link/src/utils/automaticdecorators.js","webpack:///./node_modules/@ckeditor/ckeditor5-link/src/utils/manualdecorator.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/utils/bindtwostepcarettoattribute.js","webpack:///./node_modules/@ckeditor/ckeditor5-link/src/linkediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/clickobserver.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/labeledfield/labeledfieldview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/inputtext/inputtextview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/labeledfield/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/bindings/submithandler.js","webpack:///./node_modules/@ckeditor/ckeditor5-link/src/ui/linkformview.js","webpack:///./node_modules/@ckeditor/ckeditor5-link/src/ui/linkactionsview.js","webpack:///./node_modules/@ckeditor/ckeditor5-link/src/linkui.js","webpack:///./node_modules/@ckeditor/ckeditor5-link/src/link.js","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/first.js","webpack:///./node_modules/@ckeditor/ckeditor5-paragraph/src/paragraphcommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-paragraph/src/insertparagraphcommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-paragraph/src/paragraph.js","webpack:///./node_modules/@ckeditor/ckeditor5-alignment/src/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-alignment/src/alignmentcommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-alignment/src/alignmentediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-alignment/src/alignmentui.js","webpack:///./node_modules/@ckeditor/ckeditor5-alignment/src/alignment.js","webpack:///./node_modules/@ckeditor/ckeditor5-heading/src/headingcommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-heading/src/headingediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/model.js","webpack:///./node_modules/@ckeditor/ckeditor5-heading/src/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-heading/src/headingui.js","webpack:///./node_modules/@ckeditor/ckeditor5-heading/src/heading.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontcommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/colorgrid/colortileview.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/colorgrid/colorgridview.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/documentcolorcollection.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/ui/colortableview.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontbackgroundcolor/fontbackgroundcolorcommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontbackgroundcolor/fontbackgroundcolorediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/colorgrid/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/ui/colorui.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontbackgroundcolor/fontbackgroundcolorui.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontbackgroundcolor.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontcolor/fontcolorcommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontcolor/fontcolorediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontcolor/fontcolorui.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontcolor.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontfamily/fontfamilycommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontfamily/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontfamily/fontfamilyediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontfamily/fontfamilyui.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontfamily.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontsize/fontsizecommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontsize/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontsize/fontsizeediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontsize/fontsizeui.js","webpack:///./node_modules/@ckeditor/ckeditor5-font/src/fontsize.js","webpack:///./node_modules/@ckeditor/ckeditor5-media-embed/src/converters.js","webpack:///./node_modules/@ckeditor/ckeditor5-widget/src/highlightstack.js","webpack:///./node_modules/@ckeditor/ckeditor5-widget/src/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-media-embed/src/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-media-embed/src/mediaembedcommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-media-embed/src/mediaregistry.js","webpack:///./node_modules/@ckeditor/ckeditor5-media-embed/src/mediaembedediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-media-embed/src/automediaembed.js","webpack:///./node_modules/@ckeditor/ckeditor5-media-embed/src/ui/mediaformview.js","webpack:///./node_modules/@ckeditor/ckeditor5-media-embed/src/mediaembedui.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/mouseobserver.js","webpack:///./node_modules/@ckeditor/ckeditor5-widget/src/widgettypearound/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-widget/src/widgettypearound/widgettypearound.js","webpack:///./node_modules/@ckeditor/ckeditor5-widget/src/widget.js","webpack:///./node_modules/@ckeditor/ckeditor5-media-embed/src/mediaembed.js","webpack:///./node_modules/@ckeditor/ckeditor5-list/src/listcommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-list/src/indentcommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-list/src/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-list/src/converters.js","webpack:///./node_modules/@ckeditor/ckeditor5-list/src/listediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-list/src/listui.js","webpack:///./node_modules/@ckeditor/ckeditor5-list/src/list.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/image/imageloadobserver.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/image/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/image/converters.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/image/imageinsertcommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/image/imageediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imagetextalternative/imagetextalternativecommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imagetextalternative/imagetextalternativeediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imagetextalternative/ui/textalternativeformview.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/image/ui/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imagetextalternative/imagetextalternativeui.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imagetextalternative.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/image.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imagecaption/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imagecaption/imagecaptionediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imagecaption.js","webpack:///./node_modules/@ckeditor/ckeditor5-widget/src/widgetresize/resizerstate.js","webpack:///./node_modules/@ckeditor/ckeditor5-widget/src/widgetresize/resizer.js","webpack:///./node_modules/lodash-es/throttle.js","webpack:///./node_modules/@ckeditor/ckeditor5-widget/src/widgetresize.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imageresize/imageresizecommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imageresize.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imagestyle/imagestylecommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imagestyle/converters.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imagestyle/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imagestyle/imagestyleediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imagestyle/imagestyleui.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imagestyle.js","webpack:///./node_modules/@ckeditor/ckeditor5-widget/src/widgettoolbarrepository.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imagetoolbar.js","webpack:///./node_modules/@ckeditor/ckeditor5-upload/src/ui/filedialogbuttonview.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imageupload/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imageupload/imageuploadui.js","webpack:///./node_modules/@ckeditor/ckeditor5-core/src/contextplugin.js","webpack:///./node_modules/@ckeditor/ckeditor5-core/src/pendingactions.js","webpack:///./node_modules/@ckeditor/ckeditor5-upload/src/filereader.js","webpack:///./node_modules/@ckeditor/ckeditor5-upload/src/filerepository.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imageupload/imageuploadprogress.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/src/notification/notification.js","webpack:///./node_modules/@ckeditor/ckeditor5-engine/src/view/upcastwriter.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imageupload/imageuploadcommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imageupload/imageuploadediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-image/src/imageupload.js","webpack:///./node_modules/@ckeditor/ckeditor5-ckfinder/src/ckfinderui.js","webpack:///./node_modules/@ckeditor/ckeditor5-ckfinder/src/ckfindercommand.js","webpack:///./node_modules/@ckeditor/ckeditor5-ckfinder/src/ckfinderediting.js","webpack:///./node_modules/@ckeditor/ckeditor5-adapter-ckfinder/src/utils.js","webpack:///./node_modules/@ckeditor/ckeditor5-adapter-ckfinder/src/uploadadapter.js","webpack:///./node_modules/@ckeditor/ckeditor5-ckfinder/src/ckfinder.js","webpack:///src/views/Calendar/Events.vue","webpack:///./src/views/Calendar/Events.vue?10bf","webpack:///./src/views/Calendar/Events.vue","webpack:///./node_modules/@ckeditor/ckeditor5-utils/src/ckeditorerror.js","webpack:///./node_modules/@ckeditor/ckeditor5-ui/theme/icons/next-arrow.svg","webpack:///./node_modules/@ckeditor/ckeditor5-undo/theme/icons/undo.svg","webpack:///./node_modules/@ckeditor/ckeditor5-select-all/theme/icons/select-all.svg"],"names":["module","exports","render","_vm","this","_h","$createElement","_c","_self","attrs","total","setCurrentPage","pageSize","on","handleCurrentChange","staticRenderFns","name","data","props","type","Number","default","required","keyWord","String","start","end","currentPage","computed","get","$props","set","methods","store","page","console","log","$emit","window","scrollTo","key","component","freeSelf","self","Object","root","freeGlobal","Function","stubFalse","freeExports","nodeType","freeModule","moduleExports","Buffer","undefined","nativeIsBuffer","isBuffer","global","staticClass","setSearchDate","model","value","callback","$$v","searchDate","expression","_e","hasBtn","isEvent","nativeOn","$event","indexOf","_k","keyCode","setSearchHandler","keyWordInput","setSearchHandlerDate","searchLoading","_v","setHandleAddOrEdit","setChangeHandler","setImportHandler","setExportHandler","changeDialogVisible","importDialogVisible","buttonList","Array","showDatePicker","Boolean","some","method","vm","require","freeProcess","process","nodeUtil","types","binding","e","originalModule","webpackPolyfill","create","children","defineProperty","enumerable","l","i","allocUnsafe","cloneBuffer","buffer","isDeep","slice","length","result","constructor","copy","version","windowOrGlobal","CKEDITOR_VERSION","CKEditorError","searchHandlerDate","changeHandler","exportHandler","importHandler","handleAddOrEdit","getSearchDate","staticStyle","eventsData","prop","order","handleSelectionChange","scopedSlots","_u","fn","scope","_s","row","ShowStartDate","ShowEndDate","EventStartDate","EventEndDate","slot","EventAddr","copyHandler","deleteHandler","startDate","endDate","totalCount","getEvents","addOrEdit","addOrEditDialog","ref","errors","classes","class","eventNameInput","editor","editorConfig","inputDescription","eventCategorySelete","_l","Value","Text","showDate","eventDate","eventSiteInput","eventUrlInput","unitSelete","unit","UntId","UntNameFull","$store","state","apiBase","uploadHeader","successUpload","uploadUrl","url","index","fileName","delFile","isRelated","lv1Change","unit1","unitLv2","lv2Change","unit2","unitLv3","lv3Change","unit3","userNameLoading","setUser","userNameSelect","user","Account","Name","memberTitle","userData","Title","rloeSelect","role","addLoading","addToTable","usersTableData","preventDefault","deleteRow","$index","addHandler","editHandler","changeDialog","changeMember","member","querySearch","newChangeMember","confirmChange","beforeAvatarUpload","successImport","errorImport","importExceed","confireImport","Symbol","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","getRawTag","isOwn","call","tag","unmasked","objectToString","nullTag","undefinedTag","baseGetTag","overArg","func","transform","arg","getPrototype","getPrototypeOf","isObjectLike","objectTag","funcProto","funcToString","objectCtorString","isPlainObject","proto","Ctor","listCacheClear","__data__","size","eq","other","assocIndexOf","array","arrayProto","splice","listCacheDelete","lastIndex","pop","listCacheGet","listCacheHas","listCacheSet","push","ListCache","entries","clear","entry","has","stackClear","stackDelete","stackGet","stackHas","isObject","asyncTag","funcTag","genTag","proxyTag","isFunction","coreJsData","maskSrcKey","uid","exec","keys","IE_PROTO","isMasked","toSource","reRegExpChar","reIsHostCtor","reIsNative","RegExp","replace","baseIsNative","pattern","test","getValue","object","getNative","Map","nativeCreate","hashClear","hashDelete","HASH_UNDEFINED","hashGet","hashHas","hashSet","Hash","mapCacheClear","isKeyable","getMapData","map","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","LARGE_ARRAY_SIZE","stackSet","pairs","Stack","arrayEach","iteratee","baseAssignValue","assignValue","objValue","copyObject","source","customizer","isNew","newValue","baseTimes","n","argsTag","baseIsArguments","propertyIsEnumerable","isArguments","arguments","isArray","MAX_SAFE_INTEGER","reIsUint","isIndex","isLength","arrayTag","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","typedArrayTags","baseIsTypedArray","baseUnary","nodeIsTypedArray","isTypedArray","arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","skipIndexes","isPrototype","nativeKeys","baseKeys","isArrayLike","baseAssign","nativeKeysIn","baseKeysIn","isProto","keysIn","baseAssignIn","copyArray","arrayFilter","predicate","resIndex","stubArray","nativeGetSymbols","getOwnPropertySymbols","getSymbols","symbol","copySymbols","arrayPush","values","offset","getSymbolsIn","copySymbolsIn","baseGetAllKeys","keysFunc","symbolsFunc","getAllKeys","getAllKeysIn","DataView","Promise","Set","WeakMap","promiseTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","ctorString","initCloneArray","input","Uint8Array","cloneArrayBuffer","arrayBuffer","byteLength","cloneDataView","dataView","byteOffset","reFlags","cloneRegExp","regexp","symbolProto","symbolValueOf","valueOf","cloneSymbol","cloneTypedArray","typedArray","symbolTag","initCloneByTag","objectCreate","baseCreate","initCloneObject","baseIsMap","nodeIsMap","isMap","baseIsSet","nodeIsSet","isSet","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","cloneableTags","baseClone","bitmask","stack","isFlat","isFull","isFunc","stacked","forEach","subValue","add","cloneDeepWith","isElement","Config","configurations","defaultConfigurations","_config","define","cloneConfig","_setObjectToTarget","_setToTarget","isDefine","_getFromSource","target","parts","split","part","configuration","leaveDOMReferences","spy","called","EventInfo","path","stop","off","HEX_NUMBERS","fill","val","r1","Math","random","r2","r3","r4","priorities","priority","normal","highest","high","low","lowest","_listeningTo","_emitterId","EmitterMixin","event","options","listenTo","once","wasFired","onceCallback","args","stopListening","emitter","emitterInfo","eventCallbacks","emitters","_getEmitterId","_setEmitterId","emitterId","callbacks","createEventNamespace","lists","getCallbacksListsForNamespace","callbackDefinition","added","removeCallback","fire","eventOrInfo","eventInfo","getCallbacksForEvent","callbackArgs","from","apply","_delegations","destinations","passAllDestinations","fireDelegatedEvents","return","err","rethrowUnexpectedError","delegate","events","to","nameOrFunction","eventName","stopDelegating","delete","_getEmitterListenedTo","listeningEmitter","listenedToEmitterId","id","_events","makeEventNode","childEvents","childEventName","newEventNodes","substr","lastIndexOf","node","eventNode","callbacksLists","childCallbacksLists","concat","fireArgs","delegatedInfo","isIterable","iterator","mix","baseClass","mixins","mixin","getOwnPropertyNames","sourceDescriptor","getOwnPropertyDescriptor","Collection","initialItemsOrOptions","hasInitialItems","_items","_itemMap","_idProperty","idProperty","_bindToExternalToInternalMap","_bindToInternalToExternalMap","_skippedIndexesFromExternal","item","_getItemIdBeforeAdding","itemId","idOrIndex","itemOrId","subject","itemDoesNotExist","externalItem","ctx","find","filter","_bindToCollection","remove","externalCollection","as","Class","_setUpBindToBinding","using","callbackOrProperty","factory","addItem","evt","isExternalBoundToThis","externalItemBound","finalIndex","skipped","getIndex","reduce","PluginCollection","context","availablePlugins","contextPlugins","_context","_plugins","_availablePlugins","PluginConstructor","pluginName","_contextPlugins","pluginInstance","plugin","errorMsg","plugins","removePlugins","that","loading","loaded","pluginConstructors","mapToAvailableConstructors","removePluginConstructors","missingPlugins","getMissingPluginNames","error","attachLinkToDocumentation","reject","all","loadPlugin","then","initPlugins","includes","instantiatePlugin","catch","loadedPlugins","promise","bind","requires","RequiredPluginConstructorOrName","RequiredPluginConstructor","getPluginConstructor","isContextPlugin","requiredBy","_add","PluginConstructorOrName","pluginNameOrConstructor","promises","destroy","plugin1","plugin2","_translate","language","message","quantity","numberOfLanguages","getNumberOfLanguages","CKEDITOR_TRANSLATIONS","messageId","string","hasTranslation","plural","dictionary","getPluralForm","pluralFormIndex","RTL_LANGUAGE_CODES","Locale","uiLanguage","contentLanguage","uiLanguageDirection","getLanguageDirection","contentLanguageDirection","t","_t","hasPluralForm","translatedString","interpolateString","warn","match","languageCode","Context","config","defaultConfig","builtinPlugins","languageConfig","locale","ui","editors","_contextOwner","Plugin","init","isContextOwner","names","compareArrays","a","b","minLen","min","clone","Node","document","parent","is","unshift","includeSelf","parentFirst","ancestors","ancestorsA","getAncestors","ancestorsB","thisPath","getPath","nodePath","isBefore","_removeChildren","_fireChange","json","pos","getChildIndex","getChild","_textData","otherNode","TextProxy","textNode","offsetInText","substring","objectToMap","obj","toMap","Matcher","_patterns","element","singleElement","isElementMatching","results","matchName","attributes","matchAttributes","matchClasses","styles","matchStyles","patterns","hasAttribute","attribute","getAttribute","getClassNames","hasClass","hasStyle","style","getStyle","isSymbol","reIsDeepProp","reIsPlainProp","isKey","FUNC_ERROR_TEXT","memoize","resolver","TypeError","memoized","cache","Cache","MAX_MEMOIZE_SIZE","memoizeCapped","rePropName","reEscapeChar","stringToPath","charCodeAt","number","quote","subString","arrayMap","INFINITY","symbolToString","baseToString","castPath","last","toKey","baseGet","baseSlice","baseUnset","unset","defaultValue","assignMergeValue","createBaseFor","fromRight","iterable","baseFor","isArrayLikeObject","safeGet","toPlainObject","baseMergeDeep","srcIndex","mergeFunc","srcValue","isCommon","isTyped","baseMerge","identity","thisArg","nativeMax","max","overRest","otherArgs","constant","baseSetToString","HOT_COUNT","HOT_SPAN","nativeNow","Date","now","shortOut","count","lastCalled","stamp","remaining","setToString","baseRest","isIterateeCall","createAssigner","assigner","sources","guard","merge","baseSet","nested","StylesMap","styleProcessor","_styles","_styleProcessor","inlineStyle","parsedStyles","parseInlineStyles","toNormalizedForm","isEmpty","getReducedForm","propertyDescriptor","property","nameOrObject","valueOrObject","toPath","_cleanEmptyObjectsOnPath","getNormalized","_getStylesEntries","arr","join","sort","propertyName","parsed","pathParts","isChildPath","parentPath","parentObject","isParentEmpty","getStyleNames","StylesProcessor","_normalizers","_extractors","_reducers","_consumables","propertyValue","appendStyleValue","normalizer","extractor","normalizedValue","reducer","callbackOrPath","shorthandName","styleNames","_mapStyleNames","alsoName","stylesString","quoteType","propertyNameStart","propertyValueStart","stylesMap","charAt","char","trim","stylesObject","nameOrPath","valueToSet","Element","_attrs","parseAttributes","_children","_insertChild","_classes","classString","parseClasses","stylesProcessor","setTo","_customProperties","otherElement","className","getAsString","matcher","deep","childrenClone","getChildren","child","_clone","cloned","getFillerOffset","items","childCount","nodes","normalize","_remove","howMany","classesSet","classesString","classArray","ContainerElement","lastChild","assignIn","observablePropertiesSymbol","boundObservablesSymbol","boundPropertiesSymbol","ObservableMixin","initObservable","properties","configurable","oldValue","bindProperties","isStringArray","boundProperties","bindings","bindTo","toMany","bindToMany","_observable","_bindProperties","_to","_bindings","unbind","boundObservables","unbindProperties","toObservable","toProperty","toProperties","toPropertyBindings","boundObservable","decorate","methodName","originalMethod","extend","observable","parsedArgs","parseBindToArgs","bindingsKeys","numberOfBindings","attachBindToListeners","updateBindToBound","updateBoundObservableProperty","observables","getBindingTargets","observableAndAttributePairs","every","lastObservable","updateBoundObservables","toPropertyName","bindingsToObservable","chain","toBindings","EditableElement","isFocused","selection","editableElement","rootNameSymbol","RootEditableElement","rootName","getCustomProperty","_setCustomProperty","TreeWalker","boundaries","startPosition","direction","position","Position","_createAt","singleCharacters","shallow","ignoreElementEnd","_boundaryStartParent","_boundaryEndParent","skip","done","prevPosition","next","_next","_previous","previousPosition","isAtEnd","_createAfter","_formatReturnValue","charactersCount","textLength","endOffset","textProxy","isAtStart","_createBefore","startOffset","nextPosition","isEqual","shift","shifted","treeWalker","otherPosition","compareWith","otherPath","editable","itemOrPosition","Range","getLastMatchingPosition","enlargeTrimSkip","isAfter","nodeAfterStart","nodeAfter","nodeBeforeEnd","nodeBefore","otherRange","loose","isCollapsed","containsStart","containsPosition","containsEnd","ranges","isIntersecting","commonRangeStart","commonRangeEnd","getCommonAncestor","nextSibling","previousSibling","startElement","endElement","getShiftedBy","_createFromParentsAndOffsets","offsetSize","_createFromPositionAndShift","Selection","selectable","placeOrOffset","_ranges","_lastRangeBackward","_isFake","_fakeSelectionLabel","range","first","firstRange","getFirstRange","lastRange","getLastRange","otherSelection","isFake","fakeSelectionLabel","rangeCount","anchor","focus","thisRange","found","isBackward","numOfRangesA","getRanges","numOfRangesB","rangeA","getTrimmed","rangeB","getContainedElement","_setRanges","_setFakeOptions","DocumentSelection","fake","label","backward","_createIn","_createOn","newFocus","_addRange","newRanges","isLastBackward","_pushRange","storedRange","addedRange","intersectingRange","_selection","getFirstPosition","getLastPosition","getSelectedElement","isSimilar","setFocus","Document","roots","_postFixers","postFixer","writer","wasFixed","DEFAULT_PRIORITY","AttributeElement","_priority","_id","_clonesGroup","nonUiChildrenCount","EmptyElement","userAgent","navigator","toLowerCase","env","isMac","isGecko","isSafari","isAndroid","features","isRegExpUnicodePropertySupported","isSupported","search","macGlyphsToModifiers","modifiersToMacGlyphs","keyCodes","generateKnownKeyCodes","getCode","altKey","alt","ctrlKey","ctrl","shiftKey","parseKeystroke","keystroke","splitKeystrokeText","sum","getEnvKeystrokeText","arrowleft","arrowup","arrowright","arrowdown","backspace","enter","space","esc","tab","cmd","code","letter","fromCharCode","UIElement","domDocument","toDomElement","domElement","createElement","getAttributeKeys","setAttribute","injectUiElementHandling","view","jumpOverUiElement","domConverter","domSelection","domTarget","ownerDocument","defaultView","getSelection","domSelectionCollapsed","getRangeAt","collapsed","domParent","focusNode","domOffset","focusOffset","viewPosition","domPositionToView","jumpedOverAnyUiElement","nextViewPosition","newDomPosition","viewPositionToDom","collapse","DocumentFragment","DowncastWriter","_cloneGroups","_setTo","_setFocus","attributeElement","_document","renderFunction","uiElement","_setAttribute","_removeAttribute","_addClass","_removeClass","_setStyle","_removeStyle","_removeCustomProperty","positionOrRange","_breakAttributes","_breakAttributesRange","newElement","insert","sourceRange","targetPosition","move","positionOffset","positionParent","_removeFromClonedElementsGroup","mergeAttributes","mergeTextNodes","_appendChild","prev","newPosition","validateNodesToInsert","container","getParentContainer","insertionPosition","_addToClonedElementsGroup","endPosition","rangeOrItem","validateRangeContainer","breakStart","breakEnd","parentContainer","removed","mergePosition","walker","getWalker","current","rangeToRemove","parentElement","ancestor","countBefore","_hasNonUiChildren","_wrapPosition","viewSelection","setSelection","_wrapRange","newRange","_unwrapChildren","newName","viewElement","getAttributes","groupName","wrapElement","wrapPositions","isText","isAttribute","isUI","_wrapAttributeElement","shouldABeOutsideB","newAttribute","_wrapChildren","offsetChange","unwrapElement","unwrapPositions","unwrapped","_unwrapAttributeElement","movePositionToTextNode","breakTextNode","fakePosition","createAttributeElement","POSITIVE_INFINITY","wrapRange","wrap","wrapper","toWrap","canBeJoined","setStyle","addClass","toUnwrap","removeAttribute","removeClass","removeStyle","forceSplitText","rangeStart","rangeEnd","isContainerOrFragment","offsetAfter","clonedNode","nodesToMove","group","getIdentity","textToMove","_data","t1","t2","nodeBeforeLength","errorContext","validNodesToInsert","validNode","startContainer","endContainer","NBSP_FILLER","createTextNode","BR_FILLER","fillerBr","dataset","ckeFiller","INLINE_FILLER_LENGTH","INLINE_FILLER","inlineFiller","startsWithFiller","domNode","isInlineFiller","domText","getDataWithoutFiller","injectQuirksHandling","jumpOverInlineFiller","fastDiff","cmp","atomicChanges","changeIndexes","findChangeBoundaryIndexes","changeIndexesToAtomicChanges","changeIndexesToChanges","arr1","arr2","firstIndex","findFirstDifferenceIndex","lastIndexOld","lastIndexNew","oldArrayReversed","cutAndReverse","newArrayReversed","reverse","newArray","newLength","diff","_insert","_delete","aLength","bLength","tmp","m","delta","es","fp","snake","k","y1","y2","dir","y","x","p","insertAt","nodeToInsert","insertBefore","childNodes","parentNode","removeChild","isNode","Renderer","domDocuments","markedAttributes","markedChildren","markedTexts","_inlineFiller","_fakeSelectionContainer","mapViewToDom","inlineFillerPosition","_updateChildrenMappings","_isSelectionInInlineFiller","_removeInlineFiller","_getInlineFillerPosition","_needsInlineFillerAtSelection","_updateAttrs","_updateChildren","_updateText","fillerDomPosition","addInlineFiller","_updateSelection","_updateFocus","actualDomChildren","expectedDomChildren","viewChildrenToDom","withChildren","_diffNodeLists","actions","_findReplaceActions","counter","equal","action","insertIndex","deleteIndex","viewChild","_updateElementMappings","unbindDomElement","bindElements","firstPos","ViewPosition","selectionPosition","domFillerNode","selectionParent","selectionOffset","isEditable","ViewText","viewText","findCorrespondingDomText","newDomText","viewToDom","actualText","expectedText","filler","insertData","deleteData","domAttrKeys","attr","viewAttrKeys","nodesToUnbind","_markDescendantTextToSync","domToView","filterOutFakeSelectionContainer","sameNodes","actualDom","expectedDom","newActions","actualSlice","expectedSlice","areSimilar","viewNode","_removeDomSelection","_removeFakeSelection","domRoot","_updateFakeSelection","_updateDomSelection","createFakeSelectionContainer","bindFakeSelection","_fakeSelectionNeedsUpdate","appendChild","textContent","domRange","createRange","removeAllRanges","selectNodeContents","addRange","_domSelectionNeedsUpdate","fixGeckoSelectionAfterBr","isDomSelectionCorrect","oldViewSelection","domSelectionToView","anchorNode","contains","doc","activeDomElement","activeElement","mapDomToView","findAncestor","domParentOrArray","nodeAfterFiller","fillerNode","node1","node2","tagName","actualDomChild","expectedDomChild","isBlockFiller","ELEMENT_NODE","childAtOffset","domChildList","fakeSelectionContainer","childList","assign","top","left","width","DOCUMENT_NODE","nodeA","nodeB","BR_FILLER_REF","DomConverter","blockFillerMode","preElements","blockElements","_blockFiller","_domToViewMapping","_viewToDomMapping","_fakeSelectionMapping","viewDocumentSelection","ViewSelection","domFragment","viewFragment","textData","_processDataFromViewText","createDocumentFragment","bindDocumentFragments","createElementNS","fillerPositionOffset","childView","viewRange","domStart","domEnd","setStart","setEnd","domBefore","domAfter","viewParent","getParentUIElement","_processDataFromDomText","isComment","isDocumentFragment","ViewDocumentFragment","viewName","keepOriginalCase","ViewElement","domChildrenToView","domChild","fakeSelectionToView","isDomSelectionBackward","viewRanges","domRangeToView","viewStart","viewEnd","ViewRange","findCorrespondingViewText","viewBefore","domElementOrDocumentFragment","firstChild","documentFragmentOrElement","viewEditable","domEditable","scrollX","scrollY","scrollPositions","forEachDomNodeAncestor","scrollLeft","scrollTop","DOCUMENT_FRAGMENT_NODE","COMMENT_NODE","isEqualNode","hasBlockParent","isNbspBlockFiller","anchorOffset","detach","_isDomSelectionPositionCorrect","prevNode","_getTouchingViewTextNode","prevEndsWithSpace","_nodeEndsWithSpace","nextNode","_hasDomParentOfType","_getTouchingInlineDomNode","shouldLeftTrim","_checkShouldLeftTrimDomText","shouldRightTrim","_checkShouldRightTrimDomText","getNext","ViewTreeWalker","topmostParent","createTreeWalker","NodeFilter","SHOW_TEXT","SHOW_ELEMENT","acceptNode","FILTER_ACCEPT","FILTER_SKIP","currentNode","touchingNode","lca","boundaryParent","parents","isNBSP","isWindow","stringifiedObject","DomEmitterMixin","rest","proxy","_getProxyEmitter","ProxyEmitter","attach","getNodeUID","_domNode","_domListeners","domListener","_createDomListener","useCapture","addEventListener","removeListener","domEvt","removeEventListener","Observer","isEnabled","disable","setCacheAdd","setCacheHas","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalArrays","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","mapToArray","setToArray","equalByTag","convert","equalObjects","objProps","objLength","othProps","skipCtor","objCtor","othCtor","baseIsEqualDeep","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","baseIsEqual","isEqualWith","MutationObserver","characterData","characterDataOldValue","subtree","renderer","_renderer","_domElements","_mutationObserver","_onMutations","takeRecords","observe","disconnect","domMutations","mutatedTexts","mutatedElements","mutation","_isBogusBrMutation","text","oldText","newText","viewMutations","mutatedText","markToSync","viewChildren","newViewChildren","oldChildren","newChildren","viewSelectionAnchor","viewSelectionFocus","forceRender","child1","child2","addedNode","removedNodes","addedNodes","DomEventData","domEvent","additionalData","stopPropagation","DomEventObserver","domEventType","onDomEvent","eventType","KeyObserver","metaKey","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","isBinary","nativeMin","debounce","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","leadingEdge","setTimeout","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","FakeSelectionObserver","_fireSelectionChangeDoneDebounced","_isArrowKeyCode","_handleSelectionMove","newSelection","oldSelection","SelectionObserver","mutationObserver","getObserver","_documents","WeakSet","_clearInfiniteLoopInterval","setInterval","_clearInfiniteLoop","_loopbackCounter","_handleSelectionChange","clearInterval","newViewSelection","hasDomSelection","FocusObserver","_renderTimeoutId","selectedEditable","CompositionObserver","isComposing","InputObserver","isRange","getBorderWidths","getComputedStyle","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","borderLeftWidth","rectProperties","Rect","isSourceRange","_source","writable","copyRectProperties","getDomRangeRects","getBoundingClientRect","innerWidth","innerHeight","height","anotherRect","rect","getIntersection","getArea","visibleRect","isBody","commonAncestorContainer","parentRect","intersectionRect","intersectRect","scrollBarWidth","scrollBarHeight","documentElement","clientWidth","clientHeight","borderWidths","offsetWidth","offsetHeight","rects","clientRects","getClientRects","elementOrRange","body","utils","scrollViewportToShowTarget","viewportOffset","targetWindow","getWindow","currentWindow","currentFrame","firstAncestorToScroll","getParentElement","scrollAncestorsToShowRect","getRectRelativeToWindow","targetRect","scrollWindowToShowRect","frameElement","scrollAncestorsToShowTarget","targetParent","targetShiftedDownRect","moveBy","targetShiftedUpRect","viewportRect","excludeScrollbarsAndBorders","isAbove","isBelow","isLeftOf","isRightOf","getRect","parentWindow","firstRect","secondRect","relativeWindow","frame","frameRect","View","domRoots","_initialDomRootAttributes","_observers","_ongoingChange","_postFixersInProgress","_renderingDisabled","_hasChangedSinceTheLastRendering","_writer","addObserver","_render","viewRoot","getRoot","_name","initialDomRootAttributes","updateContenteditableAttribute","isReadOnly","change","observer","enable","viewRangeToDom","isRenderingInProgress","callbackResult","_callPostFixers","flag","disableObservers","enableObservers","getChildStartOffset","NodeList","_nodes","_insertNodes","getNodeIndex","maxOffset","getNodeStartOffset","totalOffset","nodeList","indexStart","toJSON","getNode","offsetToIndex","relativePath","_removeNodes","fromJSON","stickiness","_visitedParent","prevVisitedParent","textNodeAtPosition","getTextNodeAtPosition","getNodeAfterPosition","formatReturnValue","offsetInTextNode","getNodeBeforePosition","diffAt","compare","leftParent","thisParentPath","getParentPath","posParentPath","operation","_getTransformedByInsertOperation","_getTransformedByMoveOperation","_getTransformedBySplitOperation","_getTransformedByMergeOperation","_getTransformedByInsertion","_getTransformedByMove","sourcePosition","movedRange","isContained","_getCombined","splitPosition","moveTargetPosition","graveyardPosition","_getTransformedByDeletion","deletionPosition","deletePosition","transformed","insertPosition","isMoved","combined","newOffset","graveyard","getCommonPath","posParent","operations","getTransformedByOperation","j","containsRange","spread","newPos","moveRange","differenceSet","getDifference","difference","common","transformedCommon","newStart","newEnd","startParentPath","endParentPath","refIndex","Mapper","_modelToViewMapping","_viewToModelMapping","_viewToModelLengthCallbacks","_markerNameToElements","_elementToMarkerNames","_unboundMarkerNames","viewContainer","modelPosition","_findPositionIn","viewBlock","findMappedViewAncestor","modelParent","modelOffset","_toModelOffset","ModelPosition","modelElement","toModelElement","markerName","toViewElement","elements","nameToElements","elementToNames","markerNames","ModelRange","toModelPosition","modelRange","toViewPosition","mapper","isPhantom","boundElements","getElementsWithSameId","viewElementName","lengthCallback","viewOffset","offsetToParentStart","offsetInParent","getModelLength","len","expectedOffset","lastLength","_moveViewPositionToTextNode","ModelConsumable","_consumable","_textProxyRegistry","_normalizeConsumableType","_getSymbolForTextProxy","itemConsumables","startMap","endMap","_addSymbolForTextProxy","DowncastDispatcher","conversionApi","dispatcher","differ","markers","getMarkersToRemove","convertMarkerRemove","getChanges","convertInsert","convertRemove","convertAttribute","attributeKey","attributeOldValue","attributeNewValue","flushUnboundMarkerNames","markerRange","getRange","convertMarkerAdd","getMarkersToAdd","consumable","_createInsertConsumable","itemRange","_testAndFire","_clearConversionApi","_createConsumableForRange","markersAtSelection","getMarkersAtPosition","_createSelectionConsumable","marker","shouldMarkerChangeBeConverted","Consumable","getItems","hasCustomHandling","containsItem","anyNewRange","oldRange","_removeAllRanges","directChange","_popRange","attributeKeys","visited","startBlock","getParentBlock","isTopBlockInRange","block","isUnvisitedTopBlock","endBlock","isTouching","limitStartPosition","limitEndPosition","_checkRange","isUnvisitedBlock","schema","isBlock","hasParentLimit","isLimit","parentBlock","findAncestorBlock","isParentInRange","LiveRange","bindWithDocument","isDocumentOperation","_createFromRanges","boundariesChanged","contentChanged","doesOperationChangeRangeContent","toRange","storePrefix","LiveSelection","getSelectedBlocks","containsEntireContent","_updateMarkers","_updateAttributes","_getStoredAttributes","overrideGravity","restoreGravity","hasOwnRange","isGravityOverridden","startsWith","_model","_attributePriority","_fixGraveyardRangesData","_hasChangedRange","_overriddenGravityRegister","liveRange","_fixGraveyardSelection","_validateSelectionRange","batch","clearAttributesStoredInElement","_getDefaultRange","optionsOrPlaceOrOffset","overrideUid","_prepareRange","fromRange","changed","selectionRange","oldMarkers","clearAll","newAttributes","_getSurroundingAttributes","oldAttributes","_setAttributesTo","newKey","oldKey","gotAdded","realKey","getAttrsIfCharacter","removedRangeStart","positionCandidate","getNearestSelectionRange","isRangeCollidingWithSelection","changeParent","isNoLongerEmpty","enqueueChange","storedAttributes","ConversionHelpers","dispatchers","_dispatchers","conversionHelper","cloneDeep","DowncastHelpers","downcastElementToElement","downcastAttributeToElement","downcastAttributeToAttribute","downcastMarkerToElement","downcastMarkerToHighlight","insertText","consume","viewWriter","createText","modelEnd","createRangeIn","unbindViewElement","createViewElementFromHighlightDescriptor","descriptor","convertRangeSelection","toViewRange","convertCollapsedSelection","brokenPosition","breakAttributes","clearAttributes","isAttached","elementCreator","oldViewElement","newViewElement","ModelSelection","unwrap","insertElement","insertUIElement","isOpening","viewStartElement","viewEndElement","bindElementToMarker","removeUIElement","markerNameToElements","unbindElementFromMarkerName","createRangeOn","clearClonedElementsGroup","changeAttribute","attributeCreator","oldAttribute","highlightText","highlightDescriptor","prepareDescriptor","rangeAfterWrap","highlightElement","ModelElement","removeHighlight","viewHighlightElement","normalizeToElementConfig","converterPriority","modelKey","modelValue","getFromAttributeCreator","normalizeToAttributeConfig","viewElementType","modelData","createViewElementFromDefinition","viewElementDefinition","createContainerElement","ViewAttributeElement","createUIElement","modelAttributeValue","UpcastHelpers","upcastElementToElement","upcastElementToAttribute","upcastAttributeToAttribute","upcastElementToMarker","convertToModelFragment","viewItem","convertChildren","modelCursor","convertText","checkChild","convertSelectionChange","modelSelection","toModelRange","converter","prepareToElementConverter","elementName","getViewElementNameFromConfig","normalizeModelAttributeConfig","prepareToAttributeConverter","viewKey","normalizeViewAttributeKeyValueConfig","normalizeToMarkerConfig","viewConfig","matcherResult","getModelElement","splitResult","splitToAllowedParent","createPositionAt","getSplitParts","createPositionBefore","createPositionAfter","cursorParent","normalized","keyName","viewAttributeKeyToCopy","defaultModelValue","onlyViewNameIsDefined","attributeWasSet","setAttributeOn","configToTest","modelAttribute","checkAttribute","oldModel","modelWriter","EditingController","downcastDispatcher","_disableRendering","convertChanges","convertSelection","CommandCollection","_commands","commandName","command","execute","commands","ViewConsumable","consumables","elementConsumables","ViewElementConsumables","revert","instance","consumablesFromElement","createFrom","_canConsumeName","_test","_consume","_revert","getRelatedStyles","consumableName","toConsume","combineWalkers","convertToMinimalFlatRanges","Schema","_sourceDefinitions","_attributeProperties","SchemaContext","getDefinition","itemName","definition","_clearCache","_compiledDefinitions","_compile","getDefinitions","def","isInline","_checkContextMatch","attributeName","allowAttributes","positionOrBaseElement","elementToMerge","checkMerge","childDef","retValue","getAttributeProperties","selectionOrRangeOrPosition","rangeCommonAncestor","firstPosition","_getValidRangesForRange","backwardWalker","forwardWalker","limitElement","removeDisallowedAttributeFromNode","rangeInNode","positionsInRange","getPositions","compiledDefinitions","sourceRules","itemNames","compileBaseItemRule","compileAllowContentOf","compileAllowWhere","compileAllowAttributesOf","compileInheritPropertiesFrom","cleanUpAllowIn","cleanUpAllowAttributes","contextItemIndex","contextItem","getItem","allowIn","parentRule","mapContextItem","query","getNames","endsWith","sourceItemRules","itemRule","allowContentOf","allowWhere","allowAttributesOf","inheritTypesFrom","copyTypes","copyProperty","makeInheritAllWork","allowContentOfItemName","allowedChildren","getAllowedChildren","allowedItem","allowWhereItemName","inheritFrom","allowedIn","allowAttributeOfItem","inheritAttributes","inheritPropertiesOfItem","typeNames","existingItems","itemToCheck","sourceItemRule","inheritAllFrom","getValues","ctxItem","forward","step","getMinimalFlatRanges","f","UpcastDispatcher","_splitParts","_modelCursor","convertItem","_convertItem","_convertChildren","_splitToAllowedParent","_getSplitParts","createContextTree","documentFragment","_removeEmptyElements","append","extractMarkersFromModelFragment","nextModelCursor","allowedParent","findAllowedParent","treeWalkerValue","originalPart","splitPart","_registerSplitPair","list","anyRemoved","modelItem","markerElements","markerElement","currentPosition","contextDefinition","DataController","processor","upcastDispatcher","viewDocument","ViewDocument","_viewWriter","ViewDowncastWriter","_checkIfRootsExists","hasContent","ignoreWhitespaces","stringify","modelElementOrFragment","viewDocumentFragment","toView","toData","clearBindings","_getMarkersRelativeToElement","initialData","main","modelRoot","parse","newData","removeSelectionAttribute","toModel","viewElementOrFragment","rootNames","getRootNames","elementRange","intersection","_getAllUpcastDefinitions","_getUpcastDefinition","Conversion","downcastDispatchers","upcastDispatchers","_helpers","_downcast","_createConversionHelpers","isDowncast","_upcast","alias","isUpcast","for","elementToElement","attributeToElement","elementToAttribute","attributeToAttribute","helpers","upcastAlso","upcastAlsoItem","Batch","op","baseVersion","Operation","__className","_normalizeNodes","_splitNodeAtPosition","_mergeNodesAtIndex","_move","_haveSameAttributes","mergedNode","offsetDiff","firstPart","secondPart","iteratorA","iteratorB","AttributeOperation","DetachOperation","MoveOperation","newTargetPosition","getMovedRangeStart","sourceElement","targetElement","sourceOffset","targetOffset","InsertOperation","shouldReceiveAttributes","gyPosition","originalNodes","MarkerOperation","affectsData","_markers","RenameOperation","oldName","RootAttributeOperation","MergeOperation","SplitOperation","mergedElement","getInsertionPosition","splitElement","RootElement","Writer","_assertWriterUsedCorrectly","isSameTree","addOperation","applyOperation","rangeRootPosition","usingOperation","updateMarker","addMarker","itemOrRange","setAttributeOnRange","setAttributeOnItem","removeAttributesFromItem","_addOperationForAffectedMarkers","flat","applyRemoveOperation","_merge","_mergeDetached","createPositionFromPath","createSelection","renameOperation","firstSplitElement","firstCopyElement","elementOrString","shiftedRange","applyMarkerOperation","_set","markerOrName","currentMarker","hasUsingOperationDefined","affectsDataDefined","currentRange","updatedRange","managedUsingOperations","_refresh","keyOrObjectOrIterable","_setSelectionAttribute","keyOrIterableOfKeys","_removeSelectionAttribute","_overrideGravity","_restoreGravity","storeKey","_getStoreAttributeKey","_currentWriter","isAffected","elementBefore","elementAfter","affectedInLeftElement","affectedInRightElement","affectedAfterLeftElement","affectedBeforeRightElement","valueBefore","valueAfter","lastSplitPosition","previousValue","isRootChanged","rootA","rootB","Differ","markerCollection","_markerCollection","_changesInElement","_elementSnapshots","_changedMarkers","_changeCount","_cachedChanges","_cachedChangesWithGraveyard","_isInInsertedElement","_markRemove","_markInsert","getMarkersIntersectingRange","bufferMarkerChange","_markAttribute","sourceParentInserted","targetParentInserted","graveyardParent","mergedIntoElement","buffered","includeChangesInGraveyard","diffSet","changes","snapshotChildren","elementChildren","_getChildrenSnapshot","_generateActionsFromChanges","_getInsertDiff","_getRemoveDiff","elementAttributes","snapshotAttributes","_getAttributesDiff","changeCount","prevDiff","thisDiff","isConsecutiveTextRemove","isConsecutiveTextAdd","isConsecutiveAttributeChange","_changesInGraveyardFilter","changeItem","_markChange","_removeAllNestedChanges","_makeSnapshot","_getChangesForElement","_handleChange","inc","nodesToHandle","old","incEnd","oldEnd","intersectionLength","howManyAfter","attributePart","diffs","snapshot","oldChildrenLength","oldChildrenHandled","repeat","posInGy","rangeInGy","History","_operations","_undoPairs","_undoneOperations","undoneOperation","undoingOperation","isCombiningMark","character","isHighSurrogateHalf","isLowSurrogateHalf","isInsideSurrogatePair","isInsideCombinedSymbol","graveyardName","history","_hasSelectionChangedFromTheLastChangeBlock","createRoot","bufferOperation","_hasDocumentChangedFromTheLastChangeBlock","refresh","hasDataChanges","reset","defaultRoot","_getDefaultRoot","nearestRange","validateTextNodePosition","rangeBoundary","MarkerCollection","Marker","oldMarker","hasChanged","_attachLiveRange","_managedUsingOperations","_affectsData","_destroyMarker","prefix","_detachLiveRange","_liveRange","NoOperation","OperationFactory","LivePosition","oldPosition","toPosition","insertContent","content","deleteContent","doNotAutoparagraph","nodesToInsert","insertion","Insertion","handleNodes","isFirst","isLast","getSelectionRange","affectedRange","getAffectedRange","canMergeWith","_filterAttributesOf","_affectedStart","_affectedEnd","parentContext","_handleNode","removeDisallowedAttributes","nodeToSelect","_handleObject","isAllowed","_checkAndSplitToAllowedPosition","_mergeSiblingsOf","_handleDisallowedNode","_tryAutoparagraphing","livePos","fromPosition","_setAffectedBoundaries","mergeLeft","_canMergeLeft","mergeRight","_canMergeRight","mergePosLeft","mergePosRight","livePosition","paragraph","_getAllowedIn","tempPos","selRange","doNotResetEntireContent","shouldEntireContentBeReplacedWithParagraph","startPos","endPos","leaveUnmerged","mergeBranches","collapseSelectionAt","shouldAutoparagraph","insertParagraph","replaceEntireContentWithParagraph","startParent","endParent","checkCanBeMerged","parentToRemove","isTextAllowed","isParagraphAllowed","leftPos","rightPos","rangeToCheck","getLimitElement","wordBoundaryCharacters","modifySelection","isForward","getSearchRange","tryExtendingTo","setSelectionFocus","getCorrectWordBreakPosition","getCorrectPosition","isAtWordBoundary","isAtNodeBoundary","boundaryChar","searchEnd","offsetToCheck","getSelectedContent","frag","flatSubtreeRange","commonPath","commonParent","getNodeByPath","appendText","leftExcessRange","rightExcessRange","removeRangeContent","parentsToCheck","contained","parentToCheck","removeRange","injectSelectionPostFixer","registerPostFixer","selectionPostFixer","correctedRange","tryFixingRange","mergeIntersectingRanges","tryFixingCollapsedRange","tryFixingNonCollapsedRage","originalPosition","nearestSelectionRange","fixedPosition","isTextAllowedOnStart","isTextAllowedOnEnd","startLimitElement","endLimitElement","checkSelectionOnNonLimitElements","isStartObject","fixedStart","isEndObject","fixedEnd","isStartInLimit","isEndInLimit","bothInSameParent","expandStart","isInObject","expandEnd","findOutermostLimitAncestor","startingNode","isLimitNode","startIsOnBlock","endIsOnBlock","nonIntersectingRanges","previousRange","merged","Model","_pendingChanges","_validate","register","addChildCheck","childDefinition","_runPendingChanges","batchOrType","_execute","rangeOrElement","intersectingMarker","ret","currentBatch","callbackReturnValue","_handleChangeBlock","KeystrokeHandler","_listener","keyEvtData","EditingKeystrokeHandler","evtData","Editor","_addEditor","_getEditorConfig","editing","conversion","addAlias","keystrokes","extraPlugins","readyPromise","_removeEditor","DataApiMixin","setData","getData","setDataInElement","el","HTMLTextAreaElement","innerHTML","ElementApiMixin","updateSourceElement","attachToForm","form","originalSubmit","onSubmit","submit","BasicHtmlWriter","fragment","implementation","createHTMLDocument","HtmlDataProcessor","_domParser","DOMParser","_domConverter","_htmlWriter","getHtml","_toDom","parseFromString","ComponentFactory","_components","originalName","FocusTracker","_elements","_nextEventLoopTimeout","_focus","_blur","focusedElement","EditorUI","componentFactory","focusTracker","_editableElementsMap","update","ckeditorInstance","editorUI","enableToolbarKeyboardFocus","origin","originKeystrokeHandler","originFocusTracker","toolbar","beforeFocus","afterBlur","normalizeToolbarConfig","documentPlaceholders","enablePlaceholder","isDirectHost","updateDocumentPlaceholders","showPlaceholder","hidePlaceholder","needsPlaceholder","isEmptyish","selectionAnchor","placeholders","wasViewModified","updatePlaceholder","hostElement","getChildPlaceholderHostSubstitute","ElementReplacer","_replacedElements","display","ClassicEditorUI","_toolbarConfig","_elementReplacer","replacementElement","editingView","editingRoot","setEditableElement","attachDomRoot","_initPlaceholder","_initToolbar","restore","detachDomRoot","stickyPanel","limiterElement","viewportTopOffset","fillFromConfig","placeholderText","ViewCollection","initialItems","_renderViewIntoCollectionParent","_parentElement","elementOrDocFragment","dest","evtName","isRendered","xhtmlNs","Template","_isRendered","_revertData","_renderNode","intoFragment","getEmptyRevertData","isApplying","revertData","_revertTemplateFromNode","isView","isTemplate","isInvalid","_renderText","_renderElement","ns","_renderAttributes","_renderElementChildren","_setUpListeners","hasTemplateBinding","_bindToObservable","updater","getTextUpdater","attrName","attrValue","domAttrValue","attrNs","valueToBind","shouldExtend","getAttributeUpdater","_renderStyleAttribute","arrayValueReducer","isFalsy","setAttributeNS","styleName","styleValue","getStyleUpdater","childIndex","isViewCollection","setParent","childRevertData","eventListeners","revertBindings","schemaItem","domEvtName","domSelector","activateDomEventListener","syncValueSchemaValue","templateBinding","activateAttributeListener","revertBinding","eventNameOrFunctionOrAttribute","TemplateToBinding","eventNameOrFunction","if","valueIfTrue","TemplateIfBinding","template","extendTemplate","TemplateBinding","matches","getValueSchemaValue","removeAttributeNS","normalizePlainTextDefinition","normalizeTextDefinition","normalizeListeners","normalizeAttributes","arrayify","listeners","cur","extendObjectValueArray","ext","_viewCollections","_unboundChildren","createCollection","collection","views","registerChild","getViews","c","_bindTemplate","isString","namespace","xmlns","BodyCollection","_bodyCollectionContainer","querySelector","childElementCount","EditorUIView","attachToDom","detachFromDom","LabelView","bindTemplate","setTemplate","BoxedEditorUIView","_voiceLabelView","_createVoiceLabel","lang","voiceLabel","EditableUIView","_editableElement","_hasExternalElement","_editingView","_updateIsFocusedClasses","updateAfterRender","InlineEditableUIView","toUnit","toPx","StickyPanelView","_contentPanelPlaceholder","isSticky","_panelRect","_contentPanel","_hasViewportTopOffset","_isStickyToTheLimiter","limiterBottomOffset","marginLeft","_checkIfShouldBeSticky","limiterRect","panelRect","_limiterRect","isActive","_marginLeft","FocusCycler","keystrokeHandler","previous","collectionLength","focusables","isFocusable","_getFocusableItem","viewIndex","focused","ToolbarSeparatorView","RESIZE_CHECK_INTERVAL","ResizeObserver","_observerInstance","_createObserver","_element","_callback","_addElementCallback","_deleteElementCallback","_elementCallbacks","_getElementCallbacks","unobserve","ObserverConstructor","ResizeObserverPolyfill","offsetParent","_previousRects","_periodicCheckTimeout","_checkElementRectsAndExecuteCallback","_startPeriodicCheck","_stopPeriodicCheck","periodicCheck","_hasRectChanged","contentRect","currentRect","previousRect","DropdownPanelView","selectstart","focusLast","getPositionedAncestor","getOptimalPosition","positions","limiter","fitInViewport","bestPositionRect","bestPositionName","positionedElementAncestor","elementRect","getVisible","bestPosition","getBestPositionNameAndRect","getPositionNameAndRect","absoluteRectCoordinates","getAbsoluteRectCoordinates","shiftRectCoordinatesDueToPositionedAncestor","positionData","moveTo","elementRectArea","processedPositions","processPositionsToAreas","processedPositionsInViewport","viewportIntersectArea","bestPositionData","getBestOfProcessedPositions","positionName","positionRect","limiterIntersectArea","limiterViewportIntersectRect","getIntersectionArea","processedPosition","maxFitFactor","fitFactor","ancestorPosition","ancestorBorderWidths","DropdownView","buttonView","panelView","isOpen","panelPosition","_getOptimalPosition","_panelPositions","closeDropdown","defaultPanelPositions","southEast","southWest","northEast","northWest","buttonRect","IconView","viewBox","_updateXMLContent","_colorFillPaths","svg","fillColor","querySelectorAll","TooltipView","ButtonView","ariaLabelUid","tooltipView","_createTooltipView","labelView","_createLabelView","iconView","keystrokeView","_createKeystrokeView","_getTooltipString","tabindex","isToggleable","mousedown","click","icon","withKeystroke","tooltip","DropdownButtonView","arrowView","_createArrowView","dropdownArrowIcon","ListView","_focusCycler","focusPrevious","focusNext","focusFirst","ListItemView","ListSeparatorView","SwitchButtonView","toggleSwitchView","_createToggleView","clickOutsideHandler","activator","contextElements","contextElement","createDropdown","ButtonClass","dropdownView","addDefaultBehavior","addToolbarToDropdown","buttons","toolbarView","ToolbarView","addListToDropdown","listView","listItemView","closeDropdownOnBlur","closeDropdownOnExecute","focusDropdownContentsOnArrows","itemsView","ItemsView","maxWidth","_behavior","shouldGroupWhenFull","DynamicGrouping","StaticLayout","viewFocusables","viewItemsView","viewFocusTracker","viewLocale","ungroupedItems","groupedItems","groupedItemsDropdown","_createGroupedItemsDropdown","resizeObserver","cachedPadding","shouldUpdateGroupingOnNextResize","_updateFocusCycleableItems","_updateGrouping","_enableGroupingOnResize","_enableGroupingOnMaxWidthChange","wereItemsGrouped","_areItemsOverflowing","_groupLastItem","_ungroupFirstItem","previousWidth","dropdown","verticalDotsIcon","lastChildRect","toolbarRect","computedStyle","paddingProperty","ClassicEditorUIView","shouldToolbarGroupWhenFull","getDataFromElement","ClassicEditor","sourceElementOrData","getInitialData","_disableStack","forceDisable","DataTransfer","nativeDataTransfer","files","getFiles","_native","kind","getAsFile","ClipboardObserver","handleInput","targetRanges","dropRange","dataTransfer","clipboardData","getDropViewRange","domDoc","clientX","clientY","caretRangeFromPoint","rangeParent","rangeOffset","plainTextToHtml","normalizeClipboardData","fullMatch","spaces","smallPaddingElements","viewToPlainText","childText","Clipboard","modelDocument","onCopyCut","_htmlDataProcessor","normalizeClipboardHtml","scrollToTheSelection","dataController","modelFragment","Command","forceDisabled","clearForceDisabled","getCopyOnEnterAttributes","allAttributes","copyOnEnter","EnterCommand","enterBlock","isSelectionEmpty","attributesToCopy","splitBlock","setSelectionAttribute","isContainedWithinOneElement","splitPos","EnterObserver","isSoft","Enter","ShiftEnterCommand","softBreakAction","anchorPos","isInsideLimitElement","insertBreak","breakLineElement","ShiftEnter","createEmptyElement","SelectAllCommand","SELECT_ALL_KEYSTROKE","SelectAllEditing","domEventData","SelectAllUI","selectAllIcon","SelectAll","ChangeBuffer","limit","isLocked","_changeCallback","_batch","_reset","_selectionChangeCallback","ignoreLock","createBatch","InputCommand","undoStepSize","_buffer","_batches","textInsertions","resultRange","lock","unlock","injectUnsafeKeystrokesHandling","latestCompositionSelection","inputCommand","handleUnsafeKeystroke","isSelectionUnchanged","isSafeKeystroke","deleteSelectionContent","handleCompositionStart","isFlatSelection","safeKeycodes","keyData","diffToChanges","output","lastOperation","pushLast","isContinuationOf","expected","containerChildrenMutated","mutations","getSingleTextNodeChange","diffResult","compareChildNodes","oldChild","newChild","injectTypingMutationsHandling","MutationHandler","handle","_handleContainerChildrenMutations","_handleTextMutation","_handleTextNodeInsertion","mutationsCommonAncestor","getMutationsContainer","domMutationCommonAncestor","freshDomConverter","modelFromCurrentDom","currentModel","modelFromDomChildren","currentModelChildren","lastDomChild","lastCurrentChild","isSafeForTextMutation","calculateChanges","firstChangeAt","insertions","deletions","modelSelectionRange","viewPos","modelPos","insertedText","commonAncestor","lastChangeAt","Input","DeleteCommand","_shouldEntireContentBeReplacedWithParagraph","sequence","_replaceEntireContentWithParagraph","limitElementIsEmpty","limitElementFirstChild","DeleteObserver","fireViewDeleteEvent","originalEvent","hasWordModifier","inputType","selectionToRemove","Delete","deleteCommandParams","domSelectionAfterDeletion","Typing","transformations","setTransformation","OperationA","OperationB","transformationFunction","aGroup","getTransformation","noUpdateTransformation","transformSets","operationsA","operationsB","contextFactory","ContextFactory","useRelations","forceWeakRemove","setOriginalOperations","originalOperations","nextTransformIndex","nextBaseVersionA","nextBaseVersionB","originalOperationsACount","originalOperationsBCount","opA","indexB","opB","newOpsA","getContext","newOpsB","updateRelation","newOpA","padWithNoOps","brokenOperationsACount","brokenOperationsBCount","updateBaseVersions","_history","_useRelations","_forceWeakRemove","_relations","takeFrom","originalOperation","_setRelation","affectedLeft","affectedRight","side","wasInLeftElement","wasStartBeforeMergedElement","wasEndBeforeMergedElement","wasInRightElement","aIsStrong","aWasUndone","_wasUndone","bWasUndone","abRelation","_getRelation","baRelation","originalOp","wasUndone","isUndoneOperation","origB","undoneB","getUndoneOperation","origA","relationsA","relation","_getComplementaryAttributeOperations","insertOperation","insertValue","_breakRangeByMoveOperation","moveOp","hasSameParentAs","_moveTargetIntoMovedRange","_makeMoveOperationsFromRanges","r","aNewRange","aToGraveyard","bToGraveyard","aIsWeak","bIsWeak","forceMove","removedRange","mergeInside","mergeSplittingElement","getReversed","bTargetsToA","aTargetsToB","aCompB","shouldSpread","rightRange","movesGraveyardElement","gyMoveSource","splitNodesMoveSource","gyMoveTarget","gyMove","splitNodesMoveTargetPath","splitNodesMoveTarget","splitNodesMove","renamePath","splitPath","extraRename","additionalSplit","rangeToMove","gyElementMoved","newParentPosition","newTargetPath","howManyRemoved","splitAtTarget","aInGraveyard","bInGraveyard","newPositionPath","BaseCommand","_stack","_createdBatches","docSelection","selectionRanges","transformSelectionRange","batchToUndo","undoingBatch","operationsToUndo","operationToUndo","nextBaseVersion","historyOperations","getOperations","transformedSets","reversedOperations","setOperationAsUndone","getTransformedByOperations","UndoCommand","batchIndex","findIndex","_undo","_restoreSelection","RedoCommand","redoingBatch","UndoEditing","_batchRegistry","_undoCommand","_redoCommand","isRedoBatch","isUndoBatch","isRegisteredBatch","addBatch","clearStack","undoneBatch","UndoUI","localizedUndoIcon","undoIcon","redoIcon","localizedRedoIcon","_addButton","Icon","Undo","Essentials","AttributeCommand","_getValueFromFirstAllowedNode","checkAttributeInSelection","forceValue","getValidRanges","BOLD","BoldEditing","setAttributeProperties","isFormatting","fontWeight","BoldUI","boldIcon","Bold","ITALIC","ItalicEditing","ItalicUI","italicIcon","Italic","findLinkRange","_findBound","lookBack","lastNode","LinkCommand","manualDecorators","manualDecorator","_getDecoratorStateFromModel","href","manualDecoratorIds","truthyManualDecorators","falsyManualDecorators","linkRange","decoratorName","UnlinkCommand","linkCommand","rangesToUnlink","castSlice","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsVarRange","rsZWJ","reHasUnicode","hasUnicode","asciiToArray","rsAstral","rsCombo","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsSymbol","reUnicode","unicodeToArray","stringToArray","createCaseFirst","strSymbols","chr","upperFirst","ATTRIBUTE_WHITESPACES","SAFE_URL","isLinkElement","createLinkElement","linkElement","setCustomProperty","ensureSafeUrl","isSafeUrl","normalizedUrl","getLocalizedDecorators","decorators","localizedDecoratorsLabels","decorator","normalizeDecorators","retArray","AutomaticDecorators","_definitions","ManualDecorator","bindTwoStepCaretToAttribute","twoStepCaretHandler","TwoStepCaretHandler","arrowRightPressed","arrowLeftPressed","isMovementHandled","contentDirection","handleForwardMovement","handleBackwardMovement","_modelSelection","_overrideUid","_isNextGravityRestorationSkipped","_isGravityOverridden","isAtBoundary","_hasSelectionAttribute","isBetweenDifferentValues","_preventCaretMovement","isAtStartBoundary","isAtEndBoundary","_setSelectionAttributeFromTheNodeBefore","isStepAfterTheAttributeBoundary","_skipNextAutomaticGravityRestoration","overrideSelectionGravity","restoreSelectionGravity","isAttrBefore","isAttrAfter","HIGHLIGHT_CLASS","DECORATOR_AUTOMATIC","DECORATOR_MANUAL","EXTERNAL_LINKS_REGEXP","LinkEditing","addTargetToExternalLinks","linkDecorators","_enableAutomaticDecorators","mode","_enableManualDecorators","_setupLinkHighlight","_enableInsertContentSelectionAttributesFixer","automaticDecoratorDefinitions","automaticDecorators","rel","getDispatcher","manualDecoratorDefinitions","manualDecoratorName","highlightedLinks","ClickObserver","defaultLimiterElement","BalloonPanelView","isVisible","show","defaultPositions","positionOptions","southArrowNorth","southArrowNorthMiddleWest","southArrowNorthMiddleEast","southArrowNorthWest","southArrowNorthEast","northArrowSouth","northArrowSouthMiddleWest","northArrowSouthMiddleEast","northArrowSouthWest","northArrowSouthEast","optimalPosition","unpin","_pinWhenIsVisibleCallback","_startPinning","_stopPinning","hide","attachTo","getDomElement","scrollTarget","isWithinScrollTarget","isLimiterWithinScrollTarget","getNorthTop","balloonRect","arrowVerticalOffset","getSouthTop","arrowHorizontalOffset","northWestArrowSouthWest","northWestArrowSouthMiddleWest","northWestArrowSouth","northWestArrowSouthMiddleEast","northWestArrowSouthEast","northEastArrowSouthWest","northEastArrowSouthMiddleWest","northEastArrowSouth","northEastArrowSouthMiddleEast","northEastArrowSouthEast","southWestArrowNorthWest","southWestArrowNorthMiddleWest","southWestArrowNorth","southWestArrowNorthMiddleEast","southWestArrowNorthEast","southEastArrowNorthWest","southEastArrowNorthMiddleWest","southEastArrowNorth","southEastArrowNorthMiddleEast","southEastArrowNorthEast","ContextualBalloon","positionLimiter","_viewToStack","_idToStack","_rotatorView","_createRotatorView","_fakePanelsView","_createFakePanelsView","hasView","stackId","_numberOfStacks","_visibleStack","singleViewMode","showStack","_showView","_singleViewMode","visibleView","_showNextStack","hideView","_getStackId","pin","_getBalloonPosition","updatePosition","visibleStack","stacks","nextIndex","RotatorView","isSingleViewMode","numberOfStacks","buttonNextView","buttonPrevView","_showPrevStack","FakePanelsView","showPanels","balloonClassName","withArrow","showView","_createButtonView","prevIcon","nextIcon","balloonPanelView","_balloonPanelView","_addPanels","_removePanels","deregisterChild","numberOfPanels","LabeledFieldView","viewCreator","viewUid","statusUid","fieldView","statusView","_createStatusView","errorText","infoText","InputTextView","placeholder","readonly","setValue","select","createLabeledInputText","labeledFieldView","inputView","ariaDescribedById","submitHandler","LinkFormView","urlInputView","_createUrlInput","saveButtonView","_createButton","checkIcon","cancelButtonView","cancelIcon","_manualDecoratorSwitches","_createManualDecoratorSwitches","_createFormChildren","_focusables","classList","accumulator","switchButton","isOn","childViews","v","labeledInput","button","switches","withText","decoratorValue","commandValue","additionalButtonsView","LinkActionsView","previewButtonView","_createPreviewButton","unlinkButtonView","unlinkIcon","editButtonView","pencilIcon","linkKeystroke","LinkUI","actionsView","_createActionsView","formView","_createFormView","_balloon","_createToolbarLinkButton","_enableUserBalloonInteractions","unlinkCommand","_addFormView","_hideUI","getDecoratorSwitchesState","_closeFormView","_showUI","linkIcon","parentLink","_getSelectedLinkElement","_areActionsVisible","_isUIVisible","_isUIInPanel","_areActionsInPanel","_getBalloonPositionData","_isFormInPanel","restoreManualDecoratorStates","_removeFormView","forceVisible","_addActionsView","_startUpdatingUI","prevSelectedLink","prevSelectionParent","getSelectionParent","selectedLink","targetLink","findLinkElementAncestor","startLink","endLink","Link","iteratorItem","ParagraphCommand","checkCanBecomeParagraph","blocks","rename","InsertParagraphCommand","Paragraph","paragraphLikeElements","isParagraphable","wrapInParagraph","_autoparagraphEmptyRoots","createContext","supportedOptions","option","isDefault","alignment","ALIGNMENT","AlignmentCommand","firstBlock","_canBeAligned","currentAlignment","removeAlignment","removeAlignmentFromSelection","setAlignmentOnSelection","AlignmentEditing","enabledOptions","_buildDefinition","icons","alignLeftIcon","alignRightIcon","alignCenterIcon","alignJustifyIcon","AlignmentUI","isVertical","ariaLabel","defaultIcon","areActive","areEnabled","localizedOptionTitles","Alignment","HeadingCommand","modelElements","heading","checkCanBecomeHeading","defaultModelElement","HeadingEditing","title","_addDefaultH1Conversion","enterCommand","isHeading","getLocalizedOptions","localizedTitles","HeadingUI","defaultTitle","dropdownTooltip","titles","itemDefinitions","headingCommand","paragraphCommand","para","whichModel","Heading","FontCommand","ColorTileView","backgroundColor","ColorGridView","colorDefinitions","viewStyleAttribute","columns","gridTemplateColumns","colorTile","color","selectedColor","hasBorder","DocumentColorCollection","ColorTableView","colors","removeButtonLabel","documentColorsLabel","documentColorsCount","documentColors","_documentColorsLabel","_removeColorButton","maxCount","_addColorToDocumentColors","documentColorsGrid","staticColorsGrid","_createStaticColorsGrid","_createDocumentColorsGrid","removeButtonIcon","colorGrid","colorObj","predefinedColor","FONT_SIZE","FONT_FAMILY","FONT_COLOR","FONT_BACKGROUND_COLOR","buildDefinition","modelAttributeKey","renderUpcastAttribute","styleAttr","normalizeColorCode","renderDowncastElement","addColorTableToDropdown","colorTableView","FontBackgroundColorCommand","FontBackgroundColorEditing","getLocalizedColorOptions","localizedColorNames","Black","Grey","White","Red","Orange","Yellow","Green","Aquamarine","Turquoise","Blue","Purple","colorOption","normalizeColorOptions","normalizeSingleColorDefinition","ColorUI","componentName","dropdownLabel","colorsConfig","localizedColors","appendGrids","updateDocumentColors","updateSelectedColors","FontBackgroundColorUI","fontBackgroundColorIcon","FontBackgroundColor","FontColorCommand","FontColorEditing","FontColorUI","fontColorIcon","FontColor","FontFamilyCommand","normalizeOptions","configuredOptions","getOptionDefinition","generateFontPreset","fontDefinition","fontNames","firstFontName","cssFontNames","normalizeFontNameForCSS","fontName","FontFamilyEditing","supportAllValues","_prepareAnyValueConverters","attributeValue","FontFamilyUI","_getLocalizedOptions","_prepareListOptions","fontFamilyIcon","commandParam","FontFamily","FontSizeCommand","namedPresets","isFullItemDefinition","attachPriority","preset","findPreset","isNumericalDefinition","generatePixelPreset","parseFloat","numberValue","isNaN","FontSizeEditing","presets","FontSizeUI","fontSizeIcon","Default","Tiny","Small","Big","Huge","FontSize","modelToViewUrlAttributeConverter","registry","figure","mediaContentElement","mediaViewElement","getMediaViewElement","HighlightStack","oldTop","_insertDescriptor","newTop","compareDescriptors","oldDescriptor","newDescriptor","_removeDescriptor","shouldABeBeforeB","classesToString","WIDGET_CLASS_NAME","WIDGET_SELECTED_CLASS_NAME","isWidget","toWidget","setLabel","hasSelectionHandle","addSelectionHandle","setHighlightHandling","normalizeToArray","labelOrCreator","getLabel","labelCreator","toWidgetEditable","findOptimalInsertionPosition","selectedElement","positionAfter","centeredBalloonPositionForLongWidgets","widgetRect","viewportWidgetInsersectionRect","balloonTotalHeight","widgetElement","selectionHandle","dragHandleIcon","toMediaWidget","createMediaFigureElement","getSelectedMediaModelWidget","insertMedia","mediaElement","MediaEmbedCommand","selectedMedia","mediaPlaceholderIconViewBox","MediaRegistry","providers","extraProviders","removedProviders","removeProviders","providerDefinitions","provider","_getMedia","getViewElement","Media","previewRenderer","html","subPattern","_getUrlMatches","rawUrl","_getValidUrl","_match","_previewRenderer","renderForEditingView","renderMediaPreview","mediaHtml","_getPreviewHtml","_getPlaceholderHtml","mediaPlaceholderIcon","outerHTML","MediaEmbedEditing","viewMedia","hasMedia","URL_REGEXP","AutoMediaEmbed","_timeoutId","_positionToInsert","leftLivePosition","rightLivePosition","_embedMediaBetweenPositions","leftPosition","rightPosition","mediaRegistry","urlRange","mediaEmbedCommand","MediaFormView","validators","_validators","resetFormStatus","validator","_urlInputViewInfoDefault","inputField","_urlInputViewInfoTip","MediaEmbedUI","mediaForm","getFormValidators","_setUpDropdown","_setUpForm","closeUI","mediaIcon","isValid","MouseObserver","isTypeAroundWidget","getClosestTypeAroundDomButton","closest","getTypeAroundButtonPosition","getClosestWidgetViewElement","widgetDomElement","getWidgetTypeAroundPositions","widgetViewElement","isFirstChild","hasPreviousWidgetSibling","isLastChild","hasNextWidgetSibling","widget","POSSIBLE_INSERTION_POSITIONS","RETURN_ARROW_ICON_ELEMENT","returnIcon","WidgetTypeAround","_widgetsWithTypeAroundUI","_enableTypeAroundUIInjection","_enableDetectionOfTypeAroundWidgets","_enableInsertingParagraphsOnButtonClick","widgetModelElement","buttonTitles","before","after","injectUIIntoWidget","positionToWidgetCssClass","buttonPosition","_insertParagraph","typeAroundWrapper","wrapperDomElement","injectButtons","buttonTemplate","importNode","Widget","_previouslySelected","_clearPreviouslySelectedWidgets","lastMarked","isChild","_onMousedown","_onKeydown","_handleDelete","isInsideNestedEditable","detail","_setSelectionOverElement","isLtrContent","wasHandled","isArrowKeyCode","_handleArrowKeys","_handleEnterKey","objectElement","_getObjectElementNextToSelection","previousNode","nodeToRemove","objectElement2","isBackwards","shouldInsertParagraph","paragraphLimit","probe","MediaEmbed","ListCommand","_getValue","_checkEnabled","checkCanBecomeListItem","turnOff","currentIndent","indent","newIndent","listIndent","lowestIndent","_fixType","setAttributes","listType","listItem","startingItem","IndentCommand","indentDirection","_indentBy","itemsToChange","lastItem","createViewListItemElement","getListItemFillerOffset","generateLiInUl","viewList","injectViewList","injectedItem","injectedList","refItem","getSiblingListItem","sameIndent","smallerIndent","prevItem","breakContainer","positionAfterUiElements","prevView","walkerBoundaries","breakPosition","mergeViewLists","nextViewList","lastSubChild","modelChild","firstList","secondList","mergeContainers","itemIndent","createUIComponent","hasOnlyLists","modelViewInsertion","modelViewRemove","viewListPrev","hoistNestedLists","modelViewChangeType","listName","modelViewMergeAfterChangeType","modelViewChangeIndent","modelViewSplitOnInsert","removeStart","removeEnd","previousList","insertedRange","mergePos","modelViewMergeAfter","viewItemPrev","viewItemNext","viewModelConverter","getIndent","viewToModelListItemChildrenConverter","cleanList","isWrongElement","isList","cleanListItem","foundList","firstNode","modelToViewPosition","topmostViewList","viewToModelPosition","modelNode","modelLength","modelChangePostFixer","itemToListHead","applied","_addListToFix","innerItem","posAfter","listHead","_fixListIndents","_fixListTypes","maxIndent","fixBy","typesStack","modelIndentPasteFixer","indentChange","listItemModel","convertedChild","wasSplit","findNextListItem","nextIndent","modelRemoveStartPosition","viewRemoveStartPosition","viewRemovedItem","prevModelItem","foo","prevIndent","prevViewList","ListEditing","registerViewToModelLength","getViewListItemLength","previousIsAListItem","getCommandExecuter","outdent","registerChildCommand","ListUI","numberedListIcon","bulletedListIcon","List","ImageLoadObserver","_fireEvents","toImageWidget","imgElement","getViewImgFromWidget","altText","isImageWidget","getSelectedImageWidget","isImage","insertImage","imageElement","insertAtSelection","isImageAllowed","isImageAllowedInParent","checkSelectionOnObject","isInOtherImage","figureView","getInsertImageParent","viewFigureToModel","viewImage","conversionResult","modelImage","srcsetAttributeConverter","img","srcset","modelToViewAttributeConverter","ImageInsertCommand","src","ImageEditing","createImageViewElement","emptyElement","ImageTextAlternativeCommand","ImageTextAlternativeEditing","TextAlternativeFormView","_createLabeledInputView","repositionContextualBalloon","balloon","getBalloonPositionData","ImageTextAlternativeUI","_createForm","_form","textAlternativeIcon","_showForm","_hideForm","_isVisible","_isInBalloon","focusEditable","ImageTextAlternative","Image","captionElementCreator","createEditableElement","getCaptionFromImage","imageModelElement","matchImageCaption","ImageCaptionEditing","_insertMissingModelCaptionElement","createCaptionForData","captionModelToView","createCaptionForEditing","_fixCaptionVisibility","_updateCaptionVisibility","viewCaption","lastCaption","_lastSelectedCaption","modelCaption","getParentCaption","hideCaptionIfEmpty","showCaption","viewModified","nodeFinder","imagesWithoutCaption","nestedItem","image","appendElement","captionElement","insertViewCaptionAndBind","caption","ImageCaption","ResizeState","_options","_referenceCoordinates","domResizeHandle","domHandleHost","domResizeHost","clientRect","activeHandlePosition","getHandlePosition","getAbsoluteBoundaryPoint","getOppositePosition","originalWidth","originalHeight","aspectRatio","widthStyle","originalWidthPercents","calculateHostPercentageWidth","newSize","proposedWidth","proposedHeight","proposedWidthPercents","widthPercents","proposedHandleHostWidth","handleHostWidth","proposedHandleHostHeight","handleHostHeight","resizeHostRect","domResizeHostParent","parentWidth","resizerPosition","positionParts","getResizerHandleClass","domHandle","resizerPositions","replacements","Resizer","_domResizerWrapper","_viewResizerWrapper","_cleanup","viewResizerWrapper","_appendHandles","_appendSizeUI","propName","_sizeUI","bindToState","_initialViewWidth","begin","_getHandleHost","_getResizeHost","_proposeNewSize","newWidth","domHandleHostRect","round","domResizeHostRect","redraw","onCommit","handleHostRect","domWrapper","existsInDom","widgetWrapper","handleHost","offsets","offsetLeft","offsetTop","isSameNode","dismiss","currentCoordinates","extractCoordinates","isCentered","enlargement","proposedSize","abs","dominant","targetSize","getResizeHost","getHandleHost","getResizerClass","sizeUI","SizeView","visible","resizerState","pageX","pageY","throttle","WidgetResize","_resizers","_observer","_mouseDownListener","_mouseMoveListener","_mouseUpListener","redrawFocusedResizer","_visibleResizer","redrawFocusedResizerThrottled","_getResizerByViewElement","resizer","widgetToolbarRepository","containsHandle","isResizeHandle","resizeHandle","_activeResizer","_getResizerByHandle","updateSize","commit","ImageResizeCommand","ImageResize","_registerSchema","_registerConverters","domWidgetElement","imageStyle","ImageStyleCommand","defaultStyle","modelToViewStyleAttribute","newStyle","getStyleByName","oldStyle","viewToModelStyleAttribute","filteredStyles","viewFigureElement","modelImageElement","defaultStyles","full","fullWidthIcon","rightIcon","alignLeft","leftIcon","alignCenter","centerIcon","alignRight","defaultIcons","center","normalizeImageStyles","configuredStyles","_normalizeStyle","extendedStyle","ImageStyleEditing","modelToViewConverter","ImageStyleUI","translatedStyles","translateStyles","localizedDefaultStylesTitles","ImageStyle","WidgetToolbarRepository","balloonToolbar","isWidgetSelected","_toolbarDefinitions","_updateToolbarsVisibility","toolbarConfig","toolbarId","getRelatedElement","maxRelatedElementDepth","deepestRelatedElement","deepestToolbarDefinition","relatedElement","relatedElementDepth","_isToolbarVisible","_hideToolbar","_isToolbarInBalloon","_showToolbar","toolbarDefinition","ImageToolbar","FileDialogButtonView","_fileInputView","FileInputView","open","accept","multiple","createImageTypeRegExp","regExpSafeNames","fetchLocalImage","imageSrc","fetch","resource","blob","mimeType","getImageMimeType","filename","file","File","isLocalImage","ImageUploadUI","imageTypes","imageTypesRegExp","acceptedType","allowMultipleFiles","imageIcon","imagesToUpload","ContextPlugin","PendingActions","_actions","hasAny","FileReader","reader","_reader","onprogress","onload","onerror","onabort","readAsDataURL","abort","FileRepository","loaders","_updatePendingAction","_loadersMap","_pendingAction","uploaded","fileOrPromise","createUploadAdapter","loader","FileLoader","aggregatedUploaded","aggregatedTotal","uploadTotal","fileOrPromiseOrLoader","getLoader","_destroy","pendingActions","getMessage","uploadedPercent","filePromise","uploadAdapterCreator","_filePromiseWrapper","_createFilePromiseWrapper","_adapter","status","read","upload","uploadResponse","isFulfilled","rejecter","ImageUploadProgress","encodeURIComponent","uploadingPlaceholder","uploadStatusChange","uploadId","fileRepository","viewFigure","_startAppearEffect","_showPlaceholder","_hidePlaceholder","_showProgressBar","_displayLocalImage","_showCompleteIcon","_hideProgressBar","_stopAppearEffect","viewImg","_getUIElement","_createPlaceholder","_removeUIElement","progressBar","_createProgressBar","completeIcon","imageFigure","uniqueProperty","Notification","alert","_showNotification","UpcastWriter","removeChildren","oldElement","insertChild","ImageUploadCommand","filesToUpload","uploadImage","createLoader","ImageUploadEditing","isHtmlIncluded","images","fetchableImages","fetchableImage","isInGraveyard","getImagesFromChangeItem","_readAndUpload","notification","domFigure","originalDisplay","_ckHack","uploadStatus","_parseAndSetSrcsetAttributeOnImage","clean","showWarning","destroyLoader","srcsetAttribute","ImageUpload","CKFinderUI","browseFilesIcon","CKFinderCommand","imageCommand","openerMethod","chooseFiles","originalOnInit","onInit","finder","toArray","links","linkFile","getUrl","imagesUrls","request","insertImages","resizedUrl","CKFinder","urls","CKFinderEditing","TOKEN_COOKIE_NAME","TOKEN_LENGTH","tokenCharset","getCsrfToken","token","getCookie","generateToken","setCookie","cookie","pair","decodeURIComponent","randValues","crypto","getRandomValues","toUpperCase","CKFinderUploadAdapter","UploadAdapter","_initRequest","_initListeners","_sendRequest","xhr","XMLHttpRequest","responseType","genericError","response","lengthComputable","FormData","send","components","HeaderBox","Pagination","editorData","ckfinder","resourceType","eventTypeData","unitsData","usersData","rolesData","usersTable","allMembersData","eventIds","changeMemberData","unitLv1","UntLevelb","UntIdUp","uintLv1","uintLv2","userControlUnit","uc","onReady","ck","$refs","prepend","beforeUpload","$api","GetEventsPage","params","res","dataCount","PageSize","dispatch","getEventType","DropCtrlTypes","getAllUser","GetUsers","u","unitCode","getUsers","userArr","params1","$nextTick","clearFiles","userId","eventId","userType","userName","usertitle","EndDate","UserName","CheckUserHasEvent","success","$alertT","$swal","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","$alertM","rows","SearchEvent","sed","keytxt","headers","Authorization","boolen","import","extension","extension2","msg","info","copyEventId","Id","GetEventById","EventName","Summary","EventTypeId","AttachDoc","LinkUrl","UnitCode","JoinUsers","DeleteEvent","dateArr","getButtonList","routers","routePath","cb","createFilter","str","queryString","DOCUMENTATION_URL","JSON","Error","matchedErrorName"],"mappings":"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","file":"js/chunk-83e9da20.1f04cd7a.js","sourcesContent":["module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2 4.5V3h16v1.5zm4.5 3V12h7V7.5h-7zM5.758 6h8.484c.419 0 .758.407.758.91v5.681c0 .502-.34.909-.758.909H5.758c-.419 0-.758-.407-.758-.91V6.91c0-.503.34-.91.758-.91zM2 16.5V15h16v1.5z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2 4.5V3h16v1.5zm0 3V6h5.674v1.5zm0 3V9h5.674v1.5zm0 3V12h5.674v1.5zm8.5-6V12h6V7.5h-6zM9.682 6h7.636c.377 0 .682.407.682.91v5.68c0 .503-.305.91-.682.91H9.682c-.377 0-.682-.407-.682-.91V6.91c0-.503.305-.91.682-.91zM2 16.5V15h16v1.5z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M9.586 14.633l.021.004c-.036.335.095.655.393.962.082.083.173.15.274.201h1.474a.6.6 0 1 1 0 1.2H5.304a.6.6 0 0 1 0-1.2h1.15c.474-.07.809-.182 1.005-.334.157-.122.291-.32.404-.597l2.416-9.55a1.053 1.053 0 0 0-.281-.823 1.12 1.12 0 0 0-.442-.296H8.15a.6.6 0 0 1 0-1.2h6.443a.6.6 0 1 1 0 1.2h-1.195c-.376.056-.65.155-.823.296-.215.175-.423.439-.623.79l-2.366 9.347z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M6.91 10.54c.26-.23.64-.21.88.03l3.36 3.14 2.23-2.06a.64.64 0 0 1 .87 0l2.52 2.97V4.5H3.2v10.12l3.71-4.08zm10.27-7.51c.6 0 1.09.47 1.09 1.05v11.84c0 .59-.49 1.06-1.09 1.06H2.79c-.6 0-1.09-.47-1.09-1.06V4.08c0-.58.49-1.05 1.1-1.05h14.38zm-5.22 5.56a1.96 1.96 0 1 1 3.4-1.96 1.96 1.96 0 0 1-3.4 1.96z\\\"/></svg>\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"pagination\"}},[_c('el-pagination',{attrs:{\"background\":\"\",\"layout\":\"prev, pager, next\",\"total\":_vm.total,\"pager-count\":5,\"current-page\":_vm.setCurrentPage,\"page-size\":_vm.pageSize},on:{\"current-change\":_vm.handleCurrentChange}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template >\r\n  <div id=\"pagination\">\r\n    <el-pagination\r\n      background\r\n      layout=\"prev, pager, next\"\r\n      :total=\"total\"\r\n      :pager-count=\"5\"\r\n      :current-page=\"setCurrentPage\"\r\n      :page-size=\"pageSize\"\r\n      @current-change=\"handleCurrentChange\"\r\n    ></el-pagination>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from \"moment\";\r\nimport store from \"../store/index\";\r\nexport default {\r\n  name: \"Pagination\",\r\n  data() {\r\n    return {\r\n      //   currentPage: 1\r\n    };\r\n  },\r\n  props: {\r\n    total: {\r\n      type: Number,\r\n      default: 1,\r\n      required: true\r\n    },\r\n    keyWord: {\r\n      type: String,\r\n      default: \"\",\r\n      required: false\r\n    },\r\n    start: {\r\n      type: String,\r\n      default: \"\",\r\n      required: false\r\n    },\r\n    end: {\r\n      type: String,\r\n      default: \"\",\r\n      required: false\r\n    },\r\n    currentPage: {\r\n      type: Number,\r\n      default: 1,\r\n      required: false\r\n    },\r\n    pageSize: {\r\n      type: Number,\r\n      default: 10,\r\n      required: false\r\n    }\r\n  },\r\n  computed: {\r\n    setCurrentPage: {\r\n      get() {\r\n        return this.$props.currentPage;\r\n      },\r\n      set() {}\r\n    }\r\n  },\r\n  methods: {\r\n    handleCurrentChange(page) {\r\n      store.dispatch(\"loadingHandler\", true);\r\n      this.setCurrentPage = page;\r\n      if (!this.$props.end) {\r\n        // console.log(\"NOEND\");\r\n        let key = this.$props.keyWord;\r\n        this.$emit(\"changePage\", page, key);\r\n        window.scrollTo(0, 0);\r\n      } else {\r\n        console.log(\"END\");\r\n        let key = this.$props.keyWord;\r\n        console.log(key);\r\n        let startDate = this.$props.start;\r\n        let endDate = this.$props.end;\r\n        this.$emit(\"changePage\", page, key, startDate, endDate);\r\n        window.scrollTo(0, 0);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang='scss'>\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Pagination.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Pagination.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Pagination.vue?vue&type=template&id=585c0d88&\"\nimport script from \"./Pagination.vue?vue&type=script&lang=js&\"\nexport * from \"./Pagination.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.077 15l.991-1.416a.75.75 0 1 1 1.229.86l-1.148 1.64a.748.748 0 0 1-.217.206 5.251 5.251 0 0 1-8.503-5.955.741.741 0 0 1 .12-.274l1.147-1.639a.75.75 0 1 1 1.228.86L4.933 10.7l.006.003a3.75 3.75 0 0 0 6.132 4.294l.006.004zm5.494-5.335a.748.748 0 0 1-.12.274l-1.147 1.639a.75.75 0 1 1-1.228-.86l.86-1.23a3.75 3.75 0 0 0-6.144-4.301l-.86 1.229a.75.75 0 0 1-1.229-.86l1.148-1.64a.748.748 0 0 1 .217-.206 5.251 5.251 0 0 1 8.503 5.955zm-4.563-2.532a.75.75 0 0 1 .184 1.045l-3.155 4.505a.75.75 0 1 1-1.229-.86l3.155-4.506a.75.75 0 0 1 1.045-.184zm4.919 10.562l-1.414 1.414a.75.75 0 1 1-1.06-1.06l1.414-1.415-1.415-1.414a.75.75 0 0 1 1.061-1.06l1.414 1.414 1.414-1.415a.75.75 0 0 1 1.061 1.061l-1.414 1.414 1.414 1.415a.75.75 0 0 1-1.06 1.06l-1.415-1.414z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M6.972 16.615a.997.997 0 0 1-.744-.292l-4.596-4.596a1 1 0 1 1 1.414-1.414l3.926 3.926 9.937-9.937a1 1 0 0 1 1.414 1.415L7.717 16.323a.997.997 0 0 1-.745.292z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" clip-rule=\\\"evenodd\\\" stroke-linejoin=\\\"round\\\" stroke-miterlimit=\\\"1.414\\\"><path d=\\\"M18 4.5V3H2v1.5h16zm0 3V6h-5.674v1.5H18zm0 3V9h-5.674v1.5H18zm0 3V12h-5.674v1.5H18zm-8.5-6V12h-6V7.5h6zm.818-1.5H2.682C2.305 6 2 6.407 2 6.91v5.68c0 .503.305.91.682.91h7.636c.377 0 .682-.407.682-.91V6.91c0-.503-.305-.91-.682-.91zM18 16.5V15H2v1.5h16z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 64 42\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M47.426 17V3.713L63.102 0v19.389h-.001l.001.272c0 1.595-2.032 3.43-4.538 4.098-2.506.668-4.538-.083-4.538-1.678 0-1.594 2.032-3.43 4.538-4.098.914-.244 2.032-.565 2.888-.603V4.516L49.076 7.447v9.556A1.014 1.014 0 0 0 49 17h-1.574zM29.5 17h-8.343a7.073 7.073 0 1 0-4.657 4.06v3.781H3.3a2.803 2.803 0 0 1-2.8-2.804V8.63a2.803 2.803 0 0 1 2.8-2.805h4.082L8.58 2.768A1.994 1.994 0 0 1 10.435 1.5h8.985c.773 0 1.477.448 1.805 1.149l1.488 3.177H26.7c1.546 0 2.8 1.256 2.8 2.805V17zm-11.637 0H17.5a1 1 0 0 0-1 1v.05A4.244 4.244 0 1 1 17.863 17zm29.684 2c.97 0 .953-.048.953.889v20.743c0 .953.016.905-.953.905H19.453c-.97 0-.953.048-.953-.905V19.89c0-.937-.016-.889.97-.889h28.077zm-4.701 19.338V22.183H24.154v16.155h18.692zM20.6 21.375v1.616h1.616v-1.616H20.6zm0 3.231v1.616h1.616v-1.616H20.6zm0 3.231v1.616h1.616v-1.616H20.6zm0 3.231v1.616h1.616v-1.616H20.6zm0 3.231v1.616h1.616v-1.616H20.6zm0 3.231v1.616h1.616V37.53H20.6zm24.233-16.155v1.616h1.615v-1.616h-1.615zm0 3.231v1.616h1.615v-1.616h-1.615zm0 3.231v1.616h1.615v-1.616h-1.615zm0 3.231v1.616h1.615v-1.616h-1.615zm0 3.231v1.616h1.615v-1.616h-1.615zm0 3.231v1.616h1.615V37.53h-1.615zM29.485 25.283a.4.4 0 0 1 .593-.35l9.05 4.977a.4.4 0 0 1 0 .701l-9.05 4.978a.4.4 0 0 1-.593-.35v-9.956z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"9.5\\\" cy=\\\"4.5\\\" r=\\\"1.5\\\"/><circle cx=\\\"9.5\\\" cy=\\\"10.5\\\" r=\\\"1.5\\\"/><circle cx=\\\"9.5\\\" cy=\\\"16.5\\\" r=\\\"1.5\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2 3.75c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0 8c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0 4c0 .414.336.75.75.75h9.929a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0-8c0 .414.336.75.75.75h9.929a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.627 16.5zm5.873-.196zm0-7.001V8h-13v8.5h4.341c.191.54.457 1.044.785 1.5H2a1.5 1.5 0 0 1-1.5-1.5v-13A1.5 1.5 0 0 1 2 2h4.5a1.5 1.5 0 0 1 1.06.44L9.122 4H16a1.5 1.5 0 0 1 1.5 1.5v1A1.5 1.5 0 0 1 19 8v2.531a6.027 6.027 0 0 0-1.5-1.228zM16 6.5v-1H8.5l-2-2H2v13h1V8a1.5 1.5 0 0 1 1.5-1.5H16z\\\"/><path d=\\\"M14.5 19.5a5 5 0 1 1 0-10 5 5 0 0 1 0 10zM15 14v-2h-1v2h-2v1h2v2h1v-2h2v-1h-2z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7.3 17.37l-.061.088a1.518 1.518 0 0 1-.934.535l-4.178.663-.806-4.153a1.495 1.495 0 0 1 .187-1.058l.056-.086L8.77 2.639c.958-1.351 2.803-1.076 4.296-.03 1.497 1.047 2.387 2.693 1.433 4.055L7.3 17.37zM9.14 4.728l-5.545 8.346 3.277 2.294 5.544-8.346L9.14 4.728zM6.07 16.512l-3.276-2.295.53 2.73 2.746-.435zM9.994 3.506L13.271 5.8c.316-.452-.16-1.333-1.065-1.966-.905-.634-1.895-.78-2.212-.328zM8 18.5L9.375 17H19v1.5H8z\\\"/></svg>\"","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2 3.75c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0 8c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm2.286 4c0 .414.336.75.75.75h9.928a.75.75 0 1 0 0-1.5H5.036a.75.75 0 0 0-.75.75zm0-8c0 .414.336.75.75.75h9.928a.75.75 0 1 0 0-1.5H5.036a.75.75 0 0 0-.75.75z\\\"/></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\"><path d=\\\"M18.68 3.03c.6 0 .59-.03.59.55v12.84c0 .59.01.56-.59.56H1.29c-.6 0-.59.03-.59-.56V3.58c0-.58-.01-.55.6-.55h17.38zM15.77 15V5H4.2v10h11.57zM2 4v1h1V4H2zm0 2v1h1V6H2zm0 2v1h1V8H2zm0 2v1h1v-1H2zm0 2v1h1v-1H2zm0 2v1h1v-1H2zM17 4v1h1V4h-1zm0 2v1h1V6h-1zm0 2v1h1V8h-1zm0 2v1h1v-1h-1zm0 2v1h1v-1h-1zm0 2v1h1v-1h-1zM7.5 7.177a.4.4 0 01.593-.351l5.133 2.824a.4.4 0 010 .7l-5.133 2.824a.4.4 0 01-.593-.35V7.176v.001z\\\"/></svg>\\n\"","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M14.958 9.367l-2.189 1.837a.75.75 0 0 0 .965 1.149l3.788-3.18a.747.747 0 0 0 .21-.284.75.75 0 0 0-.17-.945L13.77 4.762a.75.75 0 1 0-.964 1.15l2.331 1.955H6.22A.75.75 0 0 0 6 7.9a4 4 0 1 0 1.477 7.718l-.344-1.489A2.5 2.5 0 1 1 6.039 9.4l-.008-.032h8.927z\\\"/></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 700 250\\\"><rect rx=\\\"4\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 10 10\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M.941 4.523a.75.75 0 1 1 1.06-1.06l3.006 3.005 3.005-3.005a.75.75 0 1 1 1.06 1.06l-3.549 3.55a.75.75 0 0 1-1.168-.136L.941 4.523z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M5.085 6.22L2.943 4.078a.75.75 0 1 1 1.06-1.06l2.592 2.59A11.094 11.094 0 0 1 10 5.068c4.738 0 8.578 3.101 8.578 5.083 0 1.197-1.401 2.803-3.555 3.887l1.714 1.713a.75.75 0 0 1-.09 1.138.488.488 0 0 1-.15.084.75.75 0 0 1-.821-.16L6.17 7.304c-.258.11-.51.233-.757.365l6.239 6.24-.006.005.78.78c-.388.094-.78.166-1.174.215l-1.11-1.11h.011L4.55 8.197a7.2 7.2 0 0 0-.665.514l-.112.098 4.897 4.897-.005.006 1.276 1.276a10.164 10.164 0 0 1-1.477-.117l-.479-.479-.009.009-4.863-4.863-.022.031a2.563 2.563 0 0 0-.124.2c-.043.077-.08.158-.108.241a.534.534 0 0 0-.028.133.29.29 0 0 0 .008.072.927.927 0 0 0 .082.226c.067.133.145.26.234.379l3.242 3.365.025.01.59.623c-3.265-.918-5.59-3.155-5.59-4.668 0-1.194 1.448-2.838 3.663-3.93zm7.07.531a4.632 4.632 0 0 1 1.108 5.992l.345.344.046-.018a9.313 9.313 0 0 0 2-1.112c.256-.187.5-.392.727-.613.137-.134.27-.277.392-.431.072-.091.141-.185.203-.286.057-.093.107-.19.148-.292a.72.72 0 0 0 .036-.12.29.29 0 0 0 .008-.072.492.492 0 0 0-.028-.133.999.999 0 0 0-.036-.096 2.165 2.165 0 0 0-.071-.145 2.917 2.917 0 0 0-.125-.2 3.592 3.592 0 0 0-.263-.335 5.444 5.444 0 0 0-.53-.523 7.955 7.955 0 0 0-1.054-.768 9.766 9.766 0 0 0-1.879-.891c-.337-.118-.68-.219-1.027-.301zm-2.85.21l-.069.002a.508.508 0 0 0-.254.097.496.496 0 0 0-.104.679.498.498 0 0 0 .326.199l.045.005c.091.003.181.003.272.012a2.45 2.45 0 0 1 2.017 1.513c.024.061.043.125.069.185a.494.494 0 0 0 .45.287h.008a.496.496 0 0 0 .35-.158.482.482 0 0 0 .13-.335.638.638 0 0 0-.048-.219 3.379 3.379 0 0 0-.36-.723 3.438 3.438 0 0 0-2.791-1.543l-.028-.001h-.013z\\\"/></svg>\"","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","module.exports = \"<svg viewBox=\\\"0 0 16 16\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M4 0v1H1v3H0V.5A.5.5 0 0 1 .5 0H4zm8 0h3.5a.5.5 0 0 1 .5.5V4h-1V1h-3V0zM4 16H.5a.5.5 0 0 1-.5-.5V12h1v3h3v1zm8 0v-1h3v-3h1v3.5a.5.5 0 0 1-.5.5H12z\\\"/><path fill-opacity=\\\".256\\\" d=\\\"M1 1h14v14H1z\\\"/><g class=\\\"ck-icon__selected-indicator\\\"><path d=\\\"M7 0h2v1H7V0zM0 7h1v2H0V7zm15 0h1v2h-1V7zm-8 8h2v1H7v-1z\\\"/><path fill-opacity=\\\".254\\\" d=\\\"M1 1h14v14H1z\\\"/></g></svg>\"","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2 3.75c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0 8c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0 4c0 .414.336.75.75.75h9.929a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75zm0-8c0 .414.336.75.75.75h14.5a.75.75 0 1 0 0-1.5H2.75a.75.75 0 0 0-.75.75z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2 4.5V3h16v1.5zm2.5 3V12h11V7.5h-11zM4.061 6H15.94c.586 0 1.061.407 1.061.91v5.68c0 .503-.475.91-1.061.91H4.06c-.585 0-1.06-.407-1.06-.91V6.91C3 6.406 3.475 6 4.061 6zM2 16.5V15h16v1.5z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.463 5.187a.888.888 0 1 1 1.254 1.255L9.16 10l3.557 3.557a.888.888 0 1 1-1.254 1.255L7.26 10.61a.888.888 0 0 1 .16-1.382l4.043-4.042z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M12.4 10.3L10 4.5l-2.4 5.8h4.8zm.5 1.2H7.1L5.7 15H4.2l5-12h1.6l5 12h-1.5L13 11.5zm3.1 7H4a1 1 0 0 1 0-2h12a1 1 0 0 1 0 2z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.077 15l.991-1.416a.75.75 0 1 1 1.229.86l-1.148 1.64a.748.748 0 0 1-.217.206 5.251 5.251 0 0 1-8.503-5.955.741.741 0 0 1 .12-.274l1.147-1.639a.75.75 0 1 1 1.228.86L4.933 10.7l.006.003a3.75 3.75 0 0 0 6.132 4.294l.006.004zm5.494-5.335a.748.748 0 0 1-.12.274l-1.147 1.639a.75.75 0 1 1-1.228-.86l.86-1.23a3.75 3.75 0 0 0-6.144-4.301l-.86 1.229a.75.75 0 0 1-1.229-.86l1.148-1.64a.748.748 0 0 1 .217-.206 5.251 5.251 0 0 1 8.503 5.955zm-4.563-2.532a.75.75 0 0 1 .184 1.045l-3.155 4.505a.75.75 0 1 1-1.229-.86l3.155-4.506a.75.75 0 0 1 1.045-.184z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M9.816 11.5L7.038 4.785 4.261 11.5h5.555zm.62 1.5H3.641l-1.666 4.028H.312l5.789-14h1.875l5.789 14h-1.663L10.436 13zm7.55 2.279l.779-.779.707.707-2.265 2.265-2.193-2.265.707-.707.765.765V4.825c0-.042 0-.083.002-.123l-.77.77-.707-.707L17.207 2.5l2.265 2.265-.707.707-.782-.782c.002.043.003.089.003.135v10.454z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7 5.75c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zm-6 0C1 4.784 1.777 4 2.75 4c.966 0 1.75.777 1.75 1.75 0 .966-.777 1.75-1.75 1.75C1.784 7.5 1 6.723 1 5.75zm6 9c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zm-6 0c0-.966.777-1.75 1.75-1.75.966 0 1.75.777 1.75 1.75 0 .966-.777 1.75-1.75 1.75-.966 0-1.75-.777-1.75-1.75z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M4 2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2zm8.38 9.262H7.62L10 5.506l2.38 5.756zm.532 1.285L14.34 16h1.426L10.804 4H9.196L4.234 16H5.66l1.428-3.453h5.824z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10.187 17H5.773c-.637 0-1.092-.138-1.364-.415-.273-.277-.409-.718-.409-1.323V4.738c0-.617.14-1.062.419-1.332.279-.27.73-.406 1.354-.406h4.68c.69 0 1.288.041 1.793.124.506.083.96.242 1.36.478.341.197.644.447.906.75a3.262 3.262 0 0 1 .808 2.162c0 1.401-.722 2.426-2.167 3.075C15.05 10.175 16 11.315 16 13.01a3.756 3.756 0 0 1-2.296 3.504 6.1 6.1 0 0 1-1.517.377c-.571.073-1.238.11-2 .11zm-.217-6.217H7v4.087h3.069c1.977 0 2.965-.69 2.965-2.072 0-.707-.256-1.22-.768-1.537-.512-.319-1.277-.478-2.296-.478zM7 5.13v3.619h2.606c.729 0 1.292-.067 1.69-.2a1.6 1.6 0 0 0 .91-.765c.165-.267.247-.566.247-.897 0-.707-.26-1.176-.778-1.409-.519-.232-1.31-.348-2.375-.348H7z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M8.636 9.531l-2.758 3.94a.5.5 0 0 0 .122.696l3.224 2.284h1.314l2.636-3.736L8.636 9.53zm.288 8.451L5.14 15.396a2 2 0 0 1-.491-2.786l6.673-9.53a2 2 0 0 1 2.785-.49l3.742 2.62a2 2 0 0 1 .491 2.785l-7.269 10.053-2.147-.066z\\\"/><path d=\\\"M4 18h5.523v-1H4zm-2 0h1v-1H2z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path class=\\\"ck-icon__fill\\\" d=\\\"M16.935 5.328a2 2 0 0 1 0 2.829l-7.778 7.778a2 2 0 0 1-2.829 0L3.5 13.107a1.999 1.999 0 1 1 2.828-2.829l.707.707a1 1 0 0 0 1.414 0l5.658-5.657a2 2 0 0 1 2.828 0z\\\"/><path d=\\\"M14.814 6.035L8.448 12.4a1 1 0 0 1-1.414 0l-1.413-1.415A1 1 0 1 0 4.207 12.4l2.829 2.829a1 1 0 0 0 1.414 0l7.778-7.778a1 1 0 1 0-1.414-1.415z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.591 10.177l4.243 4.242a1 1 0 0 1-1.415 1.415l-4.242-4.243-4.243 4.243a1 1 0 0 1-1.414-1.415l4.243-4.242L4.52 5.934A1 1 0 0 1 5.934 4.52l4.243 4.243 4.242-4.243a1 1 0 1 1 1.415 1.414l-4.243 4.243z\\\"/></svg>\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"headerBox\"}},[_c('div',{staticClass:\"searchBox\"},[(_vm.showDatePicker)?_c('el-date-picker',{staticClass:\"datePicker\",attrs:{\"type\":\"daterange\",\"range-separator\":\"~\",\"start-placeholder\":\"開始時間\",\"end-placeholder\":\"結束時間\"},on:{\"change\":_vm.setSearchDate},model:{value:(_vm.searchDate),callback:function ($$v) {_vm.searchDate=$$v},expression:\"searchDate\"}}):_vm._e(),(_vm.hasBtn('btnSearch') && !_vm.isEvent)?_c('el-input',{staticClass:\"keyWordInput\",attrs:{\"placeholder\":\"請輸入關鍵字\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.setSearchHandler($event)}},model:{value:(_vm.keyWordInput),callback:function ($$v) {_vm.keyWordInput=$$v},expression:\"keyWordInput\"}}):_vm._e(),(_vm.hasBtn('btnSearch') && _vm.isEvent)?_c('el-input',{staticClass:\"keyWordInput\",attrs:{\"placeholder\":\"請輸入關鍵字\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.setSearchHandlerDate($event)}},model:{value:(_vm.keyWordInput),callback:function ($$v) {_vm.keyWordInput=$$v},expression:\"keyWordInput\"}}):_vm._e(),(_vm.hasBtn('btnSearch') && !_vm.isEvent)?_c('el-button',{staticClass:\"searchBtn\",attrs:{\"loading\":_vm.searchLoading,\"type\":\"primary\"},on:{\"click\":_vm.setSearchHandler}},[_vm._v(\"搜尋\")]):_vm._e(),(_vm.hasBtn('btnSearch') && _vm.isEvent)?_c('el-button',{staticClass:\"searchBtn\",attrs:{\"loading\":_vm.searchLoading,\"type\":\"primary\"},on:{\"click\":_vm.setSearchHandlerDate}},[_vm._v(\"搜尋\")]):_vm._e(),(_vm.hasBtn('btnAdd'))?_c('el-button',{staticClass:\"addBtn\",attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.setHandleAddOrEdit('add')}}},[_vm._v(\"新增\")]):_vm._e(),(_vm.hasBtn('btnEdit') && _vm.isEvent)?_c('el-button',{staticClass:\"changeBtn\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.setChangeHandler}},[_vm._v(\"批次替換\")]):_vm._e(),(_vm.hasBtn('btnImport'))?_c('el-button',{staticClass:\"importBtn\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.setImportHandler}},[_vm._v(\"匯入\")]):_vm._e(),(_vm.hasBtn('btnExport'))?_c('el-button',{staticClass:\"exportBtn\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.setExportHandler}},[_vm._v(\"匯出\")]):_vm._e()],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"headerBox\">\r\n    <div class=\"searchBox\">\r\n      <el-date-picker\r\n        class=\"datePicker\"\r\n        v-model=\"searchDate\"\r\n        type=\"daterange\"\r\n        range-separator=\"~\"\r\n        start-placeholder=\"開始時間\"\r\n        end-placeholder=\"結束時間\"\r\n        v-if=\"showDatePicker\"\r\n        @change=\"setSearchDate\"\r\n      ></el-date-picker>\r\n      <el-input\r\n        v-if=\"hasBtn('btnSearch') && !isEvent\"\r\n        class=\"keyWordInput\"\r\n        v-model=\"keyWordInput\"\r\n        placeholder=\"請輸入關鍵字\"\r\n        @keyup.enter.native=\"setSearchHandler \"\r\n      ></el-input>\r\n      <el-input\r\n        v-if=\"hasBtn('btnSearch') && isEvent\"\r\n        class=\"keyWordInput\"\r\n        v-model=\"keyWordInput\"\r\n        placeholder=\"請輸入關鍵字\"\r\n        @keyup.enter.native=\"setSearchHandlerDate \"\r\n      ></el-input>\r\n      <el-button\r\n        v-if=\"hasBtn('btnSearch') && !isEvent\"\r\n        class=\"searchBtn\"\r\n        :loading=\"searchLoading\"\r\n        type=\"primary\"\r\n        @click=\"setSearchHandler\"\r\n      >搜尋</el-button>\r\n      <el-button\r\n        v-if=\"hasBtn('btnSearch') && isEvent\"\r\n        class=\"searchBtn\"\r\n        :loading=\"searchLoading\"\r\n        type=\"primary\"\r\n        @click=\"setSearchHandlerDate\"\r\n      >搜尋</el-button>\r\n      <el-button\r\n        v-if=\"hasBtn('btnAdd')\"\r\n        @click=\"setHandleAddOrEdit('add')\"\r\n        class=\"addBtn\"\r\n        type=\"primary\"\r\n      >新增</el-button>\r\n      <el-button\r\n        v-if=\"hasBtn('btnEdit') && isEvent\"\r\n        @click=\"setChangeHandler\"\r\n        class=\"changeBtn\"\r\n        type=\"primary\"\r\n      >批次替換</el-button>\r\n      <el-button\r\n        v-if=\"hasBtn('btnImport')\"\r\n        @click=\"setImportHandler\"\r\n        class=\"importBtn\"\r\n        type=\"primary\"\r\n      >匯入</el-button>\r\n      <el-button\r\n        @click=\"setExportHandler\"\r\n        v-if=\"hasBtn('btnExport')\"\r\n        class=\"exportBtn\"\r\n        type=\"primary\"\r\n      >匯出</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from \"moment\";\r\nexport default {\r\n  name: \"HeaderBox\",\r\n  data() {\r\n    return {\r\n      keyWordInput: \"\",\r\n      changeDialogVisible: false,\r\n      importDialogVisible: false,\r\n      searchDate: \"\"\r\n    };\r\n  },\r\n  props: {\r\n    buttonList: {\r\n      type: Array,\r\n      required: true,\r\n      default: []\r\n    },\r\n    showDatePicker: {\r\n      type: Boolean,\r\n      default: false,\r\n      required: false\r\n    },\r\n    searchLoading: {\r\n      type: Boolean,\r\n      default: false,\r\n      required: false\r\n    },\r\n    isEvent: {\r\n      type: Boolean,\r\n      default: false,\r\n      required: false\r\n    }\r\n  },\r\n  methods: {\r\n    hasBtn(btnType) {\r\n      // return true;\r\n      const vm = this;\r\n      return this.buttonList.some(btn => btn.iconCls == btnType);\r\n    },\r\n    setHandleAddOrEdit(method) {\r\n      //   console.log(method);\r\n      this.$emit(\"handleAddOrEdit\", method);\r\n    },\r\n    setChangeHandler() {\r\n      this.$emit(\"changeHandler\");\r\n    },\r\n    setSearchDate() {\r\n      this.$emit(\"getSearchDate\", this.searchDate);\r\n    },\r\n    setSearchHandler() {\r\n      const vm = this;\r\n      let page = 1;\r\n      let key = vm.keyWordInput;\r\n      vm.$emit(\"searchHandler\", { page, key });\r\n    },\r\n    setExportHandler() {\r\n      const vm = this;\r\n      let key = vm.keyWordInput;\r\n      if (vm.searchDate !== null && vm.searchDate) {\r\n        let startDate = moment(vm.searchDate[0]).format(\"YYYY-MM-DD\");\r\n        let endDate = moment(vm.searchDate[1]).format(\"YYYY-MM-DD\");\r\n        vm.$emit(\"exportHandler\", { key, startDate, endDate });\r\n      } else {\r\n        let startDate = \"\";\r\n        let endDate = \"\";\r\n        vm.$emit(\"exportHandler\", { key, startDate, endDate });\r\n      }\r\n    },\r\n    setImportHandler() {\r\n      this.$emit(\"importHandler\", true);\r\n    },\r\n    setSearchHandlerDate() {\r\n      const vm = this;\r\n      let page = 1;\r\n      let key = vm.keyWordInput;\r\n      console.log(vm.searchDate);\r\n\r\n      if (vm.searchDate !== null && vm.searchDate) {\r\n        console.log(\"y\");\r\n        let startDate = moment(vm.searchDate[0]).format(\"YYYY-MM-DD\");\r\n        let endDate = moment(vm.searchDate[1]).format(\"YYYY-MM-DD\");\r\n        vm.$emit(\"searchHandlerDate\", { page, key, startDate, endDate });\r\n      } else {\r\n        console.log(\"n\");\r\n        let startDate = \"\";\r\n        let endDate = \"\";\r\n        vm.$emit(\"searchHandlerDate\", { page, key, startDate, endDate });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang='scss' >\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HeaderBox.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HeaderBox.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HeaderBox.vue?vue&type=template&id=0bc78d0b&\"\nimport script from \"./HeaderBox.vue?vue&type=script&lang=js&\"\nexport * from \"./HeaderBox.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = require(\"regenerator-runtime\");\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","module.exports = \"<svg viewBox=\\\"0 0 10 8\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline points=\\\"8.05541992 0.263427734 8.05541992 4.23461914 1.28417969 4.23461914\\\" transform=\\\"translate(1,0)\\\"></polyline><line x1=\\\"0\\\" y1=\\\"4.21581031\\\" x2=\\\"2\\\" y2=\\\"2.17810059\\\" transform=\\\"translate(1, 0)\\\"></line><line x1=\\\"0\\\" y1=\\\"6.21581031\\\" x2=\\\"2\\\" y2=\\\"4.17810059\\\" transform=\\\"translate(2, 5.196955) scale(1, -1) translate(-1, -5.196955)\\\"></line></svg>\\n\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.03 3h6.149a.75.75 0 1 1 0 1.5h-5.514L11.03 3zm1.27 3h4.879a.75.75 0 1 1 0 1.5h-4.244L12.3 6zm1.27 3h3.609a.75.75 0 1 1 0 1.5h-2.973L13.57 9zm-2.754 2.5L8.038 4.785 5.261 11.5h5.555zm.62 1.5H4.641l-1.666 4.028H1.312l5.789-14h1.875l5.789 14h-1.663L11.436 13z\\\"/></svg>\"","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7 5.75c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zM3.5 3v5H2V3.7H1v-1h2.5V3zM.343 17.857l2.59-3.257H2.92a.6.6 0 1 0-1.04 0H.302a2 2 0 1 1 3.995 0h-.001c-.048.405-.16.734-.333.988-.175.254-.59.692-1.244 1.312H4.3v1h-4l.043-.043zM7 14.75a.75.75 0 0 1 .75-.75h9.5a.75.75 0 1 1 0 1.5h-9.5a.75.75 0 0 1-.75-.75z\\\"/></svg>\"","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M18 3.75a.75.75 0 0 1-.75.75H2.75a.75.75 0 1 1 0-1.5h14.5a.75.75 0 0 1 .75.75zm0 8a.75.75 0 0 1-.75.75H2.75a.75.75 0 1 1 0-1.5h14.5a.75.75 0 0 1 .75.75zm0 4a.75.75 0 0 1-.75.75H7.321a.75.75 0 1 1 0-1.5h9.929a.75.75 0 0 1 .75.75zm0-8a.75.75 0 0 1-.75.75H7.321a.75.75 0 1 1 0-1.5h9.929a.75.75 0 0 1 .75.75z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/version\n */\n\n/* globals window, global */\n\nimport CKEditorError from './ckeditorerror';\n\nconst version = '19.1.1';\n\n/* istanbul ignore next */\nconst windowOrGlobal = typeof window === 'object' ? window : global;\n\n/* istanbul ignore next */\nif ( windowOrGlobal.CKEDITOR_VERSION ) {\n\t/**\n\t * This error is thrown when due to a mistake in how CKEditor 5 was installed or initialized, some\n\t * of its modules were duplicated (evaluated and executed twice). Module duplication leads to inevitable runtime\n\t * errors.\n\t *\n\t * There are many situations in which some modules can be loaded twice. In the worst case scenario,\n\t * you may need to check your project for each of these issues and fix them all.\n\t *\n\t * # Trying to add a plugin to an existing build\n\t *\n\t * If you import an existing CKEditor 5 build and a plugin like this:\n\t *\n\t *\t\timport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\t *\t\timport Highlight from '@ckeditor/ckeditor5-highlight/src/highlight';\n\t *\n\t * Then your project loads some CKEditor 5 packages twice. How does it happen?\n\t *\n\t * The build package contains a file which is already compiled with webpack. This means\n\t * that it contains all the necessary code from e.g. `@ckeditor/ckeditor5-engine` and `@ckeditor/ckeditor5-utils`.\n\t *\n\t * However, the `Highlight` plugin imports some of the modules from these packages, too. If you ask webpack to\n\t * build such a project, you will end up with the modules being included (and run) twice &mdash; first, because they are\n\t * included inside the build package, and second, because they are required by the `Highlight` plugin.\n\t *\n\t * Therefore, **you must never add plugins to an existing build** unless your plugin has no dependencies.\n\t *\n\t * Adding plugins to a build is done by taking the source version of this build (so, before it was built with webpack)\n\t * and adding plugins there. In this situation, webpack will know that it only needs to load each plugin once.\n\t *\n\t * Read more in the {@glink builds/guides/integration/installing-plugins \"Installing plugins\"} guide.\n\t *\n\t * # Confused an editor build with an editor implementation\n\t *\n\t * This scenario is very similar to the previous one, but has a different origin.\n\t *\n\t * Let's assume that you wanted to use CKEditor 5 from source, as explained in the\n\t * {@glink builds/guides/integration/advanced-setup#scenario-2-building-from-source \"Building from source\"} section\n\t * or in the {@glink framework/guides/quick-start \"Quick start\"} guide of CKEditor 5 Framework.\n\t *\n\t * The correct way to do so is to import an editor and plugins and run them together like this:\n\t *\n\t *\t\timport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\n\t *\t\timport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n\t *\t\timport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n\t *\t\timport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n\t *\t\timport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n\t *\n\t *\t\tClassicEditor\n\t *\t\t\t.create( document.querySelector( '#editor' ), {\n\t *\t\t\t\tplugins: [ Essentials, Paragraph, Bold, Italic ],\n\t *\t\t\t\ttoolbar: [ 'bold', 'italic' ]\n\t *\t\t\t} )\n\t *\t\t\t.then( editor => {\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n\t *\t\t\t} )\n\t *\t\t\t.catch( error => {\n\t *\t\t\t\tconsole.error( error.stack );\n\t *\t\t\t} );\n\t *\n\t * However, you might have mistakenly imported a build instead of the source `ClassicEditor`. In this case\n\t * your imports will look like this:\n\t *\n\t *\t\timport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\t *\t\timport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n\t *\t\timport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n\t *\t\timport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n\t *\t\timport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n\t *\n\t * This creates the same situation as in the previous section because you use a build together with source plugins.\n\t *\n\t * Remember: `@ckeditor/ckeditor5-build-*` packages contain editor builds and `@ckeditor/ckeditor5-editor-*` contain source editors.\n\t *\n\t * # Loading two or more builds on one page\n\t *\n\t * If you use CKEditor 5 builds, you might have loaded two (or more) `ckeditor.js` files on one web page.\n\t * Check your web page for duplicated `<script>` elements or make sure your page builder/bundler includes CKEditor only once.\n\t *\n\t * If you want to use two different types of editors at once, see the\n\t * {@glink builds/guides/integration/advanced-setup#scenario-3-using-two-different-editors \"Using two different editors\"}\n\t * section.\n\t *\n\t * # Using outdated packages\n\t *\n\t * Building CKEditor 5 from source requires using multiple npm packages. These packages have their dependencies\n\t * to other packages. If you use the latest version of, for example, `@ckeditor/ckeditor5-editor-classic` with\n\t * an outdated version of `@ckeditor/ckeditor5-image`, npm or yarn will need to install two different versions of\n\t * `@ckeditor/ckeditor5-core` because `@ckeditor/ckeditor5-editor-classic` and `@ckeditor/ckeditor5-image` may require\n\t * different versions of the core package.\n\t *\n\t * The solution to this issue is to update all packages to their latest version. We recommend\n\t * using tools like [`node-check-updates`](https://www.npmjs.com/package/npm-check-updates) which simplify this process.\n\t *\n\t * # Conflicting version of dependencies\n\t *\n\t * This is a special case of the previous scenario. If you use CKEditor 5 with some third-party plugins,\n\t * it may happen that even if you use the latest versions of the official packages and the latest version of\n\t * these third-party packages, there will be a conflict between some of their dependencies.\n\t *\n\t * Such a problem can be resolved by either downgrading CKEditor 5 packages (which we do not recommend) or\n\t * asking the author of the third-party package to upgrade its depdendencies (or forking their project and doing this yourself).\n\t *\n\t * **Note:** All official CKEditor 5 packages (excluding integrations and `ckeditor5-dev-*` packages) are released in the\n\t * same major version. This is &mdash; in the `x.y.z`, the `x` is the same for all packages. This is the simplest way to check\n\t * whether you use packages coming from the same CKEditor 5 version. You can read more about versioning in the\n\t * {@glink framework/guides/support/versioning-policy Versioning policy} guide.\n\t *\n\t * # Packages were duplicated in `node_modules`\n\t *\n\t * In some situations, especially when calling `npm install` multiple times, it may happen\n\t * that npm will not correctly \"deduplicate\" packages.\n\t *\n\t * Normally, npm deduplicates all packages so, for example, `@ckeditor/ckeditor5-core` is installed only once in `node_modules/`.\n\t * However, it is known to fail to do so from time to time.\n\t *\n\t * We recommend checking if any of the steps listed below help:\n\t *\n\t * * `rm -rf node_modules && npm install` to make sure you have a clean `node_modules/` directory. This step\n\t * is known to help in most cases.\n\t * * If you use `yarn.lock` or `package-lock.json`, remove it before `npm install`.\n\t * * Check whether all CKEditor 5 packages are up to date and reinstall them\n\t * if you changed anything (`rm -rf node_modules && npm install`).\n\t *\n\t * If all packages are correct and compatible with each other, the steps above are known to help. If not, you may\n\t * try to check with `npm ls` how many times packages like `@ckeditor/ckeditor5-core`, `@ckeditor/ckeditor5-engine` and\n\t *`@ckeditor/ckeditor5-utils` are installed. If more than once, verify which package causes that.\n\t *\n\t * @error ckeditor-duplicated-modules\n\t */\n\tthrow new CKEditorError(\n\t\t'ckeditor-duplicated-modules: Some CKEditor 5 modules are duplicated.',\n\t\tnull\n\t);\n} else {\n\twindowOrGlobal.CKEDITOR_VERSION = version;\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"calendarEvent\"}},[_c('HeaderBox',{attrs:{\"buttonList\":_vm.buttonList,\"showDatePicker\":true,\"isEvent\":true,\"searchLoading\":_vm.searchLoading},on:{\"searchHandlerDate\":_vm.searchHandlerDate,\"changeHandler\":_vm.changeHandler,\"exportHandler\":_vm.exportHandler,\"importHandler\":_vm.importHandler,\"handleAddOrEdit\":_vm.handleAddOrEdit,\"getSearchDate\":_vm.getSearchDate}}),(_vm.eventsData)?_c('div',{staticClass:\"mainTable\"},[_c('div',{staticClass:\"tableContainer mt-5\"},[_c('el-table',{staticStyle:{\"width\":\"100%\",\"overflow\":\"auto\"},attrs:{\"header-cell-class-name\":\"tableHeader\",\"empty-text\":\"暫無資料\",\"data\":_vm.eventsData,\"default-sort\":{ prop: 'date', order: 'descending' }},on:{\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"55\"}}),_c('el-table-column',{attrs:{\"width\":\"160\",\"prop\":\"EventName\",\"label\":\"活動 / 會議名稱\",\"sortable\":\"\"}}),_c('el-table-column',{attrs:{\"width\":\"130\",\"prop\":\"EventTypeName\",\"label\":\"行事曆類別\",\"sortable\":\"\"}}),_c('el-table-column',{attrs:{\"width\":\"200\",\"prop\":\"ShowStartDate\",\"label\":\"公告時間\",\"sortable\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',{staticClass:\"showDateBox\"},[_c('span',{staticClass:\"dateFz\"},[_vm._v(_vm._s(scope.row.ShowStartDate))]),_c('div',{staticClass:\"dateLine\"}),_c('span',{staticClass:\"dateFz\"},[_vm._v(_vm._s(scope.row.ShowEndDate))])])]}}],null,false,3855030085)}),_c('el-table-column',{attrs:{\"width\":\"200\",\"prop\":\"EventStartDate\",\"label\":\"活動 / 會議時間\",\"sortable\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',{staticClass:\"eventDateBox\"},[_c('span',{staticClass:\"dateFz\"},[_vm._v(_vm._s(scope.row.EventStartDate))]),_c('div',{staticClass:\"dateLine\"}),_c('span',{staticClass:\"dateFz\"},[_vm._v(_vm._s(scope.row.EventEndDate))])])]}}],null,false,1259344650)}),_c('el-table-column',{attrs:{\"prop\":\"EventAddr\",\"label\":\"地點\",\"sortable\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"open-delay\":500,\"placement\":\"top-start\"}},[_c('div',{attrs:{\"slot\":\"content\"},slot:\"content\"},[_c('span',[_vm._v(_vm._s(scope.row.EventAddr))])]),_c('p',{staticClass:\"textOverflow\"},[_c('span',[_vm._v(_vm._s(scope.row.EventAddr))])])])]}}],null,false,90742400)}),_c('el-table-column',{attrs:{\"width\":\"220\",\"prop\":\"emit\",\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasBtn('btnEdit'))?_c('el-button',{staticClass:\"outline\",attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.copyHandler(scope.row)}}},[_vm._v(\"複製\")]):_vm._e(),(_vm.hasBtn('btnEdit'))?_c('el-button',{staticClass:\"outline\",attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.handleAddOrEdit('edit', scope.row)}}},[_vm._v(\"編輯\")]):_vm._e(),(_vm.hasBtn('btnDelete'))?_c('el-button',{staticClass:\"outline\",attrs:{\"type\":\"danger\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.deleteHandler(scope.row)}}},[_vm._v(\"刪除\")]):_vm._e()]}}],null,false,1212799887)})],1)],1)]):_vm._e(),(_vm.totalCount)?_c('Pagination',{attrs:{\"keyWord\":_vm.keyWordInput,\"start\":_vm.startDate,\"end\":_vm.endDate,\"total\":_vm.totalCount,\"page-size\":_vm.pageSize,\"currentPage\":_vm.currentPage},on:{\"changePage\":_vm.getEvents}}):_vm._e(),(_vm.unitsData)?_c('el-dialog',{attrs:{\"close-on-click-modal\":false,\"title\":_vm.addOrEdit,\"visible\":_vm.addOrEditDialog,\"custom-class\":\"addOrEditDialog\"},on:{\"update:visible\":function($event){_vm.addOrEditDialog=$event}}},[_c('ValidationObserver',{ref:\"obs\"},[_c('div',{staticClass:\"inputBox\",staticStyle:{\"margin-top\":\"3rem\"}},[_c('div',{staticClass:\"inputTitle\"},[_vm._v(\"活動 / 會議名稱\")]),_c('ValidationProvider',{attrs:{\"name\":\"請輸入活動會議名稱!!\",\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar classes = ref.classes;\nreturn [_c('el-input',{class:classes,staticStyle:{\"width\":\"550px\"},attrs:{\"type\":\"textarea\",\"rows\":2,\"placeholder\":\"請輸入活動 / 會議名稱\"},model:{value:(_vm.eventNameInput),callback:function ($$v) {_vm.eventNameInput=$$v},expression:\"eventNameInput\"}}),(errors[0])?_c('span',{staticClass:\"validateSpan\"},[_vm._v(_vm._s(errors[0]))]):_vm._e()]}}],null,false,3886912801)})],1),_c('div',{staticClass:\"inputBox\"},[_c('div',{staticClass:\"inputTitle\"},[_vm._v(\"活動 / 會議描述\")]),_c('ValidationProvider',{attrs:{\"name\":\"請輸入活動會議描述!!\",\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar classes = ref.classes;\nreturn [_c('div',{ref:\"ck\",staticClass:\"personalContainer mt-5 ck\"},[_c('ckeditor',{class:classes,attrs:{\"editor\":_vm.editor,\"config\":_vm.editorConfig},model:{value:(_vm.inputDescription),callback:function ($$v) {_vm.inputDescription=$$v},expression:\"inputDescription\"}})],1),(errors[0])?_c('span',{staticClass:\"validateSpan\"},[_vm._v(_vm._s(errors[0]))]):_vm._e()]}}],null,false,4214488343)})],1),_c('div',{staticClass:\"inputBox\"},[_c('div',{staticClass:\"inputTitle\"},[_vm._v(\"行事曆類別\")]),_c('ValidationProvider',{attrs:{\"name\":\"請選擇類別!!\",\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar classes = ref.classes;\nreturn [(_vm.eventTypeData)?_c('el-select',{class:classes,attrs:{\"placeholder\":\"請選擇行事曆類別\"},model:{value:(_vm.eventCategorySelete),callback:function ($$v) {_vm.eventCategorySelete=$$v},expression:\"eventCategorySelete\"}},_vm._l((_vm.eventTypeData),function(type){return _c('el-option',{key:type.Value,attrs:{\"label\":type.Text,\"value\":type.Value}})}),1):_vm._e(),(errors[0])?_c('span',{staticClass:\"validateSpan\"},[_vm._v(_vm._s(errors[0]))]):_vm._e()]}}],null,false,3874567301)})],1),_c('div',{staticClass:\"inputBox\"},[_c('div',{staticClass:\"inputTitle\"},[_vm._v(\"公告時間\")]),_c('ValidationProvider',{attrs:{\"name\":\"請選擇公告時間!!\",\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar classes = ref.classes;\nreturn [_c('el-date-picker',{class:classes,attrs:{\"type\":\"datetimerange\",\"range-separator\":\"~\",\"start-placeholder\":\"公告時間開始\",\"end-placeholder\":\"公告時間結束\",\"placeholder\":\"請選擇時間\"},model:{value:(_vm.showDate),callback:function ($$v) {_vm.showDate=$$v},expression:\"showDate\"}}),(errors[0])?_c('span',{staticClass:\"validateSpan\"},[_vm._v(_vm._s(errors[0]))]):_vm._e()]}}],null,false,3456618218)})],1),_c('div',{staticClass:\"inputBox\"},[_c('div',{staticClass:\"inputTitle\"},[_vm._v(\"會議 / 活動時間\")]),_c('ValidationProvider',{attrs:{\"name\":\"請選擇活動時間!!\",\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar classes = ref.classes;\nreturn [_c('el-date-picker',{class:classes,attrs:{\"type\":\"datetimerange\",\"range-separator\":\"~\",\"start-placeholder\":\"開始時間\",\"end-placeholder\":\"結束時間\"},model:{value:(_vm.eventDate),callback:function ($$v) {_vm.eventDate=$$v},expression:\"eventDate\"}}),(errors[0])?_c('span',{staticClass:\"validateSpan\"},[_vm._v(_vm._s(errors[0]))]):_vm._e()]}}],null,false,1544891061)})],1),_c('div',{staticClass:\"inputBox\"},[_c('div',{staticClass:\"inputTitle\"},[_vm._v(\"會議 / 活動地點\")]),_c('ValidationProvider',{attrs:{\"name\":\"請輸入會議 / 活動地點!!\",\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar classes = ref.classes;\nreturn [_c('el-input',{class:classes,staticStyle:{\"width\":\"600px\"},attrs:{\"placeholder\":\"請輸入會議 / 活動地點\"},model:{value:(_vm.eventSiteInput),callback:function ($$v) {_vm.eventSiteInput=$$v},expression:\"eventSiteInput\"}}),(errors[0])?_c('span',{staticClass:\"validateSpan\"},[_vm._v(_vm._s(errors[0]))]):_vm._e()]}}],null,false,2944595328)})],1),_c('div',{staticClass:\"inputBox\"},[_c('div',{staticClass:\"inputTitle\"},[_vm._v(\"連結\")]),_c('ValidationProvider',{attrs:{\"name\":\"請輸入會議 / 活動連結!!\",\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar classes = ref.classes;\nreturn [_c('el-input',{class:classes,staticStyle:{\"width\":\"600px\"},attrs:{\"placeholder\":\"請輸入會議 / 活動連結\"},model:{value:(_vm.eventUrlInput),callback:function ($$v) {_vm.eventUrlInput=$$v},expression:\"eventUrlInput\"}}),(errors[0])?_c('span',{staticClass:\"validateSpan\"},[_vm._v(_vm._s(errors[0]))]):_vm._e()]}}],null,false,3830732861)})],1),_c('div',{staticClass:\"inputBox\"},[_c('div',{staticClass:\"inputTitle\"},[_vm._v(\"單位\")]),_c('ValidationProvider',{attrs:{\"name\":\"請選擇單位!!\",\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar classes = ref.classes;\nreturn [(_vm.userControlUnit)?_c('el-select',{class:classes,attrs:{\"filterable\":\"\",\"no-match-text\":\"暫無資料\",\"placeholder\":\"請選擇單位\"},model:{value:(_vm.unitSelete),callback:function ($$v) {_vm.unitSelete=$$v},expression:\"unitSelete\"}},_vm._l((_vm.userControlUnit),function(unit){return _c('el-option',{key:unit.UntId,attrs:{\"label\":unit.UntNameFull,\"value\":unit.UntId}})}),1):_vm._e(),(errors[0])?_c('span',{staticClass:\"validateSpan\"},[_vm._v(_vm._s(errors[0]))]):_vm._e()]}}],null,false,3140432657)})],1),_c('div',{staticClass:\"inputBox\"},[_c('div',{staticClass:\"inputTitle\"},[_vm._v(\"上傳文件\")]),_c('el-upload',{ref:\"upload\",staticClass:\"upload-demo\",attrs:{\"action\":_vm.$store.state.apiBase+'Img',\"list-type\":\"text\",\"headers\":_vm.uploadHeader,\"on-success\":_vm.successUpload}},[_c('el-tooltip',{staticClass:\"item\",attrs:{\"open-delay\":500,\"effect\":\"dark\",\"placement\":\"top-start\"}},[_c('div',{attrs:{\"slot\":\"content\"},slot:\"content\"},[_vm._v(\" 檔案格式限制:doc/docx/xls/xlsx/ppt/pttx/pdf/jpg/png \"),_c('br'),_vm._v(\"檔案大小限制:10MB \")]),_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"}},[_vm._v(\"選擇上傳文件\")])],1)],1)],1),_c('div',{staticClass:\"inputBox\"},[_c('div',{staticClass:\"inputTitle\"},[_vm._v(\"已上傳文件\")]),(_vm.uploadUrl.length === 0 )?_c('p',{staticClass:\"noFiles\"},[_vm._v(\"尚未上傳文件\")]):_vm._e(),(_vm.uploadUrl)?_c('div',_vm._l((_vm.uploadUrl),function(url,index){return _c('el-button',{key:index,staticClass:\"downloadBtn\",attrs:{\"size\":\"mini\"}},[_c('el-tooltip',{staticClass:\"item\",attrs:{\"open-delay\":500,\"effect\":\"dark\",\"content\":_vm.fileName(url),\"placement\":\"top-start\"}},[(url)?_c('p',{staticClass:\"fileName\"},[_c('i',{staticClass:\"fas fa-trash-alt\",on:{\"!click\":function($event){return _vm.delFile(index)}}}),_vm._v(\" \"+_vm._s(_vm.fileName(url))+\" \")]):_vm._e()])],1)}),1):_vm._e()]),_c('div',{staticClass:\"inputBox\",staticStyle:{\"align-items\":\"flex-start\"}},[_c('div',{staticClass:\"inputTitle\"},[_vm._v(\"參與人員\")]),_c('div',[_c('el-checkbox',{staticClass:\"relatedCheck\",model:{value:(_vm.isRelated),callback:function ($$v) {_vm.isRelated=$$v},expression:\"isRelated\"}},[_vm._v(\"是否關聯\")]),_c('div',{staticClass:\"selectBox\"},[_c('el-select',{staticClass:\"unitSelect\",attrs:{\"filterable\":\"\",\"no-match-text\":\"暫無資料\",\"placeholder\":\"請選擇最高單位\"},on:{\"change\":_vm.lv1Change},model:{value:(_vm.unit1),callback:function ($$v) {_vm.unit1=$$v},expression:\"unit1\"}},_vm._l((_vm.unitLv1),function(unit){return _c('el-option',{key:unit.UntId,attrs:{\"value\":unit.UntId,\"label\":unit.UntNameFull}},[_vm._v(_vm._s(unit.UntNameFull))])}),1),(_vm.unit1 && _vm.unitLv2.length > 0)?_c('el-select',{staticClass:\"unitSelect\",attrs:{\"filterable\":\"\",\"no-match-text\":\"暫無資料\",\"placeholder\":\"請選擇次高單位\"},on:{\"change\":_vm.lv2Change},model:{value:(_vm.unit2),callback:function ($$v) {_vm.unit2=$$v},expression:\"unit2\"}},_vm._l((_vm.unitLv2),function(unit){return _c('el-option',{key:unit.UntId,attrs:{\"value\":unit.UntId,\"label\":unit.UntNameFull}},[_vm._v(_vm._s(unit.UntNameFull))])}),1):_vm._e(),(_vm.unit2 && _vm.unitLv3.length > 0)?_c('el-select',{staticClass:\"unitSelect\",attrs:{\"filterable\":\"\",\"no-match-text\":\"暫無資料\",\"placeholder\":\"請選擇單位\"},on:{\"change\":_vm.lv3Change},model:{value:(_vm.unit3),callback:function ($$v) {_vm.unit3=$$v},expression:\"unit3\"}},_vm._l((_vm.unitLv3),function(unit){return _c('el-option',{key:unit.UntId,attrs:{\"value\":unit.UntId,\"label\":unit.UntNameFull}},[_vm._v(_vm._s(unit.UntNameFull))])}),1):_vm._e()],1)],1)]),_c('div',{staticClass:\"inputBox\",staticStyle:{\"align-items\":\"flex-start\"}},[_c('div',{staticClass:\"inputTitle\"}),_c('div',{staticClass:\"selectBox\"},[_c('el-select',{attrs:{\"filterable\":\"\",\"no-match-text\":\"暫無資料\",\"loading\":_vm.userNameLoading,\"loading-text\":\"Loading...\",\"no-data-text\":\"暫無資料\",\"placeholder\":\"請選擇名稱\"},on:{\"change\":_vm.setUser},model:{value:(_vm.userNameSelect),callback:function ($$v) {_vm.userNameSelect=$$v},expression:\"userNameSelect\"}},_vm._l((_vm.usersData),function(user){return _c('el-option',{key:user.Account,attrs:{\"value\":user.Account,\"label\":user.Name}})}),1),_c('el-select',{attrs:{\"placeholder\":\"職稱\"},model:{value:(_vm.memberTitle),callback:function ($$v) {_vm.memberTitle=$$v},expression:\"memberTitle\"}},[_c('el-option',{attrs:{\"value\":_vm.userData.Title}},[_vm._v(_vm._s(_vm.userData.Title))])],1),_c('el-select',{attrs:{\"placeholder\":\"Role\"},model:{value:(_vm.rloeSelect),callback:function ($$v) {_vm.rloeSelect=$$v},expression:\"rloeSelect\"}},_vm._l((_vm.rolesData),function(role){return _c('el-option',{key:role,attrs:{\"value\":role}})}),1)],1),_c('el-button',{attrs:{\"loading\":_vm.addLoading},on:{\"click\":_vm.addToTable}},[_vm._v(\"加入\")])],1),_c('div',{staticClass:\"inputBox\",staticStyle:{\"align-items\":\"flex-start\"}},[_c('div',{staticClass:\"inputTitle\"}),(_vm.usersTableData)?_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"header-cell-class-name\":\"tableHeader\",\"empty-text\":\"暫無資料\",\"data\":_vm.usersTableData}},[_c('el-table-column',{attrs:{\"prop\":\"userName\",\"label\":\"姓名\",\"width\":\"180\"}}),_c('el-table-column',{attrs:{\"prop\":\"usertitle\",\"label\":\"職稱\",\"width\":\"180\"}}),_c('el-table-column',{attrs:{\"prop\":\"unit\",\"label\":\"單位\"}}),_c('el-table-column',{attrs:{\"prop\":\"\",\"label\":\"刪除\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.deleteRow(scope.$index, _vm.usersTableData)}}},[_vm._v(\"刪除\")])]}}],null,false,2083692978)})],1):_vm._e()],1)]),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addOrEditDialog = false}}},[_vm._v(\"取 消\")]),(_vm.addOrEdit==='新增')?_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addHandler}},[_vm._v(\"新 增\")]):_vm._e(),(_vm.addOrEdit==='編輯')?_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editHandler}},[_vm._v(\"編 輯\")]):_vm._e(),(_vm.addOrEdit==='複製')?_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addHandler}},[_vm._v(\"複 製\")]):_vm._e()],1)],1):_vm._e(),_c('el-dialog',{attrs:{\"close-on-click-modal\":false,\"title\":\"替換人員\",\"custom-class\":\"changeDialog\",\"visible\":_vm.changeDialog},on:{\"update:visible\":function($event){_vm.changeDialog=$event}}},[_c('ValidationObserver',{ref:\"obs2\"},[_c('div',{staticClass:\"changeInputBox\"},[_c('p',{staticClass:\"changeInputTitle\"},[_vm._v(\"原始人員\")]),_c('ValidationProvider',{attrs:{\"name\":\"請原始人員!!\",\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar classes = ref.classes;\nreturn [_c('el-select',{class:classes,attrs:{\"filterable\":\"\",\"no-match-text\":\"無匹配資料\",\"no-data-text\":\"無資料\",\"placeholder\":\"請選擇原始人員\"},model:{value:(_vm.changeMember),callback:function ($$v) {_vm.changeMember=$$v},expression:\"changeMember\"}},_vm._l((_vm.changeMemberData),function(member,index){return _c('el-option',{key:(\"\" + (member + index)),attrs:{\"value\":member}})}),1),(errors[0])?_c('span',{staticClass:\"validateSpan\"},[_vm._v(_vm._s(errors[0]))]):_vm._e()]}}])})],1),_c('div',{staticClass:\"changeInputBox\"},[_c('p',{staticClass:\"changeInputTitle\"},[_vm._v(\"替換人員\")]),_c('ValidationProvider',{attrs:{\"name\":\"請輸入欲替換人員!!\",\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nvar classes = ref.classes;\nreturn [_c('el-autocomplete',{staticClass:\"inline-input\",class:classes,attrs:{\"fetch-suggestions\":_vm.querySearch,\"placeholder\":\"請輸入欲替換人員\",\"trigger-on-focus\":false},model:{value:(_vm.newChangeMember),callback:function ($$v) {_vm.newChangeMember=$$v},expression:\"newChangeMember\"}}),(errors[0])?_c('span',{staticClass:\"validateSpan\"},[_vm._v(_vm._s(errors[0]))]):_vm._e()]}}])})],1)]),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.changeDialog = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.confirmChange}},[_vm._v(\"提 交\")])],1)],1),_c('el-dialog',{attrs:{\"close-on-click-modal\":false,\"title\":\"匯入文件\",\"visible\":_vm.importDialogVisible,\"width\":\"30%\"},on:{\"update:visible\":function($event){_vm.importDialogVisible=$event}}},[_c('el-upload',{ref:\"import\",staticClass:\"upload-demo\",attrs:{\"multiple\":false,\"action\":\"https://scan.1966.org.tw/api/CalendarEvent/ImportExcel/xlsx\",\"list-type\":\"text\",\"headers\":_vm.uploadHeader,\"before-upload\":_vm.beforeAvatarUpload,\"on-success\":_vm.successImport,\"on-error\":_vm.errorImport,\"auto-upload\":false,\"limit\":1,\"on-exceed\":_vm.importExceed}},[_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"}},[_vm._v(\"選擇上傳文件\")]),_c('div',{staticClass:\"el-upload__tip\",attrs:{\"slot\":\"tip\"},slot:\"tip\"},[_vm._v(\"限制上傳 xlsx 或 xls 格式文件\")])],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.importDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.confireImport}},[_vm._v(\"匯 入\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */\nfunction cloneDeepWith(value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n}\n\nexport default cloneDeepWith;\n","import isObjectLike from './isObjectLike.js';\nimport isPlainObject from './isPlainObject.js';\n\n/**\n * Checks if `value` is likely a DOM element.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n * @example\n *\n * _.isElement(document.body);\n * // => true\n *\n * _.isElement('<body>');\n * // => false\n */\nfunction isElement(value) {\n  return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n}\n\nexport default isElement;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/config\n */\n\nimport { isPlainObject, isElement, cloneDeepWith } from 'lodash-es';\n\n/**\n * Handles a configuration dictionary.\n */\nexport default class Config {\n\t/**\n\t * Creates an instance of the {@link ~Config} class.\n\t *\n\t * @param {Object} [configurations] The initial configurations to be set. Usually, provided by the user.\n\t * @param {Object} [defaultConfigurations] The default configurations. Usually, provided by the system.\n\t */\n\tconstructor( configurations, defaultConfigurations ) {\n\t\t/**\n\t\t * Store for the whole configuration.\n\t\t *\n\t\t * @private\n\t\t * @member {Object}\n\t\t */\n\t\tthis._config = {};\n\n\t\t// Set default configuration.\n\t\tif ( defaultConfigurations ) {\n\t\t\t// Clone the configuration to make sure that the properties will not be shared\n\t\t\t// between editors and make the watchdog feature work correctly.\n\t\t\tthis.define( cloneConfig( defaultConfigurations ) );\n\t\t}\n\n\t\t// Set initial configuration.\n\t\tif ( configurations ) {\n\t\t\tthis._setObjectToTarget( this._config, configurations );\n\t\t}\n\t}\n\n\t/**\n\t * Set configuration values.\n\t *\n\t * It accepts both a name/value pair or an object, which properties and values will be used to set\n\t * configurations.\n\t *\n\t * It also accepts setting a \"deep configuration\" by using dots in the name. For example, `'resize.width'` sets\n\t * the value for the `width` configuration in the `resize` subset.\n\t *\n\t *\t\tconfig.set( 'width', 500 );\n\t *\t\tconfig.set( 'toolbar.collapsed', true );\n\t *\n\t *\t\t// Equivalent to:\n\t *\t\tconfig.set( {\n\t *\t\t\twidth: 500\n\t *\t\t\ttoolbar: {\n\t *\t\t\t\tcollapsed: true\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Passing an object as the value will amend the configuration, not replace it.\n\t *\n\t *\t\tconfig.set( 'toolbar', {\n\t *\t\t\tcollapsed: true,\n\t *\t\t} );\n\t *\n\t *\t\tconfig.set( 'toolbar', {\n\t *\t\t\tcolor: 'red',\n\t *\t\t} );\n\t *\n\t *\t\tconfig.get( 'toolbar.collapsed' ); // true\n\t *\t\tconfig.get( 'toolbar.color' ); // 'red'\n\t *\n\t * @param {String|Object} name The configuration name or an object from which take properties as\n\t * configuration entries. Configuration names are case-sensitive.\n\t * @param {*} value The configuration value. Used if a name is passed.\n\t */\n\tset( name, value ) {\n\t\tthis._setToTarget( this._config, name, value );\n\t}\n\n\t/**\n\t * Does exactly the same as {@link #set} with one exception – passed configuration extends\n\t * existing one, but does not overwrite already defined values.\n\t *\n\t * This method is supposed to be called by plugin developers to setup plugin's configurations. It would be\n\t * rarely used for other needs.\n\t *\n\t * @param {String|Object} name The configuration name or an object from which take properties as\n\t * configuration entries. Configuration names are case-sensitive.\n\t * @param {*} value The configuration value. Used if a name is passed.\n\t */\n\tdefine( name, value ) {\n\t\tconst isDefine = true;\n\n\t\tthis._setToTarget( this._config, name, value, isDefine );\n\t}\n\n\t/**\n\t * Gets the value for a configuration entry.\n\t *\n\t *\t\tconfig.get( 'name' );\n\t *\n\t * Deep configurations can be retrieved by separating each part with a dot.\n\t *\n\t *\t\tconfig.get( 'toolbar.collapsed' );\n\t *\n\t * @param {String} name The configuration name. Configuration names are case-sensitive.\n\t * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\n\t */\n\tget( name ) {\n\t\treturn this._getFromSource( this._config, name );\n\t}\n\n\t/**\n\t * Iterates over all top level configuration names.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\t* names() {\n\t\tfor ( const name of Object.keys( this._config ) ) {\n\t\t\tyield name;\n\t\t}\n\t}\n\n\t/**\n\t * Saves passed configuration to the specified target (nested object).\n\t *\n\t * @private\n\t * @param {Object} target Nested config object.\n\t * @param {String|Object} name The configuration name or an object from which take properties as\n\t * configuration entries. Configuration names are case-sensitive.\n\t * @param {*} value The configuration value. Used if a name is passed.\n\t * @param {Boolean} [isDefine=false] Define if passed configuration should overwrite existing one.\n\t */\n\t_setToTarget( target, name, value, isDefine = false ) {\n\t\t// In case of an object, iterate through it and call `_setToTarget` again for each property.\n\t\tif ( isPlainObject( name ) ) {\n\t\t\tthis._setObjectToTarget( target, name, isDefine );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\n\t\tconst parts = name.split( '.' );\n\n\t\t// Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\n\t\tname = parts.pop();\n\n\t\t// Iterate over parts to check if currently stored configuration has proper structure.\n\t\tfor ( const part of parts ) {\n\t\t\t// If there is no object for specified part then create one.\n\t\t\tif ( !isPlainObject( target[ part ] ) ) {\n\t\t\t\ttarget[ part ] = {};\n\t\t\t}\n\n\t\t\t// Nested object becomes a target.\n\t\t\ttarget = target[ part ];\n\t\t}\n\n\t\t// In case of value is an object.\n\t\tif ( isPlainObject( value ) ) {\n\t\t\t// We take care of proper config structure.\n\t\t\tif ( !isPlainObject( target[ name ] ) ) {\n\t\t\t\ttarget[ name ] = {};\n\t\t\t}\n\n\t\t\ttarget = target[ name ];\n\n\t\t\t// And iterate through this object calling `_setToTarget` again for each property.\n\t\t\tthis._setObjectToTarget( target, value, isDefine );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Do nothing if we are defining configuration for non empty name.\n\t\tif ( isDefine && typeof target[ name ] != 'undefined' ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttarget[ name ] = value;\n\t}\n\n\t/**\n\t * Get specified configuration from specified source (nested object).\n\t *\n\t * @private\n\t * @param {Object} source level of nested object.\n\t * @param {String} name The configuration name. Configuration names are case-sensitive.\n\t * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\n\t */\n\t_getFromSource( source, name ) {\n\t\t// The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\n\t\tconst parts = name.split( '.' );\n\n\t\t// Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\n\t\tname = parts.pop();\n\n\t\t// Iterate over parts to check if currently stored configuration has proper structure.\n\t\tfor ( const part of parts ) {\n\t\t\tif ( !isPlainObject( source[ part ] ) ) {\n\t\t\t\tsource = null;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Nested object becomes a source.\n\t\t\tsource = source[ part ];\n\t\t}\n\n\t\t// Always returns undefined for non existing configuration.\n\t\treturn source ? cloneConfig( source[ name ] ) : undefined;\n\t}\n\n\t/**\n\t * Iterates through passed object and calls {@link #_setToTarget} method with object key and value for each property.\n\t *\n\t * @private\n\t * @param {Object} target Nested config object.\n\t * @param {Object} configuration Configuration data set\n\t * @param {Boolean} [isDefine] Defines if passed configuration is default configuration or not.\n\t */\n\t_setObjectToTarget( target, configuration, isDefine ) {\n\t\tObject.keys( configuration ).forEach( key => {\n\t\t\tthis._setToTarget( target, key, configuration[ key ], isDefine );\n\t\t} );\n\t}\n}\n\n// Clones configuration object or value.\n// @param {*} source Source configuration\n// @returns {*} Cloned configuration value.\nfunction cloneConfig( source ) {\n\treturn cloneDeepWith( source, leaveDOMReferences );\n}\n\n// A customized function for cloneDeepWith.\n// It will leave references to DOM Elements instead of cloning them.\n//\n// @param {*} value\n// @returns {Element|undefined}\nfunction leaveDOMReferences( value ) {\n\treturn isElement( value ) ? value : undefined;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/spy\n */\n\n/**\n * Creates a spy function (ala Sinon.js) that can be used to inspect call to it.\n *\n * The following are the present features:\n *\n * * spy.called: property set to `true` if the function has been called at least once.\n *\n * @returns {Function} The spy function.\n */\nfunction spy() {\n\treturn function spy() {\n\t\tspy.called = true;\n\t};\n}\n\nexport default spy;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/eventinfo\n */\n\nimport spy from './spy';\n\n/**\n * The event object passed to event callbacks. It is used to provide information about the event as well as a tool to\n * manipulate it.\n */\nexport default class EventInfo {\n\t/**\n\t * @param {Object} source The emitter.\n\t * @param {String} name The event name.\n\t */\n\tconstructor( source, name ) {\n\t\t/**\n\t\t * The object that fired the event.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Object}\n\t\t */\n\t\tthis.source = source;\n\n\t\t/**\n\t\t * The event name.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Path this event has followed. See {@link module:utils/emittermixin~EmitterMixin#delegate}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<Object>}\n\t\t */\n\t\tthis.path = [];\n\n\t\t// The following methods are defined in the constructor because they must be re-created per instance.\n\n\t\t/**\n\t\t * Stops the event emitter to call further callbacks for this event interaction.\n\t\t *\n\t\t * @method #stop\n\t\t */\n\t\tthis.stop = spy();\n\n\t\t/**\n\t\t * Removes the current callback from future interactions of this event.\n\t\t *\n\t\t * @method #off\n\t\t */\n\t\tthis.off = spy();\n\n\t\t/**\n\t\t * The value which will be returned by {@link module:utils/emittermixin~EmitterMixin#fire}.\n\t\t *\n\t\t * It's `undefined` by default and can be changed by an event listener:\n\t\t *\n\t\t *\t\tdataController.fire( 'getSelectedContent', ( evt ) => {\n\t\t *\t\t\t// This listener will make `dataController.fire( 'getSelectedContent' )`\n\t\t *\t\t\t// always return an empty DocumentFragment.\n\t\t *\t\t\tevt.return = new DocumentFragment();\n\t\t *\n\t\t *\t\t\t// Make sure no other listeners are executed.\n\t\t *\t\t\tevt.stop();\n\t\t *\t\t} );\n\t\t *\n\t\t * @member #return\n\t\t */\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/uid\n */\n\n// A hash table of hex numbers to avoid using toString() in uid() which is costly.\n// [ '00', '01', '02', ..., 'fe', 'ff' ]\nconst HEX_NUMBERS = new Array( 256 ).fill()\n\t.map( ( val, index ) => ( '0' + ( index ).toString( 16 ) ).slice( -2 ) );\n\n/**\n * Returns a unique id. The id starts with an \"e\" character and a randomly generated string of\n * 32 alphanumeric characters.\n *\n * **Note**: The characters the unique id is built from correspond to the hex number notation\n * (from \"0\" to \"9\", from \"a\" to \"f\"). In other words, each id corresponds to an \"e\" followed\n * by 16 8-bit numbers next to each other.\n *\n * @returns {String} An unique id string.\n */\nexport default function uid() {\n\t// Let's create some positive random 32bit integers first.\n\t//\n\t// 1. Math.random() is a float between 0 and 1.\n\t// 2. 0x100000000 is 2^32 = 4294967296.\n\t// 3. >>> 0 enforces integer (in JS all numbers are floating point).\n\t//\n\t// For instance:\n\t//\t\tMath.random() * 0x100000000 = 3366450031.853859\n\t// but\n\t//\t\tMath.random() * 0x100000000 >>> 0 = 3366450031.\n\tconst r1 = Math.random() * 0x100000000 >>> 0;\n\tconst r2 = Math.random() * 0x100000000 >>> 0;\n\tconst r3 = Math.random() * 0x100000000 >>> 0;\n\tconst r4 = Math.random() * 0x100000000 >>> 0;\n\n\t// Make sure that id does not start with number.\n\treturn 'e' +\n\t\tHEX_NUMBERS[ r1 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r1 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r1 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r1 >> 24 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 24 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 24 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 24 & 0xFF ];\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/priorities\n */\n\n/**\n * String representing a priority value.\n *\n * @typedef {'highest'|'high'|'normal'|'low'|'lowest'} module:utils/priorities~PriorityString\n */\n\n/**\n * Provides group of constants to use instead of hardcoding numeric priority values.\n *\n * @namespace\n */\nconst priorities = {\n\t/**\n\t * Converts a string with priority name to it's numeric value. If `Number` is given, it just returns it.\n\t *\n\t * @static\n\t * @param {module:utils/priorities~PriorityString|Number} priority Priority to convert.\n\t * @returns {Number} Converted priority.\n\t */\n\tget( priority ) {\n\t\tif ( typeof priority != 'number' ) {\n\t\t\treturn this[ priority ] || this.normal;\n\t\t} else {\n\t\t\treturn priority;\n\t\t}\n\t},\n\n\thighest: 100000,\n\thigh: 1000,\n\tnormal: 0,\n\tlow: -1000,\n\tlowest: -100000\n};\n\nexport default priorities;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/emittermixin\n */\n\nimport EventInfo from './eventinfo';\nimport uid from './uid';\nimport priorities from './priorities';\n\n// To check if component is loaded more than once.\nimport './version';\nimport CKEditorError from './ckeditorerror';\n\nconst _listeningTo = Symbol( 'listeningTo' );\nconst _emitterId = Symbol( 'emitterId' );\n\n/**\n * Mixin that injects the {@link ~Emitter events API} into its host.\n *\n * @mixin EmitterMixin\n * @implements module:utils/emittermixin~Emitter\n */\nconst EmitterMixin = {\n\t/**\n\t * @inheritDoc\n\t */\n\ton( event, callback, options = {} ) {\n\t\tthis.listenTo( this, event, callback, options );\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tonce( event, callback, options ) {\n\t\tlet wasFired = false;\n\n\t\tconst onceCallback = function( event, ...args ) {\n\t\t\t// Ensure the callback is called only once even if the callback itself leads to re-firing the event\n\t\t\t// (which would call the callback again).\n\t\t\tif ( !wasFired ) {\n\t\t\t\twasFired = true;\n\n\t\t\t\t// Go off() at the first call.\n\t\t\t\tevent.off();\n\n\t\t\t\t// Go with the original callback.\n\t\t\t\tcallback.call( this, event, ...args );\n\t\t\t}\n\t\t};\n\n\t\t// Make a similar on() call, simply replacing the callback.\n\t\tthis.listenTo( this, event, onceCallback, options );\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\toff( event, callback ) {\n\t\tthis.stopListening( this, event, callback );\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tlistenTo( emitter, event, callback, options = {} ) {\n\t\tlet emitterInfo, eventCallbacks;\n\n\t\t// _listeningTo contains a list of emitters that this object is listening to.\n\t\t// This list has the following format:\n\t\t//\n\t\t// _listeningTo: {\n\t\t//     emitterId: {\n\t\t//         emitter: emitter,\n\t\t//         callbacks: {\n\t\t//             event1: [ callback1, callback2, ... ]\n\t\t//             ....\n\t\t//         }\n\t\t//     },\n\t\t//     ...\n\t\t// }\n\n\t\tif ( !this[ _listeningTo ] ) {\n\t\t\tthis[ _listeningTo ] = {};\n\t\t}\n\n\t\tconst emitters = this[ _listeningTo ];\n\n\t\tif ( !_getEmitterId( emitter ) ) {\n\t\t\t_setEmitterId( emitter );\n\t\t}\n\n\t\tconst emitterId = _getEmitterId( emitter );\n\n\t\tif ( !( emitterInfo = emitters[ emitterId ] ) ) {\n\t\t\temitterInfo = emitters[ emitterId ] = {\n\t\t\t\temitter,\n\t\t\t\tcallbacks: {}\n\t\t\t};\n\t\t}\n\n\t\tif ( !( eventCallbacks = emitterInfo.callbacks[ event ] ) ) {\n\t\t\teventCallbacks = emitterInfo.callbacks[ event ] = [];\n\t\t}\n\n\t\teventCallbacks.push( callback );\n\n\t\t// Finally register the callback to the event.\n\t\tcreateEventNamespace( emitter, event );\n\t\tconst lists = getCallbacksListsForNamespace( emitter, event );\n\t\tconst priority = priorities.get( options.priority );\n\n\t\tconst callbackDefinition = {\n\t\t\tcallback,\n\t\t\tpriority\n\t\t};\n\n\t\t// Add the callback to all callbacks list.\n\t\tfor ( const callbacks of lists ) {\n\t\t\t// Add the callback to the list in the right priority position.\n\t\t\tlet added = false;\n\n\t\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\n\t\t\t\tif ( callbacks[ i ].priority < priority ) {\n\t\t\t\t\tcallbacks.splice( i, 0, callbackDefinition );\n\t\t\t\t\tadded = true;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add at the end, if right place was not found.\n\t\t\tif ( !added ) {\n\t\t\t\tcallbacks.push( callbackDefinition );\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstopListening( emitter, event, callback ) {\n\t\tconst emitters = this[ _listeningTo ];\n\t\tlet emitterId = emitter && _getEmitterId( emitter );\n\t\tconst emitterInfo = emitters && emitterId && emitters[ emitterId ];\n\t\tconst eventCallbacks = emitterInfo && event && emitterInfo.callbacks[ event ];\n\n\t\t// Stop if nothing has been listened.\n\t\tif ( !emitters || ( emitter && !emitterInfo ) || ( event && !eventCallbacks ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// All params provided. off() that single callback.\n\t\tif ( callback ) {\n\t\t\tremoveCallback( emitter, event, callback );\n\t\t}\n\t\t// Only `emitter` and `event` provided. off() all callbacks for that event.\n\t\telse if ( eventCallbacks ) {\n\t\t\twhile ( ( callback = eventCallbacks.pop() ) ) {\n\t\t\t\tremoveCallback( emitter, event, callback );\n\t\t\t}\n\n\t\t\tdelete emitterInfo.callbacks[ event ];\n\t\t}\n\t\t// Only `emitter` provided. off() all events for that emitter.\n\t\telse if ( emitterInfo ) {\n\t\t\tfor ( event in emitterInfo.callbacks ) {\n\t\t\t\tthis.stopListening( emitter, event );\n\t\t\t}\n\t\t\tdelete emitters[ emitterId ];\n\t\t}\n\t\t// No params provided. off() all emitters.\n\t\telse {\n\t\t\tfor ( emitterId in emitters ) {\n\t\t\t\tthis.stopListening( emitters[ emitterId ].emitter );\n\t\t\t}\n\t\t\tdelete this[ _listeningTo ];\n\t\t}\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tfire( eventOrInfo, ...args ) {\n\t\ttry {\n\t\t\tconst eventInfo = eventOrInfo instanceof EventInfo ? eventOrInfo : new EventInfo( this, eventOrInfo );\n\t\t\tconst event = eventInfo.name;\n\t\t\tlet callbacks = getCallbacksForEvent( this, event );\n\n\t\t\t// Record that the event passed this emitter on its path.\n\t\t\teventInfo.path.push( this );\n\n\t\t\t// Handle event listener callbacks first.\n\t\t\tif ( callbacks ) {\n\t\t\t\t// Arguments passed to each callback.\n\t\t\t\tconst callbackArgs = [ eventInfo, ...args ];\n\n\t\t\t\t// Copying callbacks array is the easiest and most secure way of preventing infinite loops, when event callbacks\n\t\t\t\t// are added while processing other callbacks. Previous solution involved adding counters (unique ids) but\n\t\t\t\t// failed if callbacks were added to the queue before currently processed callback.\n\t\t\t\t// If this proves to be too inefficient, another method is to change `.on()` so callbacks are stored if same\n\t\t\t\t// event is currently processed. Then, `.fire()` at the end, would have to add all stored events.\n\t\t\t\tcallbacks = Array.from( callbacks );\n\n\t\t\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\n\t\t\t\t\tcallbacks[ i ].callback.apply( this, callbackArgs );\n\n\t\t\t\t\t// Remove the callback from future requests if off() has been called.\n\t\t\t\t\tif ( eventInfo.off.called ) {\n\t\t\t\t\t\t// Remove the called mark for the next calls.\n\t\t\t\t\t\tdelete eventInfo.off.called;\n\n\t\t\t\t\t\tremoveCallback( this, event, callbacks[ i ].callback );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not execute next callbacks if stop() was called.\n\t\t\t\t\tif ( eventInfo.stop.called ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Delegate event to other emitters if needed.\n\t\t\tif ( this._delegations ) {\n\t\t\t\tconst destinations = this._delegations.get( event );\n\t\t\t\tconst passAllDestinations = this._delegations.get( '*' );\n\n\t\t\t\tif ( destinations ) {\n\t\t\t\t\tfireDelegatedEvents( destinations, eventInfo, args );\n\t\t\t\t}\n\n\t\t\t\tif ( passAllDestinations ) {\n\t\t\t\t\tfireDelegatedEvents( passAllDestinations, eventInfo, args );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn eventInfo.return;\n\t\t} catch ( err ) {\n\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t/* istanbul ignore next */\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t}\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdelegate( ...events ) {\n\t\treturn {\n\t\t\tto: ( emitter, nameOrFunction ) => {\n\t\t\t\tif ( !this._delegations ) {\n\t\t\t\t\tthis._delegations = new Map();\n\t\t\t\t}\n\n\t\t\t\t// Originally there was a for..of loop which unfortunately caused an error in Babel that didn't allow\n\t\t\t\t// build an application. See: https://github.com/ckeditor/ckeditor5-react/issues/40.\n\t\t\t\tevents.forEach( eventName => {\n\t\t\t\t\tconst destinations = this._delegations.get( eventName );\n\n\t\t\t\t\tif ( !destinations ) {\n\t\t\t\t\t\tthis._delegations.set( eventName, new Map( [ [ emitter, nameOrFunction ] ] ) );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestinations.set( emitter, nameOrFunction );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstopDelegating( event, emitter ) {\n\t\tif ( !this._delegations ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !event ) {\n\t\t\tthis._delegations.clear();\n\t\t} else if ( !emitter ) {\n\t\t\tthis._delegations.delete( event );\n\t\t} else {\n\t\t\tconst destinations = this._delegations.get( event );\n\n\t\t\tif ( destinations ) {\n\t\t\t\tdestinations.delete( emitter );\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default EmitterMixin;\n\n/**\n * Emitter/listener interface.\n *\n * Can be easily implemented by a class by mixing the {@link module:utils/emittermixin~EmitterMixin} mixin.\n *\n * @interface Emitter\n */\n\n/**\n * Registers a callback function to be executed when an event is fired.\n *\n * Shorthand for {@link #listenTo `this.listenTo( this, event, callback, options )`} (it makes the emitter\n * listen on itself).\n *\n * @method #on\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Registers a callback function to be executed on the next time the event is fired only. This is similar to\n * calling {@link #on} followed by {@link #off} in the callback.\n *\n * @method #once\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Stops executing the callback on the given event.\n * Shorthand for {@link #stopListening `this.stopListening( this, event, callback )`}.\n *\n * @method #off\n * @param {String} event The name of the event.\n * @param {Function} callback The function to stop being called.\n */\n\n/**\n * Registers a callback function to be executed when an event is fired in a specific (emitter) object.\n *\n * Events can be grouped in namespaces using `:`.\n * When namespaced event is fired, it additionally fires all callbacks for that namespace.\n *\n *\t\t// myEmitter.on( ... ) is a shorthand for myEmitter.listenTo( myEmitter, ... ).\n *\t\tmyEmitter.on( 'myGroup', genericCallback );\n *\t\tmyEmitter.on( 'myGroup:myEvent', specificCallback );\n *\n *\t\t// genericCallback is fired.\n *\t\tmyEmitter.fire( 'myGroup' );\n *\t\t// both genericCallback and specificCallback are fired.\n *\t\tmyEmitter.fire( 'myGroup:myEvent' );\n *\t\t// genericCallback is fired even though there are no callbacks for \"foo\".\n *\t\tmyEmitter.fire( 'myGroup:foo' );\n *\n * An event callback can {@link module:utils/eventinfo~EventInfo#stop stop the event} and\n * set the {@link module:utils/eventinfo~EventInfo#return return value} of the {@link #fire} method.\n *\n * @method #listenTo\n * @param {module:utils/emittermixin~Emitter} emitter The object that fires the event.\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Stops listening for events. It can be used at different levels:\n *\n * * To stop listening to a specific callback.\n * * To stop listening to a specific event.\n * * To stop listening to all events fired by a specific object.\n * * To stop listening to all events fired by all objects.\n *\n * @method #stopListening\n * @param {module:utils/emittermixin~Emitter} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n * for all events from `emitter`.\n * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n * `event`.\n */\n\n/**\n * Fires an event, executing all callbacks registered for it.\n *\n * The first parameter passed to callbacks is an {@link module:utils/eventinfo~EventInfo} object,\n * followed by the optional `args` provided in the `fire()` method call.\n *\n * @method #fire\n * @param {String|module:utils/eventinfo~EventInfo} eventOrInfo The name of the event or `EventInfo` object if event is delegated.\n * @param {...*} [args] Additional arguments to be passed to the callbacks.\n * @returns {*} By default the method returns `undefined`. However, the return value can be changed by listeners\n * through modification of the {@link module:utils/eventinfo~EventInfo#return `evt.return`}'s property (the event info\n * is the first param of every callback).\n */\n\n/**\n * Delegates selected events to another {@link module:utils/emittermixin~Emitter}. For instance:\n *\n *\t\temitterA.delegate( 'eventX' ).to( emitterB );\n *\t\temitterA.delegate( 'eventX', 'eventY' ).to( emitterC );\n *\n * then `eventX` is delegated (fired by) `emitterB` and `emitterC` along with `data`:\n *\n *\t\temitterA.fire( 'eventX', data );\n *\n * and `eventY` is delegated (fired by) `emitterC` along with `data`:\n *\n *\t\temitterA.fire( 'eventY', data );\n *\n * @method #delegate\n * @param {...String} events Event names that will be delegated to another emitter.\n * @returns {module:utils/emittermixin~EmitterMixinDelegateChain}\n */\n\n/**\n * Stops delegating events. It can be used at different levels:\n *\n * * To stop delegating all events.\n * * To stop delegating a specific event to all emitters.\n * * To stop delegating a specific event to a specific emitter.\n *\n * @method #stopDelegating\n * @param {String} [event] The name of the event to stop delegating. If omitted, stops it all delegations.\n * @param {module:utils/emittermixin~Emitter} [emitter] (requires `event`) The object to stop delegating a particular event to.\n * If omitted, stops delegation of `event` to all emitters.\n */\n\n/**\n * Checks if `listeningEmitter` listens to an emitter with given `listenedToEmitterId` and if so, returns that emitter.\n * If not, returns `null`.\n *\n * @protected\n * @param {module:utils/emittermixin~Emitter} listeningEmitter An emitter that listens.\n * @param {String} listenedToEmitterId Unique emitter id of emitter listened to.\n * @returns {module:utils/emittermixin~Emitter|null}\n */\nexport function _getEmitterListenedTo( listeningEmitter, listenedToEmitterId ) {\n\tif ( listeningEmitter[ _listeningTo ] && listeningEmitter[ _listeningTo ][ listenedToEmitterId ] ) {\n\t\treturn listeningEmitter[ _listeningTo ][ listenedToEmitterId ].emitter;\n\t}\n\n\treturn null;\n}\n\n/**\n * Sets emitter's unique id.\n *\n * **Note:** `_emitterId` can be set only once.\n *\n * @protected\n * @param {module:utils/emittermixin~Emitter} emitter An emitter for which id will be set.\n * @param {String} [id] Unique id to set. If not passed, random unique id will be set.\n */\nexport function _setEmitterId( emitter, id ) {\n\tif ( !emitter[ _emitterId ] ) {\n\t\temitter[ _emitterId ] = id || uid();\n\t}\n}\n\n/**\n * Returns emitter's unique id.\n *\n * @protected\n * @param {module:utils/emittermixin~Emitter} emitter An emitter which id will be returned.\n */\nexport function _getEmitterId( emitter ) {\n\treturn emitter[ _emitterId ];\n}\n\n// Gets the internal `_events` property of the given object.\n// `_events` property store all lists with callbacks for registered event names.\n// If there were no events registered on the object, empty `_events` object is created.\nfunction getEvents( source ) {\n\tif ( !source._events ) {\n\t\tObject.defineProperty( source, '_events', {\n\t\t\tvalue: {}\n\t\t} );\n\t}\n\n\treturn source._events;\n}\n\n// Creates event node for generic-specific events relation architecture.\nfunction makeEventNode() {\n\treturn {\n\t\tcallbacks: [],\n\t\tchildEvents: []\n\t};\n}\n\n// Creates an architecture for generic-specific events relation.\n// If needed, creates all events for given eventName, i.e. if the first registered event\n// is foo:bar:abc, it will create foo:bar:abc, foo:bar and foo event and tie them together.\n// It also copies callbacks from more generic events to more specific events when\n// specific events are created.\nfunction createEventNamespace( source, eventName ) {\n\tconst events = getEvents( source );\n\n\t// First, check if the event we want to add to the structure already exists.\n\tif ( events[ eventName ] ) {\n\t\t// If it exists, we don't have to do anything.\n\t\treturn;\n\t}\n\n\t// In other case, we have to create the structure for the event.\n\t// Note, that we might need to create intermediate events too.\n\t// I.e. if foo:bar:abc is being registered and we only have foo in the structure,\n\t// we need to also register foo:bar.\n\n\t// Currently processed event name.\n\tlet name = eventName;\n\t// Name of the event that is a child event for currently processed event.\n\tlet childEventName = null;\n\n\t// Array containing all newly created specific events.\n\tconst newEventNodes = [];\n\n\t// While loop can't check for ':' index because we have to handle generic events too.\n\t// In each loop, we truncate event name, going from the most specific name to the generic one.\n\t// I.e. foo:bar:abc -> foo:bar -> foo.\n\twhile ( name !== '' ) {\n\t\tif ( events[ name ] ) {\n\t\t\t// If the currently processed event name is already registered, we can be sure\n\t\t\t// that it already has all the structure created, so we can break the loop here\n\t\t\t// as no more events need to be registered.\n\t\t\tbreak;\n\t\t}\n\n\t\t// If this event is not yet registered, create a new object for it.\n\t\tevents[ name ] = makeEventNode();\n\t\t// Add it to the array with newly created events.\n\t\tnewEventNodes.push( events[ name ] );\n\n\t\t// Add previously processed event name as a child of this event.\n\t\tif ( childEventName ) {\n\t\t\tevents[ name ].childEvents.push( childEventName );\n\t\t}\n\n\t\tchildEventName = name;\n\t\t// If `.lastIndexOf()` returns -1, `.substr()` will return '' which will break the loop.\n\t\tname = name.substr( 0, name.lastIndexOf( ':' ) );\n\t}\n\n\tif ( name !== '' ) {\n\t\t// If name is not empty, we found an already registered event that was a parent of the\n\t\t// event we wanted to register.\n\n\t\t// Copy that event's callbacks to newly registered events.\n\t\tfor ( const node of newEventNodes ) {\n\t\t\tnode.callbacks = events[ name ].callbacks.slice();\n\t\t}\n\n\t\t// Add last newly created event to the already registered event.\n\t\tevents[ name ].childEvents.push( childEventName );\n\t}\n}\n\n// Gets an array containing callbacks list for a given event and it's more specific events.\n// I.e. if given event is foo:bar and there is also foo:bar:abc event registered, this will\n// return callback list of foo:bar and foo:bar:abc (but not foo).\nfunction getCallbacksListsForNamespace( source, eventName ) {\n\tconst eventNode = getEvents( source )[ eventName ];\n\n\tif ( !eventNode ) {\n\t\treturn [];\n\t}\n\n\tlet callbacksLists = [ eventNode.callbacks ];\n\n\tfor ( let i = 0; i < eventNode.childEvents.length; i++ ) {\n\t\tconst childCallbacksLists = getCallbacksListsForNamespace( source, eventNode.childEvents[ i ] );\n\n\t\tcallbacksLists = callbacksLists.concat( childCallbacksLists );\n\t}\n\n\treturn callbacksLists;\n}\n\n// Get the list of callbacks for a given event, but only if there any callbacks have been registered.\n// If there are no callbacks registered for given event, it checks if this is a specific event and looks\n// for callbacks for it's more generic version.\nfunction getCallbacksForEvent( source, eventName ) {\n\tlet event;\n\n\tif ( !source._events || !( event = source._events[ eventName ] ) || !event.callbacks.length ) {\n\t\t// There are no callbacks registered for specified eventName.\n\t\t// But this could be a specific-type event that is in a namespace.\n\t\tif ( eventName.indexOf( ':' ) > -1 ) {\n\t\t\t// If the eventName is specific, try to find callback lists for more generic event.\n\t\t\treturn getCallbacksForEvent( source, eventName.substr( 0, eventName.lastIndexOf( ':' ) ) );\n\t\t} else {\n\t\t\t// If this is a top-level generic event, return null;\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn event.callbacks;\n}\n\n// Fires delegated events for given map of destinations.\n//\n// @private\n// * @param {Map.<utils.Emitter>} destinations A map containing\n// `[ {@link module:utils/emittermixin~Emitter}, \"event name\" ]` pair destinations.\n// * @param {utils.EventInfo} eventInfo The original event info object.\n// * @param {Array.<*>} fireArgs Arguments the original event was fired with.\nfunction fireDelegatedEvents( destinations, eventInfo, fireArgs ) {\n\tfor ( let [ emitter, name ] of destinations ) {\n\t\tif ( !name ) {\n\t\t\tname = eventInfo.name;\n\t\t} else if ( typeof name == 'function' ) {\n\t\t\tname = name( eventInfo.name );\n\t\t}\n\n\t\tconst delegatedInfo = new EventInfo( eventInfo.source, name );\n\n\t\tdelegatedInfo.path = [ ...eventInfo.path ];\n\n\t\temitter.fire( delegatedInfo, ...fireArgs );\n\t}\n}\n\n// Removes callback from emitter for given event.\n//\n// @param {module:utils/emittermixin~Emitter} emitter\n// @param {String} event\n// @param {Function} callback\nfunction removeCallback( emitter, event, callback ) {\n\tconst lists = getCallbacksListsForNamespace( emitter, event );\n\n\tfor ( const callbacks of lists ) {\n\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\n\t\t\tif ( callbacks[ i ].callback == callback ) {\n\t\t\t\t// Remove the callback from the list (fixing the next index).\n\t\t\t\tcallbacks.splice( i, 1 );\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The return value of {@link ~EmitterMixin#delegate}.\n *\n * @interface module:utils/emittermixin~EmitterMixinDelegateChain\n */\n\n/**\n * Selects destination for {@link module:utils/emittermixin~EmitterMixin#delegate} events.\n *\n * @method #to\n * @param {module:utils/emittermixin~Emitter} emitter An `EmitterMixin` instance which is the destination for delegated events.\n * @param {String|Function} [nameOrFunction] A custom event name or function which converts the original name string.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/isiterable\n */\n\n/**\n * Checks if value implements iterator interface.\n *\n * @param {*} value The value to check.\n * @returns {Boolean} True if value implements iterator interface.\n */\nexport default function isIterable( value ) {\n\treturn !!( value && value[ Symbol.iterator ] );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/mix\n */\n\n/**\n * Copies enumerable properties and symbols from the objects given as 2nd+ parameters to the\n * prototype of first object (a constructor).\n *\n *\t\tclass Editor {\n *\t\t\t...\n *\t\t}\n *\n *\t\tconst SomeMixin = {\n *\t\t\ta() {\n *\t\t\t\treturn 'a';\n *\t\t\t}\n *\t\t};\n *\n *\t\tmix( Editor, SomeMixin, ... );\n *\n *\t\tnew Editor().a(); // -> 'a'\n *\n * Note: Properties which already exist in the base class will not be overriden.\n *\n * @param {Function} [baseClass] Class which prototype will be extended.\n * @param {Object} [...mixins] Objects from which to get properties.\n */\nexport default function mix( baseClass, ...mixins ) {\n\tmixins.forEach( mixin => {\n\t\tObject.getOwnPropertyNames( mixin ).concat( Object.getOwnPropertySymbols( mixin ) )\n\t\t\t.forEach( key => {\n\t\t\t\tif ( key in baseClass.prototype ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst sourceDescriptor = Object.getOwnPropertyDescriptor( mixin, key );\n\t\t\t\tsourceDescriptor.enumerable = false;\n\n\t\t\t\tObject.defineProperty( baseClass.prototype, key, sourceDescriptor );\n\t\t\t} );\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/collection\n */\n\nimport EmitterMixin from './emittermixin';\nimport CKEditorError from './ckeditorerror';\nimport uid from './uid';\nimport isIterable from './isiterable';\nimport mix from './mix';\n\n/**\n * Collections are ordered sets of objects. Items in the collection can be retrieved by their indexes\n * in the collection (like in an array) or by their ids.\n *\n * If an object without an `id` property is being added to the collection, the `id` property will be generated\n * automatically. Note that the automatically generated id is unique only within this single collection instance.\n *\n * By default an item in the collection is identified by its `id` property. The name of the identifier can be\n * configured through the constructor of the collection.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class Collection {\n\t/**\n\t * Creates a new Collection instance.\n\t *\n\t * You can provide an iterable of initial items the collection will be created with:\n\t *\n\t *\t\tconst collection = new Collection( [ { id: 'John' }, { id: 'Mike' } ] );\n\t *\n\t *\t\tconsole.log( collection.get( 0 ) ); // -> { id: 'John' }\n\t *\t\tconsole.log( collection.get( 1 ) ); // -> { id: 'Mike' }\n\t *\t\tconsole.log( collection.get( 'Mike' ) ); // -> { id: 'Mike' }\n\t *\n\t * Or you can first create a collection and then add new items using the {@link #add} method:\n\t *\n\t *\t\tconst collection = new Collection();\n\t *\n\t *\t\tcollection.add( { id: 'John' } );\n\t *\t\tconsole.log( collection.get( 0 ) ); // -> { id: 'John' }\n\t *\n\t * Whatever option you choose, you can always pass a configuration object as the last argument\n\t * of the constructor:\n\t *\n\t *\t\tconst emptyCollection = new Collection( { idProperty: 'name' } );\n\t *\t\temptyCollection.add( { name: 'John' } );\n\t *\t\tconsole.log( collection.get( 'John' ) ); // -> { name: 'John' }\n\t *\n\t *\t\tconst nonEmptyCollection = new Collection( [ { name: 'John' } ], { idProperty: 'name' } );\n\t *\t\tnonEmptyCollection.add( { name: 'George' } );\n\t *\t\tconsole.log( collection.get( 'George' ) ); // -> { name: 'George' }\n\t *\t\tconsole.log( collection.get( 'John' ) ); // -> { name: 'John' }\n\t *\n\t * @param {Iterable.<Object>|Object} initialItemsOrOptions The initial items of the collection or\n\t * the options object.\n\t * @param {Object} [options={}] The options object, when the first argument is an array of initial items.\n\t * @param {String} [options.idProperty='id'] The name of the property which is used to identify an item.\n\t * Items that do not have such a property will be assigned one when added to the collection.\n\t */\n\tconstructor( initialItemsOrOptions = {}, options = {} ) {\n\t\tconst hasInitialItems = isIterable( initialItemsOrOptions );\n\n\t\tif ( !hasInitialItems ) {\n\t\t\toptions = initialItemsOrOptions;\n\t\t}\n\n\t\t/**\n\t\t * The internal list of items in the collection.\n\t\t *\n\t\t * @private\n\t\t * @member {Object[]}\n\t\t */\n\t\tthis._items = [];\n\n\t\t/**\n\t\t * The internal map of items in the collection.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._itemMap = new Map();\n\n\t\t/**\n\t\t * The name of the property which is considered to identify an item.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._idProperty = options.idProperty || 'id';\n\n\t\t/**\n\t\t * A helper mapping external items of a bound collection ({@link #bindTo})\n\t\t * and actual items of this collection. It provides information\n\t\t * necessary to properly remove items bound to another collection.\n\t\t *\n\t\t * See {@link #_bindToInternalToExternalMap}.\n\t\t *\n\t\t * @protected\n\t\t * @member {WeakMap}\n\t\t */\n\t\tthis._bindToExternalToInternalMap = new WeakMap();\n\n\t\t/**\n\t\t * A helper mapping items of this collection to external items of a bound collection\n\t\t * ({@link #bindTo}). It provides information necessary to manage the bindings, e.g.\n\t\t * to avoid loops in two–way bindings.\n\t\t *\n\t\t * See {@link #_bindToExternalToInternalMap}.\n\t\t *\n\t\t * @protected\n\t\t * @member {WeakMap}\n\t\t */\n\t\tthis._bindToInternalToExternalMap = new WeakMap();\n\n\t\t/**\n\t\t * Stores indexes of skipped items from bound external collection.\n\t\t *\n\t\t * @private\n\t\t * @member {Array}\n\t\t */\n\t\tthis._skippedIndexesFromExternal = [];\n\n\t\t// Set the initial content of the collection (if provided in the constructor).\n\t\tif ( hasInitialItems ) {\n\t\t\tfor ( const item of initialItemsOrOptions ) {\n\t\t\t\tthis._items.push( item );\n\t\t\t\tthis._itemMap.set( this._getItemIdBeforeAdding( item ), item );\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * A collection instance this collection is bound to as a result\n\t\t * of calling {@link #bindTo} method.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:utils/collection~Collection} #_bindToCollection\n\t\t */\n\t}\n\n\t/**\n\t * The number of items available in the collection.\n\t *\n\t * @member {Number} #length\n\t */\n\tget length() {\n\t\treturn this._items.length;\n\t}\n\n\t/**\n\t * Returns the first item from the collection or null when collection is empty.\n\t *\n\t * @returns {Object|null} The first item or `null` if collection is empty.\n\t */\n\tget first() {\n\t\treturn this._items[ 0 ] || null;\n\t}\n\n\t/**\n\t * Returns the last item from the collection or null when collection is empty.\n\t *\n\t * @returns {Object|null} The last item or `null` if collection is empty.\n\t */\n\tget last() {\n\t\treturn this._items[ this.length - 1 ] || null;\n\t}\n\n\t/**\n\t * Adds an item into the collection.\n\t *\n\t * If the item does not have an id, then it will be automatically generated and set on the item.\n\t *\n\t * @chainable\n\t * @param {Object} item\n\t * @param {Number} [index] The position of the item in the collection. The item\n\t * is pushed to the collection when `index` not specified.\n\t * @fires add\n\t */\n\tadd( item, index ) {\n\t\tconst itemId = this._getItemIdBeforeAdding( item );\n\n\t\t// TODO: Use ES6 default function argument.\n\t\tif ( index === undefined ) {\n\t\t\tindex = this._items.length;\n\t\t} else if ( index > this._items.length || index < 0 ) {\n\t\t\t/**\n\t\t\t * The index number has invalid value.\n\t\t\t *\n\t\t\t * @error collection-add-item-bad-index\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-add-item-invalid-index', this );\n\t\t}\n\n\t\tthis._items.splice( index, 0, item );\n\n\t\tthis._itemMap.set( itemId, item );\n\n\t\tthis.fire( 'add', item, index );\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets item by its id or index.\n\t *\n\t * @param {String|Number} idOrIndex The item id or index in the collection.\n\t * @returns {Object|null} The requested item or `null` if such item does not exist.\n\t */\n\tget( idOrIndex ) {\n\t\tlet item;\n\n\t\tif ( typeof idOrIndex == 'string' ) {\n\t\t\titem = this._itemMap.get( idOrIndex );\n\t\t} else if ( typeof idOrIndex == 'number' ) {\n\t\t\titem = this._items[ idOrIndex ];\n\t\t} else {\n\t\t\t/**\n\t\t\t * Index or id must be given.\n\t\t\t *\n\t\t\t * @error collection-get-invalid-arg\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-get-invalid-arg: Index or id must be given.', this );\n\t\t}\n\n\t\treturn item || null;\n\t}\n\n\t/**\n\t * Returns a boolean indicating whether the collection contains an item.\n\t *\n\t * @param {Object|String} itemOrId The item or its id in the collection.\n\t * @returns {Boolean} `true` if the collection contains the item, `false` otherwise.\n\t */\n\thas( itemOrId ) {\n\t\tif ( typeof itemOrId == 'string' ) {\n\t\t\treturn this._itemMap.has( itemOrId );\n\t\t} else { // Object\n\t\t\tconst idProperty = this._idProperty;\n\t\t\tconst id = itemOrId[ idProperty ];\n\n\t\t\treturn this._itemMap.has( id );\n\t\t}\n\t}\n\n\t/**\n\t * Gets index of item in the collection.\n\t * When item is not defined in the collection then index will be equal -1.\n\t *\n\t * @param {Object|String} itemOrId The item or its id in the collection.\n\t * @returns {Number} Index of given item.\n\t */\n\tgetIndex( itemOrId ) {\n\t\tlet item;\n\n\t\tif ( typeof itemOrId == 'string' ) {\n\t\t\titem = this._itemMap.get( itemOrId );\n\t\t} else {\n\t\t\titem = itemOrId;\n\t\t}\n\n\t\treturn this._items.indexOf( item );\n\t}\n\n\t/**\n\t * Removes an item from the collection.\n\t *\n\t * @param {Object|Number|String} subject The item to remove, its id or index in the collection.\n\t * @returns {Object} The removed item.\n\t * @fires remove\n\t */\n\tremove( subject ) {\n\t\tlet index, id, item;\n\t\tlet itemDoesNotExist = false;\n\t\tconst idProperty = this._idProperty;\n\n\t\tif ( typeof subject == 'string' ) {\n\t\t\tid = subject;\n\t\t\titem = this._itemMap.get( id );\n\t\t\titemDoesNotExist = !item;\n\n\t\t\tif ( item ) {\n\t\t\t\tindex = this._items.indexOf( item );\n\t\t\t}\n\t\t} else if ( typeof subject == 'number' ) {\n\t\t\tindex = subject;\n\t\t\titem = this._items[ index ];\n\t\t\titemDoesNotExist = !item;\n\n\t\t\tif ( item ) {\n\t\t\t\tid = item[ idProperty ];\n\t\t\t}\n\t\t} else {\n\t\t\titem = subject;\n\t\t\tid = item[ idProperty ];\n\t\t\tindex = this._items.indexOf( item );\n\t\t\titemDoesNotExist = ( index == -1 || !this._itemMap.get( id ) );\n\t\t}\n\n\t\tif ( itemDoesNotExist ) {\n\t\t\t/**\n\t\t\t * Item not found.\n\t\t\t *\n\t\t\t * @error collection-remove-404\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-remove-404: Item not found.', this );\n\t\t}\n\n\t\tthis._items.splice( index, 1 );\n\t\tthis._itemMap.delete( id );\n\n\t\tconst externalItem = this._bindToInternalToExternalMap.get( item );\n\t\tthis._bindToInternalToExternalMap.delete( item );\n\t\tthis._bindToExternalToInternalMap.delete( externalItem );\n\n\t\tthis.fire( 'remove', item, index );\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Executes the callback for each item in the collection and composes an array or values returned by this callback.\n\t *\n\t * @param {Function} callback\n\t * @param {Object} callback.item\n\t * @param {Number} callback.index\n\t * @param {Object} ctx Context in which the `callback` will be called.\n\t * @returns {Array} The result of mapping.\n\t */\n\tmap( callback, ctx ) {\n\t\treturn this._items.map( callback, ctx );\n\t}\n\n\t/**\n\t * Finds the first item in the collection for which the `callback` returns a true value.\n\t *\n\t * @param {Function} callback\n\t * @param {Object} callback.item\n\t * @param {Number} callback.index\n\t * @param {Object} ctx Context in which the `callback` will be called.\n\t * @returns {Object} The item for which `callback` returned a true value.\n\t */\n\tfind( callback, ctx ) {\n\t\treturn this._items.find( callback, ctx );\n\t}\n\n\t/**\n\t * Returns an array with items for which the `callback` returned a true value.\n\t *\n\t * @param {Function} callback\n\t * @param {Object} callback.item\n\t * @param {Number} callback.index\n\t * @param {Object} ctx Context in which the `callback` will be called.\n\t * @returns {Object[]} The array with matching items.\n\t */\n\tfilter( callback, ctx ) {\n\t\treturn this._items.filter( callback, ctx );\n\t}\n\n\t/**\n\t * Removes all items from the collection and destroys the binding created using\n\t * {@link #bindTo}.\n\t */\n\tclear() {\n\t\tif ( this._bindToCollection ) {\n\t\t\tthis.stopListening( this._bindToCollection );\n\t\t\tthis._bindToCollection = null;\n\t\t}\n\n\t\twhile ( this.length ) {\n\t\t\tthis.remove( 0 );\n\t\t}\n\t}\n\n\t/**\n\t * Binds and synchronizes the collection with another one.\n\t *\n\t * The binding can be a simple factory:\n\t *\n\t *\t\tclass FactoryClass {\n\t *\t\t\tconstructor( data ) {\n\t *\t\t\t\tthis.label = data.label;\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).as( FactoryClass );\n\t *\n\t *\t\tsource.add( { label: 'foo' } );\n\t *\t\tsource.add( { label: 'bar' } );\n\t *\n\t *\t\tconsole.log( target.length ); // 2\n\t *\t\tconsole.log( target.get( 1 ).label ); // 'bar'\n\t *\n\t *\t\tsource.remove( 0 );\n\t *\t\tconsole.log( target.length ); // 1\n\t *\t\tconsole.log( target.get( 0 ).label ); // 'bar'\n\t *\n\t * or the factory driven by a custom callback:\n\t *\n\t *\t\tclass FooClass {\n\t *\t\t\tconstructor( data ) {\n\t *\t\t\t\tthis.label = data.label;\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tclass BarClass {\n\t *\t\t\tconstructor( data ) {\n\t *\t\t\t\tthis.label = data.label;\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).using( ( item ) => {\n\t *\t\t\tif ( item.label == 'foo' ) {\n\t *\t\t\t\treturn new FooClass( item );\n\t *\t\t\t} else {\n\t *\t\t\t\treturn new BarClass( item );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\tsource.add( { label: 'foo' } );\n\t *\t\tsource.add( { label: 'bar' } );\n\t *\n\t *\t\tconsole.log( target.length ); // 2\n\t *\t\tconsole.log( target.get( 0 ) instanceof FooClass ); // true\n\t *\t\tconsole.log( target.get( 1 ) instanceof BarClass ); // true\n\t *\n\t * or the factory out of property name:\n\t *\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).using( 'label' );\n\t *\n\t *\t\tsource.add( { label: { value: 'foo' } } );\n\t *\t\tsource.add( { label: { value: 'bar' } } );\n\t *\n\t *\t\tconsole.log( target.length ); // 2\n\t *\t\tconsole.log( target.get( 0 ).value ); // 'foo'\n\t *\t\tconsole.log( target.get( 1 ).value ); // 'bar'\n\t *\n\t * It's possible to skip specified items by returning falsy value:\n\t *\n\t *\t\tconst source = new Collection();\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).using( item => {\n\t *\t\t\tif ( item.hidden ) {\n\t *\t\t\t\treturn null;\n\t *\t\t\t}\n\t *\n\t *\t\t\treturn item;\n\t *\t\t} );\n\t *\n\t *\t\tsource.add( { hidden: true } );\n\t *\t\tsource.add( { hidden: false } );\n\t *\n\t *\t\tconsole.log( source.length ); // 2\n\t *\t\tconsole.log( target.length ); // 1\n\t *\n\t * **Note**: {@link #clear} can be used to break the binding.\n\t *\n\t * @param {module:utils/collection~Collection} externalCollection A collection to be bound.\n\t * @returns {Object}\n\t * @returns {module:utils/collection~CollectionBindToChain} The binding chain object.\n\t */\n\tbindTo( externalCollection ) {\n\t\tif ( this._bindToCollection ) {\n\t\t\t/**\n\t\t\t * The collection cannot be bound more than once.\n\t\t\t *\n\t\t\t * @error collection-bind-to-rebind\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-bind-to-rebind: The collection cannot be bound more than once.', this );\n\t\t}\n\n\t\tthis._bindToCollection = externalCollection;\n\n\t\treturn {\n\t\t\tas: Class => {\n\t\t\t\tthis._setUpBindToBinding( item => new Class( item ) );\n\t\t\t},\n\n\t\t\tusing: callbackOrProperty => {\n\t\t\t\tif ( typeof callbackOrProperty == 'function' ) {\n\t\t\t\t\tthis._setUpBindToBinding( item => callbackOrProperty( item ) );\n\t\t\t\t} else {\n\t\t\t\t\tthis._setUpBindToBinding( item => item[ callbackOrProperty ] );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Finalizes and activates a binding initiated by {#bindTo}.\n\t *\n\t * @protected\n\t * @param {Function} factory A function which produces collection items.\n\t */\n\t_setUpBindToBinding( factory ) {\n\t\tconst externalCollection = this._bindToCollection;\n\n\t\t// Adds the item to the collection once a change has been done to the external collection.\n\t\t//\n\t\t// @private\n\t\tconst addItem = ( evt, externalItem, index ) => {\n\t\t\tconst isExternalBoundToThis = externalCollection._bindToCollection == this;\n\t\t\tconst externalItemBound = externalCollection._bindToInternalToExternalMap.get( externalItem );\n\n\t\t\t// If an external collection is bound to this collection, which makes it a 2–way binding,\n\t\t\t// and the particular external collection item is already bound, don't add it here.\n\t\t\t// The external item has been created **out of this collection's item** and (re)adding it will\n\t\t\t// cause a loop.\n\t\t\tif ( isExternalBoundToThis && externalItemBound ) {\n\t\t\t\tthis._bindToExternalToInternalMap.set( externalItem, externalItemBound );\n\t\t\t\tthis._bindToInternalToExternalMap.set( externalItemBound, externalItem );\n\t\t\t} else {\n\t\t\t\tconst item = factory( externalItem );\n\n\t\t\t\t// When there is no item we need to remember skipped index first and then we can skip this item.\n\t\t\t\tif ( !item ) {\n\t\t\t\t\tthis._skippedIndexesFromExternal.push( index );\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Lets try to put item at the same index as index in external collection\n\t\t\t\t// but when there are a skipped items in one or both collections we need to recalculate this index.\n\t\t\t\tlet finalIndex = index;\n\n\t\t\t\t// When we try to insert item after some skipped items from external collection we need\n\t\t\t\t// to include this skipped items and decrease index.\n\t\t\t\t//\n\t\t\t\t// For the following example:\n\t\t\t\t// external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal' ]\n\t\t\t\t// internal -> [ A ]\n\t\t\t\t//\n\t\t\t\t// Another item is been added at the end of external collection:\n\t\t\t\t// external.add( 'D' )\n\t\t\t\t// external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal', 'D' ]\n\t\t\t\t//\n\t\t\t\t// We can't just add 'D' to internal at the same index as index in external because\n\t\t\t\t// this will produce empty indexes what is invalid:\n\t\t\t\t// internal -> [ 'A', empty, empty, 'D' ]\n\t\t\t\t//\n\t\t\t\t// So we need to include skipped items and decrease index\n\t\t\t\t// internal -> [ 'A', 'D' ]\n\t\t\t\tfor ( const skipped of this._skippedIndexesFromExternal ) {\n\t\t\t\t\tif ( index > skipped ) {\n\t\t\t\t\t\tfinalIndex--;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// We need to take into consideration that external collection could skip some items from\n\t\t\t\t// internal collection.\n\t\t\t\t//\n\t\t\t\t// For the following example:\n\t\t\t\t// internal -> [ 'A', 'B - skipped for external', 'C - skipped for external' ]\n\t\t\t\t// external -> [ A ]\n\t\t\t\t//\n\t\t\t\t// Another item is been added at the end of external collection:\n\t\t\t\t// external.add( 'D' )\n\t\t\t\t// external -> [ 'A', 'D' ]\n\t\t\t\t//\n\t\t\t\t// We need to include skipped items and place new item after them:\n\t\t\t\t// internal -> [ 'A', 'B - skipped for external', 'C - skipped for external', 'D' ]\n\t\t\t\tfor ( const skipped of externalCollection._skippedIndexesFromExternal ) {\n\t\t\t\t\tif ( finalIndex >= skipped ) {\n\t\t\t\t\t\tfinalIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._bindToExternalToInternalMap.set( externalItem, item );\n\t\t\t\tthis._bindToInternalToExternalMap.set( item, externalItem );\n\t\t\t\tthis.add( item, finalIndex );\n\n\t\t\t\t// After adding new element to internal collection we need update indexes\n\t\t\t\t// of skipped items in external collection.\n\t\t\t\tfor ( let i = 0; i < externalCollection._skippedIndexesFromExternal.length; i++ ) {\n\t\t\t\t\tif ( finalIndex <= externalCollection._skippedIndexesFromExternal[ i ] ) {\n\t\t\t\t\t\texternalCollection._skippedIndexesFromExternal[ i ]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Load the initial content of the collection.\n\t\tfor ( const externalItem of externalCollection ) {\n\t\t\taddItem( null, externalItem, externalCollection.getIndex( externalItem ) );\n\t\t}\n\n\t\t// Synchronize the with collection as new items are added.\n\t\tthis.listenTo( externalCollection, 'add', addItem );\n\n\t\t// Synchronize the with collection as new items are removed.\n\t\tthis.listenTo( externalCollection, 'remove', ( evt, externalItem, index ) => {\n\t\t\tconst item = this._bindToExternalToInternalMap.get( externalItem );\n\n\t\t\tif ( item ) {\n\t\t\t\tthis.remove( item );\n\t\t\t}\n\n\t\t\t// After removing element from external collection we need update/remove indexes\n\t\t\t// of skipped items in internal collection.\n\t\t\tthis._skippedIndexesFromExternal = this._skippedIndexesFromExternal.reduce( ( result, skipped ) => {\n\t\t\t\tif ( index < skipped ) {\n\t\t\t\t\tresult.push( skipped - 1 );\n\t\t\t\t}\n\n\t\t\t\tif ( index > skipped ) {\n\t\t\t\t\tresult.push( skipped );\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [] );\n\t\t} );\n\t}\n\n\t/**\n\t * Returns an unique id property for a given `item`.\n\t *\n\t * The method will generate new id and assign it to the `item` if it doesn't have any.\n\t *\n\t * @private\n\t * @param {Object} item Item to be added.\n\t * @returns {String}\n\t */\n\t_getItemIdBeforeAdding( item ) {\n\t\tconst idProperty = this._idProperty;\n\t\tlet itemId;\n\n\t\tif ( ( idProperty in item ) ) {\n\t\t\titemId = item[ idProperty ];\n\n\t\t\tif ( typeof itemId != 'string' ) {\n\t\t\t\t/**\n\t\t\t\t * This item's id should be a string.\n\t\t\t\t *\n\t\t\t\t * @error collection-add-invalid-id\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'collection-add-invalid-id', this );\n\t\t\t}\n\n\t\t\tif ( this.get( itemId ) ) {\n\t\t\t\t/**\n\t\t\t\t * This item already exists in the collection.\n\t\t\t\t *\n\t\t\t\t * @error collection-add-item-already-exists\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'collection-add-item-already-exists', this );\n\t\t\t}\n\t\t} else {\n\t\t\titem[ idProperty ] = itemId = uid();\n\t\t}\n\n\t\treturn itemId;\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._items[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Fired when an item is added to the collection.\n\t *\n\t * @event add\n\t * @param {Object} item The added item.\n\t */\n\n\t/**\n\t * Fired when an item is removed from the collection.\n\t *\n\t * @event remove\n\t * @param {Object} item The removed item.\n\t * @param {Number} index Index from which item was removed.\n\t */\n}\n\nmix( Collection, EmitterMixin );\n\n/**\n * An object returned by the {@link module:utils/collection~Collection#bindTo `bindTo()`} method\n * providing functions that specify the type of the binding.\n *\n * See the {@link module:utils/collection~Collection#bindTo `bindTo()`} documentation for examples.\n *\n * @interface module:utils/collection~CollectionBindToChain\n */\n\n/**\n * Creates a callback or a property binding.\n *\n * @method #using\n * @param {Function|String} callbackOrProperty  When the function is passed, it should return\n * the collection items. When the string is provided, the property value is used to create the bound collection items.\n */\n\n/**\n * Creates the class factory binding in which items of the source collection are passed to\n * the constructor of the specified class.\n *\n * @method #as\n * @param {Function} Class The class constructor used to create instances in the factory.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/plugincollection\n */\n\n/* globals console */\n\nimport CKEditorError, { attachLinkToDocumentation } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Manages a list of CKEditor plugins, including loading, resolving dependencies and initialization.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class PluginCollection {\n\t/**\n\t * Creates an instance of the plugin collection class.\n\t * Allows loading and initializing plugins and their dependencies.\n\t * Allows to provide a list of already loaded plugins. These plugins will not be destroyed along with this collection.\n\t *\n\t * @param {module:core/editor/editor~Editor|module:core/context~Context} context\n\t * @param {Array.<Function>} [availablePlugins] Plugins (constructors) which the collection will be able to use\n\t * when {@link module:core/plugincollection~PluginCollection#init} is used with plugin names (strings, instead of constructors).\n\t * Usually, the editor will pass its built-in plugins to the collection so they can later be\n\t * used in `config.plugins` or `config.removePlugins` by names.\n\t * @param {Iterable.<Array>} contextPlugins A list of already initialized plugins represented by a\n\t * `[ PluginConstructor, pluginInstance ]` pair.\n\t */\n\tconstructor( context, availablePlugins = [], contextPlugins = [] ) {\n\t\t/**\n\t\t * @protected\n\t\t * @type {module:core/editor/editor~Editor|module:core/context~Context}\n\t\t */\n\t\tthis._context = context;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Map}\n\t\t */\n\t\tthis._plugins = new Map();\n\n\t\t/**\n\t\t * A map of plugin constructors that can be retrieved by their names.\n\t\t *\n\t\t * @protected\n\t\t * @type {Map.<String|Function,Function>}\n\t\t */\n\t\tthis._availablePlugins = new Map();\n\n\t\tfor ( const PluginConstructor of availablePlugins ) {\n\t\t\tif ( PluginConstructor.pluginName ) {\n\t\t\t\tthis._availablePlugins.set( PluginConstructor.pluginName, PluginConstructor );\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Map of {@link module:core/contextplugin~ContextPlugin context plugins} which can be retrieved by their constructors or instances.\n\t\t *\n\t\t * @protected\n\t\t * @type {Map<Function,Function>}\n\t\t */\n\t\tthis._contextPlugins = new Map();\n\n\t\tfor ( const [ PluginConstructor, pluginInstance ] of contextPlugins ) {\n\t\t\tthis._contextPlugins.set( PluginConstructor, pluginInstance );\n\t\t\tthis._contextPlugins.set( pluginInstance, PluginConstructor );\n\n\t\t\t// To make it possible to require a plugin by its name.\n\t\t\tif ( PluginConstructor.pluginName ) {\n\t\t\t\tthis._availablePlugins.set( PluginConstructor.pluginName, PluginConstructor );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Returns `[ PluginConstructor, pluginInstance ]` pairs.\n\t *\n\t * @returns {Iterable.<Array>}\n\t */\n\t* [ Symbol.iterator ]() {\n\t\tfor ( const entry of this._plugins ) {\n\t\t\tif ( typeof entry[ 0 ] == 'function' ) {\n\t\t\t\tyield entry;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the plugin instance by its constructor or name.\n\t *\n\t *\t\t// Check if 'Clipboard' plugin was loaded.\n\t *\t\tif ( editor.plugins.has( 'Clipboard' ) ) {\n\t *\t\t\t// Get clipboard plugin instance\n\t *\t\t\tconst clipboard = editor.plugins.get( 'Clipboard' );\n\t *\n\t *\t\t\tthis.listenTo( clipboard, 'inputTransformation', ( evt, data ) => {\n\t *\t\t\t\t// Do something on clipboard input.\n\t *\t\t\t} );\n\t *\t\t}\n\t *\n\t * **Note**: This method will throw error if plugin is not loaded. Use `{@link #has editor.plugins.has()}`\n\t * to check if plugin is available.\n\t *\n\t * @param {Function|String} key The plugin constructor or {@link module:core/plugin~PluginInterface.pluginName name}.\n\t * @returns {module:core/plugin~PluginInterface}\n\t */\n\tget( key ) {\n\t\tconst plugin = this._plugins.get( key );\n\n\t\tif ( !plugin ) {\n\t\t\t/**\n\t\t\t * The plugin is not loaded and could not be obtained.\n\t\t\t *\n\t\t\t * Plugin classes (constructors) need to be provided to the editor and must be loaded before they can be obtained from\n\t\t\t * the plugin collection.\n\t\t\t * This is usually done in CKEditor 5 builds by setting the {@link module:core/editor/editor~Editor.builtinPlugins}\n\t\t\t * property.\n\t\t\t *\n\t\t\t * **Note**: You can use `{@link module:core/plugincollection~PluginCollection#has editor.plugins.has()}`\n\t\t\t * to check if plugin was loaded.\n\t\t\t *\n\t\t\t * @error plugincollection-plugin-not-loaded\n\t\t\t * @param {String} plugin The name of the plugin which is not loaded.\n\t\t\t */\n\t\t\tconst errorMsg = 'plugincollection-plugin-not-loaded: The requested plugin is not loaded.';\n\n\t\t\tlet pluginName = key;\n\n\t\t\tif ( typeof key == 'function' ) {\n\t\t\t\tpluginName = key.pluginName || key.name;\n\t\t\t}\n\n\t\t\tthrow new CKEditorError( errorMsg, this._context, { plugin: pluginName } );\n\t\t}\n\n\t\treturn plugin;\n\t}\n\n\t/**\n\t * Checks if a plugin is loaded.\n\t *\n\t *\t\t// Check if the 'Clipboard' plugin was loaded.\n\t *\t\tif ( editor.plugins.has( 'Clipboard' ) ) {\n\t *\t\t\t// Now use the clipboard plugin instance:\n\t *\t\t\tconst clipboard = editor.plugins.get( 'Clipboard' );\n\t *\n\t *\t\t\t// ...\n\t *\t\t}\n\t *\n\t * @param {Function|String} key The plugin constructor or {@link module:core/plugin~PluginInterface.pluginName name}.\n\t * @returns {Boolean}\n\t */\n\thas( key ) {\n\t\treturn this._plugins.has( key );\n\t}\n\n\t/**\n\t * Initializes a set of plugins and adds them to the collection.\n\t *\n\t * @param {Array.<Function|String>} plugins An array of {@link module:core/plugin~PluginInterface plugin constructors}\n\t * or {@link module:core/plugin~PluginInterface.pluginName plugin names}. The second option (names) works only if\n\t * `availablePlugins` were passed to the {@link #constructor}.\n\t * @param {Array.<String|Function>} [removePlugins] Names of plugins or plugin constructors\n\t * that should not be loaded (despite being specified in the `plugins` array).\n\t * @returns {Promise.<module:core/plugin~LoadedPlugins>} A promise which gets resolved once all plugins are loaded\n\t * and available in the collection.\n\t */\n\tinit( plugins, removePlugins = [] ) {\n\t\tconst that = this;\n\t\tconst context = this._context;\n\t\tconst loading = new Set();\n\t\tconst loaded = [];\n\n\t\tconst pluginConstructors = mapToAvailableConstructors( plugins );\n\t\tconst removePluginConstructors = mapToAvailableConstructors( removePlugins );\n\t\tconst missingPlugins = getMissingPluginNames( plugins );\n\n\t\tif ( missingPlugins ) {\n\t\t\t/**\n\t\t\t * Some plugins are not available and could not be loaded.\n\t\t\t *\n\t\t\t * Plugin classes (constructors) need to be provided to the editor before they can be loaded by name.\n\t\t\t * This is usually done in CKEditor 5 builds by setting the {@link module:core/editor/editor~Editor.builtinPlugins}\n\t\t\t * property.\n\t\t\t *\n\t\t\t * **If you see this warning when using one of the {@glink builds/index CKEditor 5 Builds}**, it means\n\t\t\t * that you try to enable a plugin which was not included in that build. This may be due to a typo\n\t\t\t * in the plugin name or simply because that plugin is not a part of this build. In the latter scenario,\n\t\t\t * read more about {@glink builds/guides/development/custom-builds custom builds}.\n\t\t\t *\n\t\t\t * **If you see this warning when using one of the editor creators directly** (not a build), then it means\n\t\t\t * that you tried loading plugins by name. However, unlike CKEditor 4, CKEditor 5 does not implement a \"plugin loader\".\n\t\t\t * This means that CKEditor 5 does not know where to load the plugin modules from. Therefore, you need to\n\t\t\t * provide each plugin through reference (as a constructor function). Check out the examples in\n\t\t\t * {@glink builds/guides/integration/advanced-setup#scenario-2-building-from-source \"Building from source\"}.\n\t\t\t *\n\t\t\t * @error plugincollection-plugin-not-found\n\t\t\t * @param {Array.<String>} plugins The name of the plugins which could not be loaded.\n\t\t\t */\n\t\t\tconst errorMsg = 'plugincollection-plugin-not-found: Some plugins are not available and could not be loaded.';\n\n\t\t\t// Log the error so it's more visible on the console. Hopefully, for better DX.\n\t\t\tconsole.error( attachLinkToDocumentation( errorMsg ), { plugins: missingPlugins } );\n\n\t\t\treturn Promise.reject( new CKEditorError( errorMsg, context, { plugins: missingPlugins } ) );\n\t\t}\n\n\t\treturn Promise.all( pluginConstructors.map( loadPlugin ) )\n\t\t\t.then( () => initPlugins( loaded, 'init' ) )\n\t\t\t.then( () => initPlugins( loaded, 'afterInit' ) )\n\t\t\t.then( () => loaded );\n\n\t\tfunction loadPlugin( PluginConstructor ) {\n\t\t\tif ( removePluginConstructors.includes( PluginConstructor ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// The plugin is already loaded or being loaded - do nothing.\n\t\t\tif ( that._plugins.has( PluginConstructor ) || loading.has( PluginConstructor ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn instantiatePlugin( PluginConstructor )\n\t\t\t\t.catch( err => {\n\t\t\t\t\t/**\n\t\t\t\t\t * It was not possible to load the plugin.\n\t\t\t\t\t *\n\t\t\t\t\t * This is a generic error logged to the console when a JavaSript error is thrown during the initialization\n\t\t\t\t\t * of one of the plugins.\n\t\t\t\t\t *\n\t\t\t\t\t * If you correctly handled the promise returned by the editor's `create()` method (like shown below),\n\t\t\t\t\t * you will find the original error logged to the console, too:\n\t\t\t\t\t *\n\t\t\t\t\t *\t\tClassicEditor.create( document.getElementById( 'editor' ) )\n\t\t\t\t\t *\t\t\t.then( editor => {\n\t\t\t\t\t *\t\t\t\t// ...\n\t\t\t\t\t * \t\t\t} )\n\t\t\t\t\t *\t\t\t.catch( error => {\n\t\t\t\t\t *\t\t\t\tconsole.error( error );\n\t\t\t\t\t *\t\t\t} );\n\t\t\t\t\t *\n\t\t\t\t\t * @error plugincollection-load\n\t\t\t\t\t * @param {String} plugin The name of the plugin that could not be loaded.\n\t\t\t\t\t */\n\t\t\t\t\tconsole.error( attachLinkToDocumentation(\n\t\t\t\t\t\t'plugincollection-load: It was not possible to load the plugin.'\n\t\t\t\t\t), { plugin: PluginConstructor } );\n\n\t\t\t\t\tthrow err;\n\t\t\t\t} );\n\t\t}\n\n\t\tfunction initPlugins( loadedPlugins, method ) {\n\t\t\treturn loadedPlugins.reduce( ( promise, plugin ) => {\n\t\t\t\tif ( !plugin[ method ] ) {\n\t\t\t\t\treturn promise;\n\t\t\t\t}\n\n\t\t\t\tif ( that._contextPlugins.has( plugin ) ) {\n\t\t\t\t\treturn promise;\n\t\t\t\t}\n\n\t\t\t\treturn promise.then( plugin[ method ].bind( plugin ) );\n\t\t\t}, Promise.resolve() );\n\t\t}\n\n\t\tfunction instantiatePlugin( PluginConstructor ) {\n\t\t\treturn new Promise( resolve => {\n\t\t\t\tloading.add( PluginConstructor );\n\n\t\t\t\tif ( PluginConstructor.requires ) {\n\t\t\t\t\tPluginConstructor.requires.forEach( RequiredPluginConstructorOrName => {\n\t\t\t\t\t\tconst RequiredPluginConstructor = getPluginConstructor( RequiredPluginConstructorOrName );\n\n\t\t\t\t\t\tif ( PluginConstructor.isContextPlugin && !RequiredPluginConstructor.isContextPlugin ) {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * If a plugin is a context plugin, all plugins it requires should also be context plugins\n\t\t\t\t\t\t\t * instead of plugins. In other words, if one plugin can be used in the context,\n\t\t\t\t\t\t\t * all its requirements should also be ready to be used in the context. Note that the context\n\t\t\t\t\t\t\t * provides only a part of the API provided by the editor. If one plugin needs a full\n\t\t\t\t\t\t\t * editor API, all plugins which require it are considered as plugins that need a full\n\t\t\t\t\t\t\t * editor API.\n\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t * @error plugincollection-context-required\n\t\t\t\t\t\t\t * @param {String} plugin The name of the required plugin.\n\t\t\t\t\t\t\t * @param {String} requiredBy The name of the parent plugin.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t\t\t'plugincollection-context-required: Context plugin can not require plugin which is not a context plugin',\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t{ plugin: RequiredPluginConstructor.name, requiredBy: PluginConstructor.name }\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( removePlugins.includes( RequiredPluginConstructor ) ) {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Cannot load a plugin because one of its dependencies is listed in the `removePlugins` option.\n\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t * @error plugincollection-required\n\t\t\t\t\t\t\t * @param {String} plugin The name of the required plugin.\n\t\t\t\t\t\t\t * @param {String} requiredBy The name of the parent plugin.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t\t\t'plugincollection-required: Cannot load a plugin because one of its dependencies is listed in' +\n\t\t\t\t\t\t\t\t'the `removePlugins` option.',\n\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t{ plugin: RequiredPluginConstructor.name, requiredBy: PluginConstructor.name }\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tloadPlugin( RequiredPluginConstructor );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tconst plugin = that._contextPlugins.get( PluginConstructor ) || new PluginConstructor( context );\n\t\t\t\tthat._add( PluginConstructor, plugin );\n\t\t\t\tloaded.push( plugin );\n\n\t\t\t\tresolve();\n\t\t\t} );\n\t\t}\n\n\t\tfunction getPluginConstructor( PluginConstructorOrName ) {\n\t\t\tif ( typeof PluginConstructorOrName == 'function' ) {\n\t\t\t\treturn PluginConstructorOrName;\n\t\t\t}\n\n\t\t\treturn that._availablePlugins.get( PluginConstructorOrName );\n\t\t}\n\n\t\tfunction getMissingPluginNames( plugins ) {\n\t\t\tconst missingPlugins = [];\n\n\t\t\tfor ( const pluginNameOrConstructor of plugins ) {\n\t\t\t\tif ( !getPluginConstructor( pluginNameOrConstructor ) ) {\n\t\t\t\t\tmissingPlugins.push( pluginNameOrConstructor );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn missingPlugins.length ? missingPlugins : null;\n\t\t}\n\n\t\tfunction mapToAvailableConstructors( plugins ) {\n\t\t\treturn plugins\n\t\t\t\t.map( pluginNameOrConstructor => getPluginConstructor( pluginNameOrConstructor ) )\n\t\t\t\t.filter( PluginConstructor => !!PluginConstructor );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys all loaded plugins.\n\t *\n\t * @returns {Promise}\n\t */\n\tdestroy() {\n\t\tconst promises = [];\n\n\t\tfor ( const [ , pluginInstance ] of this ) {\n\t\t\tif ( typeof pluginInstance.destroy == 'function' && !this._contextPlugins.has( pluginInstance ) ) {\n\t\t\t\tpromises.push( pluginInstance.destroy() );\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.all( promises );\n\t}\n\n\t/**\n\t * Adds the plugin to the collection. Exposed mainly for testing purposes.\n\t *\n\t * @protected\n\t * @param {Function} PluginConstructor The plugin constructor.\n\t * @param {module:core/plugin~PluginInterface} plugin The instance of the plugin.\n\t */\n\t_add( PluginConstructor, plugin ) {\n\t\tthis._plugins.set( PluginConstructor, plugin );\n\n\t\tconst pluginName = PluginConstructor.pluginName;\n\n\t\tif ( !pluginName ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this._plugins.has( pluginName ) ) {\n\t\t\t/**\n\t\t\t * Two plugins with the same {@link module:core/plugin~PluginInterface.pluginName} were loaded.\n\t\t\t * This will lead to runtime conflicts between these plugins.\n\t\t\t *\n\t\t\t * In practice, this warning usually means that new plugins were added to an existing CKEditor 5 build.\n\t\t\t * Plugins should always be added to a source version of the editor (`@ckeditor/ckeditor5-editor-*`),\n\t\t\t * not to an editor imported from one of the `@ckeditor/ckeditor5-build-*` packages.\n\t\t\t *\n\t\t\t * Check your import paths and the list of plugins passed to\n\t\t\t * {@link module:core/editor/editor~Editor.create `Editor.create()`}\n\t\t\t * or specified in {@link module:core/editor/editor~Editor.builtinPlugins `Editor.builtinPlugins`}.\n\t\t\t *\n\t\t\t * The second option is that your `node_modules/` directory contains duplicated versions of the same\n\t\t\t * CKEditor 5 packages. Normally, on clean installations, npm deduplicates packages in `node_modules/`, so\n\t\t\t * it may be enough to call `rm -rf node_modules && npm i`. However, if you installed conflicting versions\n\t\t\t * of packages, their dependencies may need to be installed in more than one version which may lead to this\n\t\t\t * warning.\n\t\t\t *\n\t\t\t * Technically speaking, this error occurs because after adding a plugin to an existing editor build\n\t\t\t * dependencies of this plugin are being duplicated.\n\t\t\t * They are already built into that editor build and now get added for the second time as dependencies\n\t\t\t * of the plugin you are installing.\n\t\t\t *\n\t\t\t * Read more about {@glink builds/guides/integration/installing-plugins installing plugins}.\n\t\t\t *\n\t\t\t * @error plugincollection-plugin-name-conflict\n\t\t\t * @param {String} pluginName The duplicated plugin name.\n\t\t\t * @param {Function} plugin1 The first plugin constructor.\n\t\t\t * @param {Function} plugin2 The second plugin constructor.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'plugincollection-plugin-name-conflict: Two plugins with the same name were loaded.',\n\t\t\t\tnull,\n\t\t\t\t{ pluginName, plugin1: this._plugins.get( pluginName ).constructor, plugin2: PluginConstructor }\n\t\t\t);\n\t\t}\n\n\t\tthis._plugins.set( pluginName, plugin );\n\t}\n}\n\nmix( PluginCollection, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals window */\n\n/**\n * @module utils/translation-service\n */\n\nimport CKEditorError from './ckeditorerror';\n\n/* istanbul ignore else */\nif ( !window.CKEDITOR_TRANSLATIONS ) {\n\twindow.CKEDITOR_TRANSLATIONS = {};\n}\n\n/**\n * Adds translations to existing ones or overrides the existing translations. These translations will later\n * be available for the {@link module:utils/locale~Locale#t `t()`} function.\n *\n * The `translations` is an object which consists of `messageId: translation` pairs. Note that the message ID can be\n * either constructed from the message string or from the message ID if it was passed\n * (this happens rarely and mostly for short messages or messages with placeholders).\n * Since the editor displays only the message string, the message ID can be found either in the source code or in the\n * built translations for another language.\n *\n *\t\tadd( 'pl', {\n *\t\t\t'Cancel': 'Anuluj',\n *\t\t\t'IMAGE': 'obraz', // Note that the `IMAGE` comes from the message ID, while the string can be `image`.\n *\t\t} );\n *\n * If the message is supposed to support various plural forms, make sure to provide an array with the singular form and all plural forms:\n *\n *\t\tadd( 'pl', {\n *\t \t\t'Add space': [ 'Dodaj spację', 'Dodaj %0 spacje', 'Dodaj %0 spacji' ]\n * \t\t} );\n *\n * You should also specify the third argument (the `getPluralForm()` function) that will be used to determine the plural form if no\n * language file was loaded for that language. All language files coming from CKEditor 5 sources will have this option set, so\n * these plural form rules will be reused by other translations added to the registered languages. The `getPluralForm()` function\n * can return either a Boolean or a number.\n *\n * \t\tadd( 'en', {\n *\t \t\t// ... Translations.\n * \t\t}, n => n !== 1 );\n * \t\tadd( 'pl', {\n *\t \t\t// ... Translations.\n * \t\t}, n => n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && ( n % 100 < 10 || n % 100 >= 20 ) ? 1 : 2 );\n *\n * All translations extend the global `window.CKEDITOR_TRANSLATIONS` object. An example of this object can be found below:\n *\n * \t\t{\n * \t\t\tpl: {\n *\t\t\t\tdictionary: {\n *\t\t\t\t\t'Cancel': 'Anuluj',\n *\t\t\t\t\t'Add space': [ 'Dodaj spację', 'Dodaj %0 spacje', 'Dodaj %0 spacji' ]\n *\t\t\t\t},\n *\t\t\t\t// A function that returns the plural form index.\n *\t\t\t\tgetPluralForm: n => n !==1\n *\t\t\t}\n *\t\t\t// Other languages.\n *\t\t}\n *\n * If you cannot import this function from this module (e.g. because you use a CKEditor 5 build), you can\n * still add translations by extending the global `window.CKEDITOR_TRANSLATIONS` object by using a function like\n * the one below:\n *\n *\t\tfunction addTranslations( language, translations, getPluralForm ) {\n *\t\t\tif ( !window.CKEDITOR_TRANSLATIONS ) {\n *\t\t\t\twindow.CKEDITOR_TRANSLATIONS = {};\n *\t\t\t}\n\n *\t\t\tif ( !window.CKEDITOR_TRANSLATIONS[ language ] ) {\n *\t\t\t\twindow.CKEDITOR_TRANSLATIONS[ language ] = {};\n *\t\t\t}\n *\n *\t\t\tconst languageTranslations = window.CKEDITOR_TRANSLATIONS[ language ];\n *\n * \t\t\tlanguageTranslations.dictionary = languageTranslations.dictionary || {};\n * \t\t\tlanguageTranslations.getPluralForm = getPluralForm || languageTranslations.getPluralForm;\n *\n *\t\t\t// Extend the dictionary for the given language.\n *\t\t\tObject.assign( languageTranslations.dictionary, translations );\n *\t\t}\n *\n * @param {String} language Target language.\n * @param {Object.<String,*>} translations An object with translations which will be added to the dictionary.\n * For each message ID the value should be either a translation or an array of translations if the message\n * should support plural forms.\n * @param {Function} getPluralForm A function that returns the plural form index (a number).\n */\nexport function add( language, translations, getPluralForm ) {\n\tif ( !window.CKEDITOR_TRANSLATIONS[ language ] ) {\n\t\twindow.CKEDITOR_TRANSLATIONS[ language ] = {};\n\t}\n\n\tconst languageTranslations = window.CKEDITOR_TRANSLATIONS[ language ];\n\n\tlanguageTranslations.dictionary = languageTranslations.dictionary || {};\n\tlanguageTranslations.getPluralForm = getPluralForm || languageTranslations.getPluralForm;\n\n\tObject.assign( languageTranslations.dictionary, translations );\n}\n\n/**\n * **Note:** This method is internal, use {@link module:utils/locale~Locale#t the `t()` function} instead to translate\n * the editor UI parts.\n *\n * This function is responsible for translating messages to the specified language. It uses translations added perviously\n * by {@link module:utils/translation-service~add} (a translations dictionary and the `getPluralForm()` function\n * to provide accurate translations of plural forms).\n *\n * When no translation is defined in the dictionary or the dictionary does not exist, this function returns\n * the original message string or the message plural depending on the number of elements.\n *\n *\t\ttranslate( 'pl', { string: 'Cancel' } ); // 'Cancel'\n *\n * The third optional argument is the number of elements, based on which the single form or one of the plural forms\n * should be picked when the message is supposed to support various plural forms.\n *\n * \t\ttranslate( 'en', { string: 'Add a space', plural: 'Add %0 spaces' }, 1 ); // 'Add a space'\n * \t\ttranslate( 'en', { string: 'Add a space', plural: 'Add %0 spaces' }, 3 ); // 'Add %0 spaces'\n *\n * The message should provide an ID using the `id` property when the message strings are not unique and their\n * translations should be different.\n *\n *\t\ttranslate( 'en', { string: 'image', id: 'ADD_IMAGE' } );\n *\t\ttranslate( 'en', { string: 'image', id: 'AN_IMAGE' } );\n *\n * @protected\n * @param {String} language Target language.\n * @param {module:utils/translation-service~Message|String} message A message that will be translated.\n * @param {Number} [quantity] The number of elements for which a plural form should be picked from the target language dictionary.\n * @returns {String} Translated sentence.\n */\nexport function _translate( language, message, quantity = 1 ) {\n\tif ( typeof quantity !== 'number' ) {\n\t\t/**\n\t\t * An incorrect value was passed to the translation function. This was probably caused\n\t\t * by an incorrect message interpolation of a plural form. Note that for messages supporting plural forms\n\t\t * the second argument of the `t()` function should always be a number or an array with a number as the first element.\n\t\t *\n\t\t * @error translation-service-quantity-not-a-number\n\t\t */\n\t\tthrow new CKEditorError( 'translation-service-quantity-not-a-number: Expecting `quantity` to be a number.', null, { quantity } );\n\t}\n\n\tconst numberOfLanguages = getNumberOfLanguages();\n\n\tif ( numberOfLanguages === 1 ) {\n\t\t// Override the language to the only supported one.\n\t\t// This can't be done in the `Locale` class, because the translations comes after the `Locale` class initialization.\n\t\tlanguage = Object.keys( window.CKEDITOR_TRANSLATIONS )[ 0 ];\n\t}\n\n\tconst messageId = message.id || message.string;\n\n\tif ( numberOfLanguages === 0 || !hasTranslation( language, messageId ) ) {\n\t\tif ( quantity !== 1 ) {\n\t\t\t// Return the default plural form that was passed in the `message.plural` parameter.\n\t\t\treturn message.plural;\n\t\t}\n\n\t\treturn message.string;\n\t}\n\n\tconst dictionary = window.CKEDITOR_TRANSLATIONS[ language ].dictionary;\n\tconst getPluralForm = window.CKEDITOR_TRANSLATIONS[ language ].getPluralForm || ( n => n === 1 ? 0 : 1 );\n\n\tif ( typeof dictionary[ messageId ] === 'string' ) {\n\t\treturn dictionary[ messageId ];\n\t}\n\n\tconst pluralFormIndex = Number( getPluralForm( quantity ) );\n\n\t// Note: The `translate` function is not responsible for replacing `%0, %1, ...` with values.\n\treturn dictionary[ messageId ][ pluralFormIndex ];\n}\n\n/**\n * Clears dictionaries for test purposes.\n *\n * @protected\n */\nexport function _clear() {\n\twindow.CKEDITOR_TRANSLATIONS = {};\n}\n\n// Checks whether the dictionary exists and translation in that dictionary exists.\nfunction hasTranslation( language, messageId ) {\n\treturn (\n\t\t!!window.CKEDITOR_TRANSLATIONS[ language ] &&\n\t\t!!window.CKEDITOR_TRANSLATIONS[ language ].dictionary[ messageId ]\n\t);\n}\n\nfunction getNumberOfLanguages() {\n\treturn Object.keys( window.CKEDITOR_TRANSLATIONS ).length;\n}\n\n/**\n * The internationalization message interface. A message that implements this interface can be passed to the `t()` function\n * to be translated to the target UI language.\n *\n * @typedef {Object} module:utils/translation-service~Message\n *\n * @property {String} string The message string to translate. Acts as a default translation if the translation for a given language\n * is not defined. When the message is supposed to support plural forms, the string should be the English singular form of the message.\n * @property {String} [id] The message ID. If passed, the message ID is taken from this property instead of the `message.string`.\n * This property is useful when various messages share the same message string, for example, the `editor` string in `in the editor`\n * and `my editor` sentences.\n * @property {String} [plural] The plural form of the message. This property should be skipped when a message is not supposed\n * to support plural forms. Otherwise it should always be set to a string with the English plural form of the message.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/locale\n */\n\n/* globals console */\n\nimport { _translate } from './translation-service';\n\nconst RTL_LANGUAGE_CODES = [ 'ar', 'fa', 'he', 'ku', 'ug' ];\n\n/**\n * Represents the localization services.\n */\nexport default class Locale {\n\t/**\n\t * Creates a new instance of the locale class. Learn more about\n\t * {@glink features/ui-language configuring the language of the editor}.\n\t *\n\t * @param {Object} [options] Locale configuration.\n\t * @param {String} [options.uiLanguage='en'] The editor UI language code in the\n\t * [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format. See {@link #uiLanguage}.\n\t * @param {String} [options.contentLanguage] The editor content language code in the\n\t * [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format. If not specified, the same as `options.language`.\n\t * See {@link #contentLanguage}.\n\t */\n\tconstructor( options = {} ) {\n\t\t/**\n\t\t * The editor UI language code in the [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n\t\t *\n\t\t * If the {@link #contentLanguage content language} was not specified in the `Locale` constructor,\n\t\t * it also defines the language of the content.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.uiLanguage = options.uiLanguage || 'en';\n\n\t\t/**\n\t\t * The editor content language code in the [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n\t\t *\n\t\t * Usually the same as the {@link #uiLanguage editor language}, it can be customized by passing an optional\n\t\t * argument to the `Locale` constructor.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.contentLanguage = options.contentLanguage || this.uiLanguage;\n\n\t\t/**\n\t\t * Text direction of the {@link #uiLanguage editor UI language}. Either `'ltr'` or `'rtl'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.uiLanguageDirection = getLanguageDirection( this.uiLanguage );\n\n\t\t/**\n\t\t * Text direction of the {@link #contentLanguage editor content language}.\n\t\t *\n\t\t * If the content language was passed directly to the `Locale` constructor, this property represents the\n\t\t * direction of that language.\n\t\t *\n\t\t * If the {@link #contentLanguage editor content language} was derived from the {@link #uiLanguage editor language},\n\t\t * the content language direction is the same as the {@link #uiLanguageDirection UI language direction}.\n\t\t *\n\t\t * The value is either `'ltr'` or `'rtl'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.contentLanguageDirection = getLanguageDirection( this.contentLanguage );\n\n\t\t/**\n\t\t * Translates the given message to the {@link #uiLanguage}. This method is also available in\n\t\t * {@link module:core/editor/editor~Editor#t `Editor`} and {@link module:ui/view~View#t `View`}.\n\t\t *\n\t\t * This method's context is statically bound to the `Locale` instance and **should always be called as a function**:\n\t\t *\n\t\t *\t\tconst t = locale.t;\n\t\t *\t\tt( 'Label' );\n\t\t *\n\t\t * The message can be either a string or an object implementing the {@link module:utils/translation-service~Message} interface.\n\t\t *\n\t\t * The message may contain placeholders (`%<index>`) for value(s) that are passed as a `values` parameter.\n\t\t * For an array of values, the `%<index>` will be changed to an element of that array at the given index.\n\t\t * For a single value passed as the second argument, only the `%0` placeholders will be changed to the provided value.\n\t\t *\n\t\t *\t\tt( 'Created file \"%0\" in %1ms.', [ fileName, timeTaken ] );\n\t\t * \t\tt( 'Created file \"%0\", fileName );\n\t\t *\n\t\t * The message supports plural forms. To specify the plural form, use the `plural` property. Singular or plural form\n\t\t * will be chosen depending on the first value from the passed `values`. The value of the `plural` property is used\n\t\t * as a default plural translation when the translation for the target language is missing.\n\t\t *\n\t\t *\t\tt( { string: 'Add a space', plural: 'Add %0 spaces' }, 1 ); // 'Add a space' for the English language.\n\t\t *\t\tt( { string: 'Add a space', plural: 'Add %0 spaces' }, 5 ); // 'Add 5 spaces' for the English language.\n\t\t *\t\tt( { string: '%1 a space', plural: '%1 %0 spaces' }, [ 2, 'Add' ] ); // 'Add 2 spaces' for the English language.\n\t\t *\n\t\t * \t\tt( { string: 'Add a space', plural: 'Add %0 spaces' }, 1 ); // 'Dodaj spację' for the Polish language.\n\t\t *\t\tt( { string: 'Add a space', plural: 'Add %0 spaces' }, 5 ); // 'Dodaj 5 spacji' for the Polish language.\n\t\t *\t\tt( { string: '%1 a space', plural: '%1 %0 spaces' }, [ 2, 'Add' ] ); // 'Dodaj 2 spacje' for the Polish language.\n\t\t *\n\t\t *  * The message should provide an ID using the `id` property when the message strings are not unique and their\n\t\t * translations should be different.\n\t\t *\n\t\t *\t\ttranslate( 'en', { string: 'image', id: 'ADD_IMAGE' } );\n\t\t *\t\ttranslate( 'en', { string: 'image', id: 'AN_IMAGE' } );\n\t\t *\n\t\t * @method #t\n\t\t * @param {String|module:utils/translation-service~Message} message A message that will be localized (translated).\n\t\t * @param {String|Number|Array.<String|Number>} [values] A value or an array of values that will fill message placeholders.\n\t\t * For messages supporting plural forms the first value will determine the plural form.\n\t\t * @returns {String}\n\t\t */\n\t\tthis.t = ( message, values ) => this._t( message, values );\n\t}\n\n\t/**\n\t * The editor UI language code in the [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n\t *\n\t * **Note**: This property was deprecated. Please use {@link #uiLanguage} and {@link #contentLanguage}\n\t * properties instead.\n\t *\n\t * @deprecated\n\t * @member {String}\n\t */\n\tget language() {\n\t\t/**\n\t\t * The {@link module:utils/locale~Locale#language `Locale#language`} property was deprecated and will\n\t\t * be removed in the near future. Please use the {@link #uiLanguage} and {@link #contentLanguage} properties instead.\n\t\t *\n\t\t * @error locale-deprecated-language-property\n\t\t */\n\t\tconsole.warn(\n\t\t\t'locale-deprecated-language-property: ' +\n\t\t\t'The Locale#language property has been deprecated and will be removed in the near future. ' +\n\t\t\t'Please use #uiLanguage and #contentLanguage properties instead.' );\n\n\t\treturn this.uiLanguage;\n\t}\n\n\t/**\n\t * An unbound version of the {@link #t} method.\n\t *\n\t * @private\n\t * @param {String|module:utils/translation-service~Message} message\n\t * @param {Number|String|Array.<Number|String>} [values]\n\t * @returns {String}\n\t */\n\t_t( message, values = [] ) {\n\t\tif ( !Array.isArray( values ) ) {\n\t\t\tvalues = [ values ];\n\t\t}\n\n\t\tif ( typeof message === 'string' ) {\n\t\t\tmessage = { string: message };\n\t\t}\n\n\t\tconst hasPluralForm = !!message.plural;\n\t\tconst quantity = hasPluralForm ? values[ 0 ] : 1;\n\n\t\tconst translatedString = _translate( this.uiLanguage, message, quantity );\n\n\t\treturn interpolateString( translatedString, values );\n\t}\n}\n\n// Fills the `%0, %1, ...` string placeholders with values.\nfunction interpolateString( string, values ) {\n\treturn string.replace( /%(\\d+)/g, ( match, index ) => {\n\t\treturn ( index < values.length ) ? values[ index ] : match;\n\t} );\n}\n\n// Helps determine whether a language is LTR or RTL.\n//\n// @param {String} language The ISO 639-1 language code.\n// @returns {String} 'ltr' or 'rtl\nfunction getLanguageDirection( languageCode ) {\n\treturn RTL_LANGUAGE_CODES.includes( languageCode ) ? 'rtl' : 'ltr';\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/context\n */\n\nimport Config from '@ckeditor/ckeditor5-utils/src/config';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport PluginCollection from './plugincollection';\nimport Locale from '@ckeditor/ckeditor5-utils/src/locale';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Provides a common, higher-level environment for solutions that use multiple {@link module:core/editor/editor~Editor editors}\n * or plugins that work outside the editor. Use it instead of {@link module:core/editor/editor~Editor.create `Editor.create()`}\n * in advanced application integrations.\n *\n * All configuration options passed to a context will be used as default options for editor instances initialized in that context.\n *\n * {@link module:core/contextplugin~ContextPlugin Context plugins} passed to a context instance will be shared among all\n * editor instances initialized in this context. These will be the same plugin instances for all the editors.\n *\n * **Note:** The context can only be initialized with {@link module:core/contextplugin~ContextPlugin context plugins}\n * (e.g. [comments](https://ckeditor.com/collaboration/comments/)). Regular {@link module:core/plugin~Plugin plugins} require an\n * editor instance to work and cannot be added to a context.\n *\n * **Note:** You can add a context plugin to an editor instance, though.\n *\n * If you are using multiple editor instances on one page and use any context plugins, create a context to share the configuration and\n * plugins among these editors. Some plugins will use the information about all existing editors to better integrate between them.\n *\n * If you are using plugins that do not require an editor to work (e.g. [comments](https://ckeditor.com/collaboration/comments/)),\n * enable and configure them using the context.\n *\n * If you are using only a single editor on each page, use {@link module:core/editor/editor~Editor.create `Editor.create()`} instead.\n * In such case, a context instance will be created by the editor instance in a transparent way.\n *\n * See {@link module:core/context~Context.create `Context.create()`} for usage examples.\n */\nexport default class Context {\n\t/**\n\t * Creates a context instance with a given configuration.\n\t *\n\t * Usually not to be used directly. See the static {@link module:core/context~Context.create `create()`} method.\n\t *\n\t * @param {Object} [config={}] The context configuration.\n\t */\n\tconstructor( config ) {\n\t\t/**\n\t\t * Stores all the configurations specific to this context instance.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:utils/config~Config}\n\t\t */\n\t\tthis.config = new Config( config, this.constructor.defaultConfig );\n\n\t\tconst availablePlugins = this.constructor.builtinPlugins;\n\n\t\tthis.config.define( 'plugins', availablePlugins );\n\n\t\t/**\n\t\t * The plugins loaded and in use by this context instance.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:core/plugincollection~PluginCollection}\n\t\t */\n\t\tthis.plugins = new PluginCollection( this, availablePlugins );\n\n\t\tconst languageConfig = this.config.get( 'language' ) || {};\n\n\t\t/**\n\t\t * @readonly\n\t\t * @type {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = new Locale( {\n\t\t\tuiLanguage: typeof languageConfig === 'string' ? languageConfig : languageConfig.ui,\n\t\t\tcontentLanguage: this.config.get( 'language.content' )\n\t\t} );\n\n\t\t/**\n\t\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t\t *\n\t\t * @see module:utils/locale~Locale#t\n\t\t * @method #t\n\t\t */\n\t\tthis.t = this.locale.t;\n\n\t\t/**\n\t\t * A list of editors that this context instance is injected to.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:utils/collection~Collection}\n\t\t */\n\t\tthis.editors = new Collection();\n\n\t\t/**\n\t\t * Reference to the editor which created the context.\n\t\t * Null when the context was created outside of the editor.\n\t\t *\n\t\t * It is used to destroy the context when removing the editor that has created the context.\n\t\t *\n\t\t * @private\n\t\t * @type {module:core/editor/editor~Editor|null}\n\t\t */\n\t\tthis._contextOwner = null;\n\t}\n\n\t/**\n\t * Loads and initializes plugins specified in the configuration.\n\t *\n\t * @returns {Promise.<module:core/plugin~LoadedPlugins>} A promise which resolves\n\t * once the initialization is completed, providing an array of loaded plugins.\n\t */\n\tinitPlugins() {\n\t\tconst plugins = this.config.get( 'plugins' ) || [];\n\n\t\tfor ( const Plugin of plugins ) {\n\t\t\tif ( typeof Plugin != 'function' ) {\n\t\t\t\t/**\n\t\t\t\t * Only a constructor function is allowed as a {@link module:core/contextplugin~ContextPlugin context plugin}.\n\t\t\t\t *\n\t\t\t\t * @error context-initplugins-constructor-only\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'context-initplugins-constructor-only: Only a constructor function is allowed as a context plugin.',\n\t\t\t\t\tnull,\n\t\t\t\t\t{ Plugin }\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( Plugin.isContextPlugin !== true ) {\n\t\t\t\t/**\n\t\t\t\t * Only a plugin marked as a {@link module:core/contextplugin~ContextPlugin.isContextPlugin context plugin}\n\t\t\t\t * is allowed to be used with a context.\n\t\t\t\t *\n\t\t\t\t * @error context-initplugins-invalid-plugin\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'context-initplugins-invalid-plugin: Only a plugin marked as a context plugin is allowed to be used with a context.',\n\t\t\t\t\tnull,\n\t\t\t\t\t{ Plugin }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn this.plugins.init( plugins );\n\t}\n\n\t/**\n\t * Destroys the context instance and all editors used with the context,\n\t * releasing all resources used by the context.\n\t *\n\t * @returns {Promise} A promise that resolves once the context instance is fully destroyed.\n\t */\n\tdestroy() {\n\t\treturn Promise.all( Array.from( this.editors, editor => editor.destroy() ) )\n\t\t\t.then( () => this.plugins.destroy() );\n\t}\n\n\t/**\n\t * Adds a reference to the editor which is used with this context.\n\t *\n\t * When the given editor has created the context, the reference to this editor will be stored\n\t * as a {@link ~Context#_contextOwner}.\n\t *\n\t * This method should only be used by the editor.\n\t *\n\t * @protected\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {Boolean} isContextOwner Stores the given editor as a context owner.\n\t */\n\t_addEditor( editor, isContextOwner ) {\n\t\tif ( this._contextOwner ) {\n\t\t\t/**\n\t\t\t * Cannot add multiple editors to the context which is created by the editor.\n\t\t\t *\n\t\t\t * @error context-addEditor-private-context\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'context-addEditor-private-context: Cannot add multiple editors to the context which is created by the editor.'\n\t\t\t);\n\t\t}\n\n\t\tthis.editors.add( editor );\n\n\t\tif ( isContextOwner ) {\n\t\t\tthis._contextOwner = editor;\n\t\t}\n\t}\n\n\t/**\n\t * Removes a reference to the editor which was used with this context.\n\t * When the context was created by the given editor, the context will be destroyed.\n\t *\n\t * This method should only be used by the editor.\n\t *\n\t * @protected\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @return {Promise} A promise that resolves once the editor is removed from the context or when the context was destroyed.\n\t */\n\t_removeEditor( editor ) {\n\t\tif ( this.editors.has( editor ) ) {\n\t\t\tthis.editors.remove( editor );\n\t\t}\n\n\t\tif ( this._contextOwner === editor ) {\n\t\t\treturn this.destroy();\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Returns the context configuration which will be copied to the editors created using this context.\n\t *\n\t * The configuration returned by this method has the plugins configuration removed &mdash; plugins are shared with all editors\n\t * through another mechanism.\n\t *\n\t * This method should only be used by the editor.\n\t *\n\t * @protected\n\t * @returns {Object} Configuration as a plain object.\n\t */\n\t_getEditorConfig() {\n\t\tconst result = {};\n\n\t\tfor ( const name of this.config.names() ) {\n\t\t\tif ( ![ 'plugins', 'removePlugins', 'extraPlugins' ].includes( name ) ) {\n\t\t\t\tresult[ name ] = this.config.get( name );\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Creates and initializes a new context instance.\n\t *\n\t *\t\tconst commonConfig = { ... }; // Configuration for all the plugins and editors.\n\t *\t\tconst editorPlugins = [ ... ]; // Regular plugins here.\n\t *\n\t *\t\tContext\n\t *\t\t\t.create( {\n\t *\t\t\t\t// Only context plugins here.\n\t *\t\t\t\tplugins: [ ... ],\n\t *\n\t *\t\t\t\t// Configure the language for all the editors (it cannot be overwritten).\n\t *\t\t\t\tlanguage: { ... },\n\t *\n\t *\t\t\t\t// Configuration for context plugins.\n\t *\t\t\t\tcomments: { ... },\n\t *\t\t\t\t...\n\t *\n\t *\t\t\t\t// Default configuration for editor plugins.\n\t *\t\t\t\ttoolbar: { ... },\n\t *\t\t\t\timage: { ... },\n\t *\t\t\t\t...\n\t *\t\t\t} )\n\t *\t\t\t.then( context => {\n\t *\t\t\t\tconst promises = [];\n\t *\n\t *\t\t\t\tpromises.push( ClassicEditor.create(\n\t *\t\t\t\t\tdocument.getElementById( 'editor1' ),\n\t *\t\t\t\t\t{\n\t *\t\t\t\t\t\teditorPlugins,\n\t *\t\t\t\t\t\tcontext\n\t *\t\t\t\t\t}\n\t *\t\t\t\t) );\n\t *\n\t *\t\t\t\tpromises.push( ClassicEditor.create(\n\t *\t\t\t\t\tdocument.getElementById( 'editor2' ),\n\t *\t\t\t\t\t{\n\t *\t\t\t\t\t\teditorPlugins,\n\t *\t\t\t\t\t\tcontext,\n\t *\t\t\t\t\t\ttoolbar: { ... } // You can overwrite the configuration of the context.\n\t *\t\t\t\t\t}\n\t *\t\t\t\t) );\n\t *\n\t *\t\t\t\treturn Promise.all( promises );\n\t *\t\t\t} );\n\t *\n\t * @param {Object} [config] The context configuration.\n\t * @returns {Promise} A promise resolved once the context is ready. The promise resolves with the created context instance.\n\t */\n\tstatic create( config ) {\n\t\treturn new Promise( resolve => {\n\t\t\tconst context = new this( config );\n\n\t\t\tresolve( context.initPlugins().then( () => context ) );\n\t\t} );\n\t}\n}\n\n/**\n * An array of plugins built into the `Context` class.\n *\n * It is used in CKEditor 5 builds featuring `Context` to provide a list of context plugins which are later automatically initialized\n * during the context initialization.\n *\n * They will be automatically initialized by `Context` unless `config.plugins` is passed.\n *\n *\t\t// Build some context plugins into the Context class first.\n *\t\tContext.builtinPlugins = [ FooPlugin, BarPlugin ];\n *\n *\t\t// Normally, you need to define config.plugins, but since Context.builtinPlugins was\n *\t\t// defined, now you can call create() without any configuration.\n *\t\tContext\n *\t\t\t.create()\n *\t\t\t.then( context => {\n *\t\t\t\tcontext.plugins.get( FooPlugin ); // -> An instance of the Foo plugin.\n *\t\t\t\tcontext.plugins.get( BarPlugin ); // -> An instance of the Bar plugin.\n *\t\t\t} );\n *\n * See also {@link module:core/context~Context.defaultConfig `Context.defaultConfig`}\n * and {@link module:core/editor/editor~Editor.builtinPlugins `Editor.builtinPlugins`}.\n *\n * @static\n * @member {Array.<Function>} module:core/context~Context.builtinPlugins\n */\n\n/**\n * The default configuration which is built into the `Context` class.\n *\n * It is used in CKEditor 5 builds featuring `Context` to provide the default configuration options which are later used during the\n * context initialization.\n *\n *\t\tContext.defaultConfig = {\n *\t\t\tfoo: 1,\n *\t\t\tbar: 2\n *\t\t};\n *\n *\t\tContext\n *\t\t\t.create()\n *\t\t\t.then( context => {\n *\t\t\t\tcontext.config.get( 'foo' ); // -> 1\n *\t\t\t\tcontext.config.get( 'bar' ); // -> 2\n *\t\t\t} );\n *\n *\t\t// The default options can be overridden by the configuration passed to create().\n *\t\tContext\n *\t\t\t.create( { bar: 3 } )\n *\t\t\t.then( context => {\n *\t\t\t\tcontext.config.get( 'foo' ); // -> 1\n *\t\t\t\tcontext.config.get( 'bar' ); // -> 3\n *\t\t\t} );\n *\n * See also {@link module:core/context~Context.builtinPlugins `Context.builtinPlugins`}\n * and {@link module:core/editor/editor~Editor.defaultConfig `Editor.defaultConfig`}.\n *\n * @static\n * @member {Object} module:core/context~Context.defaultConfig\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/comparearrays\n */\n\n/**\n * Compares how given arrays relate to each other. One array can be: same as another array, prefix of another array\n * or completely different. If arrays are different, first index at which they differ is returned. Otherwise,\n * a flag specifying the relation is returned. Flags are negative numbers, so whenever a number >= 0 is returned\n * it means that arrays differ.\n *\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2 ] );\t\t// 'same'\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2, 1 ] );\t\t// 'prefix'\n *\t\tcompareArrays( [ 0, 2 ], [ 0 ] );\t\t\t// 'extension'\n *\t\tcompareArrays( [ 0, 2 ], [ 1, 2 ] );\t\t// 0\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 1 ] );\t\t// 1\n *\n * @param {Array} a Array that is compared.\n * @param {Array} b Array to compare with.\n * @returns {module:utils/comparearrays~ArrayRelation} How array `a` is related to `b`.\n */\nexport default function compareArrays( a, b ) {\n\tconst minLen = Math.min( a.length, b.length );\n\n\tfor ( let i = 0; i < minLen; i++ ) {\n\t\tif ( a[ i ] != b[ i ] ) {\n\t\t\t// The arrays are different.\n\t\t\treturn i;\n\t\t}\n\t}\n\n\t// Both arrays were same at all points.\n\tif ( a.length == b.length ) {\n\t\t// If their length is also same, they are the same.\n\t\treturn 'same';\n\t} else if ( a.length < b.length ) {\n\t\t// Compared array is shorter so it is a prefix of the other array.\n\t\treturn 'prefix';\n\t} else {\n\t\t// Compared array is longer so it is an extension of the other array.\n\t\treturn 'extension';\n\t}\n}\n\n/**\n * @typedef {'extension'|'same'|'prefix'} module:utils/comparearrays~ArrayRelation\n */\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/node\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport { clone } from 'lodash-es';\n\n// To check if component is loaded more than once.\nimport '@ckeditor/ckeditor5-utils/src/version';\n\n/**\n * Abstract view node class.\n *\n * This is an abstract class. Its constructor should not be used directly.\n * Use the {@link module:engine/view/downcastwriter~DowncastWriter} or {@link module:engine/view/upcastwriter~UpcastWriter}\n * to create new instances of view nodes.\n *\n * @abstract\n */\nexport default class Node {\n\t/**\n\t * Creates a tree view node.\n\t *\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this node belongs.\n\t */\n\tconstructor( document ) {\n\t\t/**\n\t\t * The document instance to which this node belongs.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * Parent element. Null by default. Set by {@link module:engine/view/element~Element#_insertChild}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n\t\t */\n\t\tthis.parent = null;\n\t}\n\n\t/**\n\t * Index of the node in the parent element or null if the node has no parent.\n\t *\n\t * Accessing this property throws an error if this node's parent element does not contain it.\n\t * This means that view tree got broken.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget index() {\n\t\tlet pos;\n\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// No parent or child doesn't exist in parent's children.\n\t\tif ( ( pos = this.parent.getChildIndex( this ) ) == -1 ) {\n\t\t\t/**\n\t\t\t * The node's parent does not contain this node. It means that the document tree is corrupted.\n\t\t\t *\n\t\t\t * @error view-node-not-found-in-parent\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-node-not-found-in-parent: The node\\'s parent does not contain this node.', this );\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Node's next sibling, or `null` if it is the last child.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tget nextSibling() {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent.getChild( index + 1 ) ) || null;\n\t}\n\n\t/**\n\t * Node's previous sibling, or `null` if it is the first child.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tget previousSibling() {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent.getChild( index - 1 ) ) || null;\n\t}\n\n\t/**\n\t * Top-most ancestor of the node. If the node has no parent it is the root itself.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\tlet root = this; // eslint-disable-line consistent-this\n\n\t\twhile ( root.parent ) {\n\t\t\troot = root.parent;\n\t\t}\n\n\t\treturn root;\n\t}\n\n\t/**\n\t * Returns true if the node is in a tree rooted in the document (is a descendant of one of its roots).\n\t *\n\t * @returns {Boolean}\n\t */\n\tisAttached() {\n\t\treturn this.root.is( 'rootElement' );\n\t}\n\n\t/**\n\t * Gets a path to the node. The path is an array containing indices of consecutive ancestors of this node,\n\t * beginning from {@link module:engine/view/node~Node#root root}, down to this node's index.\n\t *\n\t *\t\tconst abc = downcastWriter.createText( 'abc' );\n\t *\t\tconst foo = downcastWriter.createText( 'foo' );\n\t *\t\tconst h1 = downcastWriter.createElement( 'h1', null, downcastWriter.createText( 'header' ) );\n\t *\t\tconst p = downcastWriter.createElement( 'p', null, [ abc, foo ] );\n\t *\t\tconst div = downcastWriter.createElement( 'div', null, [ h1, p ] );\n\t *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\n\t *\t\th1.getPath(); // Returns [ 0 ].\n\t *\t\tdiv.getPath(); // Returns [].\n\t *\n\t * @returns {Array.<Number>} The path.\n\t */\n\tgetPath() {\n\t\tconst path = [];\n\t\tlet node = this; // eslint-disable-line consistent-this\n\n\t\twhile ( node.parent ) {\n\t\t\tpath.unshift( node.index );\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn path;\n\t}\n\n\t/**\n\t * Returns ancestors array of this node.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n\t * otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeSelf ? this : this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t/**\n\t * Returns a {@link module:engine/view/element~Element} or {@link module:engine/view/documentfragment~DocumentFragment}\n\t * which is a common ancestor of both nodes.\n\t *\n\t * @param {module:engine/view/node~Node} node The second node.\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\n\t * Which means that if e.g. node A is inside B, then their common ancestor will be B.\n\t * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor( node, options = {} ) {\n\t\tconst ancestorsA = this.getAncestors( options );\n\t\tconst ancestorsB = node.getAncestors( options );\n\n\t\tlet i = 0;\n\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n\t}\n\n\t/**\n\t * Returns whether this node is before given node. `false` is returned if nodes are in different trees (for example,\n\t * in different {@link module:engine/view/documentfragment~DocumentFragment}s).\n\t *\n\t * @param {module:engine/view/node~Node} node Node to compare with.\n\t * @returns {Boolean}\n\t */\n\tisBefore( node ) {\n\t\t// Given node is not before this node if they are same.\n\t\tif ( this == node ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Return `false` if it is impossible to compare nodes.\n\t\tif ( this.root !== node.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst thisPath = this.getPath();\n\t\tconst nodePath = node.getPath();\n\n\t\tconst result = compareArrays( thisPath, nodePath );\n\n\t\tswitch ( result ) {\n\t\t\tcase 'prefix':\n\t\t\t\treturn true;\n\n\t\t\tcase 'extension':\n\t\t\t\treturn false;\n\n\t\t\tdefault:\n\t\t\t\treturn thisPath[ result ] < nodePath[ result ];\n\t\t}\n\t}\n\n\t/**\n\t * Returns whether this node is after given node. `false` is returned if nodes are in different trees (for example,\n\t * in different {@link module:engine/view/documentfragment~DocumentFragment}s).\n\t *\n\t * @param {module:engine/view/node~Node} node Node to compare with.\n\t * @returns {Boolean}\n\t */\n\tisAfter( node ) {\n\t\t// Given node is not before this node if they are same.\n\t\tif ( this == node ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Return `false` if it is impossible to compare nodes.\n\t\tif ( this.root !== node.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// In other cases, just check if the `node` is before, and return the opposite.\n\t\treturn !this.isBefore( node );\n\t}\n\n\t/**\n\t * Removes node from parent.\n\t *\n\t * @protected\n\t */\n\t_remove() {\n\t\tthis.parent._removeChildren( this.index );\n\t}\n\n\t/**\n\t * @protected\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\n\t * @param {module:engine/view/node~Node} node Changed node.\n\t * @fires change\n\t */\n\t_fireChange( type, node ) {\n\t\tthis.fire( 'change:' + type, node );\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._fireChange( type, node );\n\t\t}\n\t}\n\n\t/**\n\t * Custom toJSON method to solve child-parent circular dependencies.\n\t *\n\t * @returns {Object} Clone of this object with the parent property removed.\n\t */\n\ttoJSON() {\n\t\tconst json = clone( this );\n\n\t\t// Due to circular references we need to remove parent reference.\n\t\tdelete json.parent;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t * This method is useful when processing view objects that are of unknown type. For example, a function\n\t * may return a {@link module:engine/view/documentfragment~DocumentFragment} or a {@link module:engine/view/node~Node}\n\t * that can be either a text node or an element. This method can be used to check what kind of object is returned.\n\t *\n\t *\t\tsomeObject.is( 'element' ); // -> true if this is an element\n\t *\t\tsomeObject.is( 'node' ); // -> true if this is a node (a text node or an element)\n\t *\t\tsomeObject.is( 'documentFragment' ); // -> true if this is a document fragment\n\t *\n\t * Since this method is also available on a range of model objects, you can prefix the type of the object with\n\t * `model:` or `view:` to check, for example, if this is the model's or view's element:\n\t *\n\t *\t\tviewElement.is( 'view:element' ); // -> true\n\t *\t\tviewElement.is( 'model:element' ); // -> false\n\t *\n\t * By using this method it is also possible to check a name of an element:\n\t *\n\t *\t\timgElement.is( 'img' ); // -> true\n\t *\t\timgElement.is( 'element', 'img' ); // -> same as above\n\t *\t\timgElement.is( 'view:element', 'img' ); // -> same as above, but more precise\n\t *\n\t * The list of view objects which implement the `is()` method:\n\t *\n\t * * {@link module:engine/view/attributeelement~AttributeElement#is `AttributeElement#is()`}\n\t * * {@link module:engine/view/containerelement~ContainerElement#is `ContainerElement#is()`}\n\t * * {@link module:engine/view/documentfragment~DocumentFragment#is `DocumentFragment#is()`}\n\t * * {@link module:engine/view/documentselection~DocumentSelection#is `DocumentSelection#is()`}\n\t * * {@link module:engine/view/editableelement~EditableElement#is `EditableElement#is()`}\n\t * * {@link module:engine/view/element~Element#is `Element#is()`}\n\t * * {@link module:engine/view/emptyelement~EmptyElement#is `EmptyElement#is()`}\n\t * * {@link module:engine/view/node~Node#is `Node#is()`}\n\t * * {@link module:engine/view/position~Position#is `Position#is()`}\n\t * * {@link module:engine/view/range~Range#is `Range#is()`}\n\t * * {@link module:engine/view/rooteditableelement~RootEditableElement#is `RootEditableElement#is()`}\n\t * * {@link module:engine/view/selection~Selection#is `Selection#is()`}\n\t * * {@link module:engine/view/text~Text#is `Text#is()`}\n\t * * {@link module:engine/view/textproxy~TextProxy#is `TextProxy#is()`}\n\t * * {@link module:engine/view/uielement~UIElement#is `UIElement#is()`}\n\t *\n\t * @method #is\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'node' || type === 'view:node';\n\t}\n\n\t/**\n\t * Clones this node.\n\t *\n\t * @protected\n\t * @method #_clone\n\t * @returns {module:engine/view/node~Node} Clone of this node.\n\t */\n\n\t/**\n\t * Checks if provided node is similar to this node.\n\t *\n\t * @method #isSimilar\n\t * @returns {Boolean} True if nodes are similar.\n\t */\n}\n\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} children changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:children\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} attributes changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:attributes\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * Fired when {@link module:engine/view/text~Text text nodes} data changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:text\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * @event change\n */\n\nmix( Node, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/text\n */\n\nimport Node from './node';\n\n/**\n * Tree view text node.\n *\n * The constructor of this class should not be used directly. To create a new text node instance\n * use the {@link module:engine/view/downcastwriter~DowncastWriter#createText `DowncastWriter#createText()`}\n * method when working on data downcasted from the model or the\n * {@link module:engine/view/upcastwriter~UpcastWriter#createText `UpcastWriter#createText()`}\n * method when working on non-semantic views.\n *\n * @extends module:engine/view/node~Node\n */\nexport default class Text extends Node {\n\t/**\n\t * Creates a tree view text node.\n\t *\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this text node belongs.\n\t * @param {String} data The text's data.\n\t */\n\tconstructor( document, data ) {\n\t\tsuper( document );\n\n\t\t/**\n\t\t * The text content.\n\t\t *\n\t\t * Setting the data fires the {@link module:engine/view/node~Node#event:change:text change event}.\n\t\t *\n\t\t * @protected\n\t\t * @member {String} module:engine/view/text~Text#_textData\n\t\t */\n\t\tthis._textData = data;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\ttext.is( 'text' ); // -> true\n\t *\t\ttext.is( 'node' ); // -> true\n\t *\t\ttext.is( 'view:text' ); // -> true\n\t *\t\ttext.is( 'view:node' ); // -> true\n\t *\n\t *\t\ttext.is( 'model:text' ); // -> false\n\t *\t\ttext.is( 'element' ); // -> false\n\t *\t\ttext.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'text' || type === 'view:text' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype === 'node' || type === 'view:node';\n\t}\n\n\t/**\n\t * The text content.\n\t *\n\t * @readonly\n\t * @type {String}\n\t */\n\tget data() {\n\t\treturn this._textData;\n\t}\n\n\t/**\n\t * This getter is required when using the addition assignment operator on protected property:\n\t *\n\t *\t\tconst foo = downcastWriter.createText( 'foo' );\n\t *\t\tconst bar = downcastWriter.createText( 'bar' );\n\t *\n\t *\t\tfoo._data += bar.data;   // executes: `foo._data = foo._data + bar.data`\n\t *\t\tconsole.log( foo.data ); // prints: 'foobar'\n\t *\n\t * If the protected getter didn't exist, `foo._data` will return `undefined` and result of the merge will be invalid.\n\t *\n\t * @protected\n\t * @type {String}\n\t */\n\tget _data() {\n\t\treturn this.data;\n\t}\n\n\t/**\n\t * Sets data and fires the {@link module:engine/view/node~Node#event:change:text change event}.\n\t *\n\t * @protected\n\t * @fires change:text\n\t * @param {String} data New data for the text node.\n\t */\n\tset _data( data ) {\n\t\tthis._fireChange( 'text', this );\n\n\t\tthis._textData = data;\n\t}\n\n\t/**\n\t * Checks if this text node is similar to other text node.\n\t * Both nodes should have the same data to be considered as similar.\n\t *\n\t * @param {module:engine/view/text~Text} otherNode Node to check if it is same as this node.\n\t * @returns {Boolean}\n\t */\n\tisSimilar( otherNode ) {\n\t\tif ( !( otherNode instanceof Text ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this === otherNode || this.data === otherNode.data;\n\t}\n\n\t/**\n\t * Clones this node.\n\t *\n\t * @protected\n\t * @returns {module:engine/view/text~Text} Text node that is a clone of this node.\n\t */\n\t_clone() {\n\t\treturn new Text( this.document, this.data );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewText: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewText: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/textproxy\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * TextProxy is a wrapper for substring of {@link module:engine/view/text~Text}. Instance of this class is created by\n * {@link module:engine/view/treewalker~TreeWalker} when only a part of {@link module:engine/view/text~Text} needs to be returned.\n *\n * `TextProxy` has an API similar to {@link module:engine/view/text~Text Text} and allows to do most of the common tasks performed\n * on view nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/view/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is a readonly interface.\n *\n * **Note:** `TextProxy` instances are created on the fly basing on the current state of parent {@link module:engine/view/text~Text}.\n * Because of this it is highly unrecommended to store references to `TextProxy instances because they might get\n * invalidated due to operations on Document. Also TextProxy is not a {@link module:engine/view/node~Node} so it can not be\n * inserted as a child of {@link module:engine/view/element~Element}.\n *\n * `TextProxy` instances are created by {@link module:engine/view/treewalker~TreeWalker view tree walker}. You should not need to create\n * an instance of this class by your own.\n */\nexport default class TextProxy {\n\t/**\n\t * Creates a text proxy.\n\t *\n\t * @protected\n\t * @param {module:engine/view/text~Text} textNode Text node which part is represented by this text proxy.\n\t * @param {Number} offsetInText Offset in {@link module:engine/view/textproxy~TextProxy#textNode text node}\n\t * from which the text proxy starts.\n\t * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n\t * @constructor\n\t */\n\tconstructor( textNode, offsetInText, length ) {\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/text~Text} element which TextProxy is a substring.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/text~Text} module:engine/view/textproxy~TextProxy#textNode\n\t\t */\n\t\tthis.textNode = textNode;\n\n\t\tif ( offsetInText < 0 || offsetInText > textNode.data.length ) {\n\t\t\t/**\n\t\t\t * Given offsetInText value is incorrect.\n\t\t\t *\n\t\t\t * @error view-textproxy-wrong-offsetintext\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-textproxy-wrong-offsetintext: Given offsetInText value is incorrect.', this );\n\t\t}\n\n\t\tif ( length < 0 || offsetInText + length > textNode.data.length ) {\n\t\t\t/**\n\t\t\t * Given length value is incorrect.\n\t\t\t *\n\t\t\t * @error view-textproxy-wrong-length\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-textproxy-wrong-length: Given length value is incorrect.', this );\n\t\t}\n\n\t\t/**\n\t\t * Text data represented by this text proxy.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} module:engine/view/textproxy~TextProxy#data\n\t\t */\n\t\tthis.data = textNode.data.substring( offsetInText, offsetInText + length );\n\n\t\t/**\n\t\t * Offset in the `textNode` where this `TextProxy` instance starts.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} module:engine/view/textproxy~TextProxy#offsetInText\n\t\t */\n\t\tthis.offsetInText = offsetInText;\n\t}\n\n\t/**\n\t * Offset size of this node.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget offsetSize() {\n\t\treturn this.data.length;\n\t}\n\n\t/**\n\t * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/view/text~Text text node}\n\t * (`true`) or the whole text node (`false`).\n\t *\n\t * This is `false` when text proxy starts at the very beginning of {@link module:engine/view/textproxy~TextProxy#textNode textNode}\n\t * ({@link module:engine/view/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n\t * text node size.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isPartial() {\n\t\treturn this.data.length !== this.textNode.data.length;\n\t}\n\n\t/**\n\t * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tget parent() {\n\t\treturn this.textNode.parent;\n\t}\n\n\t/**\n\t * Root of this text proxy, which is same as root of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.textNode.root;\n\t}\n\n\t/**\n\t * {@link module:engine/view/document~Document View document} that owns this text proxy, or `null` if the text proxy is inside\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/document~Document|null}\n\t */\n\tget document() {\n\t\treturn this.textNode.document;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\ttextProxy.is( 'textProxy' ); // -> true\n\t *\t\ttextProxy.is( 'view:textProxy' ); // -> true\n\t *\n\t *\t\ttextProxy.is( 'model:textProxy' ); // -> false\n\t *\t\ttextProxy.is( 'element' ); // -> false\n\t *\t\ttextProxy.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'textProxy' || type === 'view:textProxy';\n\t}\n\n\t/**\n\t * Returns ancestors array of this text proxy.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` {#textNode} will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to\n\t * root element, otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeSelf ? this.textNode : this.parent;\n\n\t\twhile ( parent !== null ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewTextProxy: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewTextProxy: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/objecttomap\n */\n\n/**\n * Transforms object to map.\n *\n *\t\tconst map = objectToMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap.get( 'foo' ); // 1\n *\n * **Note**: For mixed data (`Object` or `Iterable`) there's a dedicated {@link module:utils/tomap~toMap} function.\n *\n * @param {Object} obj Object to transform.\n * @returns {Map} Map created from object.\n */\nexport default function objectToMap( obj ) {\n\tconst map = new Map();\n\n\tfor ( const key in obj ) {\n\t\tmap.set( key, obj[ key ] );\n\t}\n\n\treturn map;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/tomap\n */\n\nimport objectToMap from './objecttomap';\nimport isIterable from './isiterable';\n\n/**\n * Transforms object or iterable to map. Iterable needs to be in the format acceptable by the `Map` constructor.\n *\n *\t\tmap = toMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap = toMap( [ [ 'foo', 1 ], [ 'bar', 2 ] ] );\n *\t\tmap = toMap( anotherMap );\n *\n * @param {Object|Iterable} data Object or iterable to transform.\n * @returns {Map} Map created from data.\n */\nexport default function toMap( data ) {\n\tif ( isIterable( data ) ) {\n\t\treturn new Map( data );\n\t} else {\n\t\treturn objectToMap( data );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/matcher\n */\n\n/**\n * View matcher class.\n * Instance of this class can be used to find {@link module:engine/view/element~Element elements} that match given pattern.\n */\nexport default class Matcher {\n\t/**\n\t * Creates new instance of Matcher.\n\t *\n\t * @param {String|RegExp|Object} [pattern] Match patterns. See {@link module:engine/view/matcher~Matcher#add add method} for\n\t * more information.\n\t */\n\tconstructor( ...pattern ) {\n\t\t/**\n\t\t * @private\n\t\t * @type {Array<String|RegExp|Object>}\n\t\t */\n\t\tthis._patterns = [];\n\n\t\tthis.add( ...pattern );\n\t}\n\n\t/**\n\t * Adds pattern or patterns to matcher instance.\n\t *\n\t *\t\t// String.\n\t *\t\tmatcher.add( 'div' );\n\t *\n\t *\t\t// Regular expression.\n\t *\t\tmatcher.add( /^\\w/ );\n\t *\n\t *\t\t// Single class.\n\t *\t\tmatcher.add( {\n\t *\t\t\tclasses: 'foobar'\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/view/matcher~MatcherPattern} for more examples.\n\t *\n\t * Multiple patterns can be added in one call:\n\t *\n\t * \t\tmatcher.add( 'div', { classes: 'foobar' } );\n\t *\n\t * @param {Object|String|RegExp|Function} pattern Object describing pattern details. If string or regular expression\n\t * is provided it will be used to match element's name. Pattern can be also provided in a form\n\t * of a function - then this function will be called with each {@link module:engine/view/element~Element element} as a parameter.\n\t * Function's return value will be stored under `match` key of the object returned from\n\t * {@link module:engine/view/matcher~Matcher#match match} or {@link module:engine/view/matcher~Matcher#matchAll matchAll} methods.\n\t * @param {String|RegExp} [pattern.name] Name or regular expression to match element's name.\n\t * @param {Object} [pattern.attributes] Object with key-value pairs representing attributes to match. Each object key\n\t * represents attribute name. Value under that key can be either:\n\t * * `true` - then attribute is just required (can be empty),\n\t * * a string - then attribute has to be equal, or\n\t * * a regular expression - then attribute has to match the expression.\n\t * @param {String|RegExp|Array} [pattern.classes] Class name or array of class names to match. Each name can be\n\t * provided in a form of string or regular expression.\n\t * @param {Object} [pattern.styles] Object with key-value pairs representing styles to match. Each object key\n\t * represents style name. Value under that key can be either a string or a regular expression and it will be used\n\t * to match style value.\n\t */\n\tadd( ...pattern ) {\n\t\tfor ( let item of pattern ) {\n\t\t\t// String or RegExp pattern is used as element's name.\n\t\t\tif ( typeof item == 'string' || item instanceof RegExp ) {\n\t\t\t\titem = { name: item };\n\t\t\t}\n\n\t\t\t// Single class name/RegExp can be provided.\n\t\t\tif ( item.classes && ( typeof item.classes == 'string' || item.classes instanceof RegExp ) ) {\n\t\t\t\titem.classes = [ item.classes ];\n\t\t\t}\n\n\t\t\tthis._patterns.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Matches elements for currently stored patterns. Returns match information about first found\n\t * {@link module:engine/view/element~Element element}, otherwise returns `null`.\n\t *\n\t * Example of returned object:\n\t *\n\t *\t\t{\n\t *\t\t\telement: <instance of found element>,\n\t *\t\t\tpattern: <pattern used to match found element>,\n\t *\t\t\tmatch: {\n\t *\t\t\t\tname: true,\n\t *\t\t\t\tattributes: [ 'title', 'href' ],\n\t *\t\t\t\tclasses: [ 'foo' ],\n\t *\t\t\t\tstyles: [ 'color', 'position' ]\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * @see module:engine/view/matcher~Matcher#add\n\t * @see module:engine/view/matcher~Matcher#matchAll\n\t * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n\t * @returns {Object|null} result\n\t * @returns {module:engine/view/element~Element} result.element Matched view element.\n\t * @returns {Object|String|RegExp|Function} result.pattern Pattern that was used to find matched element.\n\t * @returns {Object} result.match Object representing matched element parts.\n\t * @returns {Boolean} [result.match.name] True if name of the element was matched.\n\t * @returns {Array} [result.match.attributes] Array with matched attribute names.\n\t * @returns {Array} [result.match.classes] Array with matched class names.\n\t * @returns {Array} [result.match.styles] Array with matched style names.\n\t */\n\tmatch( ...element ) {\n\t\tfor ( const singleElement of element ) {\n\t\t\tfor ( const pattern of this._patterns ) {\n\t\t\t\tconst match = isElementMatching( singleElement, pattern );\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\telement: singleElement,\n\t\t\t\t\t\tpattern,\n\t\t\t\t\t\tmatch\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Matches elements for currently stored patterns. Returns array of match information with all found\n\t * {@link module:engine/view/element~Element elements}. If no element is found - returns `null`.\n\t *\n\t * @see module:engine/view/matcher~Matcher#add\n\t * @see module:engine/view/matcher~Matcher#match\n\t * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n\t * @returns {Array.<Object>|null} Array with match information about found elements or `null`. For more information\n\t * see {@link module:engine/view/matcher~Matcher#match match method} description.\n\t */\n\tmatchAll( ...element ) {\n\t\tconst results = [];\n\n\t\tfor ( const singleElement of element ) {\n\t\t\tfor ( const pattern of this._patterns ) {\n\t\t\t\tconst match = isElementMatching( singleElement, pattern );\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\tresults.push( {\n\t\t\t\t\t\telement: singleElement,\n\t\t\t\t\t\tpattern,\n\t\t\t\t\t\tmatch\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn results.length > 0 ? results : null;\n\t}\n\n\t/**\n\t * Returns the name of the element to match if there is exactly one pattern added to the matcher instance\n\t * and it matches element name defined by `string` (not `RegExp`). Otherwise, returns `null`.\n\t *\n\t * @returns {String|null} Element name trying to match.\n\t */\n\tgetElementName() {\n\t\tif ( this._patterns.length !== 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst pattern = this._patterns[ 0 ];\n\t\tconst name = pattern.name;\n\n\t\treturn ( typeof pattern != 'function' && name && !( name instanceof RegExp ) ) ? name : null;\n\t}\n}\n\n// Returns match information if {@link module:engine/view/element~Element element} is matching provided pattern.\n// If element cannot be matched to provided pattern - returns `null`.\n//\n// @param {module:engine/view/element~Element} element\n// @param {Object|String|RegExp|Function} pattern\n// @returns {Object|null} Returns object with match information or null if element is not matching.\nfunction isElementMatching( element, pattern ) {\n\t// If pattern is provided as function - return result of that function;\n\tif ( typeof pattern == 'function' ) {\n\t\treturn pattern( element );\n\t}\n\n\tconst match = {};\n\t// Check element's name.\n\tif ( pattern.name ) {\n\t\tmatch.name = matchName( pattern.name, element.name );\n\n\t\tif ( !match.name ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Check element's attributes.\n\tif ( pattern.attributes ) {\n\t\tmatch.attributes = matchAttributes( pattern.attributes, element );\n\n\t\tif ( !match.attributes ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Check element's classes.\n\tif ( pattern.classes ) {\n\t\tmatch.classes = matchClasses( pattern.classes, element );\n\n\t\tif ( !match.classes ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Check element's styles.\n\tif ( pattern.styles ) {\n\t\tmatch.styles = matchStyles( pattern.styles, element );\n\n\t\tif ( !match.styles ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n// Checks if name can be matched by provided pattern.\n//\n// @param {String|RegExp} pattern\n// @param {String} name\n// @returns {Boolean} Returns `true` if name can be matched, `false` otherwise.\nfunction matchName( pattern, name ) {\n\t// If pattern is provided as RegExp - test against this regexp.\n\tif ( pattern instanceof RegExp ) {\n\t\treturn pattern.test( name );\n\t}\n\n\treturn pattern === name;\n}\n\n// Checks if attributes of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about attributes to match. Each key of the object will be\n// used as attribute name. Value of each key can be a string or regular expression to match against attribute value.\n// @param {module:engine/view/element~Element} element Element which attributes will be tested.\n// @returns {Array|null} Returns array with matched attribute names or `null` if no attributes were matched.\nfunction matchAttributes( patterns, element ) {\n\tconst match = [];\n\n\tfor ( const name in patterns ) {\n\t\tconst pattern = patterns[ name ];\n\n\t\tif ( element.hasAttribute( name ) ) {\n\t\t\tconst attribute = element.getAttribute( name );\n\n\t\t\tif ( pattern === true ) {\n\t\t\t\tmatch.push( name );\n\t\t\t} else if ( pattern instanceof RegExp ) {\n\t\t\t\tif ( pattern.test( attribute ) ) {\n\t\t\t\t\tmatch.push( name );\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else if ( attribute === pattern ) {\n\t\t\t\tmatch.push( name );\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n// Checks if classes of provided element can be matched against provided patterns.\n//\n// @param {Array.<String|RegExp>} patterns Array of strings or regular expressions to match against element's classes.\n// @param {module:engine/view/element~Element} element Element which classes will be tested.\n// @returns {Array|null} Returns array with matched class names or `null` if no classes were matched.\nfunction matchClasses( patterns, element ) {\n\tconst match = [];\n\n\tfor ( const pattern of patterns ) {\n\t\tif ( pattern instanceof RegExp ) {\n\t\t\tconst classes = element.getClassNames();\n\n\t\t\tfor ( const name of classes ) {\n\t\t\t\tif ( pattern.test( name ) ) {\n\t\t\t\t\tmatch.push( name );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( match.length === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else if ( element.hasClass( pattern ) ) {\n\t\t\tmatch.push( pattern );\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n// Checks if styles of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about styles to match. Each key of the object will be\n// used as style name. Value of each key can be a string or regular expression to match against style value.\n// @param {module:engine/view/element~Element} element Element which styles will be tested.\n// @returns {Array|null} Returns array with matched style names or `null` if no styles were matched.\nfunction matchStyles( patterns, element ) {\n\tconst match = [];\n\n\tfor ( const name in patterns ) {\n\t\tconst pattern = patterns[ name ];\n\n\t\tif ( element.hasStyle( name ) ) {\n\t\t\tconst style = element.getStyle( name );\n\n\t\t\tif ( pattern instanceof RegExp ) {\n\t\t\t\tif ( pattern.test( style ) ) {\n\t\t\t\t\tmatch.push( name );\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else if ( style === pattern ) {\n\t\t\t\tmatch.push( name );\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n/**\n * An entity that is a valid pattern recognized by a matcher. `MatcherPattern` is used by {@link ~Matcher} to recognize\n * if a view element fits in a group of view elements described by the pattern.\n *\n * `MatcherPattern` can be given as a `String`, a `RegExp`, an `Object` or a `Function`.\n *\n * If `MatcherPattern` is given as a `String` or `RegExp`, it will match any view element that has a matching name:\n *\n *\t\t// Match any element with name equal to 'div'.\n *\t\tconst pattern = 'div';\n *\n *\t\t// Match any element which name starts on 'p'.\n *\t\tconst pattern = /^p/;\n *\n * If `MatcherPattern` is given as an `Object`, all the object's properties will be matched with view element properties.\n *\n *\t\t// Match view element's name.\n *\t\tconst pattern = { name: /^p/ };\n *\n *\t\t// Match view element which has matching attributes.\n *\t\tconst pattern = {\n *\t\t\tattributes: {\n *\t\t\t\ttitle: 'foobar',\t// Attribute title should equal 'foobar'.\n *\t\t\t\tfoo: /^\\w+/,\t\t// Attribute foo should match /^\\w+/ regexp.\n *\t\t\t\tbar: true\t\t\t// Attribute bar should be set (can be empty).\n *\t\t\t}\n *\t\t};\n *\n *\t\t// Match view element which has given class.\n *\t\tconst pattern = {\n *\t\t\tclasses: 'foobar'\n *\t\t};\n *\n *\t\t// Match view element class using regular expression.\n *\t\tconst pattern = {\n *\t\t\tclasses: /foo.../\n *\t\t};\n *\n *\t\t// Multiple classes to match.\n *\t\tconst pattern = {\n *\t\t\tclasses: [ 'baz', 'bar', /foo.../ ]\n *\t\t};\n *\n *\t\t// Match view element which has given styles.\n *\t\tconst pattern = {\n *\t\t\tstyles: {\n *\t\t\t\tposition: 'absolute',\n *\t\t\t\tcolor: /^\\w*blue$/\n *\t\t\t}\n *\t\t};\n *\n *\t\t// Pattern with multiple properties.\n *\t\tconst pattern = {\n *\t\t\tname: 'span',\n *\t\t\tstyles: {\n *\t\t\t\t'font-weight': 'bold'\n *\t\t\t},\n *\t\t\tclasses: 'highlighted'\n *\t\t};\n *\n * If `MatcherPattern` is given as a `Function`, the function takes a view element as a first and only parameter and\n * the function should decide whether that element matches. If so, it should return what part of the view element has been matched.\n * Otherwise, the function should return `null`. The returned result will be included in `match` property of the object\n * returned by {@link ~Matcher#match} call.\n *\n *\t\t// Match an empty <div> element.\n *\t\tconst pattern = element => {\n *\t\t\tif ( element.name == 'div' && element.childCount > 0 ) {\n *\t\t\t\t// Return which part of the element was matched.\n *\t\t\t\treturn { name: true };\n *\t\t\t}\n *\n *\t\t\treturn null;\n *\t\t};\n *\n *\t\t// Match a <p> element with big font (\"heading-like\" element).\n *\t\tconst pattern = element => {\n *\t\t\tif ( element.name == 'p' ) {\n *\t\t\t\tconst fontSize = element.getStyle( 'font-size' );\n *\t\t\t\tconst size = fontSize.match( /(\\d+)/px );\n *\n *\t\t\t\tif ( size && Number( size[ 1 ] ) > 26 ) {\n *\t\t\t\t\treturn { name: true, attribute: [ 'font-size' ] };\n *\t\t\t\t}\n *\t\t\t}\n *\n *\t\t\treturn null;\n *\t\t};\n *\n * `MatcherPattern` is defined in a way that it is a superset of {@link module:engine/view/elementdefinition~ElementDefinition},\n * that is, every `ElementDefinition` also can be used as a `MatcherPattern`.\n *\n * @typedef {String|RegExp|Object|Function} module:engine/view/matcher~MatcherPattern\n *\n * @property {String|RegExp} [name] View element name to match.\n * @property {String|RegExp|Array.<String|RegExp>} [classes] View element's class name(s) to match.\n * @property {Object} [styles] Object with key-value pairs representing styles to match.\n * Each object key represents style name. Value can be given as `String` or `RegExp`.\n * @property {Object} [attributes] Object with key-value pairs representing attributes to match.\n * Each object key represents attribute name. Value can be given as `String` or `RegExp`.\n */\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n","import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import baseGet from './_baseGet.js';\nimport baseSlice from './_baseSlice.js';\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nexport default parent;\n","import castPath from './_castPath.js';\nimport last from './last.js';\nimport parent from './_parent.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nexport default baseUnset;\n","import baseUnset from './_baseUnset.js';\n\n/**\n * Removes the property at `path` of `object`.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n * _.unset(object, 'a[0].b.c');\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n *\n * _.unset(object, ['a', '0', 'b', 'c']);\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n */\nfunction unset(object, path) {\n  return object == null ? true : baseUnset(object, path);\n}\n\nexport default unset;\n","import baseGet from './_baseGet.js';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignMergeValue;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n","import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nexport default safeGet;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nexport default toPlainObject;\n","import assignMergeValue from './_assignMergeValue.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\nimport copyArray from './_copyArray.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isPlainObject from './isPlainObject.js';\nimport isTypedArray from './isTypedArray.js';\nimport safeGet from './_safeGet.js';\nimport toPlainObject from './toPlainObject.js';\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nexport default baseMergeDeep;\n","import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n","import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n","import baseMerge from './_baseMerge.js';\nimport createAssigner from './_createAssigner.js';\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nexport default merge;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseSet from './_baseSet.js';\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nexport default set;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/stylesmap\n */\n\nimport { get, isObject, merge, set, unset } from 'lodash-es';\n\n/**\n * Styles map. Allows handling (adding, removing, retrieving) a set of style rules (usually, of an element).\n *\n * The styles map is capable of normalizing style names so e.g. the following operations are possible:\n */\nexport default class StylesMap {\n\t/**\n\t * Creates Styles instance.\n\t *\n\t * @param {module:engine/view/stylesmap~StylesProcessor} styleProcessor\n\t */\n\tconstructor( styleProcessor ) {\n\t\t/**\n\t\t * Keeps an internal representation of styles map. Normalized styles are kept as object tree to allow unified modification and\n\t\t * value access model using lodash's get, set, unset, etc methods.\n\t\t *\n\t\t * When no style processor rules are defined the it acts as simple key-value storage.\n\t\t *\n\t\t * @private\n\t\t * @type {Object}\n\t\t */\n\t\tthis._styles = {};\n\n\t\t/**\n\t\t * An instance of the {@link module:engine/view/stylesmap~StylesProcessor}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/stylesmap~StylesProcessor}\n\t\t */\n\t\tthis._styleProcessor = styleProcessor;\n\t}\n\n\t/**\n\t * Returns true if style map has no styles set.\n\t *\n\t * @returns {Boolean}\n\t */\n\tget isEmpty() {\n\t\tconst entries = Object.entries( this._styles );\n\t\tconst from = Array.from( entries );\n\n\t\treturn !from.length;\n\t}\n\n\t/**\n\t * Number of styles defined.\n\t *\n\t * @type {Number}\n\t */\n\tget size() {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn this.getStyleNames().length;\n\t}\n\n\t/**\n\t * Set styles map to a new value.\n\t *\n\t *\t\tstyles.setTo( 'border:1px solid blue;margin-top:1px;' );\n\t *\n\t * @param {String} inlineStyle\n\t */\n\tsetTo( inlineStyle ) {\n\t\tthis.clear();\n\n\t\tconst parsedStyles = Array.from( parseInlineStyles( inlineStyle ).entries() );\n\n\t\tfor ( const [ key, value ] of parsedStyles ) {\n\t\t\tthis._styleProcessor.toNormalizedForm( key, value, this._styles );\n\t\t}\n\t}\n\n\t/**\n\t * Checks if a given style is set.\n\t *\n\t *\t\tstyles.setTo( 'margin-left:1px;' );\n\t *\n\t *\t\tstyles.has( 'margin-left' );    // -> true\n\t *\t\tstyles.has( 'padding' );        // -> false\n\t *\n\t * **Note**: This check supports normalized style names.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tstyles.setTo( 'margin:2px;' );\n\t *\n\t *\t\tstyles.has( 'margin' );         // -> true\n\t *\t\tstyles.has( 'margin-top' );     // -> true\n\t *\t\tstyles.has( 'margin-left' );    // -> true\n\t *\n\t *\t\tstyles.remove( 'margin-top' );\n\t *\n\t *\t\tstyles.has( 'margin' );         // -> false\n\t *\t\tstyles.has( 'margin-top' );     // -> false\n\t *\t\tstyles.has( 'margin-left' );    // -> true\n\t *\n\t * @param {String} name Style name.\n\t * @returns {Boolean}\n\t */\n\thas( name ) {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst styles = this._styleProcessor.getReducedForm( name, this._styles );\n\n\t\tconst propertyDescriptor = styles.find( ( [ property ] ) => property === name );\n\n\t\t// Only return a value if it is set;\n\t\treturn Array.isArray( propertyDescriptor );\n\t}\n\n\t/**\n\t * Sets a given style.\n\t *\n\t * Can insert one by one:\n\t *\n\t *\t\tstyles.set( 'color', 'blue' );\n\t *\t\tstyles.set( 'margin-right', '1em' );\n\t *\n\t * or many styles at once:\n\t *\n\t *\t\tstyles.set( {\n\t *\t\t\tcolor: 'blue',\n\t *\t\t\t'margin-right': '1em'\n\t *\t\t} );\n\t *\n\t * ***Note**:* This method uses {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules\n\t * enabled style processor rules} to normalize passed values.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tstyles.set( 'margin', '2px' );\n\t *\n\t * The above code will set margin to:\n\t *\n\t *\t\tstyles.getNormalized( 'margin' );\n\t *\t\t// -> { top: '2px', right: '2px', bottom: '2px', left: '2px' }\n\t *\n\t * Which makes it possible to retrieve a \"sub-value\":\n\t *\n\t *\t\tstyles.get( 'margin-left' );       // -> '2px'\n\t *\n\t * Or modify it:\n\t *\n\t *\t\tstyles.remove( 'margin-left' );\n\t *\n\t *\t\tstyles.getNormalized( 'margin' );  // -> { top: '1px', bottom: '1px', right: '1px' }\n\t *\t\tstyles.toString();                 // -> 'margin-bottom:1px;margin-right:1px;margin-top:1px;'\n\t *\n\t * This method also allows to set normalized values directly (if a particular styles processor rule was enabled):\n\t *\n\t *\t\tstyles.set( 'border-color', { top: 'blue' } );\n\t *\t\tstyles.set( 'margin', { right: '2em' } );\n\t *\n\t *\t\tstyles.toString();                 // -> 'border-color-top:blue;margin-right:2em;'\n\t *\n\t * @param {String|Object} nameOrObject Style property name or object with multiple properties.\n\t * @param {String|Object} valueOrObject Value to set.\n\t */\n\tset( nameOrObject, valueOrObject ) {\n\t\tif ( isObject( nameOrObject ) ) {\n\t\t\tfor ( const [ key, value ] of Object.entries( nameOrObject ) ) {\n\t\t\t\tthis._styleProcessor.toNormalizedForm( key, value, this._styles );\n\t\t\t}\n\t\t} else {\n\t\t\tthis._styleProcessor.toNormalizedForm( nameOrObject, valueOrObject, this._styles );\n\t\t}\n\t}\n\n\t/**\n\t * Removes given style.\n\t *\n\t *\t\tstyles.setTo( 'background:#f00;margin-right:2px;' );\n\t *\n\t *\t\tstyles.remove( 'background' );\n\t *\n\t *\t\tstyles.toString();   // -> 'margin-right:2px;'\n\t *\n\t * ***Note**:* This method uses {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules\n\t * enabled style processor rules} to normalize passed values.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tstyles.setTo( 'margin:1px' );\n\t *\n\t *\t\tstyles.remove( 'margin-top' );\n\t *\t\tstyles.remove( 'margin-right' );\n\t *\n\t *\t\tstyles.toString(); // -> 'margin-bottom:1px;margin-left:1px;'\n\t *\n\t * @param {String} name Style name.\n\t */\n\tremove( name ) {\n\t\tconst path = toPath( name );\n\n\t\tunset( this._styles, path );\n\t\tdelete this._styles[ name ];\n\n\t\tthis._cleanEmptyObjectsOnPath( path );\n\t}\n\n\t/**\n\t * Returns a normalized style object or a single value.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px 2px 3em;' );\n\t *\n\t *\t\tstyles.getNormalized( 'margin' );\n\t *\t\t// will log:\n\t *\t\t// {\n\t *\t\t//     top: '1px',\n\t *\t\t//     right: '2px',\n\t *\t\t//     bottom: '3em',\n\t *\t\t//     left: '2px'     // normalized value from margin shorthand\n\t *\t\t// }\n\t *\n\t *\t\tstyles.getNormalized( 'margin-left' ); // -> '2px'\n\t *\n\t * **Note**: This method will only return normalized styles if a style processor was defined.\n\t *\n\t * @param {String} name Style name.\n\t * @returns {Object|String|undefined}\n\t */\n\tgetNormalized( name ) {\n\t\treturn this._styleProcessor.getNormalized( name, this._styles );\n\t}\n\n\t/**\n\t * Returns a normalized style string. Styles are sorted by name.\n\t *\n\t *\t\tstyles.set( 'margin' , '1px' );\n\t *\t\tstyles.set( 'background', '#f00' );\n\t *\n\t *\t\tstyles.toString(); // -> 'background:#f00;margin:1px;'\n\t *\n\t * **Note**: This method supports normalized styles if defined.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tstyles.set( 'margin' , '1px' );\n\t *\t\tstyles.set( 'background', '#f00' );\n\t *\t\tstyles.remove( 'margin-top' );\n\t *\t\tstyles.remove( 'margin-right' );\n\t *\n\t *\t\tstyles.toString(); // -> 'background:#f00;margin-bottom:1px;margin-left:1px;'\n\t *\n\t * @returns {String}\n\t */\n\ttoString() {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this._getStylesEntries()\n\t\t\t.map( arr => arr.join( ':' ) )\n\t\t\t.sort()\n\t\t\t.join( ';' ) + ';';\n\t}\n\n\t/**\n\t * Returns property as a value string or undefined if property is not set.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px;' );\n\t *\t\tstyles.set( 'margin-bottom', '3em' );\n\t *\n\t *\t\tstyles.getAsString( 'margin' ); // -> 'margin: 1px 1px 3em;'\n\t *\n\t * Note, however, that all sub-values must be set for the longhand property name to return a value:\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px;' );\n\t *\t\tstyles.remove( 'margin-bottom' );\n\t *\n\t *\t\tstyles.getAsString( 'margin' ); // -> undefined\n\t *\n\t * In the above scenario, it is not possible to return a `margin` value, so `undefined` is returned.\n\t * Instead, you should use:\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px;' );\n\t *\t\tstyles.remove( 'margin-bottom' );\n\t *\n\t *\t\tfor ( const styleName of styles.getStyleNames() ) {\n\t *\t\t\tconsole.log( styleName, styles.getAsString( styleName ) );\n\t *\t\t}\n\t *\t\t// 'margin-top', '1px'\n\t *\t\t// 'margin-right', '1px'\n\t *\t\t// 'margin-left', '1px'\n\t *\n\t * In general, it is recommend to iterate over style names like in the example above. This way, you will always get all\n\t * the currently set style values. So, if all the 4 margin values would be set\n\t * the for-of loop above would yield only `'margin'`, `'1px'`:\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px;' );\n\t *\n\t *\t\tfor ( const styleName of styles.getStyleNames() ) {\n\t *\t\t\tconsole.log( styleName, styles.getAsString( styleName ) );\n\t *\t\t}\n\t *\t\t// 'margin', '1px'\n\t *\n\t * **Note**: To get a normalized version of a longhand property use the {@link #getNormalized `#getNormalized()`} method.\n\t *\n\t * @param {String} propertyName\n\t * @returns {String|undefined}\n\t */\n\tgetAsString( propertyName ) {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this._styles[ propertyName ] && !isObject( this._styles[ propertyName ] ) ) {\n\t\t\t// Try return styles set directly - values that are not parsed.\n\t\t\treturn this._styles[ propertyName ];\n\t\t}\n\n\t\tconst styles = this._styleProcessor.getReducedForm( propertyName, this._styles );\n\n\t\tconst propertyDescriptor = styles.find( ( [ property ] ) => property === propertyName );\n\n\t\t// Only return a value if it is set;\n\t\tif ( Array.isArray( propertyDescriptor ) ) {\n\t\t\treturn propertyDescriptor[ 1 ];\n\t\t}\n\t}\n\n\t/**\n\t * Returns style property names as they would appear when using {@link #toString `#toString()`}.\n\t *\n\t * @returns {Array.<String>}\n\t */\n\tgetStyleNames() {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst entries = this._getStylesEntries();\n\n\t\treturn entries.map( ( [ key ] ) => key );\n\t}\n\n\t/**\n\t * Removes all styles.\n\t */\n\tclear() {\n\t\tthis._styles = {};\n\t}\n\n\t/**\n\t * Returns normalized styles entries for further processing.\n\t *\n\t * @private\n\t * @returns {Array.<module:engine/view/stylesmap~PropertyDescriptor>}\n\t */\n\t_getStylesEntries() {\n\t\tconst parsed = [];\n\n\t\tconst keys = Object.keys( this._styles );\n\n\t\tfor ( const key of keys ) {\n\t\t\tparsed.push( ...this._styleProcessor.getReducedForm( key, this._styles ) );\n\t\t}\n\n\t\treturn parsed;\n\t}\n\n\t/**\n\t * Removes empty objects upon removing an entry from internal object.\n\t *\n\t * @param {String} path\n\t * @private\n\t */\n\t_cleanEmptyObjectsOnPath( path ) {\n\t\tconst pathParts = path.split( '.' );\n\t\tconst isChildPath = pathParts.length > 1;\n\n\t\tif ( !isChildPath ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst parentPath = pathParts.splice( 0, pathParts.length - 1 ).join( '.' );\n\n\t\tconst parentObject = get( this._styles, parentPath );\n\n\t\tif ( !parentObject ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isParentEmpty = !Array.from( Object.keys( parentObject ) ).length;\n\n\t\tif ( isParentEmpty ) {\n\t\t\tthis.remove( parentPath );\n\t\t}\n\t}\n}\n\n/**\n * Style processor is responsible for writing and reading a normalized styles object.\n */\nexport class StylesProcessor {\n\t/**\n\t * Creates StylesProcessor instance.\n\t *\n\t * @private\n\t */\n\tconstructor() {\n\t\tthis._normalizers = new Map();\n\t\tthis._extractors = new Map();\n\t\tthis._reducers = new Map();\n\t\tthis._consumables = new Map();\n\t}\n\n\t/**\n\t * Parse style string value to a normalized object and appends it to styles object.\n\t *\n\t *\t\tconst styles = {};\n\t *\n\t *\t\tstylesProcessor.toNormalizedForm( 'margin', '1px', styles );\n\t *\n\t *\t\t// styles will consist: { margin: { top: '1px', right: '1px', bottom: '1px', left: '1px; } }\n\t *\n\t * **Note**: To define normalizer callbacks use {@link #setNormalizer}.\n\t *\n\t * @param {String} name Name of style property.\n\t * @param {String} propertyValue Value of style property.\n\t * @param {Object} styles Object holding normalized styles.\n\t */\n\ttoNormalizedForm( name, propertyValue, styles ) {\n\t\tif ( isObject( propertyValue ) ) {\n\t\t\tappendStyleValue( styles, toPath( name ), propertyValue );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this._normalizers.has( name ) ) {\n\t\t\tconst normalizer = this._normalizers.get( name );\n\n\t\t\tconst { path, value } = normalizer( propertyValue );\n\n\t\t\tappendStyleValue( styles, path, value );\n\t\t} else {\n\t\t\tappendStyleValue( styles, name, propertyValue );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a normalized version of a style property.\n\t *\t\tconst styles = {\n\t *\t\t\tmargin: { top: '1px', right: '1px', bottom: '1px', left: '1px; },\n\t *\t\t\tbackground: { color: '#f00' }\n\t *\t\t};\n\t *\n\t *\t\tstylesProcessor.getNormalized( 'background' );\n\t *\t\t// will return: { color: '#f00' }\n\t *\n\t *\t\tstylesProcessor.getNormalized( 'margin-top' );\n\t *\t\t// will return: '1px'\n\t *\n\t * **Note**: In some cases extracting single value requires defining an extractor callback {@link #setExtractor}.\n\t *\n\t * @param {String} name Name of style property.\n\t * @param {Object} styles Object holding normalized styles.\n\t * @returns {*}\n\t */\n\tgetNormalized( name, styles ) {\n\t\tif ( !name ) {\n\t\t\treturn merge( {}, styles );\n\t\t}\n\n\t\t// Might be empty string.\n\t\tif ( styles[ name ] !== undefined ) {\n\t\t\treturn styles[ name ];\n\t\t}\n\n\t\tif ( this._extractors.has( name ) ) {\n\t\t\tconst extractor = this._extractors.get( name );\n\n\t\t\tif ( typeof extractor === 'string' ) {\n\t\t\t\treturn get( styles, extractor );\n\t\t\t}\n\n\t\t\tconst value = extractor( name, styles );\n\n\t\t\tif ( value ) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\n\t\treturn get( styles, toPath( name ) );\n\t}\n\n\t/**\n\t * Returns a reduced form of style property form normalized object.\n\t *\n\t * For default margin reducer, the below code:\n\t *\n\t *\t\tstylesProcessor.getReducedForm( 'margin', {\n\t *\t\t\tmargin: { top: '1px', right: '1px', bottom: '2px', left: '1px; }\n\t *\t\t} );\n\t *\n\t * will return:\n\t *\n\t *\t\t[\n\t *\t\t\t[ 'margin', '1px 1px 2px' ]\n\t *\t\t]\n\t *\n\t * because it might be represented as a shorthand 'margin' value. However if one of margin long hand values is missing it should return:\n\t *\n\t *\t\t[\n\t *\t\t\t[ 'margin-top', '1px' ],\n\t *\t\t\t[ 'margin-right', '1px' ],\n\t *\t\t\t[ 'margin-bottom', '2px' ]\n\t *\t\t\t// the 'left' value is missing - cannot use 'margin' shorthand.\n\t *\t\t]\n\t *\n\t * **Note**: To define reducer callbacks use {@link #setReducer}.\n\t *\n\t * @param {String} name\n\t * @param {String} name Name of style property.\n\t * @param {Object} styles Object holding normalized styles.\n\t * @returns {Array.<module:engine/view/stylesmap~PropertyDescriptor>}\n\t */\n\tgetReducedForm( name, styles ) {\n\t\tconst normalizedValue = this.getNormalized( name, styles );\n\n\t\t// Might be empty string.\n\t\tif ( normalizedValue === undefined ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif ( this._reducers.has( name ) ) {\n\t\t\tconst reducer = this._reducers.get( name );\n\n\t\t\treturn reducer( normalizedValue );\n\t\t}\n\n\t\treturn [ [ name, normalizedValue ] ];\n\t}\n\n\t/**\n\t * Returns related style names.\n\t *\n\t *\t\tstylesProcessor.getRelatedStyles( 'margin' );\n\t *\t\t// will return: [ 'margin-top', 'margin-right', 'margin-bottom', 'margin-left' ];\n\t *\n\t *\t\tstylesProcessor.getRelatedStyles( 'margin-top' );\n\t *\t\t// will return: [ 'margin' ];\n\t *\n\t * **Note**: To define new style relations load an existing style processor or use\n\t * {@link module:engine/view/stylesmap~StylesProcessor#setStyleRelation `StylesProcessor.setStyleRelation()`}.\n\t *\n\t * @param {String} name\n\t * @returns {Array.<String>}\n\t */\n\tgetRelatedStyles( name ) {\n\t\treturn this._consumables.get( name ) || [];\n\t}\n\n\t/**\n\t * Adds a normalizer method for a style property.\n\t *\n\t * A normalizer returns describing how the value should be normalized.\n\t *\n\t * For instance 'margin' style is a shorthand for four margin values:\n\t *\n\t * - 'margin-top'\n\t * - 'margin-right'\n\t * - 'margin-bottom'\n\t * - 'margin-left'\n\t *\n\t * and can be written in various ways if some values are equal to others. For instance `'margin: 1px 2em;'` is a shorthand for\n\t * `'margin-top: 1px;margin-right: 2em;margin-bottom: 1px;margin-left: 2em'`.\n\t *\n\t * A normalizer should parse various margin notations as a single object:\n\t *\n\t *\t\tconst styles = {\n\t *\t\t\tmargin: {\n\t *\t\t\t\ttop: '1px',\n\t *\t\t\t\tright: '2em',\n\t *\t\t\t\tbottom: '1px',\n\t *\t\t\t\tleft: '2em'\n\t *\t\t\t}\n\t *\t\t};\n\t *\n\t * Thus a normalizer for 'margin' style should return an object defining style path and value to store:\n\t *\n\t *\t\tconst returnValue = {\n\t *\t\t\tpath: 'margin',\n\t *\t\t\tvalue: {\n\t *\t\t\t\ttop: '1px',\n\t *\t\t\t\tright: '2em',\n\t *\t\t\t\tbottom: '1px',\n\t *\t\t\t\tleft: '2em'\n\t *\t\t\t}\n\t *\t\t};\n\t *\n\t * Additionally to fully support all margin notations there should be also defined 4 normalizers for longhand margin notations. Below\n\t * is an example for 'margin-top' style property normalizer:\n\t *\n\t *\t\tstylesProcessor.setNormalizer( 'margin-top', valueString => {\n\t *\t\t\treturn {\n\t *\t\t\t\tpath: 'margin.top',\n\t *\t\t\t\tvalue: valueString\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * @param {String} name\n\t * @param {Function} callback\n\t */\n\tsetNormalizer( name, callback ) {\n\t\tthis._normalizers.set( name, callback );\n\t}\n\n\t/**\n\t * Adds a extractor callback for a style property.\n\t *\n\t * Most normalized style values are stored as one level objects. It is assumed that `'margin-top'` style will be stored as:\n\t *\n\t *\t\tconst styles = {\n\t *\t\t\tmargin: {\n\t *\t\t\t\ttop: 'value'\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * However, some styles can have conflicting notations and thus it might be harder to extract a style value from shorthand. For instance\n\t * the 'border-top-style' can be defined using `'border-top:solid'`, `'border-style:solid none none none'` or by `'border:solid'`\n\t * shorthands. The default border styles processors stores styles as:\n\t *\n\t *\t\tconst styles = {\n\t *\t\t\tborder: {\n\t *\t\t\t\tstyle: {\n\t *\t\t\t\t\ttop: 'solid'\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * as it is better to modify border style independently from other values. On the other part the output of the border might be\n\t * desired as `border-top`, `border-left`, etc notation.\n\t *\n\t * In the above example a reducer should return a side border value that combines style, color and width:\n\t *\n\t *\t\tstyleProcessor.setExtractor( 'border-top', styles => {\n\t *\t\t\treturn {\n\t *\t\t\t\tcolor: styles.border.color.top,\n\t *\t\t\t\tstyle: styles.border.style.top,\n\t *\t\t\t\twidth: styles.border.width.top\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * @param {String} name\n\t * @param {Function|String} callbackOrPath Callback that return a requested value or path string for single values.\n\t */\n\tsetExtractor( name, callbackOrPath ) {\n\t\tthis._extractors.set( name, callbackOrPath );\n\t}\n\n\t/**\n\t * Adds a reducer callback for a style property.\n\t *\n\t * Reducer returns a minimal notation for given style name. For longhand properties it is not required to write a reducer as\n\t * by default the direct value from style path is taken.\n\t *\n\t * For shorthand styles a reducer should return minimal style notation either by returning single name-value tuple or multiple tuples\n\t * if a shorthand cannot be used. For instance for a margin shorthand a reducer might return:\n\t *\n\t *\t\tconst marginShortHandTuple = [\n\t *\t\t\t[ 'margin', '1px 1px 2px' ]\n\t *\t\t];\n\t *\n\t * or a longhand tuples for defined values:\n\t *\n\t *\t\t// Considering margin.bottom and margin.left are undefined.\n\t *\t\tconst marginLonghandsTuples = [\n\t *\t\t\t[ 'margin-top', '1px' ],\n\t *\t\t\t[ 'margin-right', '1px' ]\n\t *\t\t];\n\t *\n\t * A reducer obtains a normalized style value:\n\t *\n\t *\t\t// Simplified reducer that always outputs 4 values which are always present:\n\t *\t\tstylesProcessor.setReducer( 'margin', margin => {\n\t *\t\t\treturn [\n\t *\t\t\t\t[ 'margin', `${ margin.top } ${ margin.right } ${ margin.bottom } ${ margin.left }` ]\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t * @param {String} name\n\t * @param {Function} callback\n\t */\n\tsetReducer( name, callback ) {\n\t\tthis._reducers.set( name, callback );\n\t}\n\n\t/**\n\t * Defines a style shorthand relation to other style notations.\n\t *\n\t *\t\tstylesProcessor.setStyleRelation( 'margin', [\n\t *\t\t\t'margin-top',\n\t *\t\t\t'margin-right',\n\t *\t\t\t'margin-bottom',\n\t *\t\t\t'margin-left'\n\t *\t\t] );\n\t *\n\t * This enables expanding of style names for shorthands. For instance, if defined,\n\t * {@link module:engine/conversion/viewconsumable~ViewConsumable view consumable} items are automatically created\n\t * for long-hand margin style notation alongside the `'margin'` item.\n\t *\n\t * This means that when an element being converted has a style `margin`, a converter for `margin-left` will work just\n\t * fine since the view consumable will contain a consumable `margin-left` item (thanks to the relation) and\n\t * `element.getStyle( 'margin-left' )` will work as well assuming that the style processor was correctly configured.\n\t * However, once `margin-left` is consumed, `margin` will not be consumable anymore.\n\t *\n\t * @param {String} shorthandName\n\t * @param {Array.<String>} styleNames\n\t */\n\tsetStyleRelation( shorthandName, styleNames ) {\n\t\tthis._mapStyleNames( shorthandName, styleNames );\n\n\t\tfor ( const alsoName of styleNames ) {\n\t\t\tthis._mapStyleNames( alsoName, [ shorthandName ] );\n\t\t}\n\t}\n\n\t/**\n\t * Set two-way binding of style names.\n\t *\n\t * @param {String} name\n\t * @param {Array.<String>} styleNames\n\t * @private\n\t */\n\t_mapStyleNames( name, styleNames ) {\n\t\tif ( !this._consumables.has( name ) ) {\n\t\t\tthis._consumables.set( name, [] );\n\t\t}\n\n\t\tthis._consumables.get( name ).push( ...styleNames );\n\t}\n}\n\n// Parses inline styles and puts property - value pairs into styles map.\n//\n// @param {String} stylesString Styles to parse.\n// @returns {Map.<String, String>} stylesMap Map of parsed properties and values.\nfunction parseInlineStyles( stylesString ) {\n\t// `null` if no quote was found in input string or last found quote was a closing quote. See below.\n\tlet quoteType = null;\n\tlet propertyNameStart = 0;\n\tlet propertyValueStart = 0;\n\tlet propertyName = null;\n\n\tconst stylesMap = new Map();\n\n\t// Do not set anything if input string is empty.\n\tif ( stylesString === '' ) {\n\t\treturn stylesMap;\n\t}\n\n\t// Fix inline styles that do not end with `;` so they are compatible with algorithm below.\n\tif ( stylesString.charAt( stylesString.length - 1 ) != ';' ) {\n\t\tstylesString = stylesString + ';';\n\t}\n\n\t// Seek the whole string for \"special characters\".\n\tfor ( let i = 0; i < stylesString.length; i++ ) {\n\t\tconst char = stylesString.charAt( i );\n\n\t\tif ( quoteType === null ) {\n\t\t\t// No quote found yet or last found quote was a closing quote.\n\t\t\tswitch ( char ) {\n\t\t\t\tcase ':':\n\t\t\t\t\t// Most of time colon means that property name just ended.\n\t\t\t\t\t// Sometimes however `:` is found inside property value (for example in background image url).\n\t\t\t\t\tif ( !propertyName ) {\n\t\t\t\t\t\t// Treat this as end of property only if property name is not already saved.\n\t\t\t\t\t\t// Save property name.\n\t\t\t\t\t\tpropertyName = stylesString.substr( propertyNameStart, i - propertyNameStart );\n\t\t\t\t\t\t// Save this point as the start of property value.\n\t\t\t\t\t\tpropertyValueStart = i + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '\"':\n\t\t\t\tcase '\\'':\n\t\t\t\t\t// Opening quote found (this is an opening quote, because `quoteType` is `null`).\n\t\t\t\t\tquoteType = char;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ';': {\n\t\t\t\t\t// Property value just ended.\n\t\t\t\t\t// Use previously stored property value start to obtain property value.\n\t\t\t\t\tconst propertyValue = stylesString.substr( propertyValueStart, i - propertyValueStart );\n\n\t\t\t\t\tif ( propertyName ) {\n\t\t\t\t\t\t// Save parsed part.\n\t\t\t\t\t\tstylesMap.set( propertyName.trim(), propertyValue.trim() );\n\t\t\t\t\t}\n\n\t\t\t\t\tpropertyName = null;\n\n\t\t\t\t\t// Save this point as property name start. Property name starts immediately after previous property value ends.\n\t\t\t\t\tpropertyNameStart = i + 1;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( char === quoteType ) {\n\t\t\t// If a quote char is found and it is a closing quote, mark this fact by `null`-ing `quoteType`.\n\t\t\tquoteType = null;\n\t\t}\n\t}\n\n\treturn stylesMap;\n}\n\n// Return lodash compatible path from style name.\nfunction toPath( name ) {\n\treturn name.replace( '-', '.' );\n}\n\n// Appends style definition to the styles object.\n//\n// @param {String} nameOrPath\n// @param {String|Object} valueOrObject\n// @private\nfunction appendStyleValue( stylesObject, nameOrPath, valueOrObject ) {\n\tlet valueToSet = valueOrObject;\n\n\tif ( isObject( valueOrObject ) ) {\n\t\tvalueToSet = merge( {}, get( stylesObject, nameOrPath ), valueOrObject );\n\t}\n\n\tset( stylesObject, nameOrPath, valueToSet );\n}\n\n/**\n * A CSS style property descriptor that contains tuplet of two strings:\n *\n * - first string describes property name\n * - second string describes property value\n *\n *\t\tconst marginDescriptor = [ 'margin', '2px 3em' ];\n *\t\tconst marginTopDescriptor = [ 'margin-top', '2px' ];\n *\n * @typedef {Array.<String, String>} module:engine/view/stylesmap~PropertyDescriptor\n */\n\n/**\n * An object describing values associated with the sides of a box, for instance margins, paddings,\n * border widths, border colors, etc.\n *\n *\t\tconst margin = {\n *\t\t\ttop: '1px',\n *\t\t\tright: '3px',\n *\t\t\tbottom: '3px',\n *\t\t\tleft: '7px'\n *\t\t};\n *\n *\t\tconst borderColor = {\n *\t\t\ttop: 'red',\n *\t\t\tright: 'blue',\n *\t\t\tbottom: 'blue',\n *\t\t\tleft: 'red'\n *\t\t};\n *\n * @typedef {Object} module:engine/view/stylesmap~BoxSides\n *\n * @property {String} top Top side value.\n * @property {String} right Right side value.\n * @property {String} bottom Bottom side value.\n * @property {String} left Left side value.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/element\n */\n\nimport Node from './node';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport Matcher from './matcher';\nimport StylesMap from './stylesmap';\n\n// @if CK_DEBUG_ENGINE // const { convertMapToTags } = require( '../dev-utils/utils' );\n\n/**\n * View element.\n *\n * The editing engine does not define a fixed semantics of its elements (it is \"DTD-free\").\n * This is why the type of the {@link module:engine/view/element~Element} need to\n * be defined by the feature developer. When creating an element you should use one of the following methods:\n *\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement `downcastWriter#createContainerElement()`}\n * in order to create a {@link module:engine/view/containerelement~ContainerElement},\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement `downcastWriter#createAttributeElement()`}\n * in order to create a {@link module:engine/view/attributeelement~AttributeElement},\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`}\n * in order to create a {@link module:engine/view/emptyelement~EmptyElement}.\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}\n * in order to create a {@link module:engine/view/uielement~UIElement}.\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createEditableElement `downcastWriter#createEditableElement()`}\n * in order to create a {@link module:engine/view/editableelement~EditableElement}.\n *\n * Note that for view elements which are not created from the model, like elements from mutations, paste or\n * {@link module:engine/controller/datacontroller~DataController#set data.set} it is not possible to define the type of the element.\n * In such cases the {@link module:engine/view/upcastwriter~UpcastWriter#createElement `UpcastWriter#createElement()`} method\n * should be used to create generic view elements.\n *\n * @extends module:engine/view/node~Node\n */\nexport default class Element extends Node {\n\t/**\n\t * Creates a view element.\n\t *\n\t * Attributes can be passed in various formats:\n\t *\n\t *\t\tnew Element( viewDocument, 'div', { class: 'editor', contentEditable: 'true' } ); // object\n\t *\t\tnew Element( viewDocument, 'div', [ [ 'class', 'editor' ], [ 'contentEditable', 'true' ] ] ); // map-like iterator\n\t *\t\tnew Element( viewDocument, 'div', mapOfAttributes ); // map\n\t *\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor( document, name, attrs, children ) {\n\t\tsuper( document );\n\n\t\t/**\n\t\t * Name of the element.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Map of attributes, where attributes names are keys and attributes values are values.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map} #_attrs\n\t\t */\n\t\tthis._attrs = parseAttributes( attrs );\n\n\t\t/**\n\t\t * Array of child nodes.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis._children = [];\n\n\t\tif ( children ) {\n\t\t\tthis._insertChild( 0, children );\n\t\t}\n\n\t\t/**\n\t\t * Set of classes associated with element instance.\n\t\t *\n\t\t * @protected\n\t\t * @member {Set}\n\t\t */\n\t\tthis._classes = new Set();\n\n\t\tif ( this._attrs.has( 'class' ) ) {\n\t\t\t// Remove class attribute and handle it by class set.\n\t\t\tconst classString = this._attrs.get( 'class' );\n\t\t\tparseClasses( this._classes, classString );\n\t\t\tthis._attrs.delete( 'class' );\n\t\t}\n\n\t\t/**\n\t\t * Normalized styles.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:engine/view/stylesmap~StylesMap} module:engine/view/element~Element#_styles\n\t\t */\n\t\tthis._styles = new StylesMap( this.document.stylesProcessor );\n\n\t\tif ( this._attrs.has( 'style' ) ) {\n\t\t\t// Remove style attribute and handle it by styles map.\n\t\t\tthis._styles.setTo( this._attrs.get( 'style' ) );\n\n\t\t\tthis._attrs.delete( 'style' );\n\t\t}\n\n\t\t/**\n\t\t * Map of custom properties.\n\t\t * Custom properties can be added to element instance, will be cloned but not rendered into DOM.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map}\n\t\t */\n\t\tthis._customProperties = new Map();\n\t}\n\n\t/**\n\t * Number of element's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget childCount() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this element, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this._children.length === 0;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\telement.is( 'element' ); // -> true\n\t *\t\telement.is( 'node' ); // -> true\n\t *\t\telement.is( 'view:element' ); // -> true\n\t *\t\telement.is( 'view:node' ); // -> true\n\t *\n\t *\t\telement.is( 'model:element' ); // -> false\n\t *\t\telement.is( 'documentSelection' ); // -> false\n\t *\n\t * Assuming that the object being checked is an element, you can also check its\n\t * {@link module:engine/view/element~Element#name name}:\n\t *\n\t *\t\telement.is( 'img' ); // -> true if this is an <img> element\n\t *\t\telement.is( 'element', 'img' ); // -> same as above\n\t *\t\ttext.is( 'img' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === this.name || type === 'view:' + this.name ||\n\t\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'node' || type === 'view:node';\n\t\t} else {\n\t\t\treturn name === this.name && ( type === 'element' || type === 'view:element' );\n\t\t}\n\t}\n\n\t/**\n\t * Gets child at the given index.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/view/node~Node} Child node.\n\t */\n\tgetChild( index ) {\n\t\treturn this._children[ index ];\n\t}\n\n\t/**\n\t * Gets index of the given child node. Returns `-1` if child node is not found.\n\t *\n\t * @param {module:engine/view/node~Node} node Child node.\n\t * @returns {Number} Index of the child node.\n\t */\n\tgetChildIndex( node ) {\n\t\treturn this._children.indexOf( node );\n\t}\n\n\t/**\n\t * Gets child nodes iterator.\n\t *\n\t * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n\t */\n\tgetChildren() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Returns an iterator that contains the keys for attributes. Order of inserting attributes is not preserved.\n\t *\n\t * @returns {Iterable.<String>} Keys for attributes.\n\t */\n\t* getAttributeKeys() {\n\t\tif ( this._classes.size > 0 ) {\n\t\t\tyield 'class';\n\t\t}\n\n\t\tif ( !this._styles.isEmpty ) {\n\t\t\tyield 'style';\n\t\t}\n\n\t\tyield* this._attrs.keys();\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this element's attributes.\n\t *\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\t* getAttributes() {\n\t\tyield* this._attrs.entries();\n\n\t\tif ( this._classes.size > 0 ) {\n\t\t\tyield [ 'class', this.getAttribute( 'class' ) ];\n\t\t}\n\n\t\tif ( !this._styles.isEmpty ) {\n\t\t\tyield [ 'style', this.getAttribute( 'style' ) ];\n\t\t}\n\t}\n\n\t/**\n\t * Gets attribute by key. If attribute is not present - returns undefined.\n\t *\n\t * @param {String} key Attribute key.\n\t * @returns {String|undefined} Attribute value.\n\t */\n\tgetAttribute( key ) {\n\t\tif ( key == 'class' ) {\n\t\t\tif ( this._classes.size > 0 ) {\n\t\t\t\treturn [ ...this._classes ].join( ' ' );\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif ( key == 'style' ) {\n\t\t\tconst inlineStyle = this._styles.toString();\n\n\t\t\treturn inlineStyle == '' ? undefined : inlineStyle;\n\t\t}\n\n\t\treturn this._attrs.get( key );\n\t}\n\n\t/**\n\t * Returns a boolean indicating whether an attribute with the specified key exists in the element.\n\t *\n\t * @param {String} key Attribute key.\n\t * @returns {Boolean} `true` if attribute with the specified key exists in the element, false otherwise.\n\t */\n\thasAttribute( key ) {\n\t\tif ( key == 'class' ) {\n\t\t\treturn this._classes.size > 0;\n\t\t}\n\n\t\tif ( key == 'style' ) {\n\t\t\treturn !this._styles.isEmpty;\n\t\t}\n\n\t\treturn this._attrs.has( key );\n\t}\n\n\t/**\n\t * Checks if this element is similar to other element.\n\t * Both elements should have the same name and attributes to be considered as similar. Two similar elements\n\t * can contain different set of children nodes.\n\t *\n\t * @param {module:engine/view/element~Element} otherElement\n\t * @returns {Boolean}\n\t */\n\tisSimilar( otherElement ) {\n\t\tif ( !( otherElement instanceof Element ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If exactly the same Element is provided - return true immediately.\n\t\tif ( this === otherElement ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Check element name.\n\t\tif ( this.name != otherElement.name ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check number of attributes, classes and styles.\n\t\tif ( this._attrs.size !== otherElement._attrs.size || this._classes.size !== otherElement._classes.size ||\n\t\t\tthis._styles.size !== otherElement._styles.size ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if attributes are the same.\n\t\tfor ( const [ key, value ] of this._attrs ) {\n\t\t\tif ( !otherElement._attrs.has( key ) || otherElement._attrs.get( key ) !== value ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if classes are the same.\n\t\tfor ( const className of this._classes ) {\n\t\t\tif ( !otherElement._classes.has( className ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if styles are the same.\n\t\tfor ( const property of this._styles.getStyleNames() ) {\n\t\t\tif (\n\t\t\t\t!otherElement._styles.has( property ) ||\n\t\t\t\totherElement._styles.getAsString( property ) !== this._styles.getAsString( property )\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns true if class is present.\n\t * If more then one class is provided - returns true only when all classes are present.\n\t *\n\t *\t\telement.hasClass( 'foo' ); // Returns true if 'foo' class is present.\n\t *\t\telement.hasClass( 'foo', 'bar' ); // Returns true if 'foo' and 'bar' classes are both present.\n\t *\n\t * @param {...String} className\n\t */\n\thasClass( ...className ) {\n\t\tfor ( const name of className ) {\n\t\t\tif ( !this._classes.has( name ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns iterator that contains all class names.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetClassNames() {\n\t\treturn this._classes.keys();\n\t}\n\n\t/**\n\t * Returns style value for the given property mae.\n\t * If the style does not exist `undefined` is returned.\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#getAsString `StylesMap#getAsString()`} for details.\n\t *\n\t * For an element with style set to `'margin:1px'`:\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tconst element = view.change( writer => {\n\t *\t\t\tconst element = writer.createElement();\n\t *\t\t\twriter.setStyle( 'margin', '1px' );\n\t *\t\t\twriter.setStyle( 'margin-bottom', '3em' );\n\t *\n\t *\t\t\treturn element;\n\t *\t\t} );\n\t *\n\t *\t\telement.getStyle( 'margin' ); // -> 'margin: 1px 1px 3em;'\n\t *\n\t * @param {String} property\n\t * @returns {String|undefined}\n\t */\n\tgetStyle( property ) {\n\t\treturn this._styles.getAsString( property );\n\t}\n\n\t/**\n\t * Returns a normalized style object or single style value.\n\t *\n\t * For an element with style set to: margin:1px 2px 3em;\n\t *\n\t *\t\telement.getNormalizedStyle( 'margin' ) );\n\t *\n\t * will return:\n\t *\n\t *\t\t{\n\t *\t\t\ttop: '1px',\n\t *\t\t\tright: '2px',\n\t *\t\t\tbottom: '3em',\n\t *\t\t\tleft: '2px'    // a normalized value from margin shorthand\n\t *\t\t}\n\t *\n\t * and reading for single style value:\n\t *\n\t *\t\tstyles.getNormalizedStyle( 'margin-left' );\n\t *\n\t * Will return a `2px` string.\n\t *\n\t * **Note**: This method will return normalized values only if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#getNormalized `StylesMap#getNormalized()`} for details.\n\t *\n\t *\n\t * @param {String} property Name of CSS property\n\t * @returns {Object|String|undefined}\n\t */\n\tgetNormalizedStyle( property ) {\n\t\treturn this._styles.getNormalized( property );\n\t}\n\n\t/**\n\t * Returns iterator that contains all style names.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetStyleNames() {\n\t\treturn this._styles.getStyleNames();\n\t}\n\n\t/**\n\t * Returns true if style keys are present.\n\t * If more then one style property is provided - returns true only when all properties are present.\n\t *\n\t *\t\telement.hasStyle( 'color' ); // Returns true if 'border-top' style is present.\n\t *\t\telement.hasStyle( 'color', 'border-top' ); // Returns true if 'color' and 'border-top' styles are both present.\n\t *\n\t * @param {...String} property\n\t */\n\thasStyle( ...property ) {\n\t\tfor ( const name of property ) {\n\t\t\tif ( !this._styles.has( name ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns ancestor element that match specified pattern.\n\t * Provided patterns should be compatible with {@link module:engine/view/matcher~Matcher Matcher} as it is used internally.\n\t *\n\t * @see module:engine/view/matcher~Matcher\n\t * @param {Object|String|RegExp|Function} patterns Patterns used to match correct ancestor.\n\t * See {@link module:engine/view/matcher~Matcher}.\n\t * @returns {module:engine/view/element~Element|null} Found element or `null` if no matching ancestor was found.\n\t */\n\tfindAncestor( ...patterns ) {\n\t\tconst matcher = new Matcher( ...patterns );\n\t\tlet parent = this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tif ( matcher.match( parent ) ) {\n\t\t\t\treturn parent;\n\t\t\t}\n\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the custom property value for the given key.\n\t *\n\t * @param {String|Symbol} key\n\t * @returns {*}\n\t */\n\tgetCustomProperty( key ) {\n\t\treturn this._customProperties.get( key );\n\t}\n\n\t/**\n\t * Returns an iterator which iterates over this element's custom properties.\n\t * Iterator provides `[ key, value ]` pairs for each stored property.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\t* getCustomProperties() {\n\t\tyield* this._customProperties.entries();\n\t}\n\n\t/**\n\t * Returns identity string based on element's name, styles, classes and other attributes.\n\t * Two elements that {@link #isSimilar are similar} will have same identity string.\n\t * It has the following format:\n\t *\n\t *\t\t'name class=\"class1,class2\" style=\"style1:value1;style2:value2\" attr1=\"val1\" attr2=\"val2\"'\n \t *\n\t * For example:\n\t *\n\t *\t\tconst element = writer.createContainerElement( 'foo', {\n\t *\t\t\tbanana: '10',\n\t *\t\t\tapple: '20',\n\t *\t\t\tstyle: 'color: red; border-color: white;',\n\t *\t\t\tclass: 'baz'\n\t *\t\t} );\n\t *\n\t *\t\t// returns 'foo class=\"baz\" style=\"border-color:white;color:red\" apple=\"20\" banana=\"10\"'\n\t *\t\telement.getIdentity();\n\t *\n\t * **Note**: Classes, styles and other attributes are sorted alphabetically.\n\t *\n\t * @returns {String}\n\t */\n\tgetIdentity() {\n\t\tconst classes = Array.from( this._classes ).sort().join( ',' );\n\t\tconst styles = this._styles.toString();\n\t\tconst attributes = Array.from( this._attrs ).map( i => `${ i[ 0 ] }=\"${ i[ 1 ] }\"` ).sort().join( ' ' );\n\n\t\treturn this.name +\n\t\t\t( classes == '' ? '' : ` class=\"${ classes }\"` ) +\n\t\t\t( !styles ? '' : ` style=\"${ styles }\"` ) +\n\t\t\t( attributes == '' ? '' : ` ${ attributes }` );\n\t}\n\n\t/**\n\t * Clones provided element.\n\t *\n\t * @protected\n\t * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any children.\n\t * @returns {module:engine/view/element~Element} Clone of this element.\n\t */\n\t_clone( deep = false ) {\n\t\tconst childrenClone = [];\n\n\t\tif ( deep ) {\n\t\t\tfor ( const child of this.getChildren() ) {\n\t\t\t\tchildrenClone.push( child._clone( deep ) );\n\t\t\t}\n\t\t}\n\n\t\t// ContainerElement and AttributeElement should be also cloned properly.\n\t\tconst cloned = new this.constructor( this.document, this.name, this._attrs, childrenClone );\n\n\t\t// Classes and styles are cloned separately - this solution is faster than adding them back to attributes and\n\t\t// parse once again in constructor.\n\t\tcloned._classes = new Set( this._classes );\n\t\tcloned._styles.set( this._styles.getNormalized() );\n\n\t\t// Clone custom properties.\n\t\tcloned._customProperties = new Map( this._customProperties );\n\n\t\t// Clone filler offset method.\n\t\t// We can't define this method in a prototype because it's behavior which\n\t\t// is changed by e.g. toWidget() function from ckeditor5-widget. Perhaps this should be one of custom props.\n\t\tcloned.getFillerOffset = this.getFillerOffset;\n\n\t\treturn cloned;\n\t}\n\n\t/**\n\t * {@link module:engine/view/element~Element#_insertChild Insert} a child node or a list of child nodes at the end of this node\n\t * and sets the parent of these nodes to this element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#insert\n\t * @protected\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @fires module:engine/view/node~Node#change\n\t * @returns {Number} Number of appended nodes.\n\t */\n\t_appendChild( items ) {\n\t\treturn this._insertChild( this.childCount, items );\n\t}\n\n\t/**\n\t * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n\t * this element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#insert\n\t * @protected\n\t * @param {Number} index Position where nodes should be inserted.\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @fires module:engine/view/node~Node#change\n\t * @returns {Number} Number of inserted nodes.\n\t */\n\t_insertChild( index, items ) {\n\t\tthis._fireChange( 'children', this );\n\t\tlet count = 0;\n\n\t\tconst nodes = normalize( this.document, items );\n\n\t\tfor ( const node of nodes ) {\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\n\t\t\tif ( node.parent !== null ) {\n\t\t\t\tnode._remove();\n\t\t\t}\n\n\t\t\tnode.parent = this;\n\t\t\tnode.document = this.document;\n\n\t\t\tthis._children.splice( index, 0, node );\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#remove\n\t * @protected\n\t * @param {Number} index Number of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @fires module:engine/view/node~Node#change\n\t * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n\t */\n\t_removeChildren( index, howMany = 1 ) {\n\t\tthis._fireChange( 'children', this );\n\n\t\tfor ( let i = index; i < index + howMany; i++ ) {\n\t\t\tthis._children[ i ].parent = null;\n\t\t}\n\n\t\treturn this._children.splice( index, howMany );\n\t}\n\n\t/**\n\t * Adds or overwrite attribute with a specified key and value.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#setAttribute\n\t * @protected\n\t * @param {String} key Attribute key.\n\t * @param {String} value Attribute value.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_setAttribute( key, value ) {\n\t\tvalue = String( value );\n\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tif ( key == 'class' ) {\n\t\t\tparseClasses( this._classes, value );\n\t\t} else if ( key == 'style' ) {\n\t\t\tthis._styles.setTo( value );\n\t\t} else {\n\t\t\tthis._attrs.set( key, value );\n\t\t}\n\t}\n\n\t/**\n\t * Removes attribute from the element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeAttribute\n\t * @protected\n\t * @param {String} key Attribute key.\n\t * @returns {Boolean} Returns true if an attribute existed and has been removed.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_removeAttribute( key ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\t// Remove class attribute.\n\t\tif ( key == 'class' ) {\n\t\t\tif ( this._classes.size > 0 ) {\n\t\t\t\tthis._classes.clear();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Remove style attribute.\n\t\tif ( key == 'style' ) {\n\t\t\tif ( !this._styles.isEmpty ) {\n\t\t\t\tthis._styles.clear();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Remove other attributes.\n\t\treturn this._attrs.delete( key );\n\t}\n\n\t/**\n\t * Adds specified class.\n\t *\n\t *\t\telement._addClass( 'foo' ); // Adds 'foo' class.\n\t *\t\telement._addClass( [ 'foo', 'bar' ] ); // Adds 'foo' and 'bar' classes.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#addClass\n\t * @protected\n\t * @param {Array.<String>|String} className\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_addClass( className ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tclassName = Array.isArray( className ) ? className : [ className ];\n\t\tclassName.forEach( name => this._classes.add( name ) );\n\t}\n\n\t/**\n\t * Removes specified class.\n\t *\n\t *\t\telement._removeClass( 'foo' );  // Removes 'foo' class.\n\t *\t\telement._removeClass( [ 'foo', 'bar' ] ); // Removes both 'foo' and 'bar' classes.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeClass\n\t * @protected\n\t * @param {Array.<String>|String} className\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_removeClass( className ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tclassName = Array.isArray( className ) ? className : [ className ];\n\t\tclassName.forEach( name => this._classes.delete( name ) );\n\t}\n\n\t/**\n\t * Adds style to the element.\n\t *\n\t *\t\telement._setStyle( 'color', 'red' );\n\t *\t\telement._setStyle( {\n\t *\t\t\tcolor: 'red',\n\t *\t\t\tposition: 'fixed'\n\t *\t\t} );\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#set `StylesMap#set()`} for details.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#setStyle\n\t * @protected\n\t * @param {String|Object} property Property name or object with key - value pairs.\n\t * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_setStyle( property, value ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tthis._styles.set( property, value );\n\t}\n\n\t/**\n\t * Removes specified style.\n\t *\n\t *\t\telement._removeStyle( 'color' );  // Removes 'color' style.\n\t *\t\telement._removeStyle( [ 'color', 'border-top' ] ); // Removes both 'color' and 'border-top' styles.\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#remove `StylesMap#remove()`} for details.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeStyle\n\t * @protected\n\t * @param {Array.<String>|String} property\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_removeStyle( property ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tproperty = Array.isArray( property ) ? property : [ property ];\n\t\tproperty.forEach( name => this._styles.remove( name ) );\n\t}\n\n\t/**\n\t * Sets a custom property. Unlike attributes, custom properties are not rendered to the DOM,\n\t * so they can be used to add special data to elements.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#setCustomProperty\n\t * @protected\n\t * @param {String|Symbol} key\n\t * @param {*} value\n\t */\n\t_setCustomProperty( key, value ) {\n\t\tthis._customProperties.set( key, value );\n\t}\n\n\t/**\n\t * Removes the custom property stored under the given key.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeCustomProperty\n\t * @protected\n\t * @param {String|Symbol} key\n\t * @returns {Boolean} Returns true if property was removed.\n\t */\n\t_removeCustomProperty( key ) {\n\t\treturn this._customProperties.delete( key );\n\t}\n\n\t/**\n\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n\t *\n\t * @abstract\n\t * @method module:engine/view/element~Element#getFillerOffset\n\t */\n\n\t// @if CK_DEBUG_ENGINE // printTree( level = 0) {\n\t// @if CK_DEBUG_ENGINE // \tlet string = '';\n\n\t// @if CK_DEBUG_ENGINE //\tstring += '\\t'.repeat( level ) + `<${ this.name }${ convertMapToTags( this.getAttributes() ) }>`;\n\n\t// @if CK_DEBUG_ENGINE //\tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE //\t\tif ( child.is( 'text' ) ) {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + '\\t'.repeat( level + 1 ) + child.data;\n\t// @if CK_DEBUG_ENGINE //\t\t} else {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + child.printTree( level + 1 );\n\t// @if CK_DEBUG_ENGINE //\t\t}\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\tif ( this.childCount ) {\n\t// @if CK_DEBUG_ENGINE //\t\tstring += '\\n' + '\\t'.repeat( level );\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\tstring += `</${ this.name }>`;\n\n\t// @if CK_DEBUG_ENGINE //\treturn string;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logTree() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n// Parses attributes provided to the element constructor before they are applied to an element. If attributes are passed\n// as an object (instead of `Iterable`), the object is transformed to the map. Attributes with `null` value are removed.\n// Attributes with non-`String` value are converted to `String`.\n//\n// @param {Object|Iterable} attrs Attributes to parse.\n// @returns {Map} Parsed attributes.\nfunction parseAttributes( attrs ) {\n\tattrs = toMap( attrs );\n\n\tfor ( const [ key, value ] of attrs ) {\n\t\tif ( value === null ) {\n\t\t\tattrs.delete( key );\n\t\t} else if ( typeof value != 'string' ) {\n\t\t\tattrs.set( key, String( value ) );\n\t\t}\n\t}\n\n\treturn attrs;\n}\n\n// Parses class attribute and puts all classes into classes set.\n// Classes set s cleared before insertion.\n//\n// @param {Set.<String>} classesSet Set to insert parsed classes.\n// @param {String} classesString String with classes to parse.\nfunction parseClasses( classesSet, classesString ) {\n\tconst classArray = classesString.split( /\\s+/ );\n\tclassesSet.clear();\n\tclassArray.forEach( name => classesSet.add( name ) );\n}\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/item~Item|Iterable.<String|module:engine/view/item~Item>}\n// @returns {Iterable.<module:engine/view/node~Node>}\nfunction normalize( document, nodes ) {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( document, nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\tif ( typeof node == 'string' ) {\n\t\t\t\treturn new Text( document, node );\n\t\t\t}\n\n\t\t\tif ( node instanceof TextProxy ) {\n\t\t\t\treturn new Text( document, node.data );\n\t\t\t}\n\n\t\t\treturn node;\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/containerelement\n */\n\nimport Element from './element';\n\n/**\n * Containers are elements which define document structure. They define boundaries for\n * {@link module:engine/view/attributeelement~AttributeElement attributes}. They are mostly used for block elements like `<p>` or `<div>`.\n *\n * Editing engine does not define a fixed HTML DTD. This is why a feature developer needs to choose between various\n * types (container element, {@link module:engine/view/attributeelement~AttributeElement attribute element},\n * {@link module:engine/view/emptyelement~EmptyElement empty element}, etc) when developing a feature.\n *\n * The container element should be your default choice when writing a converter, unless:\n *\n * * this element represents a model text attribute (then use {@link module:engine/view/attributeelement~AttributeElement}),\n * * this is an empty element like `<img>` (then use {@link module:engine/view/emptyelement~EmptyElement}),\n * * this is a root element,\n * * this is a nested editable element (then use  {@link module:engine/view/editableelement~EditableElement}).\n *\n * To create a new container element instance use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement `DowncastWriter#createContainerElement()`}\n * method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class ContainerElement extends Element {\n\t/**\n\t * Creates a container element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createContainerElement\n\t * @see module:engine/view/element~Element\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor( document, name, attrs, children ) {\n\t\tsuper( document, name, attrs, children );\n\n\t\t/**\n\t\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tcontainerElement.is( 'containerElement' ); // -> true\n\t *\t\tcontainerElement.is( 'element' ); // -> true\n\t *\t\tcontainerElement.is( 'node' ); // -> true\n\t *\t\tcontainerElement.is( 'view:containerElement' ); // -> true\n\t *\t\tcontainerElement.is( 'view:element' ); // -> true\n\t *\t\tcontainerElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\tcontainerElement.is( 'model:element' ); // -> false\n\t *\t\tcontainerElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is a container element, you can also check its\n\t * {@link module:engine/view/containerelement~ContainerElement#name name}:\n\t *\n\t *\t\tcontainerElement.is( 'div' ); // -> true if this is a div container element\n\t *\t\tcontainerElement.is( 'contaienrElement', 'div' ); // -> same as above\n\t *\t\ttext.is( 'div' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'containerElement' || type === 'view:containerElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === this.name || type === 'view:' + this.name ||\n\t\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\t\ttype === 'node' || type === 'view:node';\n\t\t} else {\n\t\t\treturn name === this.name && (\n\t\t\t\ttype === 'containerElement' || type === 'view:containerElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'element' || type === 'view:element'\n\t\t\t);\n\t\t}\n\t}\n}\n\n/**\n * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n *\n * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n */\nexport function getFillerOffset() {\n\tconst children = [ ...this.getChildren() ];\n\tconst lastChild = children[ this.childCount - 1 ];\n\n\t// Block filler is required after a `<br>` if it's the last element in its container. See #1422.\n\tif ( lastChild && lastChild.is( 'element', 'br' ) ) {\n\t\treturn this.childCount;\n\t}\n\n\tfor ( const child of children ) {\n\t\t// If there's any non-UI element – don't render the bogus.\n\t\tif ( !child.is( 'uiElement' ) ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// If there are only UI elements – render the bogus at the end of the element.\n\treturn this.childCount;\n}\n","import copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport keysIn from './keysIn.js';\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nexport default assignIn;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/observablemixin\n */\n\nimport EmitterMixin from './emittermixin';\nimport CKEditorError from './ckeditorerror';\nimport { extend, isObject } from 'lodash-es';\n\nconst observablePropertiesSymbol = Symbol( 'observableProperties' );\nconst boundObservablesSymbol = Symbol( 'boundObservables' );\nconst boundPropertiesSymbol = Symbol( 'boundProperties' );\n\n/**\n * Mixin that injects the \"observable properties\" and data binding functionality described in the\n * {@link ~Observable} interface.\n *\n * Read more about the concept of observables in the:\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables \"Event system and observables\"}\n * section of the {@glink framework/guides/architecture/core-editor-architecture \"Core editor architecture\"} guide,\n * * {@glink framework/guides/deep-dive/observables \"Observables\" deep dive} guide.\n *\n * @mixin ObservableMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/observablemixin~Observable\n */\nconst ObservableMixin = {\n\t/**\n\t * @inheritDoc\n\t */\n\tset( name, value ) {\n\t\t// If the first parameter is an Object, iterate over its properties.\n\t\tif ( isObject( name ) ) {\n\t\t\tObject.keys( name ).forEach( property => {\n\t\t\t\tthis.set( property, name[ property ] );\n\t\t\t}, this );\n\n\t\t\treturn;\n\t\t}\n\n\t\tinitObservable( this );\n\n\t\tconst properties = this[ observablePropertiesSymbol ];\n\n\t\tif ( ( name in this ) && !properties.has( name ) ) {\n\t\t\t/**\n\t\t\t * Cannot override an existing property.\n\t\t\t *\n\t\t\t * This error is thrown when trying to {@link ~Observable#set set} an property with\n\t\t\t * a name of an already existing property. For example:\n\t\t\t *\n\t\t\t *\t\tlet observable = new Model();\n\t\t\t *\t\tobservable.property = 1;\n\t\t\t *\t\tobservable.set( 'property', 2 );\t\t\t// throws\n\t\t\t *\n\t\t\t *\t\tobservable.set( 'property', 1 );\n\t\t\t *\t\tobservable.set( 'property', 2 );\t\t\t// ok, because this is an existing property.\n\t\t\t *\n\t\t\t * @error observable-set-cannot-override\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-set-cannot-override: Cannot override an existing property.', this );\n\t\t}\n\n\t\tObject.defineProperty( this, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget() {\n\t\t\t\treturn properties.get( name );\n\t\t\t},\n\n\t\t\tset( value ) {\n\t\t\t\tconst oldValue = properties.get( name );\n\n\t\t\t\t// Fire `set` event before the new value will be set to make it possible\n\t\t\t\t// to override observable property without affecting `change` event.\n\t\t\t\t// See https://github.com/ckeditor/ckeditor5-utils/issues/171.\n\t\t\t\tlet newValue = this.fire( 'set:' + name, name, value, oldValue );\n\n\t\t\t\tif ( newValue === undefined ) {\n\t\t\t\t\tnewValue = value;\n\t\t\t\t}\n\n\t\t\t\t// Allow undefined as an initial value like A.define( 'x', undefined ) (#132).\n\t\t\t\t// Note: When properties map has no such own property, then its value is undefined.\n\t\t\t\tif ( oldValue !== newValue || !properties.has( name ) ) {\n\t\t\t\t\tproperties.set( name, newValue );\n\t\t\t\t\tthis.fire( 'change:' + name, name, newValue, oldValue );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tthis[ name ] = value;\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tbind( ...bindProperties ) {\n\t\tif ( !bindProperties.length || !isStringArray( bindProperties ) ) {\n\t\t\t/**\n\t\t\t * All properties must be strings.\n\t\t\t *\n\t\t\t * @error observable-bind-wrong-properties\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-bind-wrong-properties: All properties must be strings.', this );\n\t\t}\n\n\t\tif ( ( new Set( bindProperties ) ).size !== bindProperties.length ) {\n\t\t\t/**\n\t\t\t * Properties must be unique.\n\t\t\t *\n\t\t\t * @error observable-bind-duplicate-properties\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-bind-duplicate-properties: Properties must be unique.', this );\n\t\t}\n\n\t\tinitObservable( this );\n\n\t\tconst boundProperties = this[ boundPropertiesSymbol ];\n\n\t\tbindProperties.forEach( propertyName => {\n\t\t\tif ( boundProperties.has( propertyName ) ) {\n\t\t\t\t/**\n\t\t\t\t * Cannot bind the same property more than once.\n\t\t\t\t *\n\t\t\t\t * @error observable-bind-rebind\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'observable-bind-rebind: Cannot bind the same property more than once.', this );\n\t\t\t}\n\t\t} );\n\n\t\tconst bindings = new Map();\n\n\t\t// @typedef {Object} Binding\n\t\t// @property {Array} property Property which is bound.\n\t\t// @property {Array} to Array of observable–property components of the binding (`{ observable: ..., property: .. }`).\n\t\t// @property {Array} callback A function which processes `to` components.\n\t\tbindProperties.forEach( a => {\n\t\t\tconst binding = { property: a, to: [] };\n\n\t\t\tboundProperties.set( a, binding );\n\t\t\tbindings.set( a, binding );\n\t\t} );\n\n\t\t// @typedef {Object} BindChain\n\t\t// @property {Function} to See {@link ~ObservableMixin#_bindTo}.\n\t\t// @property {Function} toMany See {@link ~ObservableMixin#_bindToMany}.\n\t\t// @property {module:utils/observablemixin~Observable} _observable The observable which initializes the binding.\n\t\t// @property {Array} _bindProperties Array of `_observable` properties to be bound.\n\t\t// @property {Array} _to Array of `to()` observable–properties (`{ observable: toObservable, properties: ...toProperties }`).\n\t\t// @property {Map} _bindings Stores bindings to be kept in\n\t\t// {@link ~ObservableMixin#_boundProperties}/{@link ~ObservableMixin#_boundObservables}\n\t\t// initiated in this binding chain.\n\t\treturn {\n\t\t\tto: bindTo,\n\t\t\ttoMany: bindToMany,\n\n\t\t\t_observable: this,\n\t\t\t_bindProperties: bindProperties,\n\t\t\t_to: [],\n\t\t\t_bindings: bindings\n\t\t};\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tunbind( ...unbindProperties ) {\n\t\t// Nothing to do here if not inited yet.\n\t\tif ( !( this[ observablePropertiesSymbol ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst boundProperties = this[ boundPropertiesSymbol ];\n\t\tconst boundObservables = this[ boundObservablesSymbol ];\n\n\t\tif ( unbindProperties.length ) {\n\t\t\tif ( !isStringArray( unbindProperties ) ) {\n\t\t\t\t/**\n\t\t\t\t * Properties must be strings.\n\t\t\t\t *\n\t\t\t\t * @error observable-unbind-wrong-properties\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'observable-unbind-wrong-properties: Properties must be strings.', this );\n\t\t\t}\n\n\t\t\tunbindProperties.forEach( propertyName => {\n\t\t\t\tconst binding = boundProperties.get( propertyName );\n\n\t\t\t\t// Nothing to do if the binding is not defined\n\t\t\t\tif ( !binding ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet toObservable, toProperty, toProperties, toPropertyBindings;\n\n\t\t\t\tbinding.to.forEach( to => {\n\t\t\t\t\t// TODO: ES6 destructuring.\n\t\t\t\t\ttoObservable = to[ 0 ];\n\t\t\t\t\ttoProperty = to[ 1 ];\n\t\t\t\t\ttoProperties = boundObservables.get( toObservable );\n\t\t\t\t\ttoPropertyBindings = toProperties[ toProperty ];\n\n\t\t\t\t\ttoPropertyBindings.delete( binding );\n\n\t\t\t\t\tif ( !toPropertyBindings.size ) {\n\t\t\t\t\t\tdelete toProperties[ toProperty ];\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !Object.keys( toProperties ).length ) {\n\t\t\t\t\t\tboundObservables.delete( toObservable );\n\t\t\t\t\t\tthis.stopListening( toObservable, 'change' );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tboundProperties.delete( propertyName );\n\t\t\t} );\n\t\t} else {\n\t\t\tboundObservables.forEach( ( bindings, boundObservable ) => {\n\t\t\t\tthis.stopListening( boundObservable, 'change' );\n\t\t\t} );\n\n\t\t\tboundObservables.clear();\n\t\t\tboundProperties.clear();\n\t\t}\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdecorate( methodName ) {\n\t\tconst originalMethod = this[ methodName ];\n\n\t\tif ( !originalMethod ) {\n\t\t\t/**\n\t\t\t * Cannot decorate an undefined method.\n\t\t\t *\n\t\t\t * @error observablemixin-cannot-decorate-undefined\n\t\t\t * @param {Object} object The object which method should be decorated.\n\t\t\t * @param {String} methodName Name of the method which does not exist.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'observablemixin-cannot-decorate-undefined: Cannot decorate an undefined method.',\n\t\t\t\tthis,\n\t\t\t\t{ object: this, methodName }\n\t\t\t);\n\t\t}\n\n\t\tthis.on( methodName, ( evt, args ) => {\n\t\t\tevt.return = originalMethod.apply( this, args );\n\t\t} );\n\n\t\tthis[ methodName ] = function( ...args ) {\n\t\t\treturn this.fire( methodName, args );\n\t\t};\n\t}\n};\n\nextend( ObservableMixin, EmitterMixin );\n\nexport default ObservableMixin;\n\n// Init symbol properties needed to for the observable mechanism to work.\n//\n// @private\n// @param {module:utils/observablemixin~ObservableMixin} observable\nfunction initObservable( observable ) {\n\t// Do nothing if already inited.\n\tif ( observable[ observablePropertiesSymbol ] ) {\n\t\treturn;\n\t}\n\n\t// The internal hash containing the observable's state.\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty( observable, observablePropertiesSymbol, {\n\t\tvalue: new Map()\n\t} );\n\n\t// Map containing bindings to external observables. It shares the binding objects\n\t// (`{ observable: A, property: 'a', to: ... }`) with {@link module:utils/observablemixin~ObservableMixin#_boundProperties} and\n\t// it is used to observe external observables to update own properties accordingly.\n\t// See {@link module:utils/observablemixin~ObservableMixin#bind}.\n\t//\n\t//\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n\t//\t\tconsole.log( A._boundObservables );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\tB: {\n\t//\t\t\t\t\tx: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\ty: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t}\n\t//\t\t\t} )\n\t//\n\t//\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n\t//\t\tconsole.log( A._boundObservables );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\tB: {\n\t//\t\t\t\t\tx: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\ty: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\tz: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t},\n\t//\t\t\t\tC: {\n\t//\t\t\t\t\tw: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t}\n\t//\t\t\t} )\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty( observable, boundObservablesSymbol, {\n\t\tvalue: new Map()\n\t} );\n\n\t// Object that stores which properties of this observable are bound and how. It shares\n\t// the binding objects (`{ observable: A, property: 'a', to: ... }`) with\n\t// {@link module:utils/observablemixin~ObservableMixin#_boundObservables}. This data structure is\n\t// a reverse of {@link module:utils/observablemixin~ObservableMixin#_boundObservables} and it is helpful for\n\t// {@link module:utils/observablemixin~ObservableMixin#unbind}.\n\t//\n\t// See {@link module:utils/observablemixin~ObservableMixin#bind}.\n\t//\n\t//\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n\t//\t\tconsole.log( A._boundProperties );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t} )\n\t//\n\t//\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n\t//\t\tconsole.log( A._boundProperties );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\td: { observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t} )\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty( observable, boundPropertiesSymbol, {\n\t\tvalue: new Map()\n\t} );\n}\n\n// A chaining for {@link module:utils/observablemixin~ObservableMixin#bind} providing `.to()` interface.\n//\n// @private\n// @param {...[Observable|String|Function]} args Arguments of the `.to( args )` binding.\nfunction bindTo( ...args ) {\n\tconst parsedArgs = parseBindToArgs( ...args );\n\tconst bindingsKeys = Array.from( this._bindings.keys() );\n\tconst numberOfBindings = bindingsKeys.length;\n\n\t// Eliminate A.bind( 'x' ).to( B, C )\n\tif ( !parsedArgs.callback && parsedArgs.to.length > 1 ) {\n\t\t/**\n\t\t * Binding multiple observables only possible with callback.\n\t\t *\n\t\t * @error observable-bind-no-callback\n\t\t */\n\t\tthrow new CKEditorError(\n\t\t\t'observable-bind-to-no-callback: Binding multiple observables only possible with callback.',\n\t\t\tthis\n\t\t);\n\t}\n\n\t// Eliminate A.bind( 'x', 'y' ).to( B, callback )\n\tif ( numberOfBindings > 1 && parsedArgs.callback ) {\n\t\t/**\n\t\t * Cannot bind multiple properties and use a callback in one binding.\n\t\t *\n\t\t * @error observable-bind-to-extra-callback\n\t\t */\n\t\tthrow new CKEditorError(\n\t\t\t'observable-bind-to-extra-callback: Cannot bind multiple properties and use a callback in one binding.',\n\t\t\tthis\n\t\t);\n\t}\n\n\tparsedArgs.to.forEach( to => {\n\t\t// Eliminate A.bind( 'x', 'y' ).to( B, 'a' )\n\t\tif ( to.properties.length && to.properties.length !== numberOfBindings ) {\n\t\t\t/**\n\t\t\t * The number of properties must match.\n\t\t\t *\n\t\t\t * @error observable-bind-to-properties-length\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-bind-to-properties-length: The number of properties must match.', this );\n\t\t}\n\n\t\t// When no to.properties specified, observing source properties instead i.e.\n\t\t// A.bind( 'x', 'y' ).to( B ) -> Observe B.x and B.y\n\t\tif ( !to.properties.length ) {\n\t\t\tto.properties = this._bindProperties;\n\t\t}\n\t} );\n\n\tthis._to = parsedArgs.to;\n\n\t// Fill {@link BindChain#_bindings} with callback. When the callback is set there's only one binding.\n\tif ( parsedArgs.callback ) {\n\t\tthis._bindings.get( bindingsKeys[ 0 ] ).callback = parsedArgs.callback;\n\t}\n\n\tattachBindToListeners( this._observable, this._to );\n\n\t// Update observable._boundProperties and observable._boundObservables.\n\tupdateBindToBound( this );\n\n\t// Set initial values of bound properties.\n\tthis._bindProperties.forEach( propertyName => {\n\t\tupdateBoundObservableProperty( this._observable, propertyName );\n\t} );\n}\n\n// Binds to an attribute in a set of iterable observables.\n//\n// @private\n// @param {Array.<Observable>} observables\n// @param {String} attribute\n// @param {Function} callback\nfunction bindToMany( observables, attribute, callback ) {\n\tif ( this._bindings.size > 1 ) {\n\t\t/**\n\t\t * Binding one attribute to many observables only possible with one attribute.\n\t\t *\n\t\t * @error observable-bind-to-many-not-one-binding\n\t\t */\n\t\tthrow new CKEditorError( 'observable-bind-to-many-not-one-binding: Cannot bind multiple properties with toMany().', this );\n\t}\n\n\tthis.to(\n\t\t// Bind to #attribute of each observable...\n\t\t...getBindingTargets( observables, attribute ),\n\t\t// ...using given callback to parse attribute values.\n\t\tcallback\n\t);\n}\n\n// Returns an array of binding components for\n// {@link Observable#bind} from a set of iterable observables.\n//\n// @param {Array.<Observable>} observables\n// @param {String} attribute\n// @returns {Array.<String|Observable>}\nfunction getBindingTargets( observables, attribute ) {\n\tconst observableAndAttributePairs = observables.map( observable => [ observable, attribute ] );\n\n\t// Merge pairs to one-dimension array of observables and attributes.\n\treturn Array.prototype.concat.apply( [], observableAndAttributePairs );\n}\n\n// Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\nfunction isStringArray( arr ) {\n\treturn arr.every( a => typeof a == 'string' );\n}\n\n// Parses and validates {@link Observable#bind}`.to( args )` arguments and returns\n// an object with a parsed structure. For example\n//\n//\t\tA.bind( 'x' ).to( B, 'a', C, 'b', call );\n//\n// becomes\n//\n//\t\t{\n//\t\t\tto: [\n//\t\t\t\t{ observable: B, properties: [ 'a' ] },\n//\t\t\t\t{ observable: C, properties: [ 'b' ] },\n//\t\t\t],\n//\t\t\tcallback: call\n// \t\t}\n//\n// @private\n// @param {...*} args Arguments of {@link Observable#bind}`.to( args )`.\n// @returns {Object}\nfunction parseBindToArgs( ...args ) {\n\t// Eliminate A.bind( 'x' ).to()\n\tif ( !args.length ) {\n\t\t/**\n\t\t * Invalid argument syntax in `to()`.\n\t\t *\n\t\t * @error observable-bind-to-parse-error\n\t\t */\n\t\tthrow new CKEditorError( 'observable-bind-to-parse-error: Invalid argument syntax in `to()`.', null );\n\t}\n\n\tconst parsed = { to: [] };\n\tlet lastObservable;\n\n\tif ( typeof args[ args.length - 1 ] == 'function' ) {\n\t\tparsed.callback = args.pop();\n\t}\n\n\targs.forEach( a => {\n\t\tif ( typeof a == 'string' ) {\n\t\t\tlastObservable.properties.push( a );\n\t\t} else if ( typeof a == 'object' ) {\n\t\t\tlastObservable = { observable: a, properties: [] };\n\t\t\tparsed.to.push( lastObservable );\n\t\t} else {\n\t\t\tthrow new CKEditorError( 'observable-bind-to-parse-error: Invalid argument syntax in `to()`.', null );\n\t\t}\n\t} );\n\n\treturn parsed;\n}\n\n// Synchronizes {@link module:utils/observablemixin#_boundObservables} with {@link Binding}.\n//\n// @private\n// @param {Binding} binding A binding to store in {@link Observable#_boundObservables}.\n// @param {Observable} toObservable A observable, which is a new component of `binding`.\n// @param {String} toPropertyName A name of `toObservable`'s property, a new component of the `binding`.\nfunction updateBoundObservables( observable, binding, toObservable, toPropertyName ) {\n\tconst boundObservables = observable[ boundObservablesSymbol ];\n\tconst bindingsToObservable = boundObservables.get( toObservable );\n\tconst bindings = bindingsToObservable || {};\n\n\tif ( !bindings[ toPropertyName ] ) {\n\t\tbindings[ toPropertyName ] = new Set();\n\t}\n\n\t// Pass the binding to a corresponding Set in `observable._boundObservables`.\n\tbindings[ toPropertyName ].add( binding );\n\n\tif ( !bindingsToObservable ) {\n\t\tboundObservables.set( toObservable, bindings );\n\t}\n}\n\n// Synchronizes {@link Observable#_boundProperties} and {@link Observable#_boundObservables}\n// with {@link BindChain}.\n//\n// Assuming the following binding being created\n//\n// \t\tA.bind( 'a', 'b' ).to( B, 'x', 'y' );\n//\n// the following bindings were initialized by {@link Observable#bind} in {@link BindChain#_bindings}:\n//\n// \t\t{\n// \t\t\ta: { observable: A, property: 'a', to: [] },\n// \t\t\tb: { observable: A, property: 'b', to: [] },\n// \t\t}\n//\n// Iterate over all bindings in this chain and fill their `to` properties with\n// corresponding to( ... ) arguments (components of the binding), so\n//\n// \t\t{\n// \t\t\ta: { observable: A, property: 'a', to: [ B, 'x' ] },\n// \t\t\tb: { observable: A, property: 'b', to: [ B, 'y' ] },\n// \t\t}\n//\n// Then update the structure of {@link Observable#_boundObservables} with updated\n// binding, so it becomes:\n//\n// \t\tMap( {\n// \t\t\tB: {\n// \t\t\t\tx: Set( [\n// \t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] }\n// \t\t\t\t] ),\n// \t\t\t\ty: Set( [\n// \t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n// \t\t\t\t] )\n//\t\t\t}\n// \t\t} )\n//\n// @private\n// @param {BindChain} chain The binding initialized by {@link Observable#bind}.\nfunction updateBindToBound( chain ) {\n\tlet toProperty;\n\n\tchain._bindings.forEach( ( binding, propertyName ) => {\n\t\t// Note: For a binding without a callback, this will run only once\n\t\t// like in A.bind( 'x', 'y' ).to( B, 'a', 'b' )\n\t\t// TODO: ES6 destructuring.\n\t\tchain._to.forEach( to => {\n\t\t\ttoProperty = to.properties[ binding.callback ? 0 : chain._bindProperties.indexOf( propertyName ) ];\n\n\t\t\tbinding.to.push( [ to.observable, toProperty ] );\n\t\t\tupdateBoundObservables( chain._observable, binding, to.observable, toProperty );\n\t\t} );\n\t} );\n}\n\n// Updates an property of a {@link Observable} with a value\n// determined by an entry in {@link Observable#_boundProperties}.\n//\n// @private\n// @param {Observable} observable A observable which property is to be updated.\n// @param {String} propertyName An property to be updated.\nfunction updateBoundObservableProperty( observable, propertyName ) {\n\tconst boundProperties = observable[ boundPropertiesSymbol ];\n\tconst binding = boundProperties.get( propertyName );\n\tlet propertyValue;\n\n\t// When a binding with callback is created like\n\t//\n\t// \t\tA.bind( 'a' ).to( B, 'b', C, 'c', callback );\n\t//\n\t// collect B.b and C.c, then pass them to callback to set A.a.\n\tif ( binding.callback ) {\n\t\tpropertyValue = binding.callback.apply( observable, binding.to.map( to => to[ 0 ][ to[ 1 ] ] ) );\n\t} else {\n\t\tpropertyValue = binding.to[ 0 ];\n\t\tpropertyValue = propertyValue[ 0 ][ propertyValue[ 1 ] ];\n\t}\n\n\tif ( observable.hasOwnProperty( propertyName ) ) {\n\t\tobservable[ propertyName ] = propertyValue;\n\t} else {\n\t\tobservable.set( propertyName, propertyValue );\n\t}\n}\n\n// Starts listening to changes in {@link BindChain._to} observables to update\n// {@link BindChain._observable} {@link BindChain._bindProperties}. Also sets the\n// initial state of {@link BindChain._observable}.\n//\n// @private\n// @param {BindChain} chain The chain initialized by {@link Observable#bind}.\nfunction attachBindToListeners( observable, toBindings ) {\n\ttoBindings.forEach( to => {\n\t\tconst boundObservables = observable[ boundObservablesSymbol ];\n\t\tlet bindings;\n\n\t\t// If there's already a chain between the observables (`observable` listens to\n\t\t// `to.observable`), there's no need to create another `change` event listener.\n\t\tif ( !boundObservables.get( to.observable ) ) {\n\t\t\tobservable.listenTo( to.observable, 'change', ( evt, propertyName ) => {\n\t\t\t\tbindings = boundObservables.get( to.observable )[ propertyName ];\n\n\t\t\t\t// Note: to.observable will fire for any property change, react\n\t\t\t\t// to changes of properties which are bound only.\n\t\t\t\tif ( bindings ) {\n\t\t\t\t\tbindings.forEach( binding => {\n\t\t\t\t\t\tupdateBoundObservableProperty( observable, binding.property );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t} );\n}\n\n/**\n * Interface which adds \"observable properties\" and data binding functionality.\n *\n * Can be easily implemented by a class by mixing the {@link module:utils/observablemixin~ObservableMixin} mixin.\n *\n * Read more about the usage of this interface in the:\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables \"Event system and observables\"}\n * section of the {@glink framework/guides/architecture/core-editor-architecture \"Core editor architecture\"} guide,\n * * {@glink framework/guides/deep-dive/observables \"Observables\" deep dive} guide.\n *\n * @interface Observable\n * @extends module:utils/emittermixin~Emitter\n */\n\n/**\n * Fired when a property changed value.\n *\n *\t\tobservable.set( 'prop', 1 );\n *\n *\t\tobservable.on( 'change:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `${ propertyName } has changed from ${ oldValue } to ${ newValue }` );\n *\t\t} );\n *\n *\t\tobservable.prop = 2; // -> 'prop has changed from 1 to 2'\n *\n * @event change:{property}\n * @param {String} name The property name.\n * @param {*} value The new property value.\n * @param {*} oldValue The previous property value.\n */\n\n/**\n * Fired when a property value is going to be set but is not set yet (before the `change` event is fired).\n *\n * You can control the final value of the property by using\n * the {@link module:utils/eventinfo~EventInfo#return event's `return` property}.\n *\n *\t\tobservable.set( 'prop', 1 );\n *\n *\t\tobservable.on( 'set:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `Value is going to be changed from ${ oldValue } to ${ newValue }` );\n *\t\t\tconsole.log( `Current property value is ${ observable[ propertyName ] }` );\n *\n *\t\t\t// Let's override the value.\n *\t\t\tevt.return = 3;\n *\t\t} );\n *\n *\t\tobservable.on( 'change:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `Value has changed from ${ oldValue } to ${ newValue }` );\n *\t\t} );\n *\n *\t\tobservable.prop = 2; // -> 'Value is going to be changed from 1 to 2'\n *\t\t                     // -> 'Current property value is 1'\n *\t\t                     // -> 'Value has changed from 1 to 3'\n *\n * **Note:** Event is fired even when the new value is the same as the old value.\n *\n * @event set:{property}\n * @param {String} name The property name.\n * @param {*} value The new property value.\n * @param {*} oldValue The previous property value.\n */\n\n/**\n * Creates and sets the value of an observable property of this object. Such an property becomes a part\n * of the state and is be observable.\n *\n * It accepts also a single object literal containing key/value pairs with properties to be set.\n *\n * This method throws the `observable-set-cannot-override` error if the observable instance already\n * have a property with the given property name. This prevents from mistakenly overriding existing\n * properties and methods, but means that `foo.set( 'bar', 1 )` may be slightly slower than `foo.bar = 1`.\n *\n * @method #set\n * @param {String|Object} name The property's name or object with `name=>value` pairs.\n * @param {*} [value] The property's value (if `name` was passed in the first parameter).\n */\n\n/**\n * Binds {@link #set observable properties} to other objects implementing the\n * {@link module:utils/observablemixin~Observable} interface.\n *\n * Read more in the {@glink framework/guides/deep-dive/observables#property-bindings dedicated guide}\n * covering the topic of property bindings with some additional examples.\n *\n * Consider two objects: a `button` and an associated `command` (both `Observable`).\n *\n * A simple property binding could be as follows:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled' );\n *\n * or even shorter:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command );\n *\n * which works in the following way:\n *\n * * `button.isEnabled` **instantly equals** `command.isEnabled`,\n * * whenever `command.isEnabled` changes, `button.isEnabled` will immediately reflect its value.\n *\n * **Note**: To release the binding, use {@link module:utils/observablemixin~Observable#unbind}.\n *\n * You can also \"rename\" the property in the binding by specifying the new name in the `to()` chain:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isWorking' );\n *\n * It is possible to bind more than one property at a time to shorten the code:\n *\n *\t\tbutton.bind( 'isEnabled', 'value' ).to( command );\n *\n * which corresponds to:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command );\n *\t\tbutton.bind( 'value' ).to( command );\n *\n * The binding can include more than one observable, combining multiple data sources in a custom callback:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled', ui, 'isVisible',\n *\t\t\t( isCommandEnabled, isUIVisible ) => isCommandEnabled && isUIVisible );\n *\n * It is also possible to bind to the same property in an array of observables.\n * To bind a `button` to multiple commands (also `Observables`) so that each and every one of them\n * must be enabled for the button to become enabled, use the following code:\n *\n *\t\tbutton.bind( 'isEnabled' ).toMany( [ commandA, commandB, commandC ], 'isEnabled',\n *\t\t\t( isAEnabled, isBEnabled, isCEnabled ) => isAEnabled && isBEnabled && isCEnabled );\n *\n * @method #bind\n * @param {...String} bindProperties Observable properties that will be bound to other observable(s).\n * @returns {Object} The bind chain with the `to()` and `toMany()` methods.\n */\n\n/**\n * Removes the binding created with {@link #bind}.\n *\n *\t\t// Removes the binding for the 'a' property.\n *\t\tA.unbind( 'a' );\n *\n *\t\t// Removes bindings for all properties.\n *\t\tA.unbind();\n *\n * @method #unbind\n * @param {...String} [unbindProperties] Observable properties to be unbound. All the bindings will\n * be released if no properties are provided.\n */\n\n/**\n * Turns the given methods of this object into event-based ones. This means that the new method will fire an event\n * (named after the method) and the original action will be plugged as a listener to that event.\n *\n * Read more in the {@glink framework/guides/deep-dive/observables#decorating-object-methods dedicated guide}\n * covering the topic of decorating methods with some additional examples.\n *\n * Decorating the method does not change its behavior (it only adds an event),\n * but it allows to modify it later on by listening to the method's event.\n *\n * For example, to cancel the method execution the event can be {@link module:utils/eventinfo~EventInfo#stop stopped}:\n *\n *\t\tclass Foo {\n *\t\t\tconstructor() {\n *\t\t\t\tthis.decorate( 'method' );\n *\t\t\t}\n *\n *\t\t\tmethod() {\n *\t\t\t\tconsole.log( 'called!' );\n *\t\t\t}\n *\t\t}\n *\n *\t\tconst foo = new Foo();\n *\t\tfoo.on( 'method', ( evt ) => {\n *\t\t\tevt.stop();\n *\t\t}, { priority: 'high' } );\n *\n *\t\tfoo.method(); // Nothing is logged.\n *\n *\n * **Note**: The high {@link module:utils/priorities~PriorityString priority} listener\n * has been used to execute this particular callback before the one which calls the original method\n * (which uses the \"normal\" priority).\n *\n * It is also possible to change the returned value:\n *\n *\t\tfoo.on( 'method', ( evt ) => {\n *\t\t\tevt.return = 'Foo!';\n *\t\t} );\n *\n *\t\tfoo.method(); // -> 'Foo'\n *\n * Finally, it is possible to access and modify the arguments the method is called with:\n *\n *\t\tmethod( a, b ) {\n *\t\t\tconsole.log( `${ a }, ${ b }`  );\n *\t\t}\n *\n *\t\t// ...\n *\n *\t\tfoo.on( 'method', ( evt, args ) => {\n *\t\t\targs[ 0 ] = 3;\n *\n *\t\t\tconsole.log( args[ 1 ] ); // -> 2\n *\t\t}, { priority: 'high' } );\n *\n *\t\tfoo.method( 1, 2 ); // -> '3, 2'\n *\n * @method #decorate\n * @param {String} methodName Name of the method to decorate.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/editableelement\n */\n\nimport ContainerElement from './containerelement';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\n\n/**\n * Editable element which can be a {@link module:engine/view/rooteditableelement~RootEditableElement root}\n * or nested editable area in the editor.\n *\n * Editable is automatically read-only when its {@link module:engine/view/document~Document Document} is read-only.\n *\n * The constructor of this class shouldn't be used directly. To create new `EditableElement` use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEditableElement `downcastWriter#createEditableElement()`} method.\n *\n * @extends module:engine/view/containerelement~ContainerElement\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class EditableElement extends ContainerElement {\n\t/**\n\t * Creates an editable element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createEditableElement\n\t * @protected\n\t */\n\tconstructor( document, name, attrs, children ) {\n\t\tsuper( document, name, attrs, children );\n\n\t\t/**\n\t\t * Whether the editable is in read-write or read-only mode.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/editableelement~EditableElement#isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * Whether the editable is focused.\n\t\t *\n\t\t * This property updates when {@link module:engine/view/document~Document#isFocused document.isFocused} or view\n\t\t * selection is changed.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/editableelement~EditableElement#isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\tthis.bind( 'isReadOnly' ).to( document );\n\n\t\tthis.bind( 'isFocused' ).to(\n\t\t\tdocument,\n\t\t\t'isFocused',\n\t\t\tisFocused => isFocused && document.selection.editableElement == this\n\t\t);\n\n\t\t// Update focus state based on selection changes.\n\t\tthis.listenTo( document.selection, 'change', () => {\n\t\t\tthis.isFocused = document.isFocused && document.selection.editableElement == this;\n\t\t} );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\teditableElement.is( 'editableElement' ); // -> true\n\t *\t\teditableElement.is( 'element' ); // -> true\n\t *\t\teditableElement.is( 'node' ); // -> true\n\t *\t\teditableElement.is( 'view:editableElement' ); // -> true\n\t *\t\teditableElement.is( 'view:element' ); // -> true\n\t *\t\teditableElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\teditableElement.is( 'model:element' ); // -> false\n\t *\t\teditableElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an editbale element, you can also check its\n\t * {@link module:engine/view/editableelement~EditableElement#name name}:\n\t *\n\t *\t\teditableElement.is( 'div' ); // -> true if this is a div element\n\t *\t\teditableElement.is( 'editableElement', 'div' ); // -> same as above\n\t *\t\ttext.is( 'div' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'editableElement' || type === 'view:editableElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'containerElement' || type === 'view:containerElement' ||\n\t\t\t\ttype === this.name || type === 'view:' + this.name ||\n\t\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\t\ttype === 'node' || type === 'view:node';\n\t\t} else {\n\t\t\treturn name === this.name && (\n\t\t\t\ttype === 'editableElement' || type === 'view:editableElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'containerElement' || type === 'view:containerElement' ||\n\t\t\t\ttype === 'element' || type === 'view:element'\n\t\t\t);\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n}\n\nmix( EditableElement, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/rooteditableelement\n */\n\nimport EditableElement from './editableelement';\n\nconst rootNameSymbol = Symbol( 'rootName' );\n\n/**\n * Class representing a single root in the data view. A root can be either {@link ~RootEditableElement#isReadOnly editable or read-only},\n * but in both cases it is called \"an editable\". Roots can contain other {@link module:engine/view/editableelement~EditableElement\n * editable elements} making them \"nested editables\".\n *\n * @extends module:engine/view/editableelement~EditableElement\n */\nexport default class RootEditableElement extends EditableElement {\n\t/**\n\t * Creates root editable element.\n\t *\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t */\n\tconstructor( document, name ) {\n\t\tsuper( document, name );\n\n\t\t/**\n\t\t * Name of this root inside {@link module:engine/view/document~Document} that is an owner of this root. If no\n\t\t * other name is set, `main` name is used.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.rootName = 'main';\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\trootEditableElement.is( 'rootElement' ); // -> true\n\t *\t\trootEditableElement.is( 'editableElement' ); // -> true\n\t *\t\trootEditableElement.is( 'element' ); // -> true\n\t *\t\trootEditableElement.is( 'node' ); // -> true\n\t *\t\trootEditableElement.is( 'view:editableElement' ); // -> true\n\t *\t\trootEditableElement.is( 'view:element' ); // -> true\n\t *\t\trootEditableElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\trootEditableElement.is( 'model:element' ); // -> false\n\t *\t\trootEditableElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is a root editable element, you can also check its\n\t * {@link module:engine/view/rooteditableelement~RootEditableElement#name name}:\n\t *\n\t *\t\trootEditableElement.is( 'div' ); // -> true if this is a div root editable element\n\t *\t\trootEditableElement.is( 'rootElement', 'div' ); // -> same as above\n\t *\t\ttext.is( 'div' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'rootElement' || type === 'view:rootElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'editableElement' || type === 'view:editableElement' ||\n\t\t\t\ttype === 'containerElement' || type === 'view:containerElement' ||\n\t\t\t\ttype === this.name || type === 'view:' + this.name ||\n\t\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\t\ttype === 'node' || type === 'view:node';\n\t\t} else {\n\t\t\treturn name === this.name && (\n\t\t\t\ttype === 'rootElement' || type === 'view:rootElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'editableElement' || type === 'view:editableElement' ||\n\t\t\t\ttype === 'containerElement' || type === 'view:containerElement' ||\n\t\t\t\ttype === 'element' || type === 'view:element'\n\t\t\t);\n\t\t}\n\t}\n\n\tget rootName() {\n\t\treturn this.getCustomProperty( rootNameSymbol );\n\t}\n\n\tset rootName( rootName ) {\n\t\tthis._setCustomProperty( rootNameSymbol, rootName );\n\t}\n\n\t/**\n\t * Overrides old element name and sets new one.\n\t * This is needed because view roots are created before they are attached to the DOM.\n\t * The name of the root element is temporary at this stage. It has to be changed when the\n\t * view root element is attached to the DOM element.\n\t *\n\t * @protected\n\t * @param {String} name The new name of element.\n\t */\n\tset _name( name ) {\n\t\tthis.name = name;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/treewalker\n */\n\nimport Element from './element';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport Position from './position';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\nexport default class TreeWalker {\n\t/**\n\t * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n\t *\n\t * @constructor\n\t * @param {Object} options Object with configuration.\n\t * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n\t * @param {module:engine/view/position~Position} [options.startPosition] Starting position.\n\t * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n\t * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all characters from\n\t * {@link module:engine/view/text~Text} should be returned as one {@link module:engine/view/text~Text} (`false`) ore one by one as\n\t * {@link module:engine/view/textproxy~TextProxy} (`true`).\n\t * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n\t * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n\t * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n\t * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n\t * each {@link module:engine/view/element~Element} will be returned once, while if the option is `false` they might be returned\n\t * twice: for `'elementStart'` and `'elementEnd'`.\n\t */\n\tconstructor( options = {} ) {\n\t\tif ( !options.boundaries && !options.startPosition ) {\n\t\t\t/**\n\t\t\t * Neither boundaries nor starting position have been defined.\n\t\t\t *\n\t\t\t * @error view-tree-walker-no-start-position\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-tree-walker-no-start-position: Neither boundaries nor starting position have been defined.',\n\t\t\t\tnull\n\t\t\t);\n\t\t}\n\n\t\tif ( options.direction && options.direction != 'forward' && options.direction != 'backward' ) {\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-tree-walker-unknown-direction: Only `backward` and `forward` direction allowed.',\n\t\t\t\toptions.startPosition,\n\t\t\t\t{ direction: options.direction }\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Iterator boundaries.\n\t\t *\n\t\t * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n\t\t * on the start of boundary, then `{ done: true }` is returned.\n\t\t *\n\t\t * If boundaries are not defined they are set before first and after last child of the root node.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/range~Range} module:engine/view/treewalker~TreeWalker#boundaries\n\t\t */\n\t\tthis.boundaries = options.boundaries || null;\n\n\t\t/**\n\t\t * Iterator position. If start position is not defined then position depends on {@link #direction}. If direction is\n\t\t * `'forward'` position starts form the beginning, when direction is `'backward'` position starts from the end.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/position~Position} module:engine/view/treewalker~TreeWalker#position\n\t\t */\n\t\tif ( options.startPosition ) {\n\t\t\tthis.position = Position._createAt( options.startPosition );\n\t\t} else {\n\t\t\tthis.position = Position._createAt( options.boundaries[ options.direction == 'backward' ? 'end' : 'start' ] );\n\t\t}\n\n\t\t/**\n\t\t * Walking direction. Defaults `'forward'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'backward'|'forward'} module:engine/view/treewalker~TreeWalker#direction\n\t\t */\n\t\tthis.direction = options.direction || 'forward';\n\n\t\t/**\n\t\t * Flag indicating whether all characters from {@link module:engine/view/text~Text} should be returned as one\n\t\t * {@link module:engine/view/text~Text} or one by one as {@link module:engine/view/textproxy~TextProxy}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#singleCharacters\n\t\t */\n\t\tthis.singleCharacters = !!options.singleCharacters;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n\t\t * iterated node will not be returned along with `elementEnd` tag.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#shallow\n\t\t */\n\t\tthis.shallow = !!options.shallow;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should ignore `elementEnd` tags. If set to `true`, walker will not\n\t\t * return a parent node of the start position. Each {@link module:engine/view/element~Element} will be returned once.\n\t\t * When set to `false` each element might be returned twice: for `'elementStart'` and `'elementEnd'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#ignoreElementEnd\n\t\t */\n\t\tthis.ignoreElementEnd = !!options.ignoreElementEnd;\n\n\t\t/**\n\t\t * Start boundary parent.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryStartParent\n\t\t */\n\t\tthis._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n\n\t\t/**\n\t\t * End boundary parent.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryEndParent\n\t\t */\n\t\tthis._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n\t *\n\t * For example:\n\t *\n\t * \t\twalker.skip( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n\t * \t\twalker.skip( value => true ); // Move the position to the end: <p>{}foo</p> -> <p>foo</p>[]\n\t * \t\twalker.skip( value => false ); // Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t */\n\tskip( skip ) {\n\t\tlet done, value, prevPosition;\n\n\t\tdo {\n\t\t\tprevPosition = this.position;\n\n\t\t\t( { done, value } = this.next() );\n\t\t} while ( !done && skip( value ) );\n\n\t\tif ( !done ) {\n\t\t\tthis.position = prevPosition;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the next tree walker's value.\n\t *\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} Object implementing iterator interface, returning\n\t * information about taken step.\n\t */\n\tnext() {\n\t\tif ( this.direction == 'forward' ) {\n\t\t\treturn this._next();\n\t\t} else {\n\t\t\treturn this._previous();\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step forward in view. Moves the {@link #position} to the next position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done `true` if iterator is done, `false` otherwise.\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\t_next() {\n\t\tlet position = this.position.clone();\n\t\tconst previousPosition = this.position;\n\t\tconst parent = position.parent;\n\n\t\t// We are at the end of the root.\n\t\tif ( parent.parent === null && position.offset === parent.childCount ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// Get node just after current position.\n\t\tlet node;\n\n\t\t// Text is a specific parent because it contains string instead of child nodes.\n\t\tif ( parent instanceof Text ) {\n\t\t\tif ( position.isAtEnd ) {\n\t\t\t\t// Prevent returning \"elementEnd\" for Text node. Skip that value and return the next walker step.\n\t\t\t\tthis.position = Position._createAfter( parent );\n\n\t\t\t\treturn this._next();\n\t\t\t}\n\n\t\t\tnode = parent.data[ position.offset ];\n\t\t} else {\n\t\t\tnode = parent.getChild( position.offset );\n\t\t}\n\n\t\tif ( node instanceof Element ) {\n\t\t\tif ( !this.shallow ) {\n\t\t\t\tposition = new Position( node, 0 );\n\t\t\t} else {\n\t\t\t\tposition.offset++;\n\t\t\t}\n\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t} else if ( node instanceof Text ) {\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tposition = new Position( node, 0 );\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._next();\n\t\t\t} else {\n\t\t\t\tlet charactersCount = node.data.length;\n\t\t\t\tlet item;\n\n\t\t\t\t// If text stick out of walker range, we need to cut it and wrap in TextProxy.\n\t\t\t\tif ( node == this._boundaryEndParent ) {\n\t\t\t\t\tcharactersCount = this.boundaries.end.offset;\n\t\t\t\t\titem = new TextProxy( node, 0, charactersCount );\n\t\t\t\t\tposition = Position._createAfter( item );\n\t\t\t\t} else {\n\t\t\t\t\titem = new TextProxy( node, 0, node.data.length );\n\t\t\t\t\t// If not just keep moving forward.\n\t\t\t\t\tposition.offset++;\n\t\t\t\t}\n\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t\t}\n\t\t} else if ( typeof node == 'string' ) {\n\t\t\tlet textLength;\n\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\ttextLength = 1;\n\t\t\t} else {\n\t\t\t\t// Check if text stick out of walker range.\n\t\t\t\tconst endOffset = parent === this._boundaryEndParent ? this.boundaries.end.offset : parent.data.length;\n\n\t\t\t\ttextLength = endOffset - position.offset;\n\t\t\t}\n\n\t\t\tconst textProxy = new TextProxy( parent, position.offset, textLength );\n\n\t\t\tposition.offset += textLength;\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'text', textProxy, previousPosition, position, textLength );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the end of current `parent`.\n\t\t\tposition = Position._createAfter( parent );\n\t\t\tthis.position = position;\n\n\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\treturn this._next();\n\t\t\t} else {\n\t\t\t\treturn this._formatReturnValue( 'elementEnd', parent, previousPosition, position );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step backward in view. Moves the {@link #position} to the previous position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done True if iterator is done.\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\t_previous() {\n\t\tlet position = this.position.clone();\n\t\tconst previousPosition = this.position;\n\t\tconst parent = position.parent;\n\n\t\t// We are at the beginning of the root.\n\t\tif ( parent.parent === null && position.offset === 0 ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// Get node just before current position.\n\t\tlet node;\n\n\t\t// Text {@link module:engine/view/text~Text} element is a specific parent because contains string instead of child nodes.\n\t\tif ( parent instanceof Text ) {\n\t\t\tif ( position.isAtStart ) {\n\t\t\t\t// Prevent returning \"elementStart\" for Text node. Skip that value and return the next walker step.\n\t\t\t\tthis.position = Position._createBefore( parent );\n\n\t\t\t\treturn this._previous();\n\t\t\t}\n\n\t\t\tnode = parent.data[ position.offset - 1 ];\n\t\t} else {\n\t\t\tnode = parent.getChild( position.offset - 1 );\n\t\t}\n\n\t\tif ( node instanceof Element ) {\n\t\t\tif ( !this.shallow ) {\n\t\t\t\tposition = new Position( node, node.childCount );\n\t\t\t\tthis.position = position;\n\n\t\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\t\treturn this._previous();\n\t\t\t\t} else {\n\t\t\t\t\treturn this._formatReturnValue( 'elementEnd', node, previousPosition, position );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tposition.offset--;\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t\t}\n\t\t} else if ( node instanceof Text ) {\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tposition = new Position( node, node.data.length );\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._previous();\n\t\t\t} else {\n\t\t\t\tlet charactersCount = node.data.length;\n\t\t\t\tlet item;\n\n\t\t\t\t// If text stick out of walker range, we need to cut it and wrap in TextProxy.\n\t\t\t\tif ( node == this._boundaryStartParent ) {\n\t\t\t\t\tconst offset = this.boundaries.start.offset;\n\n\t\t\t\t\titem = new TextProxy( node, offset, node.data.length - offset );\n\t\t\t\t\tcharactersCount = item.data.length;\n\t\t\t\t\tposition = Position._createBefore( item );\n\t\t\t\t} else {\n\t\t\t\t\titem = new TextProxy( node, 0, node.data.length );\n\t\t\t\t\t// If not just keep moving backward.\n\t\t\t\t\tposition.offset--;\n\t\t\t\t}\n\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t\t}\n\t\t} else if ( typeof node == 'string' ) {\n\t\t\tlet textLength;\n\n\t\t\tif ( !this.singleCharacters ) {\n\t\t\t\t// Check if text stick out of walker range.\n\t\t\t\tconst startOffset = parent === this._boundaryStartParent ? this.boundaries.start.offset : 0;\n\n\t\t\t\ttextLength = position.offset - startOffset;\n\t\t\t} else {\n\t\t\t\ttextLength = 1;\n\t\t\t}\n\n\t\t\tposition.offset -= textLength;\n\n\t\t\tconst textProxy = new TextProxy( parent, position.offset, textLength );\n\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'text', textProxy, previousPosition, position, textLength );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the beginning of current `parent`.\n\t\t\tposition = Position._createBefore( parent );\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'elementStart', parent, previousPosition, position, 1 );\n\t\t}\n\t}\n\n\t/**\n\t * Format returned data and adjust `previousPosition` and `nextPosition` if reach the bound of the {@link module:engine/view/text~Text}.\n\t *\n\t * @private\n\t * @param {module:engine/view/treewalker~TreeWalkerValueType} type Type of step.\n\t * @param {module:engine/view/item~Item} item Item between old and new position.\n\t * @param {module:engine/view/position~Position} previousPosition Previous position of iterator.\n\t * @param {module:engine/view/position~Position} nextPosition Next position of iterator.\n\t * @param {Number} [length] Length of the item.\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue}\n\t */\n\t_formatReturnValue( type, item, previousPosition, nextPosition, length ) {\n\t\t// Text is a specific parent, because contains string instead of children.\n\t\t// Walker doesn't enter to the Text except situations when walker is iterating over every single character,\n\t\t// or the bound starts/ends inside the Text. So when the position is at the beginning or at the end of the Text\n\t\t// we move it just before or just after Text.\n\t\tif ( item instanceof TextProxy ) {\n\t\t\t// Position is at the end of Text.\n\t\t\tif ( item.offsetInText + item.data.length == item.textNode.data.length ) {\n\t\t\t\tif ( this.direction == 'forward' && !( this.boundaries && this.boundaries.end.isEqual( this.position ) ) ) {\n\t\t\t\t\tnextPosition = Position._createAfter( item.textNode );\n\t\t\t\t\t// When we change nextPosition of returned value we need also update walker current position.\n\t\t\t\t\tthis.position = nextPosition;\n\t\t\t\t} else {\n\t\t\t\t\tpreviousPosition = Position._createAfter( item.textNode );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Position is at the begining ot the text.\n\t\t\tif ( item.offsetInText === 0 ) {\n\t\t\t\tif ( this.direction == 'backward' && !( this.boundaries && this.boundaries.start.isEqual( this.position ) ) ) {\n\t\t\t\t\tnextPosition = Position._createBefore( item.textNode );\n\t\t\t\t\t// When we change nextPosition of returned value we need also update walker current position.\n\t\t\t\t\tthis.position = nextPosition;\n\t\t\t\t} else {\n\t\t\t\t\tpreviousPosition = Position._createBefore( item.textNode );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdone: false,\n\t\t\tvalue: {\n\t\t\t\ttype,\n\t\t\t\titem,\n\t\t\t\tpreviousPosition,\n\t\t\t\tnextPosition,\n\t\t\t\tlength\n\t\t\t}\n\t\t};\n\t}\n}\n\n/**\n * Type of the step made by {@link module:engine/view/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end\n * of node, or `'text'` if walker traversed over single and multiple characters.\n * For {@link module:engine/view/text~Text} `elementStart` and `elementEnd` is not returned.\n *\n * @typedef {String} module:engine/view/treewalker~TreeWalkerValueType\n */\n\n/**\n * Object returned by {@link module:engine/view/treewalker~TreeWalker} when traversing tree view.\n *\n * @typedef {Object} module:engine/view/treewalker~TreeWalkerValue\n * @property {module:engine/view/treewalker~TreeWalkerValueType} type\n * @property {module:engine/view/item~Item} item Item between the old and the new positions\n * of the tree walker.\n * @property {module:engine/view/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the text to its parent just before or just after that text.\n * @property {module:engine/view/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the text to its parent just before or just after that text.\n * @property {Number} [length] Length of the item. For `'elementStart'` it is `1`. For `'text'` it is\n * the length of that text. For `'elementEnd'` it is `undefined`.\n */\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/position\n */\n\nimport TreeWalker from './treewalker';\n\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EditableElement from './editableelement';\n\n// To check if component is loaded more than once.\nimport '@ckeditor/ckeditor5-utils/src/version';\n\n/**\n * Position in the view tree. Position is represented by its parent node and an offset in this parent.\n *\n * In order to create a new position instance use the `createPosition*()` factory methods available in:\n *\n * * {@link module:engine/view/view~View}\n * * {@link module:engine/view/downcastwriter~DowncastWriter}\n * * {@link module:engine/view/upcastwriter~UpcastWriter}\n */\nexport default class Position {\n\t/**\n\t * Creates a position.\n\t *\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} parent Position parent.\n\t * @param {Number} offset Position offset.\n\t */\n\tconstructor( parent, offset ) {\n\t\t/**\n\t\t * Position parent.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t\t * module:engine/view/position~Position#parent\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * Position offset.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} module:engine/view/position~Position#offset\n\t\t */\n\t\tthis.offset = offset;\n\t}\n\n\t/**\n\t * Node directly after the position. Equals `null` when there is no node after position or position is located\n\t * inside text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tget nodeAfter() {\n\t\tif ( this.parent.is( 'text' ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.parent.getChild( this.offset ) || null;\n\t}\n\n\t/**\n\t * Node directly before the position. Equals `null` when there is no node before position or position is located\n\t * inside text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tget nodeBefore() {\n\t\tif ( this.parent.is( 'text' ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.parent.getChild( this.offset - 1 ) || null;\n\t}\n\n\t/**\n\t * Is `true` if position is at the beginning of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isAtStart() {\n\t\treturn this.offset === 0;\n\t}\n\n\t/**\n\t * Is `true` if position is at the end of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isAtEnd() {\n\t\tconst endOffset = this.parent.is( 'text' ) ? this.parent.data.length : this.parent.childCount;\n\n\t\treturn this.offset === endOffset;\n\t}\n\n\t/**\n\t * Position's root, that is the root of the position's parent element.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.parent.root;\n\t}\n\n\t/**\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this position, or `null` if\n\t * position is not inside an editable element.\n\t *\n\t * @type {module:engine/view/editableelement~EditableElement|null}\n\t */\n\tget editableElement() {\n\t\tlet editable = this.parent;\n\n\t\twhile ( !( editable instanceof EditableElement ) ) {\n\t\t\tif ( editable.parent ) {\n\t\t\t\teditable = editable.parent;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn editable;\n\t}\n\n\t/**\n\t * Returns a new instance of Position with offset incremented by `shift` value.\n\t *\n\t * @param {Number} shift How position offset should get changed. Accepts negative values.\n\t * @returns {module:engine/view/position~Position} Shifted position.\n\t */\n\tgetShiftedBy( shift ) {\n\t\tconst shifted = Position._createAt( this );\n\n\t\tconst offset = shifted.offset + shift;\n\t\tshifted.offset = offset < 0 ? 0 : offset;\n\n\t\treturn shifted;\n\t}\n\n\t/**\n\t * Gets the farthest position which matches the callback using\n\t * {@link module:engine/view/treewalker~TreeWalker TreeWalker}.\n\t *\n\t * For example:\n\t *\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } ); // <p>foo[]</p> -> <p>{}foo</p>\n\t * \t\tgetLastMatchingPosition( value => false ); // Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t *\n\t * @returns {module:engine/view/position~Position} The position after the last item which matches the `skip` callback test.\n\t */\n\tgetLastMatchingPosition( skip, options = {} ) {\n\t\toptions.startPosition = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\t\ttreeWalker.skip( skip );\n\n\t\treturn treeWalker.position;\n\t}\n\n\t/**\n\t * Returns ancestors array of this position, that is this position's parent and it's ancestors.\n\t *\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors() {\n\t\tif ( this.parent.is( 'documentFragment' ) ) {\n\t\t\treturn [ this.parent ];\n\t\t} else {\n\t\t\treturn this.parent.getAncestors( { includeSelf: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\n\t * which is a common ancestor of both positions.\n\t *\n\t * @param {module:engine/view/position~Position} position\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor( position ) {\n\t\tconst ancestorsA = this.getAncestors();\n\t\tconst ancestorsB = position.getAncestors();\n\n\t\tlet i = 0;\n\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tposition.is( 'position' ); // -> true\n\t *\t\tposition.is( 'view:position' ); // -> true\n\t *\n\t *\t\tposition.is( 'model:position' ); // -> false\n\t *\t\tposition.is( 'element' ); // -> false\n\t *\t\tposition.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'position' || type === 'view:position';\n\t}\n\n\t/**\n\t * Checks whether this position equals given position.\n\t *\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if positions are same.\n\t */\n\tisEqual( otherPosition ) {\n\t\treturn ( this.parent == otherPosition.parent && this.offset == otherPosition.offset );\n\t}\n\n\t/**\n\t * Checks whether this position is located before given position. When method returns `false` it does not mean that\n\t * this position is after give one. Two positions may be located inside separate roots and in that situation this\n\t * method will still return `false`.\n\t *\n\t * @see module:engine/view/position~Position#isAfter\n\t * @see module:engine/view/position~Position#compareWith\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} Returns `true` if this position is before given position.\n\t */\n\tisBefore( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'before';\n\t}\n\n\t/**\n\t * Checks whether this position is located after given position. When method returns `false` it does not mean that\n\t * this position is before give one. Two positions may be located inside separate roots and in that situation this\n\t * method will still return `false`.\n\t *\n\t * @see module:engine/view/position~Position#isBefore\n\t * @see module:engine/view/position~Position#compareWith\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} Returns `true` if this position is after given position.\n\t */\n\tisAfter( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'after';\n\t}\n\n\t/**\n\t * Checks whether this position is before, after or in same position that other position. Two positions may be also\n\t * different when they are located in separate roots.\n\t *\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {module:engine/view/position~PositionRelation}\n\t */\n\tcompareWith( otherPosition ) {\n\t\tif ( this.root !== otherPosition.root ) {\n\t\t\treturn 'different';\n\t\t}\n\n\t\tif ( this.isEqual( otherPosition ) ) {\n\t\t\treturn 'same';\n\t\t}\n\n\t\t// Get path from root to position's parent element.\n\t\tconst thisPath = this.parent.is( 'node' ) ? this.parent.getPath() : [];\n\t\tconst otherPath = otherPosition.parent.is( 'node' ) ? otherPosition.parent.getPath() : [];\n\n\t\t// Add the positions' offsets to the parents offsets.\n\t\tthisPath.push( this.offset );\n\t\totherPath.push( otherPosition.offset );\n\n\t\t// Compare both path arrays to find common ancestor.\n\t\tconst result = compareArrays( thisPath, otherPath );\n\n\t\tswitch ( result ) {\n\t\t\tcase 'prefix':\n\t\t\t\treturn 'before';\n\n\t\t\tcase 'extension':\n\t\t\t\treturn 'after';\n\n\t\t\tdefault:\n\t\t\t\treturn thisPath[ result ] < otherPath[ result ] ? 'before' : 'after';\n\t\t}\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this positions as a start position.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}\n\t * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n\t * @param {Boolean} [options.singleCharacters=false]\n\t * @param {Boolean} [options.shallow=false]\n\t * @param {Boolean} [options.ignoreElementEnd=false]\n\t */\n\tgetWalker( options = {} ) {\n\t\toptions.startPosition = this;\n\n\t\treturn new TreeWalker( options );\n\t}\n\n\tclone() {\n\t\treturn new Position( this.parent, this.offset );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/view/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link module:engine/view/position~Position._createBefore},\n\t * * {@link module:engine/view/position~Position._createAfter}.\n\t *\n\t * @protected\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tstatic _createAt( itemOrPosition, offset ) {\n\t\tif ( itemOrPosition instanceof Position ) {\n\t\t\treturn new this( itemOrPosition.parent, itemOrPosition.offset );\n\t\t} else {\n\t\t\tconst node = itemOrPosition;\n\n\t\t\tif ( offset == 'end' ) {\n\t\t\t\toffset = node.is( 'text' ) ? node.data.length : node.childCount;\n\t\t\t} else if ( offset == 'before' ) {\n\t\t\t\treturn this._createBefore( node );\n\t\t\t} else if ( offset == 'after' ) {\n\t\t\t\treturn this._createAfter( node );\n\t\t\t} else if ( offset !== 0 && !offset ) {\n\t\t\t\t/**\n\t\t\t\t * {@link module:engine/view/view~View#createPositionAt `View#createPositionAt()`}\n\t\t\t\t * requires the offset to be specified when the first parameter is a view item.\n\t\t\t\t *\n\t\t\t\t * @error view-createPositionAt-offset-required\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'view-createPositionAt-offset-required: ' +\n\t\t\t\t\t'View#createPositionAt() requires the offset when the first parameter is a view item.',\n\t\t\t\t\tnode\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn new Position( node, offset );\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new position after given view item.\n\t *\n\t * @protected\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tstatic _createAfter( item ) {\n\t\t// TextProxy is not a instance of Node so we need do handle it in specific way.\n\t\tif ( item.is( 'textProxy' ) ) {\n\t\t\treturn new Position( item.textNode, item.offsetInText + item.data.length );\n\t\t}\n\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You can not make a position after a root.\n\t\t\t *\n\t\t\t * @error view-position-after-root\n\t\t\t * @param {module:engine/view/node~Node} root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-position-after-root: You can not make position after root.', item, { root: item } );\n\t\t}\n\n\t\treturn new Position( item.parent, item.index + 1 );\n\t}\n\n\t/**\n\t * Creates a new position before given view item.\n\t *\n\t * @protected\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tstatic _createBefore( item ) {\n\t\t// TextProxy is not a instance of Node so we need do handle it in specific way.\n\t\tif ( item.is( 'textProxy' ) ) {\n\t\t\treturn new Position( item.textNode, item.offsetInText );\n\t\t}\n\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You cannot make a position before a root.\n\t\t\t *\n\t\t\t * @error view-position-before-root\n\t\t\t * @param {module:engine/view/node~Node} root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-position-before-root: You can not make position before root.', item, { root: item } );\n\t\t}\n\n\t\treturn new Position( item.parent, item.index );\n\t}\n}\n\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/view/position~PositionRelation\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/range\n */\n\nimport Position from './position';\nimport TreeWalker from './treewalker';\n\n/**\n * Range in the view tree. A range is represented by its start and end {@link module:engine/view/position~Position positions}.\n *\n * In order to create a new position instance use the `createPosition*()` factory methods available in:\n *\n * * {@link module:engine/view/view~View}\n * * {@link module:engine/view/downcastwriter~DowncastWriter}\n * * {@link module:engine/view/upcastwriter~UpcastWriter}\n */\nexport default class Range {\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** Constructor creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/view/position~Position} start Start position.\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at the `start` position.\n\t */\n\tconstructor( start, end = null ) {\n\t\t/**\n\t\t * Start position.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/position~Position}\n\t\t */\n\t\tthis.start = start.clone();\n\n\t\t/**\n\t\t * End position.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/position~Position}\n\t\t */\n\t\tthis.end = end ? end.clone() : start.clone();\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n\t * them together with additional information like length or {@link module:engine/view/position~Position positions},\n\t * grouped as {@link module:engine/view/treewalker~TreeWalkerValue}.\n\t *\n\t * This iterator uses {@link module:engine/view/treewalker~TreeWalker TreeWalker} with `boundaries` set to this range and\n\t * `ignoreElementEnd` option\n\t * set to `true`.\n\t *\n\t * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\n\t */\n\t* [ Symbol.iterator ]() {\n\t\tyield* new TreeWalker( { boundaries: this, ignoreElementEnd: true } );\n\t}\n\n\t/**\n\t * Returns whether the range is collapsed, that is it start and end positions are equal.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this.start.isEqual( this.end );\n\t}\n\n\t/**\n\t * Returns whether this range is flat, that is if {@link module:engine/view/range~Range#start start} position and\n\t * {@link module:engine/view/range~Range#end end} position are in the same {@link module:engine/view/position~Position#parent parent}.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isFlat() {\n\t\treturn this.start.parent === this.end.parent;\n\t}\n\n\t/**\n\t * Range root element.\n\t *\n\t * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.start.root;\n\t}\n\n\t/**\n\t * Creates a maximal range that has the same content as this range but is expanded in both ways (at the beginning\n\t * and at the end).\n\t *\n\t * For example:\n\t *\n\t *\t\t<p>Foo</p><p><b>{Bar}</b></p> -> <p>Foo</p>[<p><b>Bar</b>]</p>\n\t *\t\t<p><b>foo</b>{bar}<span></span></p> -> <p><b>foo[</b>bar<span></span>]</p>\n\t *\n\t * Note that in the sample above:\n\t *\n\t * - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n\t * - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n\t * - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n\t *\n\t * @returns {module:engine/view/range~Range} Enlarged range.\n\t */\n\tgetEnlarged() {\n\t\tlet start = this.start.getLastMatchingPosition( enlargeTrimSkip, { direction: 'backward' } );\n\t\tlet end = this.end.getLastMatchingPosition( enlargeTrimSkip );\n\n\t\t// Fix positions, in case if they are in Text node.\n\t\tif ( start.parent.is( 'text' ) && start.isAtStart ) {\n\t\t\tstart = Position._createBefore( start.parent );\n\t\t}\n\n\t\tif ( end.parent.is( 'text' ) && end.isAtEnd ) {\n\t\t\tend = Position._createAfter( end.parent );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Creates a minimum range that has the same content as this range but is trimmed in both ways (at the beginning\n\t * and at the end).\n\t *\n\t * For example:\n\t *\n\t *\t\t<p>Foo</p>[<p><b>Bar</b>]</p> -> <p>Foo</p><p><b>{Bar}</b></p>\n\t *\t\t<p><b>foo[</b>bar<span></span>]</p> -> <p><b>foo</b>{bar}<span></span></p>\n\t *\n\t * Note that in the sample above:\n\t *\n\t * - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n\t * - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n\t * - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n\t *\n\t * @returns {module:engine/view/range~Range} Shrink range.\n\t */\n\tgetTrimmed() {\n\t\tlet start = this.start.getLastMatchingPosition( enlargeTrimSkip );\n\n\t\tif ( start.isAfter( this.end ) || start.isEqual( this.end ) ) {\n\t\t\treturn new Range( start, start );\n\t\t}\n\n\t\tlet end = this.end.getLastMatchingPosition( enlargeTrimSkip, { direction: 'backward' } );\n\t\tconst nodeAfterStart = start.nodeAfter;\n\t\tconst nodeBeforeEnd = end.nodeBefore;\n\n\t\t// Because TreeWalker prefers positions next to text node, we need to move them manually into these text nodes.\n\t\tif ( nodeAfterStart && nodeAfterStart.is( 'text' ) ) {\n\t\t\tstart = new Position( nodeAfterStart, 0 );\n\t\t}\n\n\t\tif ( nodeBeforeEnd && nodeBeforeEnd.is( 'text' ) ) {\n\t\t\tend = new Position( nodeBeforeEnd, nodeBeforeEnd.data.length );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Two ranges are equal if their start and end positions are equal.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} `true` if ranges are equal, `false` otherwise\n\t */\n\tisEqual( otherRange ) {\n\t\treturn this == otherRange || ( this.start.isEqual( otherRange.start ) && this.end.isEqual( otherRange.end ) );\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link module:engine/view/position~Position position}.\n\t *\n\t * @param {module:engine/view/position~Position} position Position to check.\n\t * @returns {Boolean} `true` if given {@link module:engine/view/position~Position position} is contained in this range,\n\t * `false` otherwise.\n\t */\n\tcontainsPosition( position ) {\n\t\treturn position.isAfter( this.start ) && position.isBefore( this.end );\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link module:engine/view/range~Range range}.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to check.\n\t * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\n\t * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\n\t * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\n\t * @returns {Boolean} `true` if given {@link module:engine/view/range~Range range} boundaries are contained by this range, `false`\n\t * otherwise.\n\t */\n\tcontainsRange( otherRange, loose = false ) {\n\t\tif ( otherRange.isCollapsed ) {\n\t\t\tloose = false;\n\t\t}\n\n\t\tconst containsStart = this.containsPosition( otherRange.start ) || ( loose && this.start.isEqual( otherRange.start ) );\n\t\tconst containsEnd = this.containsPosition( otherRange.end ) || ( loose && this.end.isEqual( otherRange.end ) );\n\n\t\treturn containsStart && containsEnd;\n\t}\n\n\t/**\n\t * Computes which part(s) of this {@link module:engine/view/range~Range range} is not a part of given\n\t * {@link module:engine/view/range~Range range}.\n\t * Returned array contains zero, one or two {@link module:engine/view/range~Range ranges}.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet foo = downcastWriter.createText( 'foo' );\n\t *\t\tlet img = downcastWriter.createContainerElement( 'img' );\n\t *\t\tlet bar = downcastWriter.createText( 'bar' );\n\t *\t\tlet p = downcastWriter.createContainerElement( 'p', null, [ foo, img, bar ] );\n\t *\n\t *\t\tlet range = view.createRange( view.createPositionAt( foo, 2 ), view.createPositionAt( bar, 1 ); // \"o\", img, \"b\" are in range.\n\t *\t\tlet otherRange = view.createRange( // \"oo\", img, \"ba\" are in range.\n\t *\t\t\tview.createPositionAt( foo, 1 ),\n\t *\t\t\tview.createPositionAt( bar, 2 )\n\t *\t\t);\n\t *\t\tlet transformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has no ranges because `otherRange` contains `range`\n\t *\n\t *\t\totherRange = view.createRange( view.createPositionAt( foo, 1 ), view.createPositionAt( p, 2 ); // \"oo\", img are in range.\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has one range: from ( p, 2 ) to ( bar, 1 )\n\t *\n\t *\t\totherRange = view.createRange( view.createPositionAt( p, 1 ), view.createPositionAt( p, 2 ) ); // img is in range.\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has two ranges: from ( foo, 1 ) to ( p, 1 ) and from ( p, 2 ) to ( bar, 1 )\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to differentiate against.\n\t * @returns {Array.<module:engine/view/range~Range>} The difference between ranges.\n\t */\n\tgetDifference( otherRange ) {\n\t\tconst ranges = [];\n\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect.\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the start to the middle of this range.\n\t\t\t\tranges.push( new Range( this.start, otherRange.start ) );\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the middle of this range to the end.\n\t\t\t\tranges.push( new Range( otherRange.end, this.end ) );\n\t\t\t}\n\t\t} else {\n\t\t\t// Ranges do not intersect, return the original range.\n\t\t\tranges.push( this.clone() );\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Returns an intersection of this {@link module:engine/view/range~Range range} and given {@link module:engine/view/range~Range range}.\n\t * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet foo = downcastWriter.createText( 'foo' );\n\t *\t\tlet img = downcastWriter.createContainerElement( 'img' );\n\t *\t\tlet bar = downcastWriter.createText( 'bar' );\n\t *\t\tlet p = downcastWriter.createContainerElement( 'p', null, [ foo, img, bar ] );\n\t *\n\t *\t\tlet range = view.createRange( view.createPositionAt( foo, 2 ), view.createPositionAt( bar, 1 ); // \"o\", img, \"b\" are in range.\n\t *\t\tlet otherRange = view.createRange( view.createPositionAt( foo, 1 ), view.createPositionAt( p, 2 ); // \"oo\", img are in range.\n\t *\t\tlet transformed = range.getIntersection( otherRange ); // range from ( foo, 1 ) to ( p, 2 ).\n\t *\n\t *\t\totherRange = view.createRange( view.createPositionAt( bar, 1 ), view.createPositionAt( bar, 3 ); \"ar\" is in range.\n\t *\t\ttransformed = range.getIntersection( otherRange ); // null - no common part.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to check for intersection.\n\t * @returns {module:engine/view/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n\t */\n\tgetIntersection( otherRange ) {\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect, so a common range will be returned.\n\t\t\t// At most, it will be same as this range.\n\t\t\tlet commonRangeStart = this.start;\n\t\t\tlet commonRangeEnd = this.end;\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means thaNt we have to\n\t\t\t\t// shrink common range to the given range start.\n\t\t\t\tcommonRangeStart = otherRange.start;\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// shrink common range to the given range end.\n\t\t\t\tcommonRangeEnd = otherRange.end;\n\t\t\t}\n\n\t\t\treturn new Range( commonRangeStart, commonRangeEnd );\n\t\t}\n\n\t\t// Ranges do not intersect, so they do not have common part.\n\t\treturn null;\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t * @param {module:engine/view/position~Position} [options.startPosition]\n\t * @param {Boolean} [options.singleCharacters=false]\n\t * @param {Boolean} [options.shallow=false]\n\t * @param {Boolean} [options.ignoreElementEnd=false]\n\t * @returns {module:engine/view/treewalker~TreeWalker}\n\t */\n\tgetWalker( options = {} ) {\n\t\toptions.boundaries = this;\n\n\t\treturn new TreeWalker( options );\n\t}\n\n\t/**\n\t * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\n\t * which is a common ancestor of range's both ends (in which the entire range is contained).\n\t *\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor() {\n\t\treturn this.start.getCommonAncestor( this.end );\n\t}\n\n\t/**\n\t * Returns an {@link module:engine/view/element~Element Element} contained by the range.\n\t * The element will be returned when it is the **only** node within the range and **fully–contained**\n\t * at the same time.\n\t *\n\t * @returns {module:engine/view/element~Element|null}\n\t */\n\tgetContainedElement() {\n\t\tif ( this.isCollapsed ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet nodeAfterStart = this.start.nodeAfter;\n\t\tlet nodeBeforeEnd = this.end.nodeBefore;\n\n\t\t// Handle the situation when the range position is at the beginning / at the end of a text node.\n\t\t// In such situation `.nodeAfter` and `.nodeBefore` are `null` but the range still might be spanning\n\t\t// over one element.\n\t\t//\n\t\t// <p>Foo{<span class=\"widget\"></span>}bar</p> vs <p>Foo[<span class=\"widget\"></span>]bar</p>\n\t\t//\n\t\t// These are basically the same range, only the difference is if the range position is at\n\t\t// at the end/at the beginning of a text node or just before/just after the text node.\n\t\t//\n\t\tif ( this.start.parent.is( 'text' ) && this.start.isAtEnd && this.start.parent.nextSibling ) {\n\t\t\tnodeAfterStart = this.start.parent.nextSibling;\n\t\t}\n\n\t\tif ( this.end.parent.is( 'text' ) && this.end.isAtStart && this.end.parent.previousSibling ) {\n\t\t\tnodeBeforeEnd = this.end.parent.previousSibling;\n\t\t}\n\n\t\tif ( nodeAfterStart && nodeAfterStart.is( 'element' ) && nodeAfterStart === nodeBeforeEnd ) {\n\t\t\treturn nodeAfterStart;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Clones this range.\n\t *\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tclone() {\n\t\treturn new Range( this.start, this.end );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n\t * them.\n\t *\n\t * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n\t * set to `true`. However it returns only {@link module:engine/view/item~Item items},\n\t * not {@link module:engine/view/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/view/item~Item>}\n\t */\n\t* getItems( options = {} ) {\n\t\toptions.boundaries = this;\n\t\toptions.ignoreElementEnd = true;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.item;\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/view/position~Position positions} that are boundaries or\n\t * contained in this range.\n\t *\n\t * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n\t * {@link module:engine/view/position~Position positions}, not {@link module:engine/view/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/view/position~Position>}\n\t */\n\t* getPositions( options = {} ) {\n\t\toptions.boundaries = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tyield treeWalker.position;\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.nextPosition;\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\trange.is( 'range' ); // -> true\n\t *\t\trange.is( 'view:range' ); // -> true\n\t *\n\t *\t\trange.is( 'model:range' ); // -> false\n\t *\t\trange.is( 'element' ); // -> false\n\t *\t\trange.is( 'selection' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'range' || type === 'view:range';\n\t}\n\n\t/**\n\t * Checks and returns whether this range intersects with the given range.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} True if ranges intersect.\n\t */\n\tisIntersecting( otherRange ) {\n\t\treturn this.start.isBefore( otherRange.end ) && this.end.isAfter( otherRange.start );\n\t}\n\n\t/**\n\t * Creates a range from the given parents and offsets.\n\t *\n\t * @protected\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} startElement Start position\n\t * parent element.\n\t * @param {Number} startOffset Start position offset.\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} endElement End position\n\t * parent element.\n\t * @param {Number} endOffset End position offset.\n\t * @returns {module:engine/view/range~Range} Created range.\n\t */\n\tstatic _createFromParentsAndOffsets( startElement, startOffset, endElement, endOffset ) {\n\t\treturn new this(\n\t\t\tnew Position( startElement, startOffset ),\n\t\t\tnew Position( endElement, endOffset )\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new range, spreading from specified {@link module:engine/view/position~Position position} to a position moved by\n\t * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n\t *\n\t * @protected\n\t * @param {module:engine/view/position~Position} position Beginning of the range.\n\t * @param {Number} shift How long the range should be.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tstatic _createFromPositionAndShift( position, shift ) {\n\t\tconst start = position;\n\t\tconst end = position.getShiftedBy( shift );\n\n\t\treturn shift > 0 ? new this( start, end ) : new this( end, start );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @protected\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tstatic _createIn( element ) {\n\t\treturn this._createFromParentsAndOffsets( element, 0, element, element.childCount );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n\t *\n\t * @protected\n\t * @param {module:engine/view/item~Item} item\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tstatic _createOn( item ) {\n\t\tconst size = item.is( 'textProxy' ) ? item.offsetSize : 1;\n\n\t\treturn this._createFromPositionAndShift( Position._createBefore( item ), size );\n\t}\n}\n\n// Function used by getEnlarged and getTrimmed methods.\nfunction enlargeTrimSkip( value ) {\n\tif ( value.item.is( 'attributeElement' ) || value.item.is( 'uiElement' ) ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/count\n */\n\n/**\n * Returns the number of items return by the iterator.\n *\n *\t\tcount( [ 1, 2, 3, 4, 5 ] ); // 5;\n *\n * @param {Iterable.<*>} iterator Any iterator.\n * @returns {Number} Number of items returned by that iterator.\n */\nexport default function count( iterator ) {\n\tlet count = 0;\n\n\tfor ( const _ of iterator ) { // eslint-disable-line no-unused-vars\n\t\tcount++;\n\t}\n\n\treturn count;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/selection\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Range from './range';\nimport Position from './position';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport Node from './node';\nimport count from '@ckeditor/ckeditor5-utils/src/count';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport DocumentSelection from './documentselection';\n\n/**\n * Class representing an arbirtary selection in the view.\n * See also {@link module:engine/view/documentselection~DocumentSelection}.\n *\n * New selection instances can be created via the constructor or one these methods:\n *\n * * {@link module:engine/view/view~View#createSelection `View#createSelection()`},\n * * {@link module:engine/view/upcastwriter~UpcastWriter#createSelection `UpcastWriter#createSelection()`}.\n *\n * A selection can consist of {@link module:engine/view/range~Range ranges} that can be set by using\n * the {@link module:engine/view/selection~Selection#setTo `Selection#setTo()`} method.\n */\nexport default class Selection {\n\t/**\n\t * Creates new selection instance.\n\t *\n\t * **Note**: The selection constructor is available as a factory method:\n\t *\n\t * * {@link module:engine/view/view~View#createSelection `View#createSelection()`},\n\t * * {@link module:engine/view/upcastwriter~UpcastWriter#createSelection `UpcastWriter#createSelection()`}.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the document selection.\n\t *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tconstructor( selectable = null, placeOrOffset, options ) {\n\t\t/**\n\t\t * Stores all ranges that are selected.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/view/range~Range>}\n\t\t */\n\t\tthis._ranges = [];\n\n\t\t/**\n\t\t * Specifies whether the last added range was added as a backward or forward range.\n\t\t *\n\t\t * @protected\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._lastRangeBackward = false;\n\n\t\t/**\n\t\t * Specifies whether selection instance is fake.\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._isFake = false;\n\n\t\t/**\n\t\t * Fake selection's label.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._fakeSelectionLabel = '';\n\n\t\tthis.setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Returns true if selection instance is marked as `fake`.\n\t *\n\t * @see #setTo\n\t * @returns {Boolean}\n\t */\n\tget isFake() {\n\t\treturn this._isFake;\n\t}\n\n\t/**\n\t * Returns fake selection label.\n\t *\n\t * @see #setTo\n\t * @returns {String}\n\t */\n\tget fakeSelectionLabel() {\n\t\treturn this._fakeSelectionLabel;\n\t}\n\n\t/**\n\t * Selection anchor. Anchor may be described as a position where the selection starts. Together with\n\t * {@link #focus focus} they define the direction of selection, which is important\n\t * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\n\t * It may be a bit unintuitive when there are multiple ranges in selection.\n\t *\n\t * @see #focus\n\t * @type {module:engine/view/position~Position}\n\t */\n\tget anchor() {\n\t\tif ( !this._ranges.length ) {\n\t\t\treturn null;\n\t\t}\n\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\t\tconst anchor = this._lastRangeBackward ? range.end : range.start;\n\n\t\treturn anchor.clone();\n\t}\n\n\t/**\n\t * Selection focus. Focus is a position where the selection ends.\n\t *\n\t * @see #anchor\n\t * @type {module:engine/view/position~Position}\n\t */\n\tget focus() {\n\t\tif ( !this._ranges.length ) {\n\t\t\treturn null;\n\t\t}\n\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\t\tconst focus = this._lastRangeBackward ? range.start : range.end;\n\n\t\treturn focus.clone();\n\t}\n\n\t/**\n\t * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n\t * collapsed.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this.rangeCount === 1 && this._ranges[ 0 ].isCollapsed;\n\t}\n\n\t/**\n\t * Returns number of ranges in selection.\n\t *\n\t * @type {Number}\n\t */\n\tget rangeCount() {\n\t\treturn this._ranges.length;\n\t}\n\n\t/**\n\t * Specifies whether the {@link #focus} precedes {@link #anchor}.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isBackward() {\n\t\treturn !this.isCollapsed && this._lastRangeBackward;\n\t}\n\n\t/**\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\n\t * if the selection is not inside an editable element.\n\t *\n\t * @type {module:engine/view/editableelement~EditableElement|null}\n\t */\n\tget editableElement() {\n\t\tif ( this.anchor ) {\n\t\t\treturn this.anchor.editableElement;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns an iterable that contains copies of all ranges added to the selection.\n\t *\n\t * @returns {Iterable.<module:engine/view/range~Range>}\n\t */\n\t* getRanges() {\n\t\tfor ( const range of this._ranges ) {\n\t\t\tyield range.clone();\n\t\t}\n\t}\n\n\t/**\n\t * Returns copy of the first range in the selection. First range is the one which\n\t * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\n\t * position of all other ranges (not to confuse with the first range added to the selection).\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tgetFirstRange() {\n\t\tlet first = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !first || range.start.isBefore( first.start ) ) {\n\t\t\t\tfirst = range;\n\t\t\t}\n\t\t}\n\n\t\treturn first ? first.clone() : null;\n\t}\n\n\t/**\n\t * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\n\t * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\n\t * with the last range added to the selection). Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tgetLastRange() {\n\t\tlet last = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !last || range.end.isAfter( last.end ) ) {\n\t\t\t\tlast = range;\n\t\t\t}\n\t\t}\n\n\t\treturn last ? last.clone() : null;\n\t}\n\n\t/**\n\t * Returns copy of the first position in the selection. First position is the position that\n\t * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tgetFirstPosition() {\n\t\tconst firstRange = this.getFirstRange();\n\n\t\treturn firstRange ? firstRange.start.clone() : null;\n\t}\n\n\t/**\n\t * Returns copy of the last position in the selection. Last position is the position that\n\t * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tgetLastPosition() {\n\t\tconst lastRange = this.getLastRange();\n\n\t\treturn lastRange ? lastRange.end.clone() : null;\n\t}\n\n\t/**\n\t * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\n\t * same number of ranges and all ranges from one selection equal to a range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n\t */\n\tisEqual( otherSelection ) {\n\t\tif ( this.isFake != otherSelection.isFake ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this.isFake && this.fakeSelectionLabel != otherSelection.fakeSelectionLabel ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this.rangeCount != otherSelection.rangeCount ) {\n\t\t\treturn false;\n\t\t} else if ( this.rangeCount === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( !this.anchor.isEqual( otherSelection.anchor ) || !this.focus.isEqual( otherSelection.focus ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor ( const thisRange of this._ranges ) {\n\t\t\tlet found = false;\n\n\t\t\tfor ( const otherRange of otherSelection._ranges ) {\n\t\t\t\tif ( thisRange.isEqual( otherRange ) ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !found ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\n\t * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\n\t * equal to any trimmed range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are similar, `false` otherwise.\n\t */\n\tisSimilar( otherSelection ) {\n\t\tif ( this.isBackward != otherSelection.isBackward ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst numOfRangesA = count( this.getRanges() );\n\t\tconst numOfRangesB = count( otherSelection.getRanges() );\n\n\t\t// If selections have different number of ranges, they cannot be similar.\n\t\tif ( numOfRangesA != numOfRangesB ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If both selections have no ranges, they are similar.\n\t\tif ( numOfRangesA == 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Check if each range in one selection has a similar range in other selection.\n\t\tfor ( let rangeA of this.getRanges() ) {\n\t\t\trangeA = rangeA.getTrimmed();\n\n\t\t\tlet found = false;\n\n\t\t\tfor ( let rangeB of otherSelection.getRanges() ) {\n\t\t\t\trangeB = rangeB.getTrimmed();\n\n\t\t\t\tif ( rangeA.start.isEqual( rangeB.start ) && rangeA.end.isEqual( rangeB.end ) ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// For `rangeA`, neither range in `otherSelection` was similar. So selections are not similar.\n\t\t\tif ( !found ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// There were no ranges that weren't matched. Selections are similar.\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\n\t * one range in the selection, and that range contains exactly one element.\n\t * Returns `null` if there is no selected element.\n\t *\n\t * @returns {module:engine/view/element~Element|null}\n\t */\n\tgetSelectedElement() {\n\t\tif ( this.rangeCount !== 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.getFirstRange().getContainedElement();\n\t}\n\n\t/**\n\t * Sets this selection's ranges and direction to the specified location based on the given\n\t * {@link module:engine/view/selection~Selectable selectable}.\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tselection.setTo( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tselection.setTo( range );\n\t *\n\t *\t\t// Sets selection to the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tselection.setTo( otherSelection );\n\t *\n\t *\t \t// Sets selection to contents of DocumentSelection.\n\t *\t\tselection.setTo( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPositionAt( root, path );\n\t *\t\tselection.setTo( position );\n\t *\n\t * \t\t// Sets collapsed selection at the position of given item and offset.\n\t *\t\tselection.setTo( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t *\t\tselection.setTo( paragraph, 'in' );\n\t *\n\t * Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\tselection.setTo( paragraph, 'on' );\n\t *\n\t * \t\t// Clears selection. Removes all ranges.\n\t *\t\tselection.setTo( null );\n\t *\n\t * `Selection#setTo()` method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Sets selection as backward.\n\t *\t\tselection.setTo( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tselection.setTo( range, { fake: true, label: 'foo' } );\n\t *\n\t * @fires change\n\t * @param {module:engine/view/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tsetTo( selectable, placeOrOffset, options ) {\n\t\tif ( selectable === null ) {\n\t\t\tthis._setRanges( [] );\n\t\t\tthis._setFakeOptions( placeOrOffset );\n\t\t} else if ( selectable instanceof Selection || selectable instanceof DocumentSelection ) {\n\t\t\tthis._setRanges( selectable.getRanges(), selectable.isBackward );\n\t\t\tthis._setFakeOptions( { fake: selectable.isFake, label: selectable.fakeSelectionLabel } );\n\t\t} else if ( selectable instanceof Range ) {\n\t\t\tthis._setRanges( [ selectable ], placeOrOffset && placeOrOffset.backward );\n\t\t\tthis._setFakeOptions( placeOrOffset );\n\t\t} else if ( selectable instanceof Position ) {\n\t\t\tthis._setRanges( [ new Range( selectable ) ] );\n\t\t\tthis._setFakeOptions( placeOrOffset );\n\t\t} else if ( selectable instanceof Node ) {\n\t\t\tconst backward = !!options && !!options.backward;\n\t\t\tlet range;\n\n\t\t\tif ( placeOrOffset === undefined ) {\n\t\t\t\t/**\n\t\t\t\t * selection.setTo requires the second parameter when the first parameter is a node.\n\t\t\t\t *\n\t\t\t\t * @error view-selection-setTo-required-second-parameter\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'view-selection-setTo-required-second-parameter: ' +\n\t\t\t\t\t'selection.setTo requires the second parameter when the first parameter is a node.',\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t} else if ( placeOrOffset == 'in' ) {\n\t\t\t\trange = Range._createIn( selectable );\n\t\t\t} else if ( placeOrOffset == 'on' ) {\n\t\t\t\trange = Range._createOn( selectable );\n\t\t\t} else {\n\t\t\t\trange = new Range( Position._createAt( selectable, placeOrOffset ) );\n\t\t\t}\n\n\t\t\tthis._setRanges( [ range ], backward );\n\t\t\tthis._setFakeOptions( options );\n\t\t} else if ( isIterable( selectable ) ) {\n\t\t\t// We assume that the selectable is an iterable of ranges.\n\t\t\t// Array.from() is used to prevent setting ranges to the old iterable\n\t\t\tthis._setRanges( selectable, placeOrOffset && placeOrOffset.backward );\n\t\t\tthis._setFakeOptions( placeOrOffset );\n\t\t} else {\n\t\t\t/**\n\t\t\t * Cannot set selection to given place.\n\t\t\t *\n\t\t\t * @error view-selection-setTo-not-selectable\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-selection-setTo-not-selectable: Cannot set selection to given place.', this );\n\t\t}\n\n\t\tthis.fire( 'change' );\n\t}\n\n\t/**\n\t * Moves {@link #focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n\t * parameters.\n\t *\n\t * @fires change\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tsetFocus( itemOrPosition, offset ) {\n\t\tif ( this.anchor === null ) {\n\t\t\t/**\n\t\t\t * Cannot set selection focus if there are no ranges in selection.\n\t\t\t *\n\t\t\t * @error view-selection-setFocus-no-ranges\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-selection-setFocus-no-ranges: Cannot set selection focus if there are no ranges in selection.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tconst newFocus = Position._createAt( itemOrPosition, offset );\n\n\t\tif ( newFocus.compareWith( this.focus ) == 'same' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst anchor = this.anchor;\n\n\t\tthis._ranges.pop();\n\n\t\tif ( newFocus.compareWith( anchor ) == 'before' ) {\n\t\t\tthis._addRange( new Range( newFocus, anchor ), true );\n\t\t} else {\n\t\t\tthis._addRange( new Range( anchor, newFocus ) );\n\t\t}\n\n\t\tthis.fire( 'change' );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tselection.is( 'selection' ); // -> true\n\t *\t\tselection.is( 'view:selection' ); // -> true\n\t *\n\t *\t\tselection.is( 'model:selection' ); // -> false\n\t *\t\tselection.is( 'element' ); // -> false\n\t *\t\tselection.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'selection' || type === 'view:selection';\n\t}\n\n\t/**\n\t * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n\t * is treated like the last added range and is used to set {@link #anchor anchor} and {@link #focus focus}.\n\t * Accepts a flag describing in which way the selection is made.\n\t *\n\t * @private\n\t * @param {Iterable.<module:engine/view/range~Range>} newRanges Iterable object of ranges to set.\n\t * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end\n\t * (`false`) or backward - from end to start (`true`). Defaults to `false`.\n\t */\n\t_setRanges( newRanges, isLastBackward = false ) {\n\t\t// New ranges should be copied to prevent removing them by setting them to `[]` first.\n\t\t// Only applies to situations when selection is set to the same selection or same selection's ranges.\n\t\tnewRanges = Array.from( newRanges );\n\n\t\tthis._ranges = [];\n\n\t\tfor ( const range of newRanges ) {\n\t\t\tthis._addRange( range );\n\t\t}\n\n\t\tthis._lastRangeBackward = !!isLastBackward;\n\t}\n\n\t/**\n\t * Sets this selection instance to be marked as `fake`. A fake selection does not render as browser native selection\n\t * over selected elements and is hidden to the user. This way, no native selection UI artifacts are displayed to\n\t * the user and selection over elements can be represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM (and be\n\t * properly handled by screen readers).\n\t *\n\t * @private\n\t * @param {Object} [options] Options.\n\t * @param {Boolean} [options.fake] If set to true selection will be marked as `fake`.\n\t * @param {String} [options.label=''] Fake selection label.\n\t */\n\t_setFakeOptions( options = {} ) {\n\t\tthis._isFake = !!options.fake;\n\t\tthis._fakeSelectionLabel = options.fake ? options.label || '' : '';\n\t}\n\n\t/**\n\t * Adds a range to the selection. Added range is copied. This means that passed range is not saved in the\n\t * selection instance and you can safely operate on it.\n\t *\n\t * Accepts a flag describing in which way the selection is made - passed range might be selected from\n\t * {@link module:engine/view/range~Range#start start} to {@link module:engine/view/range~Range#end end}\n\t * or from {@link module:engine/view/range~Range#end end} to {@link module:engine/view/range~Range#start start}.\n\t * The flag is used to set {@link #anchor anchor} and {@link #focus focus} properties.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n\t * with ranges already stored in Selection instance.\n\t *\n\t * @private\n\t * @fires change\n\t * @param {module:engine/view/range~Range} range\n\t * @param {Boolean} [isBackward]\n\t */\n\t_addRange( range, isBackward = false ) {\n\t\tif ( !( range instanceof Range ) ) {\n\t\t\t/**\n\t\t\t * Selection range set to an object that is not an instance of {@link module:engine/view/range~Range}.\n\t\t\t *\n\t\t\t * @error view-selection-add-range-not-range\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-selection-add-range-not-range: ' +\n\t\t\t\t'Selection range set to an object that is not an instance of view.Range',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tthis._pushRange( range );\n\t\tthis._lastRangeBackward = !!isBackward;\n\t}\n\n\t/**\n\t * Adds range to selection - creates copy of given range so it can be safely used and modified.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n\t * with ranges already stored in selection instance.\n\t *\n\t * @private\n\t * @param {module:engine/view/range~Range} range\n\t */\n\t_pushRange( range ) {\n\t\tfor ( const storedRange of this._ranges ) {\n\t\t\tif ( range.isIntersecting( storedRange ) ) {\n\t\t\t\t/**\n\t\t\t\t * Trying to add a range that intersects with another range from selection.\n\t\t\t\t *\n\t\t\t\t * @error view-selection-range-intersects\n\t\t\t\t * @param {module:engine/view/range~Range} addedRange Range that was added to the selection.\n\t\t\t\t * @param {module:engine/view/range~Range} intersectingRange Range from selection that intersects with `addedRange`.\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'view-selection-range-intersects: Trying to add a range that intersects with another range from selection.',\n\t\t\t\t\tthis,\n\t\t\t\t\t{ addedRange: range, intersectingRange: storedRange }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis._ranges.push( new Range( range.start, range.end ) );\n\t}\n\n\t/**\n\t * Fired whenever selection ranges are changed through {@link ~Selection Selection API}.\n\t *\n\t * @event change\n\t */\n}\n\nmix( Selection, EmitterMixin );\n\n/**\n * An entity that is used to set selection.\n *\n * See also {@link module:engine/view/selection~Selection#setTo}\n *\n * @typedef {\n *    module:engine/view/selection~Selection|\n *    module:engine/view/documentselection~DocumentSelection|\n *    module:engine/view/position~Position|\n *    Iterable.<module:engine/view/range~Range>|\n *    module:engine/view/range~Range|\n *    module:engine/view/item~Item|\n *    null\n * } module:engine/view/selection~Selectable\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/documentselection\n */\n\nimport Selection from './selection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n\n/**\n * Class representing the document selection in the view.\n *\n * Its instance is available in {@link module:engine/view/document~Document#selection `Document#selection`}.\n *\n * It is similar to {@link module:engine/view/selection~Selection} but\n * it has a read-only API and can be modified only by the writer available in\n * the {@link module:engine/view/view~View#change `View#change()`} block\n * (so via {@link module:engine/view/downcastwriter~DowncastWriter#setSelection `DowncastWriter#setSelection()`}).\n */\nexport default class DocumentSelection {\n\t/**\n\t * Creates new DocumentSelection instance.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = new DocumentSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = new DocumentSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n\t *\t\tconst selection = new DocumentSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = new DocumentSelection( otherSelection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionAt( root, offset );\n\t *\t\tconst selection = new DocumentSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n\t *\t\tconst selection = new DocumentSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = new DocumentSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = new DocumentSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = new DocumentSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = new DocumentSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tconstructor( selectable = null, placeOrOffset, options ) {\n\t\t/**\n\t\t * Selection is used internally (`DocumentSelection` is a proxy to that selection).\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/selection~Selection}\n\t\t */\n\t\tthis._selection = new Selection();\n\n\t\t// Delegate change event to be fired on DocumentSelection instance.\n\t\tthis._selection.delegate( 'change' ).to( this );\n\n\t\t// Set selection data.\n\t\tthis._selection.setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Returns true if selection instance is marked as `fake`.\n\t *\n\t * @see #_setTo\n\t * @returns {Boolean}\n\t */\n\tget isFake() {\n\t\treturn this._selection.isFake;\n\t}\n\n\t/**\n\t * Returns fake selection label.\n\t *\n\t * @see #_setTo\n\t * @returns {String}\n\t */\n\tget fakeSelectionLabel() {\n\t\treturn this._selection.fakeSelectionLabel;\n\t}\n\n\t/**\n\t * Selection anchor. Anchor may be described as a position where the selection starts. Together with\n\t * {@link #focus focus} they define the direction of selection, which is important\n\t * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\n\t * It may be a bit unintuitive when there are multiple ranges in selection.\n\t *\n\t * @see #focus\n\t * @type {module:engine/view/position~Position}\n\t */\n\tget anchor() {\n\t\treturn this._selection.anchor;\n\t}\n\n\t/**\n\t * Selection focus. Focus is a position where the selection ends.\n\t *\n\t * @see #anchor\n\t * @type {module:engine/view/position~Position}\n\t */\n\tget focus() {\n\t\treturn this._selection.focus;\n\t}\n\n\t/**\n\t * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n\t * collapsed.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this._selection.isCollapsed;\n\t}\n\n\t/**\n\t * Returns number of ranges in selection.\n\t *\n\t * @type {Number}\n\t */\n\tget rangeCount() {\n\t\treturn this._selection.rangeCount;\n\t}\n\n\t/**\n\t * Specifies whether the {@link #focus} precedes {@link #anchor}.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isBackward() {\n\t\treturn this._selection.isBackward;\n\t}\n\n\t/**\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\n\t * if the selection is not inside an editable element.\n\t *\n\t * @type {module:engine/view/editableelement~EditableElement|null}\n\t */\n\tget editableElement() {\n\t\treturn this._selection.editableElement;\n\t}\n\n\t/**\n\t * Used for the compatibility with the {@link module:engine/view/selection~Selection#isEqual} method.\n\t *\n\t * @protected\n\t */\n\tget _ranges() {\n\t\treturn this._selection._ranges;\n\t}\n\n\t/**\n\t * Returns an iterable that contains copies of all ranges added to the selection.\n\t *\n\t * @returns {Iterable.<module:engine/view/range~Range>}\n\t */\n\t* getRanges() {\n\t\tyield* this._selection.getRanges();\n\t}\n\n\t/**\n\t * Returns copy of the first range in the selection. First range is the one which\n\t * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\n\t * position of all other ranges (not to confuse with the first range added to the selection).\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tgetFirstRange() {\n\t\treturn this._selection.getFirstRange();\n\t}\n\n\t/**\n\t * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\n\t * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\n\t * with the last range added to the selection). Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tgetLastRange() {\n\t\treturn this._selection.getLastRange();\n\t}\n\n\t/**\n\t * Returns copy of the first position in the selection. First position is the position that\n\t * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tgetFirstPosition() {\n\t\treturn this._selection.getFirstPosition();\n\t}\n\n\t/**\n\t * Returns copy of the last position in the selection. Last position is the position that\n\t * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tgetLastPosition() {\n\t\treturn this._selection.getLastPosition();\n\t}\n\n\t/**\n\t * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\n\t * one range in the selection, and that range contains exactly one element.\n\t * Returns `null` if there is no selected element.\n\t *\n\t * @returns {module:engine/view/element~Element|null}\n\t */\n\tgetSelectedElement() {\n\t\treturn this._selection.getSelectedElement();\n\t}\n\n\t/**\n\t * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\n\t * same number of ranges and all ranges from one selection equal to a range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n\t */\n\tisEqual( otherSelection ) {\n\t\treturn this._selection.isEqual( otherSelection );\n\t}\n\n\t/**\n\t * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\n\t * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\n\t * equal to any trimmed range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are similar, `false` otherwise.\n\t */\n\tisSimilar( otherSelection ) {\n\t\treturn this._selection.isSimilar( otherSelection );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tdocSelection.is( 'selection' ); // -> true\n\t *\t\tdocSelection.is( 'documentSelection' ); // -> true\n\t *\t\tdocSelection.is( 'view:selection' ); // -> true\n\t *\t\tdocSelection.is( 'view:documentSelection' ); // -> true\n\t *\n\t *\t\tdocSelection.is( 'model:documentSelection' ); // -> false\n\t *\t\tdocSelection.is( 'element' ); // -> false\n\t *\t\tdocSelection.is( 'node' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'selection' ||\n\t\t\ttype == 'documentSelection' ||\n\t\t\ttype == 'view:selection' ||\n\t\t\ttype == 'view:documentSelection';\n\t}\n\n\t/**\n\t * Sets this selection's ranges and direction to the specified location based on the given\n\t * {@link module:engine/view/selection~Selectable selectable}.\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tdocumentSelection._setTo( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n\t *\t\tdocumentSelection._setTo( range );\n\t *\n\t *\t\t// Sets selection to the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tdocumentSelection._setTo( otherSelection );\n\t *\n\t * \t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPositionAt( root, offset );\n\t *\t\tdocumentSelection._setTo( position );\n\t *\n\t * \t\t// Sets collapsed selection at the position of given item and offset.\n\t *\t\tdocumentSelection._setTo( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t *\t\tdocumentSelection._setTo( paragraph, 'in' );\n\t *\n\t * Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\tdocumentSelection._setTo( paragraph, 'on' );\n\t *\n\t * \t\t// Clears selection. Removes all ranges.\n\t *\t\tdocumentSelection._setTo( null );\n\t *\n\t * `Selection#_setTo()` method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Sets selection as backward.\n\t *\t\tdocumentSelection._setTo( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to des cribe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tdocumentSelection._setTo( range, { fake: true, label: 'foo' } );\n\t *\n\t * @protected\n\t * @fires change\n\t * @param {module:engine/view/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\t_setTo( selectable, placeOrOffset, options ) {\n\t\tthis._selection.setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Moves {@link #focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n\t * parameters.\n\t *\n\t * @protected\n\t * @fires change\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\t_setFocus( itemOrPosition, offset ) {\n\t\tthis._selection.setFocus( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Fired whenever selection ranges are changed through {@link ~DocumentSelection Selection API}.\n\t *\n\t * @event change\n\t */\n}\n\nmix( DocumentSelection, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/document\n */\n\nimport DocumentSelection from './documentselection';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\n\n// @if CK_DEBUG_ENGINE // const { logDocument } = require( '../dev-utils/utils' );\n\n/**\n * Document class creates an abstract layer over the content editable area, contains a tree of view elements and\n * {@link module:engine/view/documentselection~DocumentSelection view selection} associated with this document.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Document {\n\t/**\n\t * Creates a Document instance.\n\t *\n\t * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor The styles processor instance.\n\t */\n\tconstructor( stylesProcessor ) {\n\t\t/**\n\t\t * Selection done on this document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/documentselection~DocumentSelection} module:engine/view/document~Document#selection\n\t\t */\n\t\tthis.selection = new DocumentSelection();\n\n\t\t/**\n\t\t * Roots of the view tree. Collection of the {@link module:engine/view/element~Element view elements}.\n\t\t *\n\t\t * View roots are created as a result of binding between {@link module:engine/view/document~Document#roots} and\n\t\t * {@link module:engine/model/document~Document#roots} and this is handled by\n\t\t * {@link module:engine/controller/editingcontroller~EditingController}, so to create view root we need to create\n\t\t * model root using {@link module:engine/model/document~Document#createRoot}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/collection~Collection} module:engine/view/document~Document#roots\n\t\t */\n\t\tthis.roots = new Collection( { idProperty: 'rootName' } );\n\n\t\t/**\n\t\t * The styles processor instance used by this document when normalizing styles.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/stylesmap~StylesProcessor}\n\t\t */\n\t\tthis.stylesProcessor = stylesProcessor;\n\n\t\t/**\n\t\t * Defines whether document is in read-only mode.\n\t\t *\n\t\t * When document is read-ony then all roots are read-only as well and caret placed inside this root is hidden.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * True if document is focused.\n\t\t *\n\t\t * This property is updated by the {@link module:engine/view/observer/focusobserver~FocusObserver}.\n\t\t * If the {@link module:engine/view/observer/focusobserver~FocusObserver} is disabled this property will not change.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/document~Document#isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * True if composition is in progress inside the document.\n\t\t *\n\t\t * This property is updated by the {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n\t\t * If the {@link module:engine/view/observer/compositionobserver~CompositionObserver} is disabled this property will not change.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/document~Document#isComposing\n\t\t */\n\t\tthis.set( 'isComposing', false );\n\n\t\t/**\n\t\t * Post-fixer callbacks registered to the view document.\n\t\t *\n\t\t * @private\n\t\t * @member {Set}\n\t\t */\n\t\tthis._postFixers = new Set();\n\t}\n\n\t/**\n\t * Gets a {@link module:engine/view/document~Document#roots view root element} with the specified name. If the name is not\n\t * specific \"main\" root is returned.\n\t *\n\t * @param {String} [name='main'] Name of the root.\n\t * @returns {module:engine/view/rooteditableelement~RootEditableElement|null} The view root element with the specified name\n\t * or null when there is no root of given name.\n\t */\n\tgetRoot( name = 'main' ) {\n\t\treturn this.roots.get( name );\n\t}\n\n\t/**\n\t * Allows registering post-fixer callbacks. A post-fixers mechanism allows to update the view tree just before it is rendered\n\t * to the DOM.\n\t *\n\t * Post-fixers are executed right after all changes from the outermost change block were applied but\n\t * before the {@link module:engine/view/view~View#event:render render event} is fired. If a post-fixer callback made\n\t * a change, it should return `true`. When this happens, all post-fixers are fired again to check if something else should\n\t * not be fixed in the new document tree state.\n\t *\n\t * View post-fixers are useful when you want to apply some fixes whenever the view structure changes. Keep in mind that\n\t * changes executed in a view post-fixer should not break model-view mapping.\n\t *\n\t * The types of changes which should be safe:\n\t *\n\t * * adding or removing attribute from elements,\n\t * * changes inside of {@link module:engine/view/uielement~UIElement UI elements},\n\t * * {@link module:engine/model/differ~Differ#refreshItem marking some of the model elements to be re-converted}.\n\t *\n\t * Try to avoid changes which touch view structure:\n\t *\n\t * * you should not add or remove nor wrap or unwrap any view elements,\n\t * * you should not change the editor data model in a view post-fixer.\n\t *\n\t * As a parameter, a post-fixer callback receives a {@link module:engine/view/downcastwriter~DowncastWriter downcast writer}.\n\t *\n\t * Typically, a post-fixer will look like this:\n\t *\n\t *\t\teditor.editing.view.document.registerPostFixer( writer => {\n\t *\t\t\tif ( checkSomeCondition() ) {\n\t *\t\t\t\twriter.doSomething();\n\t *\n\t *\t\t\t\t// Let other post-fixers know that something changed.\n\t *\t\t\t\treturn true;\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Note that nothing happens right after you register a post-fixer (e.g. execute such a code in the console).\n\t * That is because adding a post-fixer does not execute it.\n\t * The post-fixer will be executed as soon as any change in the document needs to cause its rendering.\n\t * If you want to re-render the editor's view after registering the post-fixer then you should do it manually by calling\n\t * {@link module:engine/view/view~View#forceRender `view.forceRender()`}.\n\t *\n\t * If you need to register a callback which is executed when DOM elements are already updated,\n\t * use {@link module:engine/view/view~View#event:render render event}.\n\t *\n\t * @param {Function} postFixer\n\t */\n\tregisterPostFixer( postFixer ) {\n\t\tthis._postFixers.add( postFixer );\n\t}\n\n\t/**\n\t * Destroys this instance. Makes sure that all observers are destroyed and listeners removed.\n\t */\n\tdestroy() {\n\t\tthis.roots.map( root => root.destroy() );\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Performs post-fixer loops. Executes post-fixer callbacks as long as none of them has done any changes to the model.\n\t *\n\t * @protected\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n\t */\n\t_callPostFixers( writer ) {\n\t\tlet wasFixed = false;\n\n\t\tdo {\n\t\t\tfor ( const callback of this._postFixers ) {\n\t\t\t\twasFixed = callback( writer );\n\n\t\t\t\tif ( wasFixed ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} while ( wasFixed );\n\t}\n\n\t/**\n\t * Event fired whenever document content layout changes. It is fired whenever content is\n\t * {@link module:engine/view/view~View#event:render rendered}, but should be also fired by observers in case of\n\t * other actions which may change layout, for instance when image loads.\n\t *\n\t * @event layoutChanged\n\t */\n\n\t// @if CK_DEBUG_ENGINE // log( version ) {\n\t// @if CK_DEBUG_ENGINE //\tlogDocument( this, version );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\nmix( Document, ObservableMixin );\n\n/**\n * Enum representing type of the change.\n *\n * Possible values:\n *\n * * `children` - for child list changes,\n * * `attributes` - for element attributes changes,\n * * `text` - for text nodes changes.\n *\n * @typedef {String} module:engine/view/document~ChangeType\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/attributeelement\n */\n\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n// Default attribute priority.\nconst DEFAULT_PRIORITY = 10;\n\n/**\n * Attribute elements are used to represent formatting elements in the view (think – `<b>`, `<span style=\"font-size: 2em\">`, etc.).\n * Most often they are created when downcasting model text attributes.\n *\n * Editing engine does not define a fixed HTML DTD. This is why a feature developer needs to choose between various\n * types (container element, {@link module:engine/view/attributeelement~AttributeElement attribute element},\n * {@link module:engine/view/emptyelement~EmptyElement empty element}, etc) when developing a feature.\n *\n * To create a new attribute element instance use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement `DowncastWriter#createAttributeElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class AttributeElement extends Element {\n\t/**\n\t * Creates an attribute element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createAttributeElement\n\t * @see module:engine/view/element~Element\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor( document, name, attrs, children ) {\n\t\tsuper( document, name, attrs, children );\n\n\t\t/**\n\t\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\n\t\t/**\n\t\t * Element priority. Decides in what order elements are wrapped by {@link module:engine/view/downcastwriter~DowncastWriter}.\n\t\t *\n\t\t * @protected\n\t\t * @member {Number}\n\t\t */\n\t\tthis._priority = DEFAULT_PRIORITY;\n\n\t\t/**\n\t\t * Element identifier. If set, it is used by {@link module:engine/view/element~Element#isSimilar},\n\t\t * and then two elements are considered similar if, and only if they have the same `_id`.\n\t\t *\n\t\t * @protected\n\t\t * @member {String|Number}\n\t\t */\n\t\tthis._id = null;\n\n\t\t/**\n\t\t * Keeps all the attribute elements that have the same {@link module:engine/view/attributeelement~AttributeElement#id ids}\n\t\t * and still exist in the view tree.\n\t\t *\n\t\t * This property is managed by {@link module:engine/view/downcastwriter~DowncastWriter}.\n\t\t *\n\t\t * @protected\n\t\t * @member {Set.<module:engine/view/attributeelement~AttributeElement>|null}\n\t\t */\n\t\tthis._clonesGroup = null;\n\t}\n\n\t/**\n\t * Element priority. Decides in what order elements are wrapped by {@link module:engine/view/downcastwriter~DowncastWriter}.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget priority() {\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Element identifier. If set, it is used by {@link module:engine/view/element~Element#isSimilar},\n\t * and then two elements are considered similar if, and only if they have the same `id`.\n\t *\n\t * @readonly\n\t * @type {String|Number}\n\t */\n\tget id() {\n\t\treturn this._id;\n\t}\n\n\t/**\n\t * Returns all {@link module:engine/view/attributeelement~AttributeElement attribute elements} that has the\n\t * same {@link module:engine/view/attributeelement~AttributeElement#id id} and are in the view tree (were not removed).\n\t *\n\t * Note: If this element has been removed from the tree, returned set will not include it.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError attribute-element-get-elements-with-same-id-no-id}\n\t * if this element has no `id`.\n\t *\n\t * @returns {Set.<module:engine/view/attributeelement~AttributeElement>} Set containing all the attribute elements\n\t * with the same `id` that were added and not removed from the view tree.\n\t */\n\tgetElementsWithSameId() {\n\t\tif ( this.id === null ) {\n\t\t\t/**\n\t\t\t * Cannot get elements with the same id for an attribute element without id.\n\t\t\t *\n\t\t\t * @error attribute-element-get-elements-with-same-id-no-id\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'attribute-element-get-elements-with-same-id-no-id: ' +\n\t\t\t\t'Cannot get elements with the same id for an attribute element without id.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\treturn new Set( this._clonesGroup );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tattributeElement.is( 'attributeElement' ); // -> true\n\t *\t\tattributeElement.is( 'element' ); // -> true\n\t *\t\tattributeElement.is( 'node' ); // -> true\n\t *\t\tattributeElement.is( 'view:attributeElement' ); // -> true\n\t *\t\tattributeElement.is( 'view:element' ); // -> true\n\t *\t\tattributeElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\tattributeElement.is( 'model:element' ); // -> false\n\t *\t\tattributeElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an attribute element, you can also check its\n\t * {@link module:engine/view/attributeelement~AttributeElement#name name}:\n\t *\n\t *\t\tattributeElement.is( 'b' ); // -> true if this is a bold element\n\t *\t\tattributeElement.is( 'attributeElement', 'b' ); // -> same as above\n\t *\t\ttext.is( 'b' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'attributeElement' || type === 'view:attributeElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === this.name || type === 'view:' + this.name ||\n\t\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\t\ttype === 'node' || type === 'view:node';\n\t\t} else {\n\t\t\treturn name === this.name && (\n\t\t\t\ttype === 'attributeElement' || type === 'view:attributeElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'element' || type === 'view:element'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if this element is similar to other element.\n\t *\n\t * If none of elements has set {@link module:engine/view/attributeelement~AttributeElement#id}, then both elements\n\t * should have the same name, attributes and priority to be considered as similar. Two similar elements can contain\n\t * different set of children nodes.\n\t *\n\t * If at least one element has {@link module:engine/view/attributeelement~AttributeElement#id} set, then both\n\t * elements have to have the same {@link module:engine/view/attributeelement~AttributeElement#id} value to be\n\t * considered similar.\n\t *\n\t * Similarity is important for {@link module:engine/view/downcastwriter~DowncastWriter}. For example:\n\t *\n\t * * two following similar elements can be merged together into one, longer element,\n\t * * {@link module:engine/view/downcastwriter~DowncastWriter#unwrap} checks similarity of passed element and processed element to\n\t * decide whether processed element should be unwrapped,\n\t * * etc.\n\t *\n\t * @param {module:engine/view/element~Element} otherElement\n\t * @returns {Boolean}\n\t */\n\tisSimilar( otherElement ) {\n\t\t// If any element has an `id` set, just compare the ids.\n\t\tif ( this.id !== null || otherElement.id !== null ) {\n\t\t\treturn this.id === otherElement.id;\n\t\t}\n\n\t\treturn super.isSimilar( otherElement ) && this.priority == otherElement.priority;\n\t}\n\n\t/**\n\t * Clones provided element with priority.\n\t *\n\t * @protected\n\t * @param {Boolean} deep If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any children.\n\t * @returns {module:engine/view/attributeelement~AttributeElement} Clone of this element.\n\t */\n\t_clone( deep ) {\n\t\tconst cloned = super._clone( deep );\n\n\t\t// Clone priority too.\n\t\tcloned._priority = this._priority;\n\n\t\t// And id too.\n\t\tcloned._id = this._id;\n\n\t\treturn cloned;\n\t}\n}\n\n/**\n * Default attribute priority.\n *\n * @member {Number} module:engine/view/attributeelement~AttributeElement.DEFAULT_PRIORITY\n */\nAttributeElement.DEFAULT_PRIORITY = DEFAULT_PRIORITY;\n\n// Returns block {@link module:engine/view/filler~Filler filler} offset or `null` if block filler is not needed.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\nfunction getFillerOffset() {\n\t// <b>foo</b> does not need filler.\n\tif ( nonUiChildrenCount( this ) ) {\n\t\treturn null;\n\t}\n\n\tlet element = this.parent;\n\n\t// <p><b></b></p> needs filler -> <p><b><br></b></p>\n\twhile ( element && element.is( 'attributeElement' ) ) {\n\t\tif ( nonUiChildrenCount( element ) > 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\telement = element.parent;\n\t}\n\n\tif ( !element || nonUiChildrenCount( element ) > 1 ) {\n\t\treturn null;\n\t}\n\n\t// Render block filler at the end of element (after all ui elements).\n\treturn this.childCount;\n}\n\n// Returns total count of children that are not {@link module:engine/view/uielement~UIElement UIElements}.\n//\n// @param {module:engine/view/element~Element} element\n// @returns {Number}\nfunction nonUiChildrenCount( element ) {\n\treturn Array.from( element.getChildren() ).filter( element => !element.is( 'uiElement' ) ).length;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/emptyelement\n */\n\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\n\n/**\n * Empty element class. It is used to represent elements that cannot contain any child nodes (for example `<img>` elements).\n *\n * To create a new empty element use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class EmptyElement extends Element {\n\t/**\n\t * Creates new instance of EmptyElement.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` when third parameter is passed,\n\t * to inform that usage of EmptyElement is incorrect (adding child nodes to EmptyElement is forbidden).\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createEmptyElement\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor( document, name, attrs, children ) {\n\t\tsuper( document, name, attrs, children );\n\n\t\t/**\n\t\t * Returns `null` because filler is not needed for EmptyElements.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {null} Always returns null.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\temptyElement.is( 'emptyElement' ); // -> true\n\t *\t\temptyElement.is( 'element' ); // -> true\n\t *\t\temptyElement.is( 'node' ); // -> true\n\t *\t\temptyElement.is( 'view:emptyElement' ); // -> true\n\t *\t\temptyElement.is( 'view:element' ); // -> true\n\t *\t\temptyElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\temptyElement.is( 'model:element' ); // -> false\n\t *\t\temptyElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an empty element, you can also check its\n\t * {@link module:engine/view/emptyelement~EmptyElement#name name}:\n\t *\n\t *\t\temptyElement.is( 'img' ); // -> true if this is a img element\n\t *\t\temptyElement.is( 'emptyElement', 'img' ); // -> same as above\n\t *\t\ttext.is( 'img' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'emptyElement' || type === 'view:emptyElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === this.name || type === 'view:' + this.name ||\n\t\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\t\ttype === 'node' || type === 'view:node';\n\t\t} else {\n\t\t\treturn name === this.name && (\n\t\t\t\ttype === 'emptyElement' || type === 'view:emptyElement' ||\n\t\t\t\ttype === 'element' || type === 'view:element'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Overrides {@link module:engine/view/element~Element#_insertChild} method.\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` to prevent\n\t * adding any child nodes to EmptyElement.\n\t *\n\t * @protected\n\t */\n\t_insertChild( index, nodes ) {\n\t\tif ( nodes && ( nodes instanceof Node || Array.from( nodes ).length > 0 ) ) {\n\t\t\t/**\n\t\t\t * Cannot add children to {@link module:engine/view/emptyelement~EmptyElement}.\n\t\t\t *\n\t\t\t * @error view-emptyelement-cannot-add\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-emptyelement-cannot-add: Cannot add child nodes to EmptyElement instance.',\n\t\t\t\t[ this, nodes ]\n\t\t\t);\n\t\t}\n\t}\n}\n\n// Returns `null` because block filler is not needed for EmptyElements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals navigator:false */\n\n/**\n * @module utils/env\n */\n\nconst userAgent = navigator.userAgent.toLowerCase();\n\n/**\n * A namespace containing environment and browser information.\n *\n * @namespace\n */\nconst env = {\n\t/**\n\t * Indicates that the application is running on Macintosh.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisMac: isMac( userAgent ),\n\n\t/**\n\t * Indicates that the application is running in Firefox (Gecko).\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisGecko: isGecko( userAgent ),\n\n\t/**\n\t * Indicates that the application is running in Safari.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisSafari: isSafari( userAgent ),\n\n\t/**\n\t * Indicates that the application is running on Android mobile device.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisAndroid: isAndroid( userAgent ),\n\n\t/**\n\t * Environment features information.\n\t *\n\t * @memberOf module:utils/env~env\n\t * @namespace\n\t */\n\tfeatures: {\n\t\t/**\n\t\t * Indicates that the environment supports ES2018 Unicode property escapes — like `\\p{P}` or `\\p{L}`.\n\t\t * More information about unicode properties might be found\n\t\t * [in Unicode Standard Annex #44](https://www.unicode.org/reports/tr44/#GC_Values_Table).\n\t\t *\n\t\t * @type {Boolean}\n\t\t */\n\t\tisRegExpUnicodePropertySupported: isRegExpUnicodePropertySupported()\n\t}\n};\n\nexport default env;\n\n/**\n * Checks if User Agent represented by the string is running on Macintosh.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running on Macintosh or not.\n */\nexport function isMac( userAgent ) {\n\treturn userAgent.indexOf( 'macintosh' ) > -1;\n}\n\n/**\n * Checks if User Agent represented by the string is Firefox (Gecko).\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Firefox or not.\n */\nexport function isGecko( userAgent ) {\n\treturn !!userAgent.match( /gecko\\/\\d+/ );\n}\n\n/**\n * Checks if User Agent represented by the string is Safari.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\nexport function isSafari( userAgent ) {\n\treturn userAgent.indexOf( ' applewebkit/' ) > -1 && userAgent.indexOf( 'chrome' ) === -1;\n}\n\n/**\n * Checks if User Agent represented by the string is Android mobile device.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\nexport function isAndroid( userAgent ) {\n\treturn userAgent.indexOf( 'android' ) > -1;\n}\n\n/**\n * Checks if the current environment supports ES2018 Unicode properties like `\\p{P}` or `\\p{L}`.\n * More information about unicode properties might be found\n * [in Unicode Standard Annex #44](https://www.unicode.org/reports/tr44/#GC_Values_Table).\n *\n * @returns {Boolean}\n */\nexport function isRegExpUnicodePropertySupported() {\n\tlet isSupported = false;\n\n\t// Feature detection for Unicode properties. Added in ES2018. Currently Firefox does not support it.\n\t// See https://github.com/ckeditor/ckeditor5-mention/issues/44#issuecomment-487002174.\n\n\ttry {\n\t\t// Usage of regular expression literal cause error during build (ckeditor/ckeditor5-dev#534).\n\t\tisSupported = 'ć'.search( new RegExp( '[\\\\p{L}]', 'u' ) ) === 0;\n\t} catch ( error ) {\n\t\t// Firefox throws a SyntaxError when the group is unsupported.\n\t}\n\n\treturn isSupported;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Set of utils related to keyboard support.\n *\n * @module utils/keyboard\n */\n\nimport CKEditorError from './ckeditorerror';\nimport env from './env';\n\nconst macGlyphsToModifiers = {\n\t'⌘': 'ctrl',\n\t'⇧': 'shift',\n\t'⌥': 'alt'\n};\n\nconst modifiersToMacGlyphs = {\n\t'ctrl': '⌘',\n\t'shift': '⇧',\n\t'alt': '⌥'\n};\n\n/**\n * Object with `keyName => keyCode` pairs for a set of known keys.\n *\n * Contains:\n *\n * * `a-z`,\n * * `0-9`,\n * * `f1-f12`,\n * * `arrow(left|up|right|bottom)`,\n * * `backspace`, `delete`, `enter`, `esc`, `tab`,\n * * `ctrl`, `cmd`, `shift`, `alt`.\n */\nexport const keyCodes = generateKnownKeyCodes();\n\n/**\n * Converts a key name or a {@link module:utils/keyboard~KeystrokeInfo keystroke info} into a key code.\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * @param {String|module:utils/keyboard~KeystrokeInfo} Key name (see {@link module:utils/keyboard~keyCodes})\n * or a keystroke data object.\n * @returns {Number} Key or keystroke code.\n */\nexport function getCode( key ) {\n\tlet keyCode;\n\n\tif ( typeof key == 'string' ) {\n\t\tkeyCode = keyCodes[ key.toLowerCase() ];\n\n\t\tif ( !keyCode ) {\n\t\t\t/**\n\t\t\t * Unknown key name. Only key names contained by the {@link module:utils/keyboard~keyCodes} can be used.\n\t\t\t *\n\t\t\t * @errror keyboard-unknown-key\n\t\t\t * @param {String} key\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'keyboard-unknown-key: Unknown key name.',\n\t\t\t\tnull, { key }\n\t\t\t);\n\t\t}\n\t} else {\n\t\tkeyCode = key.keyCode +\n\t\t\t( key.altKey ? keyCodes.alt : 0 ) +\n\t\t\t( key.ctrlKey ? keyCodes.ctrl : 0 ) +\n\t\t\t( key.shiftKey ? keyCodes.shift : 0 );\n\t}\n\n\treturn keyCode;\n}\n\n/**\n * Parses keystroke and returns a keystroke code that will match the code returned by\n * link {@link module:utils/keyboard.getCode} for a corresponding {@link module:utils/keyboard~KeystrokeInfo keystroke info}.\n *\n * The keystroke can be passed in two formats:\n *\n * * as a single string – e.g. `ctrl + A`,\n * * as an array of {@link module:utils/keyboard~keyCodes known key names} and key codes – e.g.:\n *   * `[ 'ctrl', 32 ]` (ctrl + space),\n *   * `[ 'ctrl', 'a' ]` (ctrl + A).\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * Note: Only keystrokes with a single non-modifier key are supported (e.g. `ctrl+A` is OK, but `ctrl+A+B` is not).\n *\n * @param {String|Array.<Number|String>} keystroke Keystroke definition.\n * @returns {Number} Keystroke code.\n */\nexport function parseKeystroke( keystroke ) {\n\tif ( typeof keystroke == 'string' ) {\n\t\tkeystroke = splitKeystrokeText( keystroke );\n\t}\n\n\treturn keystroke\n\t\t.map( key => ( typeof key == 'string' ) ? getCode( key ) : key )\n\t\t.reduce( ( key, sum ) => sum + key, 0 );\n}\n\n/**\n * It translates any keystroke string text like `\"CTRL+A\"` to an\n * environment–specific keystroke, i.e. `\"⌘A\"` on Mac OSX.\n *\n * @param {String} keystroke Keystroke text.\n * @returns {String} Keystroke text specific for the environment.\n */\nexport function getEnvKeystrokeText( keystroke ) {\n\tif ( !env.isMac ) {\n\t\treturn keystroke;\n\t}\n\n\treturn splitKeystrokeText( keystroke )\n\t\t// Replace modifiers (e.g. \"ctrl\") with Mac glyphs (e.g. \"⌘\") first.\n\t\t.map( key => modifiersToMacGlyphs[ key.toLowerCase() ] || key )\n\n\t\t// Decide whether to put \"+\" between keys in the keystroke or not.\n\t\t.reduce( ( value, key ) => {\n\t\t\tif ( value.slice( -1 ) in macGlyphsToModifiers ) {\n\t\t\t\treturn value + key;\n\t\t\t} else {\n\t\t\t\treturn value + '+' + key;\n\t\t\t}\n\t\t} );\n}\n\nfunction generateKnownKeyCodes() {\n\tconst keyCodes = {\n\t\tarrowleft: 37,\n\t\tarrowup: 38,\n\t\tarrowright: 39,\n\t\tarrowdown: 40,\n\t\tbackspace: 8,\n\t\tdelete: 46,\n\t\tenter: 13,\n\t\tspace: 32,\n\t\tesc: 27,\n\t\ttab: 9,\n\n\t\t// The idea about these numbers is that they do not collide with any real key codes, so we can use them\n\t\t// like bit masks.\n\t\tctrl: 0x110000,\n\t\t// Has the same code as ctrl, because their behaviour should be unified across the editor.\n\t\t// See http://ckeditor.github.io/editor-recommendations/general-policies#ctrl-vs-cmd\n\t\tcmd: 0x110000,\n\t\tshift: 0x220000,\n\t\talt: 0x440000\n\t};\n\n\t// a-z\n\tfor ( let code = 65; code <= 90; code++ ) {\n\t\tconst letter = String.fromCharCode( code );\n\n\t\tkeyCodes[ letter.toLowerCase() ] = code;\n\t}\n\n\t// 0-9\n\tfor ( let code = 48; code <= 57; code++ ) {\n\t\tkeyCodes[ code - 48 ] = code;\n\t}\n\n\t// F1-F12\n\tfor ( let code = 112; code <= 123; code++ ) {\n\t\tkeyCodes[ 'f' + ( code - 111 ) ] = code;\n\t}\n\n\treturn keyCodes;\n}\n\nfunction splitKeystrokeText( keystroke ) {\n\treturn keystroke.split( /\\s*\\+\\s*/ );\n}\n\n/**\n * Information about a keystroke.\n *\n * @interface module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * The [key code](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode).\n *\n * @member {Number} module:utils/keyboard~KeystrokeInfo#keyCode\n */\n\n/**\n * Whether the <kbd>Alt</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#altKey\n */\n\n/**\n * Whether the <kbd>Ctrl</kbd> or <kbd>Cmd</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#ctrlKey\n */\n\n/**\n * Whether the <kbd>Shift</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#shiftKey\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/uielement\n */\n\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * UI element class. It should be used to represent editing UI which needs to be injected into the editing view\n * If possible, you should keep your UI outside the editing view. However, if that is not possible,\n * UI elements can be used.\n *\n * How a UI element is rendered is in your control (you pass a callback to\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}).\n * The editor will ignore your UI element – the selection cannot be placed in it, it is skipped (invisible) when\n * the user modifies the selection by using arrow keys and the editor does not listen to any mutations which\n * happen inside your UI elements.\n *\n * The limitation is that you cannot convert a model element to a UI element. UI elements need to be\n * created for {@link module:engine/model/markercollection~Marker markers} or as additinal elements\n * inside normal {@link module:engine/view/containerelement~ContainerElement container elements}.\n *\n * To create a new UI element use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class UIElement extends Element {\n\t/**\n\t * Creates new instance of UIElement.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` when third parameter is passed,\n\t * to inform that usage of UIElement is incorrect (adding child nodes to UIElement is forbidden).\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createUIElement\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attributes] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor( document, name, attributes, children ) {\n\t\tsuper( document, name, attributes, children );\n\n\t\t/**\n\t\t * Returns `null` because filler is not needed for UIElements.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {null} Always returns null.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tuiElement.is( 'uiElement' ); // -> true\n\t *\t\tuiElement.is( 'element' ); // -> true\n\t *\t\tuiElement.is( 'node' ); // -> true\n\t *\t\tuiElement.is( 'view:uiElement' ); // -> true\n\t *\t\tuiElement.is( 'view:element' ); // -> true\n\t *\t\tuiElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\tuiElement.is( 'model:element' ); // -> false\n\t *\t\tuiElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an ui element, you can also check its\n\t * {@link module:engine/view/uielement~UIElement#name name}:\n\t *\n\t *\t\tuiElement.is( 'span' ); // -> true if this is a span ui element\n\t *\t\tuiElement.is( 'uiElement', 'span' ); // -> same as above\n\t *\t\ttext.is( 'span' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'uiElement' || type === 'view:uiElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === this.name || type === 'view:' + this.name ||\n\t\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\t\ttype === 'node' || type === 'view:node';\n\t\t} else {\n\t\t\treturn name === this.name && (\n\t\t\t\ttype === 'uiElement' || type === 'view:uiElement' ||\n\t\t\t\ttype === 'element' || type === 'view:element'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Overrides {@link module:engine/view/element~Element#_insertChild} method.\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` to prevent adding any child nodes\n\t * to UIElement.\n\t *\n\t * @protected\n\t */\n\t_insertChild( index, nodes ) {\n\t\tif ( nodes && ( nodes instanceof Node || Array.from( nodes ).length > 0 ) ) {\n\t\t\t/**\n\t\t\t * Cannot add children to {@link module:engine/view/uielement~UIElement}.\n\t\t\t *\n\t\t\t * @error view-uielement-cannot-add\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-uielement-cannot-add: Cannot add child nodes to UIElement instance.', this );\n\t\t}\n\t}\n\n\t/**\n\t * Renders this {@link module:engine/view/uielement~UIElement} to DOM. This method is called by\n\t * {@link module:engine/view/domconverter~DomConverter}.\n\t * Do not use inheritance to create custom rendering method, replace `render()` method instead:\n\t *\n\t *\t\tconst myUIElement = downcastWriter.createUIElement( 'span' );\n\t *\t\tmyUIElement.render = function( domDocument ) {\n\t *\t\t\tconst domElement = this.toDomElement( domDocument );\n\t *\t\t\tdomElement.innerHTML = '<b>this is ui element</b>';\n\t *\n\t *\t\t\treturn domElement;\n\t *\t\t};\n\t *\n\t * If changes in your UI element should trigger some editor UI update you should call\n\t * the {@link module:core/editor/editorui~EditorUI#update `editor.ui.update()`} method\n\t * after rendering your UI element.\n\t *\n\t * @param {Document} domDocument\n\t * @returns {HTMLElement}\n\t */\n\trender( domDocument ) {\n\t\treturn this.toDomElement( domDocument );\n\t}\n\n\t/**\n\t * Creates DOM element based on this view UIElement.\n\t * Note that each time this method is called new DOM element is created.\n\t *\n\t * @param {Document} domDocument\n\t * @returns {HTMLElement}\n\t */\n\ttoDomElement( domDocument ) {\n\t\tconst domElement = domDocument.createElement( this.name );\n\n\t\tfor ( const key of this.getAttributeKeys() ) {\n\t\t\tdomElement.setAttribute( key, this.getAttribute( key ) );\n\t\t}\n\n\t\treturn domElement;\n\t}\n}\n\n/**\n * This function injects UI element handling to the given {@link module:engine/view/document~Document document}.\n *\n * A callback is added to {@link module:engine/view/document~Document#event:keydown document keydown event}.\n * The callback handles the situation when right arrow key is pressed and selection is collapsed before a UI element.\n * Without this handler, it would be impossible to \"jump over\" UI element using right arrow key.\n *\n * @param {module:engine/view/view~View} view View controller to which the quirks handling will be injected.\n */\nexport function injectUiElementHandling( view ) {\n\tview.document.on( 'keydown', ( evt, data ) => jumpOverUiElement( evt, data, view.domConverter ) );\n}\n\n// Returns `null` because block filler is not needed for UIElements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n\n// Selection cannot be placed in a `UIElement`. Whenever it is placed there, it is moved before it. This\n// causes a situation when it is impossible to jump over `UIElement` using right arrow key, because the selection\n// ends up in ui element (in DOM) and is moved back to the left. This handler fixes this situation.\nfunction jumpOverUiElement( evt, data, domConverter ) {\n\tif ( data.keyCode == keyCodes.arrowright ) {\n\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\t\tconst domSelectionCollapsed = domSelection.rangeCount == 1 && domSelection.getRangeAt( 0 ).collapsed;\n\n\t\t// Jump over UI element if selection is collapsed or shift key is pressed. These are the cases when selection would extend.\n\t\tif ( domSelectionCollapsed || data.shiftKey ) {\n\t\t\tconst domParent = domSelection.focusNode;\n\t\t\tconst domOffset = domSelection.focusOffset;\n\n\t\t\tconst viewPosition = domConverter.domPositionToView( domParent, domOffset );\n\n\t\t\t// In case if dom element is not converted to view or is not mapped or something. Happens for example in some tests.\n\t\t\tif ( viewPosition === null ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip all following ui elements.\n\t\t\tlet jumpedOverAnyUiElement = false;\n\n\t\t\tconst nextViewPosition = viewPosition.getLastMatchingPosition( value => {\n\t\t\t\tif ( value.item.is( 'uiElement' ) ) {\n\t\t\t\t\t// Remember that there was at least one ui element.\n\t\t\t\t\tjumpedOverAnyUiElement = true;\n\t\t\t\t}\n\n\t\t\t\t// Jump over ui elements, jump over empty attribute elements, move up from inside of attribute element.\n\t\t\t\tif ( value.item.is( 'uiElement' ) || value.item.is( 'attributeElement' ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// Don't jump over text or don't get out of container element.\n\t\t\t\treturn false;\n\t\t\t} );\n\n\t\t\t// If anything has been skipped, fix position.\n\t\t\t// This `if` could be possibly omitted but maybe it is better not to mess with DOM selection if not needed.\n\t\t\tif ( jumpedOverAnyUiElement ) {\n\t\t\t\tconst newDomPosition = domConverter.viewPositionToDom( nextViewPosition );\n\n\t\t\t\tif ( domSelectionCollapsed ) {\n\t\t\t\t\t// Selection was collapsed, so collapse it at further position.\n\t\t\t\t\tdomSelection.collapse( newDomPosition.parent, newDomPosition.offset );\n\t\t\t\t} else {\n\t\t\t\t\t// Selection was not collapse, so extend it instead of collapsing.\n\t\t\t\t\tdomSelection.extend( newDomPosition.parent, newDomPosition.offset );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/documentfragment\n */\n\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n\n/**\n * Document fragment.\n *\n * To create a new document fragment instance use the\n * {@link module:engine/view/upcastwriter~UpcastWriter#createDocumentFragment `UpcastWriter#createDocumentFragment()`}\n * method.\n */\nexport default class DocumentFragment {\n\t/**\n\t * Creates new DocumentFragment instance.\n\t *\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document to which this document fragment belongs.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into the created document fragment.\n\t */\n\tconstructor( document, children ) {\n\t\t/**\n\t\t * The document to which this document fragment belongs.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * Array of child nodes.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/view/element~Element>} module:engine/view/documentfragment~DocumentFragment#_children\n\t\t */\n\t\tthis._children = [];\n\n\t\tif ( children ) {\n\t\t\tthis._insertChild( 0, children );\n\t\t}\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over nodes added to this document fragment.\n\t *\n\t * @returns {Iterable.<module:engine/view/node~Node>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Number of child nodes in this document fragment.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget childCount() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this.childCount === 0;\n\t}\n\n\t/**\n\t * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {null}\n\t */\n\tget parent() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tdocFrag.is( 'documentFragment' ); // -> true\n\t *\t\tdocFrag.is( 'view:documentFragment' ); // -> true\n\t *\n\t *\t\tdocFrag.is( 'model:documentFragment' ); // -> false\n\t *\t\tdocFrag.is( 'element' ); // -> false\n\t *\t\tdocFrag.is( 'node' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'documentFragment' || type === 'view:documentFragment';\n\t}\n\n\t/**\n\t * {@link module:engine/view/documentfragment~DocumentFragment#_insertChild Insert} a child node or a list of child nodes at the end\n\t * and sets the parent of these nodes to this fragment.\n\t *\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @returns {Number} Number of appended nodes.\n\t */\n\t_appendChild( items ) {\n\t\treturn this._insertChild( this.childCount, items );\n\t}\n\n\t/**\n\t * Gets child at the given index.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/view/node~Node} Child node.\n\t */\n\tgetChild( index ) {\n\t\treturn this._children[ index ];\n\t}\n\n\t/**\n\t * Gets index of the given child node. Returns `-1` if child node is not found.\n\t *\n\t * @param {module:engine/view/node~Node} node Child node.\n\t * @returns {Number} Index of the child node.\n\t */\n\tgetChildIndex( node ) {\n\t\treturn this._children.indexOf( node );\n\t}\n\n\t/**\n\t * Gets child nodes iterator.\n\t *\n\t * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n\t */\n\tgetChildren() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n\t * this fragment.\n\t *\n\t * @param {Number} index Position where nodes should be inserted.\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @returns {Number} Number of inserted nodes.\n\t */\n\t_insertChild( index, items ) {\n\t\tthis._fireChange( 'children', this );\n\t\tlet count = 0;\n\n\t\tconst nodes = normalize( this.document, items );\n\n\t\tfor ( const node of nodes ) {\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\n\t\t\tif ( node.parent !== null ) {\n\t\t\t\tnode._remove();\n\t\t\t}\n\n\t\t\tnode.parent = this;\n\n\t\t\tthis._children.splice( index, 0, node );\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n\t *\n\t * @param {Number} index Number of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n\t */\n\t_removeChildren( index, howMany = 1 ) {\n\t\tthis._fireChange( 'children', this );\n\n\t\tfor ( let i = index; i < index + howMany; i++ ) {\n\t\t\tthis._children[ i ].parent = null;\n\t\t}\n\n\t\treturn this._children.splice( index, howMany );\n\t}\n\n\t/**\n\t * Fires `change` event with given type of the change.\n\t *\n\t * @private\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\n\t * @param {module:engine/view/node~Node} node Changed node.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_fireChange( type, node ) {\n\t\tthis.fire( 'change:' + type, node );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // printTree() {\n\t// @if CK_DEBUG_ENGINE //\tlet string = 'ViewDocumentFragment: [';\n\n\t// @if CK_DEBUG_ENGINE //\tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE //\t\tif ( child.is( 'text' ) ) {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + '\\t'.repeat( 1 ) + child.data;\n\t// @if CK_DEBUG_ENGINE //\t\t} else {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + child.printTree( 1 );\n\t// @if CK_DEBUG_ENGINE //\t\t}\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\tstring += '\\n]';\n\n\t// @if CK_DEBUG_ENGINE //\treturn string;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logTree() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\nmix( DocumentFragment, EmitterMixin );\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/item~Item|Iterable.<String|module:engine/view/item~Item>}\n// @returns {Iterable.<module:engine/view/node~Node>}\nfunction normalize( document, nodes ) {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( document, nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\tif ( typeof node == 'string' ) {\n\t\t\t\treturn new Text( document, node );\n\t\t\t}\n\n\t\t\tif ( node instanceof TextProxy ) {\n\t\t\t\treturn new Text( document, node.data );\n\t\t\t}\n\n\t\t\treturn node;\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module module:engine/view/downcastwriter\n */\n\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\nimport ContainerElement from './containerelement';\nimport AttributeElement from './attributeelement';\nimport EmptyElement from './emptyelement';\nimport UIElement from './uielement';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport DocumentFragment from './documentfragment';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport Text from './text';\nimport EditableElement from './editableelement';\nimport { isPlainObject } from 'lodash-es';\n\n/**\n * View downcast writer.\n *\n * It provides a set of methods used to manipulate view nodes.\n *\n * Do not create an instance of this writer manually. To modify a view structure, use\n * the {@link module:engine/view/view~View#change `View#change()`} block.\n *\n * The `DowncastWriter` is designed to work with semantic views which are the views that were/are being downcasted from the model.\n * To work with ordinary views (e.g. parsed from a pasted content) use the\n * {@link module:engine/view/upcastwriter~UpcastWriter upcast writer}.\n *\n * Read more about changing the view in the {@glink framework/guides/architecture/editing-engine#changing-the-view Changing the view}\n * section of the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide.\n */\nexport default class DowncastWriter {\n\t/**\n\t * @param {module:engine/view/document~Document} document The view document instance.\n\t */\n\tconstructor( document ) {\n\t\t/**\n\t\t * The view document instance in which this writer operates.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * Holds references to the attribute groups that share the same {@link module:engine/view/attributeelement~AttributeElement#id id}.\n\t\t * The keys are `id`s, the values are `Set`s holding {@link module:engine/view/attributeelement~AttributeElement}s.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<String,Set>}\n\t\t */\n\t\tthis._cloneGroups = new Map();\n\t}\n\n\t/**\n\t * Sets {@link module:engine/view/documentselection~DocumentSelection selection's} ranges and direction to the\n\t * specified location based on the given {@link module:engine/view/selection~Selectable selectable}.\n\t *\n\t * Usage:\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\twriter.setSelection( range );\n\t *\n\t *\t\t// Sets backward selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\twriter.setSelection( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n\t *\t\twriter.setSelection( range );\n\t *\n\t *\t\t// Sets selection to the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\twriter.setSelection( otherSelection );\n\t *\n\t * \t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\twriter.setSelection( position );\n\t *\n\t * \t\t// Sets collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'p' );\n\t *\t\twriter.setSelection( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n \t * that element and ends after the last child of that element.\n\t *\n\t * \t\twriter.setSelection( paragraph, 'in' );\n\t *\n\t * Creates a range on the {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\twriter.setSelection( paragraph, 'on' );\n\t *\n\t * \t\t// Removes all ranges.\n\t *\t\twriter.setSelection( null );\n\t *\n\t * `DowncastWriter#setSelection()` allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Sets selection as backward.\n\t *\t\twriter.setSelection( range, { backward: true } );\n\t *\n\t *\t\t// Sets selection as fake.\n\t *\t\t// Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * \t\t// This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * \t\t// represented in other way, for example by applying proper CSS class.\n\t *\t\twriter.setSelection( range, { fake: true } );\n\t *\n\t * \t\t// Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * \t\t// (and be  properly handled by screen readers).\n\t *\t\twriter.setSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tsetSelection( selectable, placeOrOffset, options ) {\n\t\tthis.document.selection._setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Moves {@link module:engine/view/documentselection~DocumentSelection#focus selection's focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n\t * parameters.\n\t *\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tsetSelectionFocus( itemOrPosition, offset ) {\n\t\tthis.document.selection._setFocus( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/text~Text text node}.\n\t *\n\t *\t\twriter.createText( 'foo' );\n\t *\n\t * @param {String} data The text's data.\n\t * @returns {module:engine/view/text~Text} The created text node.\n\t */\n\tcreateText( data ) {\n\t\treturn new Text( this.document, data );\n\t}\n\n\t/**\n\t * Creates new {@link module:engine/view/attributeelement~AttributeElement}.\n\t *\n\t *\t\twriter.createAttributeElement( 'strong' );\n\t *\t\twriter.createAttributeElement( 'a', { href: 'foo.bar' } );\n\t *\n\t *\t\t// Make `<a>` element contain other attributes element so the `<a>` element is not broken.\n\t *\t\twriter.createAttributeElement( 'a', { href: 'foo.bar' }, { priority: 5 } );\n\t *\n\t *\t\t// Set `id` of a marker element so it is not joined or merged with \"normal\" elements.\n\t *\t\twriter.createAttributeElement( 'span', { class: 'my-marker' }, { id: 'marker:my' } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Element's attributes.\n\t * @param {Object} [options] Element's options.\n\t * @param {Number} [options.priority] Element's {@link module:engine/view/attributeelement~AttributeElement#priority priority}.\n\t * @param {Number|String} [options.id] Element's {@link module:engine/view/attributeelement~AttributeElement#id id}.\n\t * @returns {module:engine/view/attributeelement~AttributeElement} Created element.\n\t */\n\tcreateAttributeElement( name, attributes, options = {} ) {\n\t\tconst attributeElement = new AttributeElement( this.document, name, attributes );\n\n\t\tif ( options.priority ) {\n\t\t\tattributeElement._priority = options.priority;\n\t\t}\n\n\t\tif ( options.id ) {\n\t\t\tattributeElement._id = options.id;\n\t\t}\n\n\t\treturn attributeElement;\n\t}\n\n\t/**\n\t * Creates new {@link module:engine/view/containerelement~ContainerElement}.\n\t *\n\t *\t\twriter.createContainerElement( 'p' );\n\t *\n\t *\t\t// Create element with custom attributes.\n\t *\t\twriter.createContainerElement( 'div', { id: 'foo-bar', 'data-baz': '123' } );\n\t *\n\t *\t\t// Create element with custom styles.\n\t *\t\twriter.createContainerElement( 'p', { style: 'font-weight: bold; padding-bottom: 10px' } );\n\t *\n\t *\t\t// Create element with custom classes.\n\t *\t\twriter.createContainerElement( 'p', { class: 'foo bar baz' } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @returns {module:engine/view/containerelement~ContainerElement} Created element.\n\t */\n\tcreateContainerElement( name, attributes ) {\n\t\treturn new ContainerElement( this.document, name, attributes );\n\t}\n\n\t/**\n\t * Creates new {@link module:engine/view/editableelement~EditableElement}.\n\t *\n\t *\t\twriter.createEditableElement( 'div' );\n\t *\t\twriter.createEditableElement( 'div', { id: 'foo-1234' } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @returns {module:engine/view/editableelement~EditableElement} Created element.\n\t */\n\tcreateEditableElement( name, attributes ) {\n\t\tconst editableElement = new EditableElement( this.document, name, attributes );\n\t\teditableElement._document = this.document;\n\n\t\treturn editableElement;\n\t}\n\n\t/**\n\t * Creates new {@link module:engine/view/emptyelement~EmptyElement}.\n\t *\n\t *\t\twriter.createEmptyElement( 'img' );\n\t *\t\twriter.createEmptyElement( 'img', { id: 'foo-1234' } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @returns {module:engine/view/emptyelement~EmptyElement} Created element.\n\t */\n\tcreateEmptyElement( name, attributes ) {\n\t\treturn new EmptyElement( this.document, name, attributes );\n\t}\n\n\t/**\n\t * Creates new {@link module:engine/view/uielement~UIElement}.\n\t *\n\t *\t\twriter.createUIElement( 'span' );\n\t *\t\twriter.createUIElement( 'span', { id: 'foo-1234' } );\n\t *\n\t * Custom render function can be provided as third parameter:\n\t *\n\t *\t\twriter.createUIElement( 'span', null, function( domDocument ) {\n\t *\t\t\tconst domElement = this.toDomElement( domDocument );\n\t *\t\t\tdomElement.innerHTML = '<b>this is ui element</b>';\n\t *\n\t *\t\t\treturn domElement;\n\t *\t\t} );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @param {Function} [renderFunction] Custom render function.\n\t * @returns {module:engine/view/uielement~UIElement} Created element.\n\t */\n\tcreateUIElement( name, attributes, renderFunction ) {\n\t\tconst uiElement = new UIElement( this.document, name, attributes );\n\n\t\tif ( renderFunction ) {\n\t\t\tuiElement.render = renderFunction;\n\t\t}\n\n\t\treturn uiElement;\n\t}\n\n\t/**\n\t * Adds or overwrite element's attribute with a specified key and value.\n\t *\n\t *\t\twriter.setAttribute( 'href', 'http://ckeditor.com', linkElement );\n\t *\n\t * @param {String} key Attribute key.\n\t * @param {String} value Attribute value.\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tsetAttribute( key, value, element ) {\n\t\telement._setAttribute( key, value );\n\t}\n\n\t/**\n\t * Removes attribute from the element.\n\t *\n\t *\t\twriter.removeAttribute( 'href', linkElement );\n\t *\n\t * @param {String} key Attribute key.\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tremoveAttribute( key, element ) {\n\t\telement._removeAttribute( key );\n\t}\n\n\t/**\n\t * Adds specified class to the element.\n\t *\n\t *\t\twriter.addClass( 'foo', linkElement );\n\t *\t\twriter.addClass( [ 'foo', 'bar' ], linkElement );\n\t *\n\t * @param {Array.<String>|String} className\n\t * @param {module:engine/view/element~Element} element\n\t */\n\taddClass( className, element ) {\n\t\telement._addClass( className );\n\t}\n\n\t/**\n\t * Removes specified class from the element.\n\t *\n\t *\t\twriter.removeClass( 'foo', linkElement );\n\t *\t\twriter.removeClass( [ 'foo', 'bar' ], linkElement );\n\t *\n\t * @param {Array.<String>|String} className\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tremoveClass( className, element ) {\n\t\telement._removeClass( className );\n\t}\n\n\t/**\n\t * Adds style to the element.\n\t *\n\t *\t\twriter.setStyle( 'color', 'red', element );\n\t *\t\twriter.setStyle( {\n\t *\t\t\tcolor: 'red',\n\t *\t\t\tposition: 'fixed'\n\t *\t\t}, element );\n\t *\n\t * **Note**: The passed style can be normalized if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#set `StylesMap#set()`} for details.\n\t *\n\t * @param {String|Object} property Property name or object with key - value pairs.\n\t * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n\t * @param {module:engine/view/element~Element} element Element to set styles on.\n\t */\n\tsetStyle( property, value, element ) {\n\t\tif ( isPlainObject( property ) && element === undefined ) {\n\t\t\telement = value;\n\t\t}\n\n\t\telement._setStyle( property, value );\n\t}\n\n\t/**\n\t * Removes specified style from the element.\n\t *\n\t *\t\twriter.removeStyle( 'color', element ); // Removes 'color' style.\n\t *\t\twriter.removeStyle( [ 'color', 'border-top' ], element ); // Removes both 'color' and 'border-top' styles.\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#remove `StylesMap#remove()`} for details.\n\t *\n\t * @param {Array.<String>|String} property\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tremoveStyle( property, element ) {\n\t\telement._removeStyle( property );\n\t}\n\n\t/**\n\t * Sets a custom property on element. Unlike attributes, custom properties are not rendered to the DOM,\n\t * so they can be used to add special data to elements.\n\t *\n\t * @param {String|Symbol} key\n\t * @param {*} value\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tsetCustomProperty( key, value, element ) {\n\t\telement._setCustomProperty( key, value );\n\t}\n\n\t/**\n\t * Removes a custom property stored under the given key.\n\t *\n\t * @param {String|Symbol} key\n\t * @param {module:engine/view/element~Element} element\n\t * @returns {Boolean} Returns true if property was removed.\n\t */\n\tremoveCustomProperty( key, element ) {\n\t\treturn element._removeCustomProperty( key );\n\t}\n\n\t/**\n\t * Breaks attribute nodes at provided position or at boundaries of provided range. It breaks attribute elements inside\n\t * up to a container element.\n\t *\n\t * In following examples `<p>` is a container, `<b>` and `<u>` are attribute nodes:\n\t *\n\t *\t\t<p>foo<b><u>bar{}</u></b></p> -> <p>foo<b><u>bar</u></b>[]</p>\n\t *\t\t<p>foo<b><u>{}bar</u></b></p> -> <p>foo{}<b><u>bar</u></b></p>\n\t *\t\t<p>foo<b><u>b{}ar</u></b></p> -> <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n\t *\t\t<p><b>fo{o</b><u>ba}r</u></p> -> <p><b>fo</b><b>o</b><u>ba</u><u>r</u></b></p>\n\t *\n\t * **Note:** {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n\t *\n\t * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes breakAttributes} and\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#breakContainer breakContainer} is that `breakAttributes` breaks all\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of given `position`,\n\t * up to the first encountered {@link module:engine/view/containerelement~ContainerElement container element}.\n\t * `breakContainer` assumes that given `position` is directly in container element and breaks that container element.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container`\n\t * when {@link module:engine/view/range~Range#start start}\n\t * and {@link module:engine/view/range~Range#end end} positions of a passed range are not placed inside same parent container.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element`\n\t * when trying to break attributes\n\t * inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element`\n\t * when trying to break attributes\n\t * inside {@link module:engine/view/uielement~UIElement UIElement}.\n\t *\n\t * @see module:engine/view/attributeelement~AttributeElement\n\t * @see module:engine/view/containerelement~ContainerElement\n\t * @see module:engine/view/downcastwriter~DowncastWriter#breakContainer\n\t * @param {module:engine/view/position~Position|module:engine/view/range~Range} positionOrRange Position where\n\t * to break attribute elements.\n\t * @returns {module:engine/view/position~Position|module:engine/view/range~Range} New position or range, after breaking the attribute\n\t * elements.\n\t */\n\tbreakAttributes( positionOrRange ) {\n\t\tif ( positionOrRange instanceof Position ) {\n\t\t\treturn this._breakAttributes( positionOrRange );\n\t\t} else {\n\t\t\treturn this._breakAttributesRange( positionOrRange );\n\t\t}\n\t}\n\n\t/**\n\t * Breaks {@link module:engine/view/containerelement~ContainerElement container view element} into two, at the given position. Position\n\t * has to be directly inside container element and cannot be in root. Does not break if position is at the beginning\n\t * or at the end of it's parent element.\n\t *\n\t *\t\t<p>foo^bar</p> -> <p>foo</p><p>bar</p>\n\t *\t\t<div><p>foo</p>^<p>bar</p></div> -> <div><p>foo</p></div><div><p>bar</p></div>\n\t *\t\t<p>^foobar</p> -> ^<p>foobar</p>\n\t *\t\t<p>foobar^</p> -> <p>foobar</p>^\n\t *\n\t * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes breakAttributes} and\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#breakContainer breakContainer} is that `breakAttributes` breaks all\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of given `position`,\n\t * up to the first encountered {@link module:engine/view/containerelement~ContainerElement container element}.\n\t * `breakContainer` assumes that given `position` is directly in container element and breaks that container element.\n\t *\n\t * @see module:engine/view/attributeelement~AttributeElement\n\t * @see module:engine/view/containerelement~ContainerElement\n\t * @see module:engine/view/downcastwriter~DowncastWriter#breakAttributes\n\t * @param {module:engine/view/position~Position} position Position where to break element.\n\t * @returns {module:engine/view/position~Position} Position between broken elements. If element has not been broken,\n\t * the returned position is placed either before it or after it.\n\t */\n\tbreakContainer( position ) {\n\t\tconst element = position.parent;\n\n\t\tif ( !( element.is( 'containerElement' ) ) ) {\n\t\t\t/**\n\t\t\t * Trying to break an element which is not a container element.\n\t\t\t *\n\t\t\t * @error view-writer-break-non-container-element\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-writer-break-non-container-element: Trying to break an element which is not a container element.',\n\t\t\t\tthis.document\n\t\t\t);\n\t\t}\n\n\t\tif ( !element.parent ) {\n\t\t\t/**\n\t\t\t * Trying to break root element.\n\t\t\t *\n\t\t\t * @error view-writer-break-root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-break-root: Trying to break root element.', this.document );\n\t\t}\n\n\t\tif ( position.isAtStart ) {\n\t\t\treturn Position._createBefore( element );\n\t\t} else if ( !position.isAtEnd ) {\n\t\t\tconst newElement = element._clone( false );\n\n\t\t\tthis.insert( Position._createAfter( element ), newElement );\n\n\t\t\tconst sourceRange = new Range( position, Position._createAt( element, 'end' ) );\n\t\t\tconst targetPosition = new Position( newElement, 0 );\n\n\t\t\tthis.move( sourceRange, targetPosition );\n\t\t}\n\n\t\treturn Position._createAfter( element );\n\t}\n\n\t/**\n\t * Merges {@link module:engine/view/attributeelement~AttributeElement attribute elements}. It also merges text nodes if needed.\n\t * Only {@link module:engine/view/attributeelement~AttributeElement#isSimilar similar} attribute elements can be merged.\n\t *\n\t * In following examples `<p>` is a container and `<b>` is an attribute element:\n\t *\n\t *\t\t<p>foo[]bar</p> -> <p>foo{}bar</p>\n\t *\t\t<p><b>foo</b>[]<b>bar</b></p> -> <p><b>foo{}bar</b></p>\n\t *\t\t<p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p> -> <p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p>\n\t *\n\t * It will also take care about empty attributes when merging:\n\t *\n\t *\t\t<p><b>[]</b></p> -> <p>[]</p>\n\t *\t\t<p><b>foo</b><i>[]</i><b>bar</b></p> -> <p><b>foo{}bar</b></p>\n\t *\n\t * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#mergeAttributes mergeAttributes} and\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#mergeContainers mergeContainers} is that `mergeAttributes` merges two\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n\t * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n\t *\n\t * @see module:engine/view/attributeelement~AttributeElement\n\t * @see module:engine/view/containerelement~ContainerElement\n\t * @see module:engine/view/downcastwriter~DowncastWriter#mergeContainers\n\t * @param {module:engine/view/position~Position} position Merge position.\n\t * @returns {module:engine/view/position~Position} Position after merge.\n\t */\n\tmergeAttributes( position ) {\n\t\tconst positionOffset = position.offset;\n\t\tconst positionParent = position.parent;\n\n\t\t// When inside text node - nothing to merge.\n\t\tif ( positionParent.is( 'text' ) ) {\n\t\t\treturn position;\n\t\t}\n\n\t\t// When inside empty attribute - remove it.\n\t\tif ( positionParent.is( 'attributeElement' ) && positionParent.childCount === 0 ) {\n\t\t\tconst parent = positionParent.parent;\n\t\t\tconst offset = positionParent.index;\n\n\t\t\tpositionParent._remove();\n\t\t\tthis._removeFromClonedElementsGroup( positionParent );\n\n\t\t\treturn this.mergeAttributes( new Position( parent, offset ) );\n\t\t}\n\n\t\tconst nodeBefore = positionParent.getChild( positionOffset - 1 );\n\t\tconst nodeAfter = positionParent.getChild( positionOffset );\n\n\t\t// Position should be placed between two nodes.\n\t\tif ( !nodeBefore || !nodeAfter ) {\n\t\t\treturn position;\n\t\t}\n\n\t\t// When position is between two text nodes.\n\t\tif ( nodeBefore.is( 'text' ) && nodeAfter.is( 'text' ) ) {\n\t\t\treturn mergeTextNodes( nodeBefore, nodeAfter );\n\t\t}\n\t\t// When position is between two same attribute elements.\n\t\telse if ( nodeBefore.is( 'attributeElement' ) && nodeAfter.is( 'attributeElement' ) && nodeBefore.isSimilar( nodeAfter ) ) {\n\t\t\t// Move all children nodes from node placed after selection and remove that node.\n\t\t\tconst count = nodeBefore.childCount;\n\t\t\tnodeBefore._appendChild( nodeAfter.getChildren() );\n\n\t\t\tnodeAfter._remove();\n\t\t\tthis._removeFromClonedElementsGroup( nodeAfter );\n\n\t\t\t// New position is located inside the first node, before new nodes.\n\t\t\t// Call this method recursively to merge again if needed.\n\t\t\treturn this.mergeAttributes( new Position( nodeBefore, count ) );\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Merges two {@link module:engine/view/containerelement~ContainerElement container elements} that are before and after given position.\n\t * Precisely, the element after the position is removed and it's contents are moved to element before the position.\n\t *\n\t *\t\t<p>foo</p>^<p>bar</p> -> <p>foo^bar</p>\n\t *\t\t<div>foo</div>^<p>bar</p> -> <div>foo^bar</div>\n\t *\n\t * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#mergeAttributes mergeAttributes} and\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#mergeContainers mergeContainers} is that `mergeAttributes` merges two\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n\t * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n\t *\n\t * @see module:engine/view/attributeelement~AttributeElement\n\t * @see module:engine/view/containerelement~ContainerElement\n\t * @see module:engine/view/downcastwriter~DowncastWriter#mergeAttributes\n\t * @param {module:engine/view/position~Position} position Merge position.\n\t * @returns {module:engine/view/position~Position} Position after merge.\n\t */\n\tmergeContainers( position ) {\n\t\tconst prev = position.nodeBefore;\n\t\tconst next = position.nodeAfter;\n\n\t\tif ( !prev || !next || !prev.is( 'containerElement' ) || !next.is( 'containerElement' ) ) {\n\t\t\t/**\n\t\t\t * Element before and after given position cannot be merged.\n\t\t\t *\n\t\t\t * @error view-writer-merge-containers-invalid-position\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-merge-containers-invalid-position: ' +\n\t\t\t\t'Element before and after given position cannot be merged.', this.document );\n\t\t}\n\n\t\tconst lastChild = prev.getChild( prev.childCount - 1 );\n\t\tconst newPosition = lastChild instanceof Text ? Position._createAt( lastChild, 'end' ) : Position._createAt( prev, 'end' );\n\n\t\tthis.move( Range._createIn( next ), Position._createAt( prev, 'end' ) );\n\t\tthis.remove( Range._createOn( next ) );\n\n\t\treturn newPosition;\n\t}\n\n\t/**\n\t * Insert node or nodes at specified position. Takes care about breaking attributes before insertion\n\t * and merging them afterwards.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n\t * contains instances that are not {@link module:engine/view/text~Text Texts},\n\t * {@link module:engine/view/attributeelement~AttributeElement AttributeElements},\n\t * {@link module:engine/view/containerelement~ContainerElement ContainerElements},\n\t * {@link module:engine/view/emptyelement~EmptyElement EmptyElements} or\n\t * {@link module:engine/view/uielement~UIElement UIElements}.\n\t *\n\t * @param {module:engine/view/position~Position} position Insertion position.\n\t * @param {module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement|\n\t * module:engine/view/containerelement~ContainerElement|module:engine/view/emptyelement~EmptyElement|\n\t * module:engine/view/uielement~UIElement|Iterable.<module:engine/view/text~Text|\n\t * module:engine/view/attributeelement~AttributeElement|module:engine/view/containerelement~ContainerElement|\n\t * module:engine/view/emptyelement~EmptyElement|module:engine/view/uielement~UIElement>} nodes Node or nodes to insert.\n\t * @returns {module:engine/view/range~Range} Range around inserted nodes.\n\t */\n\tinsert( position, nodes ) {\n\t\tnodes = isIterable( nodes ) ? [ ...nodes ] : [ nodes ];\n\n\t\t// Check if nodes to insert are instances of AttributeElements, ContainerElements, EmptyElements, UIElements or Text.\n\t\tvalidateNodesToInsert( nodes, this.document );\n\n\t\tconst container = getParentContainer( position );\n\n\t\tif ( !container ) {\n\t\t\t/**\n\t\t\t * Position's parent container cannot be found.\n\t\t\t *\n\t\t\t * @error view-writer-invalid-position-container\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-invalid-position-container', this.document );\n\t\t}\n\n\t\tconst insertionPosition = this._breakAttributes( position, true );\n\t\tconst length = container._insertChild( insertionPosition.offset, nodes );\n\n\t\tfor ( const node of nodes ) {\n\t\t\tthis._addToClonedElementsGroup( node );\n\t\t}\n\n\t\tconst endPosition = insertionPosition.getShiftedBy( length );\n\t\tconst start = this.mergeAttributes( insertionPosition );\n\n\t\t// When no nodes were inserted - return collapsed range.\n\t\tif ( length === 0 ) {\n\t\t\treturn new Range( start, start );\n\t\t} else {\n\t\t\t// If start position was merged - move end position.\n\t\t\tif ( !start.isEqual( insertionPosition ) ) {\n\t\t\t\tendPosition.offset--;\n\t\t\t}\n\n\t\t\tconst end = this.mergeAttributes( endPosition );\n\n\t\t\treturn new Range( start, end );\n\t\t}\n\t}\n\n\t/**\n\t * Removes provided range from the container.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n\t * same parent container.\n\t *\n\t * @param {module:engine/view/range~Range|module:engine/view/item~Item} rangeOrItem Range to remove from container\n\t * or an {@link module:engine/view/item~Item item} to remove. If range is provided, after removing, it will be updated\n\t * to a collapsed range showing the new position.\n\t * @returns {module:engine/view/documentfragment~DocumentFragment} Document fragment containing removed nodes.\n\t */\n\tremove( rangeOrItem ) {\n\t\tconst range = rangeOrItem instanceof Range ? rangeOrItem : Range._createOn( rangeOrItem );\n\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\t// If range is collapsed - nothing to remove.\n\t\tif ( range.isCollapsed ) {\n\t\t\treturn new DocumentFragment( this.document );\n\t\t}\n\n\t\t// Break attributes at range start and end.\n\t\tconst { start: breakStart, end: breakEnd } = this._breakAttributesRange( range, true );\n\t\tconst parentContainer = breakStart.parent;\n\n\t\tconst count = breakEnd.offset - breakStart.offset;\n\n\t\t// Remove nodes in range.\n\t\tconst removed = parentContainer._removeChildren( breakStart.offset, count );\n\n\t\tfor ( const node of removed ) {\n\t\t\tthis._removeFromClonedElementsGroup( node );\n\t\t}\n\n\t\t// Merge after removing.\n\t\tconst mergePosition = this.mergeAttributes( breakStart );\n\t\trange.start = mergePosition;\n\t\trange.end = mergePosition.clone();\n\n\t\t// Return removed nodes.\n\t\treturn new DocumentFragment( this.document, removed );\n\t}\n\n\t/**\n\t * Removes matching elements from given range.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n\t * same parent container.\n\t *\n\t * @param {module:engine/view/range~Range} range Range to clear.\n\t * @param {module:engine/view/element~Element} element Element to remove.\n\t */\n\tclear( range, element ) {\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\t// Create walker on given range.\n\t\t// We walk backward because when we remove element during walk it modifies range end position.\n\t\tconst walker = range.getWalker( {\n\t\t\tdirection: 'backward',\n\t\t\tignoreElementEnd: true\n\t\t} );\n\n\t\t// Let's walk.\n\t\tfor ( const current of walker ) {\n\t\t\tconst item = current.item;\n\t\t\tlet rangeToRemove;\n\n\t\t\t// When current item matches to the given element.\n\t\t\tif ( item.is( 'element' ) && element.isSimilar( item ) ) {\n\t\t\t\t// Create range on this element.\n\t\t\t\trangeToRemove = Range._createOn( item );\n\t\t\t\t// When range starts inside Text or TextProxy element.\n\t\t\t} else if ( !current.nextPosition.isAfter( range.start ) && item.is( 'textProxy' ) ) {\n\t\t\t\t// We need to check if parent of this text matches to given element.\n\t\t\t\tconst parentElement = item.getAncestors().find( ancestor => {\n\t\t\t\t\treturn ancestor.is( 'element' ) && element.isSimilar( ancestor );\n\t\t\t\t} );\n\n\t\t\t\t// If it is then create range inside this element.\n\t\t\t\tif ( parentElement ) {\n\t\t\t\t\trangeToRemove = Range._createIn( parentElement );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we have found element to remove.\n\t\t\tif ( rangeToRemove ) {\n\t\t\t\t// We need to check if element range stick out of the given range and truncate if it is.\n\t\t\t\tif ( rangeToRemove.end.isAfter( range.end ) ) {\n\t\t\t\t\trangeToRemove.end = range.end;\n\t\t\t\t}\n\n\t\t\t\tif ( rangeToRemove.start.isBefore( range.start ) ) {\n\t\t\t\t\trangeToRemove.start = range.start;\n\t\t\t\t}\n\n\t\t\t\t// At the end we remove range with found element.\n\t\t\t\tthis.remove( rangeToRemove );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Moves nodes from provided range to target position.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n\t * same parent container.\n\t *\n\t * @param {module:engine/view/range~Range} sourceRange Range containing nodes to move.\n\t * @param {module:engine/view/position~Position} targetPosition Position to insert.\n\t * @returns {module:engine/view/range~Range} Range in target container. Inserted nodes are placed between\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions.\n\t */\n\tmove( sourceRange, targetPosition ) {\n\t\tlet nodes;\n\n\t\tif ( targetPosition.isAfter( sourceRange.end ) ) {\n\t\t\ttargetPosition = this._breakAttributes( targetPosition, true );\n\n\t\t\tconst parent = targetPosition.parent;\n\t\t\tconst countBefore = parent.childCount;\n\n\t\t\tsourceRange = this._breakAttributesRange( sourceRange, true );\n\n\t\t\tnodes = this.remove( sourceRange );\n\n\t\t\ttargetPosition.offset += ( parent.childCount - countBefore );\n\t\t} else {\n\t\t\tnodes = this.remove( sourceRange );\n\t\t}\n\n\t\treturn this.insert( targetPosition, nodes );\n\t}\n\n\t/**\n\t * Wraps elements within range with provided {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n\t * If a collapsed range is provided, it will be wrapped only if it is equal to view selection.\n\t *\n\t * If a collapsed range was passed and is same as selection, the selection\n\t * will be moved to the inside of the wrapped attribute element.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-invalid-range-container`\n\t * when {@link module:engine/view/range~Range#start}\n\t * and {@link module:engine/view/range~Range#end} positions are not placed inside same parent container.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n\t * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-nonselection-collapsed-range` when passed range\n\t * is collapsed and different than view selection.\n\t *\n\t * @param {module:engine/view/range~Range} range Range to wrap.\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute Attribute element to use as wrapper.\n\t * @returns {module:engine/view/range~Range} range Range after wrapping, spanning over wrapping attribute element.\n\t*/\n\twrap( range, attribute ) {\n\t\tif ( !( attribute instanceof AttributeElement ) ) {\n\t\t\tthrow new CKEditorError( 'view-writer-wrap-invalid-attribute', this.document );\n\t\t}\n\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\tif ( !range.isCollapsed ) {\n\t\t\t// Non-collapsed range. Wrap it with the attribute element.\n\t\t\treturn this._wrapRange( range, attribute );\n\t\t} else {\n\t\t\t// Collapsed range. Wrap position.\n\t\t\tlet position = range.start;\n\n\t\t\tif ( position.parent.is( 'element' ) && !_hasNonUiChildren( position.parent ) ) {\n\t\t\t\tposition = position.getLastMatchingPosition( value => value.item.is( 'uiElement' ) );\n\t\t\t}\n\n\t\t\tposition = this._wrapPosition( position, attribute );\n\t\t\tconst viewSelection = this.document.selection;\n\n\t\t\t// If wrapping position is equal to view selection, move view selection inside wrapping attribute element.\n\t\t\tif ( viewSelection.isCollapsed && viewSelection.getFirstPosition().isEqual( range.start ) ) {\n\t\t\t\tthis.setSelection( position );\n\t\t\t}\n\n\t\t\treturn new Range( position );\n\t\t}\n\t}\n\n\t/**\n\t * Unwraps nodes within provided range from attribute element.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n\t * same parent container.\n\t *\n\t * @param {module:engine/view/range~Range} range\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute\n\t */\n\tunwrap( range, attribute ) {\n\t\tif ( !( attribute instanceof AttributeElement ) ) {\n\t\t\t/**\n\t\t\t * Attribute element need to be instance of attribute element.\n\t\t\t *\n\t\t\t * @error view-writer-unwrap-invalid-attribute\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-unwrap-invalid-attribute', this.document );\n\t\t}\n\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\t// If range is collapsed - nothing to unwrap.\n\t\tif ( range.isCollapsed ) {\n\t\t\treturn range;\n\t\t}\n\n\t\t// Break attributes at range start and end.\n\t\tconst { start: breakStart, end: breakEnd } = this._breakAttributesRange( range, true );\n\t\tconst parentContainer = breakStart.parent;\n\n\t\t// Unwrap children located between break points.\n\t\tconst newRange = this._unwrapChildren( parentContainer, breakStart.offset, breakEnd.offset, attribute );\n\n\t\t// Merge attributes at the both ends and return a new range.\n\t\tconst start = this.mergeAttributes( newRange.start );\n\n\t\t// If start position was merged - move end position back.\n\t\tif ( !start.isEqual( newRange.start ) ) {\n\t\t\tnewRange.end.offset--;\n\t\t}\n\n\t\tconst end = this.mergeAttributes( newRange.end );\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Renames element by creating a copy of renamed element but with changed name and then moving contents of the\n\t * old element to the new one. Keep in mind that this will invalidate all {@link module:engine/view/position~Position positions} which\n\t * has renamed element as {@link module:engine/view/position~Position#parent a parent}.\n\t *\n\t * New element has to be created because `Element#tagName` property in DOM is readonly.\n\t *\n\t * Since this function creates a new element and removes the given one, the new element is returned to keep reference.\n\t *\n\t * @param {String} newName New name for element.\n\t * @param {module:engine/view/containerelement~ContainerElement} viewElement Element to be renamed.\n\t */\n\trename( newName, viewElement ) {\n\t\tconst newElement = new ContainerElement( this.document, newName, viewElement.getAttributes() );\n\n\t\tthis.insert( Position._createAfter( viewElement ), newElement );\n\t\tthis.move( Range._createIn( viewElement ), Position._createAt( newElement, 0 ) );\n\t\tthis.remove( Range._createOn( viewElement ) );\n\n\t\treturn newElement;\n\t}\n\n\t/**\n\t * Cleans up memory by removing obsolete cloned elements group from the writer.\n\t *\n\t * Should be used whenever all {@link module:engine/view/attributeelement~AttributeElement attribute elements}\n\t * with the same {@link module:engine/view/attributeelement~AttributeElement#id id} are going to be removed from the view and\n\t * the group will no longer be needed.\n\t *\n\t * Cloned elements group are not removed automatically in case if the group is still needed after all its elements\n\t * were removed from the view.\n\t *\n\t * Keep in mind that group names are equal to the `id` property of the attribute element.\n\t *\n\t * @param {String} groupName Name of the group to clear.\n\t */\n\tclearClonedElementsGroup( groupName ) {\n\t\tthis._cloneGroups.delete( groupName );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/view/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link #createPositionBefore},\n\t * * {@link #createPositionAfter},\n\t *\n\t * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tcreatePositionAt( itemOrPosition, offset ) {\n\t\treturn Position._createAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new position after given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionAfter( item ) {\n\t\treturn Position._createAfter( item );\n\t}\n\n\t/**\n\t * Creates a new position before given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionBefore( item ) {\n\t\treturn Position._createBefore( item );\n\t}\n\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** This factory method creates its own {@link module:engine/view/position~Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/view/position~Position} start Start position.\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRange( start, end ) {\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n\t *\n\t * @param {module:engine/view/item~Item} item\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeOn( item ) {\n\t\treturn Range._createOn( item );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeIn( element ) {\n\t\treturn Range._createIn( element );\n\t}\n\n\t/**\n\t Creates new {@link module:engine/view/selection~Selection} instance.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the document selection.\n\t *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'p' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t * @returns {module:engine/view/selection~Selection}\n\t */\n\tcreateSelection( selectable, placeOrOffset, options ) {\n\t\treturn new Selection( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Wraps children with provided `wrapElement`. Only children contained in `parent` element between\n\t * `startOffset` and `endOffset` will be wrapped.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} parent\n\t * @param {Number} startOffset\n\t * @param {Number} endOffset\n\t * @param {module:engine/view/element~Element} wrapElement\n\t */\n\t_wrapChildren( parent, startOffset, endOffset, wrapElement ) {\n\t\tlet i = startOffset;\n\t\tconst wrapPositions = [];\n\n\t\twhile ( i < endOffset ) {\n\t\t\tconst child = parent.getChild( i );\n\t\t\tconst isText = child.is( 'text' );\n\t\t\tconst isAttribute = child.is( 'attributeElement' );\n\t\t\tconst isEmpty = child.is( 'emptyElement' );\n\t\t\tconst isUI = child.is( 'uiElement' );\n\n\t\t\t//\n\t\t\t// (In all examples, assume that `wrapElement` is `<span class=\"foo\">` element.)\n\t\t\t//\n\t\t\t// Check if `wrapElement` can be joined with the wrapped element. One of requirements is having same name.\n\t\t\t// If possible, join elements.\n\t\t\t//\n\t\t\t// <p><span class=\"bar\">abc</span></p>  -->  <p><span class=\"foo bar\">abc</span></p>\n\t\t\t//\n\t\t\tif ( isAttribute && this._wrapAttributeElement( wrapElement, child ) ) {\n\t\t\t\twrapPositions.push( new Position( parent, i ) );\n\t\t\t}\n\t\t\t//\n\t\t\t// Wrap the child if it is not an attribute element or if it is an attribute element that should be inside\n\t\t\t// `wrapElement` (due to priority).\n\t\t\t//\n\t\t\t// <p>abc</p>                   -->  <p><span class=\"foo\">abc</span></p>\n\t\t\t// <p><strong>abc</strong></p>  -->  <p><span class=\"foo\"><strong>abc</strong></span></p>\n\t\t\t//\n\t\t\telse if ( isText || isEmpty || isUI || ( isAttribute && shouldABeOutsideB( wrapElement, child ) ) ) {\n\t\t\t\t// Clone attribute.\n\t\t\t\tconst newAttribute = wrapElement._clone();\n\n\t\t\t\t// Wrap current node with new attribute.\n\t\t\t\tchild._remove();\n\t\t\t\tnewAttribute._appendChild( child );\n\n\t\t\t\tparent._insertChild( i, newAttribute );\n\t\t\t\tthis._addToClonedElementsGroup( newAttribute );\n\n\t\t\t\twrapPositions.push( new Position( parent, i ) );\n\t\t\t}\n\t\t\t//\n\t\t\t// If other nested attribute is found and it wasn't wrapped (see above), continue wrapping inside it.\n\t\t\t//\n\t\t\t// <p><a href=\"foo.html\">abc</a></p>  -->  <p><a href=\"foo.html\"><span class=\"foo\">abc</span></a></p>\n\t\t\t//\n\t\t\telse if ( isAttribute ) {\n\t\t\t\tthis._wrapChildren( child, 0, child.childCount, wrapElement );\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\n\t\t// Merge at each wrap.\n\t\tlet offsetChange = 0;\n\n\t\tfor ( const position of wrapPositions ) {\n\t\t\tposition.offset -= offsetChange;\n\n\t\t\t// Do not merge with elements outside selected children.\n\t\t\tif ( position.offset == startOffset ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst newPosition = this.mergeAttributes( position );\n\n\t\t\t// If nodes were merged - other merge offsets will change.\n\t\t\tif ( !newPosition.isEqual( position ) ) {\n\t\t\t\toffsetChange++;\n\t\t\t\tendOffset--;\n\t\t\t}\n\t\t}\n\n\t\treturn Range._createFromParentsAndOffsets( parent, startOffset, parent, endOffset );\n\t}\n\n\t/**\n\t * Unwraps children from provided `unwrapElement`. Only children contained in `parent` element between\n\t * `startOffset` and `endOffset` will be unwrapped.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} parent\n\t * @param {Number} startOffset\n\t * @param {Number} endOffset\n\t * @param {module:engine/view/element~Element} unwrapElement\n\t */\n\t_unwrapChildren( parent, startOffset, endOffset, unwrapElement ) {\n\t\tlet i = startOffset;\n\t\tconst unwrapPositions = [];\n\n\t\t// Iterate over each element between provided offsets inside parent.\n\t\t// We don't use tree walker or range iterator because we will be removing and merging potentially multiple nodes,\n\t\t// so it could get messy. It is safer to it manually in this case.\n\t\twhile ( i < endOffset ) {\n\t\t\tconst child = parent.getChild( i );\n\n\t\t\t// Skip all text nodes. There should be no container element's here either.\n\t\t\tif ( !child.is( 'attributeElement' ) ) {\n\t\t\t\ti++;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//\n\t\t\t// (In all examples, assume that `unwrapElement` is `<span class=\"foo\">` element.)\n\t\t\t//\n\t\t\t// If the child is similar to the given attribute element, unwrap it - it will be completely removed.\n\t\t\t//\n\t\t\t// <p><span class=\"foo\">abc</span>xyz</p>  -->  <p>abcxyz</p>\n\t\t\t//\n\t\t\tif ( child.isSimilar( unwrapElement ) ) {\n\t\t\t\tconst unwrapped = child.getChildren();\n\t\t\t\tconst count = child.childCount;\n\n\t\t\t\t// Replace wrapper element with its children\n\t\t\t\tchild._remove();\n\t\t\t\tparent._insertChild( i, unwrapped );\n\n\t\t\t\tthis._removeFromClonedElementsGroup( child );\n\n\t\t\t\t// Save start and end position of moved items.\n\t\t\t\tunwrapPositions.push(\n\t\t\t\t\tnew Position( parent, i ),\n\t\t\t\t\tnew Position( parent, i + count )\n\t\t\t\t);\n\n\t\t\t\t// Skip elements that were unwrapped. Assuming there won't be another element to unwrap in child elements.\n\t\t\t\ti += count;\n\t\t\t\tendOffset += count - 1;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//\n\t\t\t// If the child is not similar but is an attribute element, try partial unwrapping - remove the same attributes/styles/classes.\n\t\t\t// Partial unwrapping will happen only if the elements have the same name.\n\t\t\t//\n\t\t\t// <p><span class=\"foo bar\">abc</span>xyz</p>  -->  <p><span class=\"bar\">abc</span>xyz</p>\n\t\t\t// <p><i class=\"foo\">abc</i>xyz</p>            -->  <p><i class=\"foo\">abc</i>xyz</p>\n\t\t\t//\n\t\t\tif ( this._unwrapAttributeElement( unwrapElement, child ) ) {\n\t\t\t\tunwrapPositions.push(\n\t\t\t\t\tnew Position( parent, i ),\n\t\t\t\t\tnew Position( parent, i + 1 )\n\t\t\t\t);\n\n\t\t\t\ti++;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//\n\t\t\t// If other nested attribute is found, look through it's children for elements to unwrap.\n\t\t\t//\n\t\t\t// <p><i><span class=\"foo\">abc</span></i><p>  -->  <p><i>abc</i><p>\n\t\t\t//\n\t\t\tthis._unwrapChildren( child, 0, child.childCount, unwrapElement );\n\n\t\t\ti++;\n\t\t}\n\n\t\t// Merge at each unwrap.\n\t\tlet offsetChange = 0;\n\n\t\tfor ( const position of unwrapPositions ) {\n\t\t\tposition.offset -= offsetChange;\n\n\t\t\t// Do not merge with elements outside selected children.\n\t\t\tif ( position.offset == startOffset || position.offset == endOffset ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst newPosition = this.mergeAttributes( position );\n\n\t\t\t// If nodes were merged - other merge offsets will change.\n\t\t\tif ( !newPosition.isEqual( position ) ) {\n\t\t\t\toffsetChange++;\n\t\t\t\tendOffset--;\n\t\t\t}\n\t\t}\n\n\t\treturn Range._createFromParentsAndOffsets( parent, startOffset, parent, endOffset );\n\t}\n\n\t/**\n\t * Helper function for `view.writer.wrap`. Wraps range with provided attribute element.\n\t * This method will also merge newly added attribute element with its siblings whenever possible.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n\t * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n\t *\n\t * @private\n\t * @param {module:engine/view/range~Range} range\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute\n\t * @returns {module:engine/view/range~Range} New range after wrapping, spanning over wrapping attribute element.\n\t */\n\t_wrapRange( range, attribute ) {\n\t\t// Break attributes at range start and end.\n\t\tconst { start: breakStart, end: breakEnd } = this._breakAttributesRange( range, true );\n\t\tconst parentContainer = breakStart.parent;\n\n\t\t// Wrap all children with attribute.\n\t\tconst newRange = this._wrapChildren( parentContainer, breakStart.offset, breakEnd.offset, attribute );\n\n\t\t// Merge attributes at the both ends and return a new range.\n\t\tconst start = this.mergeAttributes( newRange.start );\n\n\t\t// If start position was merged - move end position back.\n\t\tif ( !start.isEqual( newRange.start ) ) {\n\t\t\tnewRange.end.offset--;\n\t\t}\n\t\tconst end = this.mergeAttributes( newRange.end );\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Helper function for {@link #wrap}. Wraps position with provided attribute element.\n\t * This method will also merge newly added attribute element with its siblings whenever possible.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n\t * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n\t *\n\t * @private\n\t * @param {module:engine/view/position~Position} position\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute\n\t * @returns {module:engine/view/position~Position} New position after wrapping.\n\t */\n\t_wrapPosition( position, attribute ) {\n\t\t// Return same position when trying to wrap with attribute similar to position parent.\n\t\tif ( attribute.isSimilar( position.parent ) ) {\n\t\t\treturn movePositionToTextNode( position.clone() );\n\t\t}\n\n\t\t// When position is inside text node - break it and place new position between two text nodes.\n\t\tif ( position.parent.is( 'text' ) ) {\n\t\t\tposition = breakTextNode( position );\n\t\t}\n\n\t\t// Create fake element that will represent position, and will not be merged with other attributes.\n\t\tconst fakePosition = this.createAttributeElement();\n\t\tfakePosition._priority = Number.POSITIVE_INFINITY;\n\t\tfakePosition.isSimilar = () => false;\n\n\t\t// Insert fake element in position location.\n\t\tposition.parent._insertChild( position.offset, fakePosition );\n\n\t\t// Range around inserted fake attribute element.\n\t\tconst wrapRange = new Range( position, position.getShiftedBy( 1 ) );\n\n\t\t// Wrap fake element with attribute (it will also merge if possible).\n\t\tthis.wrap( wrapRange, attribute );\n\n\t\t// Remove fake element and place new position there.\n\t\tconst newPosition = new Position( fakePosition.parent, fakePosition.index );\n\t\tfakePosition._remove();\n\n\t\t// If position is placed between text nodes - merge them and return position inside.\n\t\tconst nodeBefore = newPosition.nodeBefore;\n\t\tconst nodeAfter = newPosition.nodeAfter;\n\n\t\tif ( nodeBefore instanceof Text && nodeAfter instanceof Text ) {\n\t\t\treturn mergeTextNodes( nodeBefore, nodeAfter );\n\t\t}\n\n\t\t// If position is next to text node - move position inside.\n\t\treturn movePositionToTextNode( newPosition );\n\t}\n\n\t/**\n\t * \tWraps one {@link module:engine/view/attributeelement~AttributeElement AttributeElement} into another by\n\t * \tmerging them if possible. When merging is possible - all attributes, styles and classes are moved from wrapper\n\t * \telement to element being wrapped.\n\t *\n\t * \t@private\n\t * \t@param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n\t * \t@param {module:engine/view/attributeelement~AttributeElement} toWrap AttributeElement to wrap using wrapper element.\n\t * \t@returns {Boolean} Returns `true` if elements are merged.\n\t */\n\t_wrapAttributeElement( wrapper, toWrap ) {\n\t\tif ( !canBeJoined( wrapper, toWrap ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Can't merge if name or priority differs.\n\t\tif ( wrapper.name !== toWrap.name || wrapper.priority !== toWrap.priority ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if attributes can be merged.\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If some attributes are different we cannot wrap.\n\t\t\tif ( toWrap.hasAttribute( key ) && toWrap.getAttribute( key ) !== wrapper.getAttribute( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if styles can be merged.\n\t\tfor ( const key of wrapper.getStyleNames() ) {\n\t\t\tif ( toWrap.hasStyle( key ) && toWrap.getStyle( key ) !== wrapper.getStyle( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Move all attributes/classes/styles from wrapper to wrapped AttributeElement.\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Move only these attributes that are not present - other are similar.\n\t\t\tif ( !toWrap.hasAttribute( key ) ) {\n\t\t\t\tthis.setAttribute( key, wrapper.getAttribute( key ), toWrap );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const key of wrapper.getStyleNames() ) {\n\t\t\tif ( !toWrap.hasStyle( key ) ) {\n\t\t\t\tthis.setStyle( key, wrapper.getStyle( key ), toWrap );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const key of wrapper.getClassNames() ) {\n\t\t\tif ( !toWrap.hasClass( key ) ) {\n\t\t\t\tthis.addClass( key, toWrap );\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Unwraps {@link module:engine/view/attributeelement~AttributeElement AttributeElement} from another by removing\n\t * corresponding attributes, classes and styles. All attributes, classes and styles from wrapper should be present\n\t * inside element being unwrapped.\n\t *\n\t * @private\n\t * @param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n\t * @param {module:engine/view/attributeelement~AttributeElement} toUnwrap AttributeElement to unwrap using wrapper element.\n\t * @returns {Boolean} Returns `true` if elements are unwrapped.\n\t **/\n\t_unwrapAttributeElement( wrapper, toUnwrap ) {\n\t\tif ( !canBeJoined( wrapper, toUnwrap ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Can't unwrap if name or priority differs.\n\t\tif ( wrapper.name !== toUnwrap.name || wrapper.priority !== toUnwrap.priority ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if AttributeElement has all wrapper attributes.\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If some attributes are missing or different we cannot unwrap.\n\t\t\tif ( !toUnwrap.hasAttribute( key ) || toUnwrap.getAttribute( key ) !== wrapper.getAttribute( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if AttributeElement has all wrapper classes.\n\t\tif ( !toUnwrap.hasClass( ...wrapper.getClassNames() ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if AttributeElement has all wrapper styles.\n\t\tfor ( const key of wrapper.getStyleNames() ) {\n\t\t\t// If some styles are missing or different we cannot unwrap.\n\t\t\tif ( !toUnwrap.hasStyle( key ) || toUnwrap.getStyle( key ) !== wrapper.getStyle( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Remove all wrapper's attributes from unwrapped element.\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.removeAttribute( key, toUnwrap );\n\t\t}\n\n\t\t// Remove all wrapper's classes from unwrapped element.\n\t\tthis.removeClass( Array.from( wrapper.getClassNames() ), toUnwrap );\n\n\t\t// Remove all wrapper's styles from unwrapped element.\n\t\tthis.removeStyle( Array.from( wrapper.getStyleNames() ), toUnwrap );\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Helper function used by other `DowncastWriter` methods. Breaks attribute elements at the boundaries of given range.\n\t *\n\t * @private\n\t * @param {module:engine/view/range~Range} range Range which `start` and `end` positions will be used to break attributes.\n\t * @param {Boolean} [forceSplitText=false] If set to `true`, will break text nodes even if they are directly in container element.\n\t * This behavior will result in incorrect view state, but is needed by other view writing methods which then fixes view state.\n\t * @returns {module:engine/view/range~Range} New range with located at break positions.\n\t */\n\t_breakAttributesRange( range, forceSplitText = false ) {\n\t\tconst rangeStart = range.start;\n\t\tconst rangeEnd = range.end;\n\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\t// Break at the collapsed position. Return new collapsed range.\n\t\tif ( range.isCollapsed ) {\n\t\t\tconst position = this._breakAttributes( range.start, forceSplitText );\n\n\t\t\treturn new Range( position, position );\n\t\t}\n\n\t\tconst breakEnd = this._breakAttributes( rangeEnd, forceSplitText );\n\t\tconst count = breakEnd.parent.childCount;\n\t\tconst breakStart = this._breakAttributes( rangeStart, forceSplitText );\n\n\t\t// Calculate new break end offset.\n\t\tbreakEnd.offset += breakEnd.parent.childCount - count;\n\n\t\treturn new Range( breakStart, breakEnd );\n\t}\n\n\t/**\n\t * Helper function used by other `DowncastWriter` methods. Breaks attribute elements at given position.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element` when break position\n\t * is placed inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element` when break position\n\t * is placed inside {@link module:engine/view/uielement~UIElement UIElement}.\n\t *\n\t * @private\n\t * @param {module:engine/view/position~Position} position Position where to break attributes.\n\t * @param {Boolean} [forceSplitText=false] If set to `true`, will break text nodes even if they are directly in container element.\n\t * This behavior will result in incorrect view state, but is needed by other view writing methods which then fixes view state.\n\t * @returns {module:engine/view/position~Position} New position after breaking the attributes.\n\t */\n\t_breakAttributes( position, forceSplitText = false ) {\n\t\tconst positionOffset = position.offset;\n\t\tconst positionParent = position.parent;\n\n\t\t// If position is placed inside EmptyElement - throw an exception as we cannot break inside.\n\t\tif ( position.parent.is( 'emptyElement' ) ) {\n\t\t\t/**\n\t\t\t * Cannot break inside EmptyElement instance.\n\t\t\t *\n\t\t\t * @error view-writer-cannot-break-empty-element\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-cannot-break-empty-element', this.document );\n\t\t}\n\n\t\t// If position is placed inside UIElement - throw an exception as we cannot break inside.\n\t\tif ( position.parent.is( 'uiElement' ) ) {\n\t\t\t/**\n\t\t\t * Cannot break inside UIElement instance.\n\t\t\t *\n\t\t\t * @error view-writer-cannot-break-ui-element\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-cannot-break-ui-element', this.document );\n\t\t}\n\n\t\t// There are no attributes to break and text nodes breaking is not forced.\n\t\tif ( !forceSplitText && positionParent.is( 'text' ) && isContainerOrFragment( positionParent.parent ) ) {\n\t\t\treturn position.clone();\n\t\t}\n\n\t\t// Position's parent is container, so no attributes to break.\n\t\tif ( isContainerOrFragment( positionParent ) ) {\n\t\t\treturn position.clone();\n\t\t}\n\n\t\t// Break text and start again in new position.\n\t\tif ( positionParent.is( 'text' ) ) {\n\t\t\treturn this._breakAttributes( breakTextNode( position ), forceSplitText );\n\t\t}\n\n\t\tconst length = positionParent.childCount;\n\n\t\t// <p>foo<b><u>bar{}</u></b></p>\n\t\t// <p>foo<b><u>bar</u>[]</b></p>\n\t\t// <p>foo<b><u>bar</u></b>[]</p>\n\t\tif ( positionOffset == length ) {\n\t\t\tconst newPosition = new Position( positionParent.parent, positionParent.index + 1 );\n\n\t\t\treturn this._breakAttributes( newPosition, forceSplitText );\n\t\t} else {\n\t\t\t// <p>foo<b><u>{}bar</u></b></p>\n\t\t\t// <p>foo<b>[]<u>bar</u></b></p>\n\t\t\t// <p>foo{}<b><u>bar</u></b></p>\n\t\t\tif ( positionOffset === 0 ) {\n\t\t\t\tconst newPosition = new Position( positionParent.parent, positionParent.index );\n\n\t\t\t\treturn this._breakAttributes( newPosition, forceSplitText );\n\t\t\t}\n\t\t\t// <p>foo<b><u>b{}ar</u></b></p>\n\t\t\t// <p>foo<b><u>b[]ar</u></b></p>\n\t\t\t// <p>foo<b><u>b</u>[]<u>ar</u></b></p>\n\t\t\t// <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n\t\t\telse {\n\t\t\t\tconst offsetAfter = positionParent.index + 1;\n\n\t\t\t\t// Break element.\n\t\t\t\tconst clonedNode = positionParent._clone();\n\n\t\t\t\t// Insert cloned node to position's parent node.\n\t\t\t\tpositionParent.parent._insertChild( offsetAfter, clonedNode );\n\t\t\t\tthis._addToClonedElementsGroup( clonedNode );\n\n\t\t\t\t// Get nodes to move.\n\t\t\t\tconst count = positionParent.childCount - positionOffset;\n\t\t\t\tconst nodesToMove = positionParent._removeChildren( positionOffset, count );\n\n\t\t\t\t// Move nodes to cloned node.\n\t\t\t\tclonedNode._appendChild( nodesToMove );\n\n\t\t\t\t// Create new position to work on.\n\t\t\t\tconst newPosition = new Position( positionParent.parent, offsetAfter );\n\n\t\t\t\treturn this._breakAttributes( newPosition, forceSplitText );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stores the information that an {@link module:engine/view/attributeelement~AttributeElement attribute element} was\n\t * added to the tree. Saves the reference to the group in the given element and updates the group, so other elements\n\t * from the group now keep a reference to the given attribute element.\n\t *\n\t * The clones group can be obtained using {@link module:engine/view/attributeelement~AttributeElement#getElementsWithSameId}.\n\t *\n\t * Does nothing if added element has no {@link module:engine/view/attributeelement~AttributeElement#id id}.\n\t *\n\t * @private\n\t * @param {module:engine/view/attributeelement~AttributeElement} element Attribute element to save.\n\t */\n\t_addToClonedElementsGroup( element ) {\n\t\t// Add only if the element is in document tree.\n\t\tif ( !element.root.is( 'rootElement' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Traverse the element's children recursively to find other attribute elements that also might got inserted.\n\t\t// The loop is at the beginning so we can make fast returns later in the code.\n\t\tif ( element.is( 'element' ) ) {\n\t\t\tfor ( const child of element.getChildren() ) {\n\t\t\t\tthis._addToClonedElementsGroup( child );\n\t\t\t}\n\t\t}\n\n\t\tconst id = element.id;\n\n\t\tif ( !id ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet group = this._cloneGroups.get( id );\n\n\t\tif ( !group ) {\n\t\t\tgroup = new Set();\n\t\t\tthis._cloneGroups.set( id, group );\n\t\t}\n\n\t\tgroup.add( element );\n\t\telement._clonesGroup = group;\n\t}\n\n\t/**\n\t * Removes all the information about the given {@link module:engine/view/attributeelement~AttributeElement attribute element}\n\t * from its clones group.\n\t *\n\t * Keep in mind, that the element will still keep a reference to the group (but the group will not keep a reference to it).\n\t * This allows to reference the whole group even if the element was already removed from the tree.\n\t *\n\t * Does nothing if the element has no {@link module:engine/view/attributeelement~AttributeElement#id id}.\n\t *\n\t * @private\n\t * @param {module:engine/view/attributeelement~AttributeElement} element Attribute element to remove.\n\t */\n\t_removeFromClonedElementsGroup( element ) {\n\t\t// Traverse the element's children recursively to find other attribute elements that also got removed.\n\t\t// The loop is at the beginning so we can make fast returns later in the code.\n\t\tif ( element.is( 'element' ) ) {\n\t\t\tfor ( const child of element.getChildren() ) {\n\t\t\t\tthis._removeFromClonedElementsGroup( child );\n\t\t\t}\n\t\t}\n\n\t\tconst id = element.id;\n\n\t\tif ( !id ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst group = this._cloneGroups.get( id );\n\n\t\tif ( !group ) {\n\t\t\treturn;\n\t\t}\n\n\t\tgroup.delete( element );\n\t\t// Not removing group from element on purpose!\n\t\t// If other parts of code have reference to this element, they will be able to get references to other elements from the group.\n\t}\n}\n\n// Helper function for `view.writer.wrap`. Checks if given element has any children that are not ui elements.\nfunction _hasNonUiChildren( parent ) {\n\treturn Array.from( parent.getChildren() ).some( child => !child.is( 'uiElement' ) );\n}\n\n/**\n * Attribute element need to be instance of attribute element.\n *\n * @error view-writer-wrap-invalid-attribute\n */\n\n// Returns first parent container of specified {@link module:engine/view/position~Position Position}.\n// Position's parent node is checked as first, then next parents are checked.\n// Note that {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n//\n// @param {module:engine/view/position~Position} position Position used as a start point to locate parent container.\n// @returns {module:engine/view/containerelement~ContainerElement|module:engine/view/documentfragment~DocumentFragment|undefined}\n// Parent container element or `undefined` if container is not found.\nfunction getParentContainer( position ) {\n\tlet parent = position.parent;\n\n\twhile ( !isContainerOrFragment( parent ) ) {\n\t\tif ( !parent ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\n\treturn parent;\n}\n\n// Checks if first {@link module:engine/view/attributeelement~AttributeElement AttributeElement} provided to the function\n// can be wrapped otuside second element. It is done by comparing elements'\n// {@link module:engine/view/attributeelement~AttributeElement#priority priorities}, if both have same priority\n// {@link module:engine/view/element~Element#getIdentity identities} are compared.\n//\n// @param {module:engine/view/attributeelement~AttributeElement} a\n// @param {module:engine/view/attributeelement~AttributeElement} b\n// @returns {Boolean}\nfunction shouldABeOutsideB( a, b ) {\n\tif ( a.priority < b.priority ) {\n\t\treturn true;\n\t} else if ( a.priority > b.priority ) {\n\t\treturn false;\n\t}\n\n\t// When priorities are equal and names are different - use identities.\n\treturn a.getIdentity() < b.getIdentity();\n}\n\n// Returns new position that is moved to near text node. Returns same position if there is no text node before of after\n// specified position.\n//\n//\t\t<p>foo[]</p>  ->  <p>foo{}</p>\n//\t\t<p>[]foo</p>  ->  <p>{}foo</p>\n//\n// @param {module:engine/view/position~Position} position\n// @returns {module:engine/view/position~Position} Position located inside text node or same position if there is no text nodes\n// before or after position location.\nfunction movePositionToTextNode( position ) {\n\tconst nodeBefore = position.nodeBefore;\n\n\tif ( nodeBefore && nodeBefore.is( 'text' ) ) {\n\t\treturn new Position( nodeBefore, nodeBefore.data.length );\n\t}\n\n\tconst nodeAfter = position.nodeAfter;\n\n\tif ( nodeAfter && nodeAfter.is( 'text' ) ) {\n\t\treturn new Position( nodeAfter, 0 );\n\t}\n\n\treturn position;\n}\n\n// Breaks text node into two text nodes when possible.\n//\n//\t\t<p>foo{}bar</p> -> <p>foo[]bar</p>\n//\t\t<p>{}foobar</p> -> <p>[]foobar</p>\n//\t\t<p>foobar{}</p> -> <p>foobar[]</p>\n//\n// @param {module:engine/view/position~Position} position Position that need to be placed inside text node.\n// @returns {module:engine/view/position~Position} New position after breaking text node.\nfunction breakTextNode( position ) {\n\tif ( position.offset == position.parent.data.length ) {\n\t\treturn new Position( position.parent.parent, position.parent.index + 1 );\n\t}\n\n\tif ( position.offset === 0 ) {\n\t\treturn new Position( position.parent.parent, position.parent.index );\n\t}\n\n\t// Get part of the text that need to be moved.\n\tconst textToMove = position.parent.data.slice( position.offset );\n\n\t// Leave rest of the text in position's parent.\n\tposition.parent._data = position.parent.data.slice( 0, position.offset );\n\n\t// Insert new text node after position's parent text node.\n\tposition.parent.parent._insertChild( position.parent.index + 1, new Text( position.root.document, textToMove ) );\n\n\t// Return new position between two newly created text nodes.\n\treturn new Position( position.parent.parent, position.parent.index + 1 );\n}\n\n// Merges two text nodes into first node. Removes second node and returns merge position.\n//\n// @param {module:engine/view/text~Text} t1 First text node to merge. Data from second text node will be moved at the end of\n// this text node.\n// @param {module:engine/view/text~Text} t2 Second text node to merge. This node will be removed after merging.\n// @returns {module:engine/view/position~Position} Position after merging text nodes.\nfunction mergeTextNodes( t1, t2 ) {\n\t// Merge text data into first text node and remove second one.\n\tconst nodeBeforeLength = t1.data.length;\n\tt1._data += t2.data;\n\tt2._remove();\n\n\treturn new Position( t1, nodeBeforeLength );\n}\n\n// Checks if provided nodes are valid to insert. Checks if each node is an instance of\n// {@link module:engine/view/text~Text Text} or {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\n// {@link module:engine/view/containerelement~ContainerElement ContainerElement},\n// {@link module:engine/view/emptyelement~EmptyElement EmptyElement} or\n// {@link module:engine/view/uielement~UIElement UIElement}.\n//\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n// contains instances that are not {@link module:engine/view/text~Text Texts},\n// {@link module:engine/view/emptyelement~EmptyElement EmptyElements},\n// {@link module:engine/view/uielement~UIElement UIElements},\n// {@link module:engine/view/attributeelement~AttributeElement AttributeElements} or\n// {@link module:engine/view/containerelement~ContainerElement ContainerElements}.\n//\n// @param Iterable.<module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement\n// |module:engine/view/containerelement~ContainerElement> nodes\n// @param {Object} errorContext\nfunction validateNodesToInsert( nodes, errorContext ) {\n\tfor ( const node of nodes ) {\n\t\tif ( !validNodesToInsert.some( ( validNode => node instanceof validNode ) ) ) { // eslint-disable-line no-use-before-define\n\t\t\t/**\n\t\t\t * Inserted nodes should be valid to insert. of {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\n\t\t\t * {@link module:engine/view/containerelement~ContainerElement ContainerElement},\n\t\t\t * {@link module:engine/view/emptyelement~EmptyElement EmptyElement},\n\t\t\t * {@link module:engine/view/uielement~UIElement UIElement}, {@link module:engine/view/text~Text Text}.\n\t\t\t *\n\t\t\t * @error view-writer-insert-invalid-node\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-insert-invalid-node', errorContext );\n\t\t}\n\n\t\tif ( !node.is( 'text' ) ) {\n\t\t\tvalidateNodesToInsert( node.getChildren(), errorContext );\n\t\t}\n\t}\n}\n\nconst validNodesToInsert = [ Text, AttributeElement, ContainerElement, EmptyElement, UIElement ];\n\n// Checks if node is ContainerElement or DocumentFragment, because in most cases they should be treated the same way.\n//\n// @param {module:engine/view/node~Node} node\n// @returns {Boolean} Returns `true` if node is instance of ContainerElement or DocumentFragment.\nfunction isContainerOrFragment( node ) {\n\treturn node && ( node.is( 'containerElement' ) || node.is( 'documentFragment' ) );\n}\n\n// Checks if {@link module:engine/view/range~Range#start range start} and {@link module:engine/view/range~Range#end range end} are placed\n// inside same {@link module:engine/view/containerelement~ContainerElement container element}.\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when validation fails.\n//\n// @param {module:engine/view/range~Range} range\n// @param {Object} errorContext\nfunction validateRangeContainer( range, errorContext ) {\n\tconst startContainer = getParentContainer( range.start );\n\tconst endContainer = getParentContainer( range.end );\n\n\tif ( !startContainer || !endContainer || startContainer !== endContainer ) {\n\t\t/**\n\t\t * Range container is invalid. This can happen if {@link module:engine/view/range~Range#start range start} and\n\t\t * {@link module:engine/view/range~Range#end range end} positions are not placed inside same container or\n\t\t * parent container for these positions cannot be found.\n\t\t *\n\t\t * @error view-writer-invalid-range-container\n\t\t */\n\n\t\tthrow new CKEditorError( 'view-writer-invalid-range-container', errorContext );\n\t}\n}\n\n// Checks if two attribute elements can be joined together. Elements can be joined together if, and only if\n// they do not have ids specified.\n//\n// @private\n// @param {module:engine/view/element~Element} a\n// @param {module:engine/view/element~Element} b\n// @returns {Boolean}\nfunction canBeJoined( a, b ) {\n\treturn a.id === null && b.id === null;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/istext\n */\n\n/**\n * Checks if the object is a native DOM Text node.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isText( obj ) {\n\treturn Object.prototype.toString.call( obj ) == '[object Text]';\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\n\n/**\n * Set of utils related to block and inline fillers handling.\n *\n * Browsers do not allow to put caret in elements which does not have height. Because of it, we need to fill all\n * empty elements which should be selectable with elements or characters called \"fillers\". Unfortunately there is no one\n * universal filler, this is why two types are uses:\n *\n * * Block filler is an element which fill block elements, like `<p>`. CKEditor uses `<br>` as a block filler during the editing,\n * as browsers do natively. So instead of an empty `<p>` there will be `<p><br></p>`. The advantage of block filler is that\n * it is transparent for the selection, so when the caret is before the `<br>` and user presses right arrow he will be\n * moved to the next paragraph, not after the `<br>`. The disadvantage is that it breaks a block, so it can not be used\n * in the middle of a line of text. The {@link module:engine/view/filler~BR_FILLER `<br>` filler} can be replaced with any other\n * character in the data output, for instance {@link module:engine/view/filler~NBSP_FILLER non-breaking space}.\n *\n * * Inline filler is a filler which does not break a line of text, so it can be used inside the text, for instance in the empty\n * `<b>` surrendered by text: `foo<b></b>bar`, if we want to put the caret there. CKEditor uses a sequence of the zero-width\n * spaces as an {@link module:engine/view/filler~INLINE_FILLER inline filler} having the predetermined\n * {@link module:engine/view/filler~INLINE_FILLER_LENGTH length}. A sequence is used, instead of a single character to\n * avoid treating random zero-width spaces as the inline filler. Disadvantage of the inline filler is that it is not\n * transparent for the selection. The arrow key moves the caret between zero-width spaces characters, so the additional\n * code is needed to handle the caret.\n *\n * Both inline and block fillers are handled by the {@link module:engine/view/renderer~Renderer renderer} and are not present in the\n * view.\n *\n * @module engine/view/filler\n */\n\n/**\n * Non-breaking space filler creator. This is a function which creates `&nbsp;` text node.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~BR_FILLER\n * @function\n */\nexport const NBSP_FILLER = domDocument => domDocument.createTextNode( '\\u00A0' );\n\n/**\n * `<br>` filler creator. This is a function which creates `<br data-cke-filler=\"true\">` element.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~NBSP_FILLER\n * @function\n */\nexport const BR_FILLER = domDocument => {\n\tconst fillerBr = domDocument.createElement( 'br' );\n\tfillerBr.dataset.ckeFiller = true;\n\n\treturn fillerBr;\n};\n\n/**\n * Length of the {@link module:engine/view/filler~INLINE_FILLER INLINE_FILLER}.\n */\nexport const INLINE_FILLER_LENGTH = 7;\n\n/**\n * Inline filler which is a sequence of the zero width spaces.\n */\nexport const INLINE_FILLER = ( () => {\n\tlet inlineFiller = '';\n\n\tfor ( let i = 0; i < INLINE_FILLER_LENGTH; i++ ) {\n\t\tinlineFiller += '\\u200b';\n\t}\n\n\treturn inlineFiller;\n} )(); // Usu IIF so the INLINE_FILLER appears as a constant in the docs.\n\n/**\n * Checks if the node is a text node which starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( 'foo' ) ); // false\n *\t\tstartsWithFiller( document.createElement( 'p' ) ); // false\n *\n * @param {Node} domNode DOM node.\n * @returns {Boolean} True if the text node starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\nexport function startsWithFiller( domNode ) {\n\treturn isText( domNode ) && ( domNode.data.substr( 0, INLINE_FILLER_LENGTH ) === INLINE_FILLER );\n}\n\n/**\n * Checks if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // false\n *\n * @param {Text} domText DOM text node.\n * @returns {Boolean} True if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\nexport function isInlineFiller( domText ) {\n\treturn domText.data.length == INLINE_FILLER_LENGTH && startsWithFiller( domText );\n}\n\n/**\n * Get string data from the text node, removing an {@link module:engine/view/filler~INLINE_FILLER inline filler} from it,\n * if text node contains it.\n *\n *\t\tgetDataWithoutFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ) == 'foo' // true\n *\t\tgetDataWithoutFiller( document.createTextNode( 'foo' ) ) == 'foo' // true\n *\n * @param {Text} domText DOM text node, possible with inline filler.\n * @returns {String} Data without filler.\n */\nexport function getDataWithoutFiller( domText ) {\n\tif ( startsWithFiller( domText ) ) {\n\t\treturn domText.data.slice( INLINE_FILLER_LENGTH );\n\t} else {\n\t\treturn domText.data;\n\t}\n}\n\n/**\n * Assign key observer which move cursor from the end of the inline filler to the beginning of it when\n * the left arrow is pressed, so the filler does not break navigation.\n *\n * @param {module:engine/view/view~View} view View controller instance we should inject quirks handling on.\n */\nexport function injectQuirksHandling( view ) {\n\tview.document.on( 'keydown', jumpOverInlineFiller );\n}\n\n// Move cursor from the end of the inline filler to the beginning of it when, so the filler does not break navigation.\nfunction jumpOverInlineFiller( evt, data ) {\n\tif ( data.keyCode == keyCodes.arrowleft ) {\n\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n\t\tif ( domSelection.rangeCount == 1 && domSelection.getRangeAt( 0 ).collapsed ) {\n\t\t\tconst domParent = domSelection.getRangeAt( 0 ).startContainer;\n\t\t\tconst domOffset = domSelection.getRangeAt( 0 ).startOffset;\n\n\t\t\tif ( startsWithFiller( domParent ) && domOffset <= INLINE_FILLER_LENGTH ) {\n\t\t\t\tdomSelection.collapse( domParent, 0 );\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/fastdiff\n */\n\n/**\n * Finds positions of the first and last change in the given string/array and generates a set of changes:\n *\n *\t\tfastDiff( '12a', '12xyza' );\n *\t\t// [ { index: 2, type: 'insert', values: [ 'x', 'y', 'z' ] } ]\n *\n *\t\tfastDiff( '12a', '12aa' );\n *\t\t// [ { index: 3, type: 'insert', values: [ 'a' ] } ]\n *\n *\t\tfastDiff( '12xyza', '12a' );\n *\t\t// [ { index: 2, type: 'delete', howMany: 3 } ]\n *\n *\t\tfastDiff( [ '1', '2', 'a', 'a' ], [ '1', '2', 'a' ] );\n *\t\t// [ { index: 3, type: 'delete', howMany: 1 } ]\n *\n *\t\tfastDiff( [ '1', '2', 'a', 'b', 'c', '3' ], [ '2', 'a', 'b' ] );\n *\t\t// [ { index: 0, type: 'insert', values: [ '2', 'a', 'b' ] }, { index: 3, type: 'delete', howMany: 6 } ]\n *\n * Passed arrays can contain any type of data, however to compare them correctly custom comparator function\n * should be passed as a third parameter:\n *\n *\t\tfastDiff( [ { value: 1 }, { value: 2 } ], [ { value: 1 }, { value: 3 } ], ( a, b ) => {\n *\t\t\treturn a.value === b.value;\n *\t\t} );\n *\t\t// [ { index: 1, type: 'insert', values: [ { value: 3 } ] }, { index: 2, type: 'delete', howMany: 1 } ]\n *\n * The resulted set of changes can be applied to the input in order to transform it into the output, for example:\n *\n *\t\tlet input = '12abc3';\n *\t\tconst output = '2ab';\n *\t\tconst changes = fastDiff( input, output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput = input.substring( 0, change.index ) + change.values.join( '' ) + input.substring( change.index );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput = input.substring( 0, change.index ) + input.substring( change.index + change.howMany );\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// input equals output now\n *\n * or in case of arrays:\n *\n *\t\tlet input = [ '1', '2', 'a', 'b', 'c', '3' ];\n *\t\tconst output = [ '2', 'a', 'b' ];\n *\t\tconst changes = fastDiff( input, output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput = input.slice( 0, change.index ).concat( change.values, input.slice( change.index ) );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput = input.slice( 0, change.index ).concat( input.slice( change.index + change.howMany ) );\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// input equals output now\n *\n * By passing `true` as the fourth parameter (`atomicChanges`) the output of this function will become compatible with\n * the {@link module:utils/diff~diff `diff()`} function:\n *\n *\t\tfastDiff( '12a', '12xyza' );\n *\t\t// [ 'equal', 'equal', 'insert', 'insert', 'insert', 'equal' ]\n *\n * The default output format of this function is compatible with the output format of\n * {@link module:utils/difftochanges~diffToChanges `diffToChanges()`}. The `diffToChanges()` input format is, in turn,\n * compatible with the output of {@link module:utils/diff~diff `diff()`}:\n *\n *\t\tconst a = '1234';\n *\t\tconst b = '12xyz34';\n *\n *\t\t// Both calls will return the same results (grouped changes format).\n *\t\tfastDiff( a, b );\n *\t\tdiffToChanges( diff( a, b ) );\n *\n *\t\t// Again, both calls will return the same results (atomic changes format).\n *\t\tfastDiff( a, b, null, true );\n *\t\tdiff( a, b );\n *\n *\n * @param {Array|String} a Input array or string.\n * @param {Array|String} b Input array or string.\n * @param {Function} [cmp] Optional function used to compare array values, by default `===` (strict equal operator) is used.\n * @param {Boolean} [atomicChanges=false] Whether an array of `inset|delete|equal` operations should\n * be returned instead of changes set. This makes this function compatible with {@link module:utils/diff~diff `diff()`}.\n * @returns {Array} Array of changes.\n */\nexport default function fastDiff( a, b, cmp, atomicChanges = false ) {\n\t// Set the comparator function.\n\tcmp = cmp || function( a, b ) {\n\t\treturn a === b;\n\t};\n\n\t// Convert the string (or any array-like object - eg. NodeList) to an array by using the slice() method because,\n\t// unlike Array.from(), it returns array of UTF-16 code units instead of the code points of a string.\n\t// One code point might be a surrogate pair of two code units. All text offsets are expected to be in code units.\n\t// See ckeditor/ckeditor5#3147.\n\t//\n\t// We need to make sure here that fastDiff() works identical to diff().\n\tif ( !Array.isArray( a ) ) {\n\t\ta = Array.prototype.slice.call( a );\n\t}\n\n\tif ( !Array.isArray( b ) ) {\n\t\tb = Array.prototype.slice.call( b );\n\t}\n\n\t// Find first and last change.\n\tconst changeIndexes = findChangeBoundaryIndexes( a, b, cmp );\n\n\t// Transform into changes array.\n\treturn atomicChanges ? changeIndexesToAtomicChanges( changeIndexes, b.length ) : changeIndexesToChanges( b, changeIndexes );\n}\n\n// Finds position of the first and last change in the given arrays. For example:\n//\n//\t\tconst indexes = findChangeBoundaryIndexes( [ '1', '2', '3', '4' ], [ '1', '3', '4', '2', '4' ] );\n//\t\tconsole.log( indexes ); // { firstIndex: 1, lastIndexOld: 3, lastIndexNew: 4 }\n//\n// The above indexes means that in the first array the modified part is `1[23]4` and in the second array it is `1[342]4`.\n// Based on such indexes, array with `insert`/`delete` operations which allows transforming first value into the second one\n// can be generated.\n//\n// @param {Array} arr1\n// @param {Array} arr2\n// @param {Function} cmp Comparator function.\n// @returns {Object}\n// @returns {Number} return.firstIndex Index of the first change in both values (always the same for both).\n// @returns {Number} result.lastIndexOld Index of the last common value in `arr1`.\n// @returns {Number} result.lastIndexNew Index of the last common value in `arr2`.\nfunction findChangeBoundaryIndexes( arr1, arr2, cmp ) {\n\t// Find the first difference between passed values.\n\tconst firstIndex = findFirstDifferenceIndex( arr1, arr2, cmp );\n\n\t// If arrays are equal return -1 indexes object.\n\tif ( firstIndex === -1 ) {\n\t\treturn { firstIndex: -1, lastIndexOld: -1, lastIndexNew: -1 };\n\t}\n\n\t// Remove the common part of each value and reverse them to make it simpler to find the last difference between them.\n\tconst oldArrayReversed = cutAndReverse( arr1, firstIndex );\n\tconst newArrayReversed = cutAndReverse( arr2, firstIndex );\n\n\t// Find the first difference between reversed values.\n\t// It should be treated as \"how many elements from the end the last difference occurred\".\n\t//\n\t// For example:\n\t//\n\t// \t\t\t\tinitial\t->\tafter cut\t-> reversed:\n\t// oldValue:\t'321ba'\t->\t'21ba'\t\t-> 'ab12'\n\t// newValue:\t'31xba'\t->\t'1xba'\t\t-> 'abx1'\n\t// lastIndex:\t\t\t\t\t\t\t-> 2\n\t//\n\t// So the last change occurred two characters from the end of the arrays.\n\tconst lastIndex = findFirstDifferenceIndex( oldArrayReversed, newArrayReversed, cmp );\n\n\t// Use `lastIndex` to calculate proper offset, starting from the beginning (`lastIndex` kind of starts from the end).\n\tconst lastIndexOld = arr1.length - lastIndex;\n\tconst lastIndexNew = arr2.length - lastIndex;\n\n\treturn { firstIndex, lastIndexOld, lastIndexNew };\n}\n\n// Returns a first index on which given arrays differ. If both arrays are the same, -1 is returned.\n//\n// @param {Array} arr1\n// @param {Array} arr2\n// @param {Function} cmp Comparator function.\n// @returns {Number}\nfunction findFirstDifferenceIndex( arr1, arr2, cmp ) {\n\tfor ( let i = 0; i < Math.max( arr1.length, arr2.length ); i++ ) {\n\t\tif ( arr1[ i ] === undefined || arr2[ i ] === undefined || !cmp( arr1[ i ], arr2[ i ] ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1; // Return -1 if arrays are equal.\n}\n\n// Returns a copy of the given array with `howMany` elements removed starting from the beginning and in reversed order.\n//\n// @param {Array} arr Array to be processed.\n// @param {Number} howMany How many elements from array beginning to remove.\n// @returns {Array} Shortened and reversed array.\nfunction cutAndReverse( arr, howMany ) {\n\treturn arr.slice( howMany ).reverse();\n}\n\n// Generates changes array based on change indexes from `findChangeBoundaryIndexes` function. This function will\n// generate array with 0 (no changes), 1 (deletion or insertion) or 2 records (insertion and deletion).\n//\n// @param {Array} newArray New array for which change indexes were calculated.\n// @param {Object} changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\n// @returns {Array.<Object>} Array of changes compatible with {@link module:utils/difftochanges~diffToChanges} format.\nfunction changeIndexesToChanges( newArray, changeIndexes ) {\n\tconst result = [];\n\tconst { firstIndex, lastIndexOld, lastIndexNew } = changeIndexes;\n\n\t// Order operations as 'insert', 'delete' array to keep compatibility with {@link module:utils/difftochanges~diffToChanges}\n\t// in most cases. However, 'diffToChanges' does not stick to any order so in some cases\n\t// (for example replacing '12345' with 'abcd') it will generate 'delete', 'insert' order.\n\tif ( lastIndexNew - firstIndex > 0 ) {\n\t\tresult.push( {\n\t\t\tindex: firstIndex,\n\t\t\ttype: 'insert',\n\t\t\tvalues: newArray.slice( firstIndex, lastIndexNew )\n\t\t} );\n\t}\n\n\tif ( lastIndexOld - firstIndex > 0 ) {\n\t\tresult.push( {\n\t\t\tindex: firstIndex + ( lastIndexNew - firstIndex ), // Increase index of what was inserted.\n\t\t\ttype: 'delete',\n\t\t\thowMany: lastIndexOld - firstIndex\n\t\t} );\n\t}\n\n\treturn result;\n}\n\n// Generates array with set `equal|insert|delete` operations based on change indexes from `findChangeBoundaryIndexes` function.\n//\n// @param {Object} changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\n// @param {Number} newLength Length of the new array on which `findChangeBoundaryIndexes` calculated change indexes.\n// @returns {Array.<String>} Array of changes compatible with {@link module:utils/diff~diff} format.\nfunction changeIndexesToAtomicChanges( changeIndexes, newLength ) {\n\tconst { firstIndex, lastIndexOld, lastIndexNew } = changeIndexes;\n\n\t// No changes.\n\tif ( firstIndex === -1 ) {\n\t\treturn Array( newLength ).fill( 'equal' );\n\t}\n\n\tlet result = [];\n\tif ( firstIndex > 0 ) {\n\t\tresult = result.concat( Array( firstIndex ).fill( 'equal' ) );\n\t}\n\n\tif ( lastIndexNew - firstIndex > 0 ) {\n\t\tresult = result.concat( Array( lastIndexNew - firstIndex ).fill( 'insert' ) );\n\t}\n\n\tif ( lastIndexOld - firstIndex > 0 ) {\n\t\tresult = result.concat( Array( lastIndexOld - firstIndex ).fill( 'delete' ) );\n\t}\n\n\tif ( lastIndexNew < newLength ) {\n\t\tresult = result.concat( Array( newLength - lastIndexNew ).fill( 'equal' ) );\n\t}\n\n\treturn result;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/diff\n */\n\nimport fastDiff from '../src/fastdiff';\n\n// The following code is based on the \"O(NP) Sequence Comparison Algorithm\"\n// by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n\n/**\n * Calculates the difference between two arrays or strings producing an array containing a list of changes\n * necessary to transform input into output.\n *\n *\t\tdiff( 'aba', 'acca' ); // [ 'equal', 'insert', 'insert', 'delete', 'equal' ]\n *\n * This function is based on the \"O(NP) Sequence Comparison Algorithm\" by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n * Unfortunately, while it gives the most precise results, its to complex for longer strings/arrow (above 200 items).\n * Therefore, `diff()` automatically switches to {@link module:utils/fastdiff~fastDiff `fastDiff()`} when detecting\n * such a scenario. The return formats of both functions are identical.\n *\n * @param {Array|String} a Input array or string.\n * @param {Array|String} b Output array or string.\n * @param {Function} [cmp] Optional function used to compare array values, by default === is used.\n * @returns {Array} Array of changes.\n */\nexport default function diff( a, b, cmp ) {\n\t// Set the comparator function.\n\tcmp = cmp || function( a, b ) {\n\t\treturn a === b;\n\t};\n\n\tconst aLength = a.length;\n\tconst bLength = b.length;\n\n\t// Perform `fastDiff` for longer strings/arrays (see #269).\n\tif ( aLength > 200 || bLength > 200 || aLength + bLength > 300 ) {\n\t\treturn diff.fastDiff( a, b, cmp, true );\n\t}\n\n\t// Temporary action type statics.\n\tlet _insert, _delete;\n\n\t// Swapped the arrays to use the shorter one as the first one.\n\tif ( bLength < aLength ) {\n\t\tconst tmp = a;\n\n\t\ta = b;\n\t\tb = tmp;\n\n\t\t// We swap the action types as well.\n\t\t_insert = 'delete';\n\t\t_delete = 'insert';\n\t} else {\n\t\t_insert = 'insert';\n\t\t_delete = 'delete';\n\t}\n\n\tconst m = a.length;\n\tconst n = b.length;\n\tconst delta = n - m;\n\n\t// Edit scripts, for each diagonal.\n\tconst es = {};\n\t// Furthest points, the furthest y we can get on each diagonal.\n\tconst fp = {};\n\n\tfunction snake( k ) {\n\t\t// We use -1 as an alternative below to handle initial values ( instead of filling the fp with -1 first ).\n\t\t// Furthest points (y) on the diagonal below k.\n\t\tconst y1 = ( fp[ k - 1 ] !== undefined ? fp[ k - 1 ] : -1 ) + 1;\n\t\t// Furthest points (y) on the diagonal above k.\n\t\tconst y2 = fp[ k + 1 ] !== undefined ? fp[ k + 1 ] : -1;\n\t\t// The way we should go to get further.\n\t\tconst dir = y1 > y2 ? -1 : 1;\n\n\t\t// Clone previous changes array (if any).\n\t\tif ( es[ k + dir ] ) {\n\t\t\tes[ k ] = es[ k + dir ].slice( 0 );\n\t\t}\n\n\t\t// Create changes array.\n\t\tif ( !es[ k ] ) {\n\t\t\tes[ k ] = [];\n\t\t}\n\n\t\t// Push the action.\n\t\tes[ k ].push( y1 > y2 ? _insert : _delete );\n\n\t\t// Set the beginning coordinates.\n\t\tlet y = Math.max( y1, y2 );\n\t\tlet x = y - k;\n\n\t\t// Traverse the diagonal as long as the values match.\n\t\twhile ( x < m && y < n && cmp( a[ x ], b[ y ] ) ) {\n\t\t\tx++;\n\t\t\ty++;\n\t\t\t// Push no change action.\n\t\t\tes[ k ].push( 'equal' );\n\t\t}\n\n\t\treturn y;\n\t}\n\n\tlet p = 0;\n\tlet k;\n\n\t// Traverse the graph until we reach the end of the longer string.\n\tdo {\n\t\t// Updates furthest points and edit scripts for diagonals below delta.\n\t\tfor ( k = -p; k < delta; k++ ) {\n\t\t\tfp[ k ] = snake( k );\n\t\t}\n\n\t\t// Updates furthest points and edit scripts for diagonals above delta.\n\t\tfor ( k = delta + p; k > delta; k-- ) {\n\t\t\tfp[ k ] = snake( k );\n\t\t}\n\n\t\t// Updates furthest point and edit script for the delta diagonal.\n\t\t// note that the delta diagonal is the one which goes through the sink (m, n).\n\t\tfp[ delta ] = snake( delta );\n\n\t\tp++;\n\t} while ( fp[ delta ] !== n );\n\n\t// Return the final list of edit changes.\n\t// We remove the first item that represents the action for the injected nulls.\n\treturn es[ delta ].slice( 1 );\n}\n\n// Store the API in static property to easily overwrite it in tests.\n// Too bad dependency injection does not work in Webpack + ES 6 (const) + Babel.\ndiff.fastDiff = fastDiff;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/insertat\n */\n\n/**\n * Inserts node to the parent at given index.\n *\n * @param {Element} parentElement Parent element.\n * @param {Number} index Insertions index.\n * @param {Node} nodeToInsert Node to insert.\n */\nexport default function insertAt( parentElement, index, nodeToInsert ) {\n\tparentElement.insertBefore( nodeToInsert, parentElement.childNodes[ index ] || null );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/remove\n */\n\n/**\n * Removes given node from parent.\n *\n * @param {Node} node Node to remove.\n */\nexport default function remove( node ) {\n\tconst parent = node.parentNode;\n\n\tif ( parent ) {\n\t\tparent.removeChild( node );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/isnode\n */\n\n/**\n * Checks if the object is a native DOM Node.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isNode( obj ) {\n\tif ( obj ) {\n\t\tif ( obj.defaultView ) {\n\t\t\treturn obj instanceof obj.defaultView.Document;\n\t\t} else if ( obj.ownerDocument && obj.ownerDocument.defaultView ) {\n\t\t\treturn obj instanceof obj.ownerDocument.defaultView.Node;\n\t\t}\n\t}\n\n\treturn false;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals Node */\n\n/**\n * @module engine/view/renderer\n */\n\nimport ViewText from './text';\nimport ViewPosition from './position';\nimport { INLINE_FILLER, INLINE_FILLER_LENGTH, startsWithFiller, isInlineFiller } from './filler';\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport insertAt from '@ckeditor/ckeditor5-utils/src/dom/insertat';\nimport remove from '@ckeditor/ckeditor5-utils/src/dom/remove';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\nimport isNode from '@ckeditor/ckeditor5-utils/src/dom/isnode';\nimport fastDiff from '@ckeditor/ckeditor5-utils/src/fastdiff';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * Renderer is responsible for updating the DOM structure and the DOM selection based on\n * the {@link module:engine/view/renderer~Renderer#markToSync information about updated view nodes}.\n * In other words, it renders the view to the DOM.\n *\n * Its main responsibility is to make only the necessary, minimal changes to the DOM. However, unlike in many\n * virtual DOM implementations, the primary reason for doing minimal changes is not the performance but ensuring\n * that native editing features such as text composition, autocompletion, spell checking, selection's x-index are\n * affected as little as possible.\n *\n * Renderer uses {@link module:engine/view/domconverter~DomConverter} to transform view nodes and positions\n * to and from the DOM.\n */\nexport default class Renderer {\n\t/**\n\t * Creates a renderer instance.\n\t *\n\t * @param {module:engine/view/domconverter~DomConverter} domConverter Converter instance.\n\t * @param {module:engine/view/documentselection~DocumentSelection} selection View selection.\n\t */\n\tconstructor( domConverter, selection ) {\n\t\t/**\n\t\t * Set of DOM Documents instances.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<Document>}\n\t\t */\n\t\tthis.domDocuments = new Set();\n\n\t\t/**\n\t\t * Converter instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis.domConverter = domConverter;\n\n\t\t/**\n\t\t * Set of nodes which attributes changed and may need to be rendered.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis.markedAttributes = new Set();\n\n\t\t/**\n\t\t * Set of elements which child lists changed and may need to be rendered.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis.markedChildren = new Set();\n\n\t\t/**\n\t\t * Set of text nodes which text data changed and may need to be rendered.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis.markedTexts = new Set();\n\n\t\t/**\n\t\t * View selection. Renderer updates DOM selection based on the view selection.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/documentselection~DocumentSelection}\n\t\t */\n\t\tthis.selection = selection;\n\n\t\t/**\n\t\t * Indicates if the view document is focused and selection can be rendered. Selection will not be rendered if\n\t\t * this is set to `false`.\n\t\t *\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.isFocused = false;\n\n\t\t/**\n\t\t * The text node in which the inline filler was rendered.\n\t\t *\n\t\t * @private\n\t\t * @member {Text}\n\t\t */\n\t\tthis._inlineFiller = null;\n\n\t\t/**\n\t\t * DOM element containing fake selection.\n\t\t *\n\t\t * @private\n\t\t * @type {null|HTMLElement}\n\t\t */\n\t\tthis._fakeSelectionContainer = null;\n\t}\n\n\t/**\n\t * Marks a view node to be updated in the DOM by {@link #render `render()`}.\n\t *\n\t * Note that only view nodes whose parents have corresponding DOM elements need to be marked to be synchronized.\n\t *\n\t * @see #markedAttributes\n\t * @see #markedChildren\n\t * @see #markedTexts\n\t *\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\n\t * @param {module:engine/view/node~Node} node Node to be marked.\n\t */\n\tmarkToSync( type, node ) {\n\t\tif ( type === 'text' ) {\n\t\t\tif ( this.domConverter.mapViewToDom( node.parent ) ) {\n\t\t\t\tthis.markedTexts.add( node );\n\t\t\t}\n\t\t} else {\n\t\t\t// If the node has no DOM element it is not rendered yet,\n\t\t\t// its children/attributes do not need to be marked to be sync.\n\t\t\tif ( !this.domConverter.mapViewToDom( node ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( type === 'attributes' ) {\n\t\t\t\tthis.markedAttributes.add( node );\n\t\t\t} else if ( type === 'children' ) {\n\t\t\t\tthis.markedChildren.add( node );\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * Unknown type passed to Renderer.markToSync.\n\t\t\t\t *\n\t\t\t\t * @error renderer-unknown-type\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'view-renderer-unknown-type: Unknown type passed to Renderer.markToSync.', this );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Renders all buffered changes ({@link #markedAttributes}, {@link #markedChildren} and {@link #markedTexts}) and\n\t * the current view selection (if needed) to the DOM by applying a minimal set of changes to it.\n\t *\n\t * Renderer tries not to break the text composition (e.g. IME) and x-index of the selection,\n\t * so it does as little as it is needed to update the DOM.\n\t *\n\t * Renderer also handles {@link module:engine/view/filler fillers}. Especially, it checks if the inline filler is needed\n\t * at the selection position and adds or removes it. To prevent breaking text composition inline filler will not be\n\t * removed as long as the selection is in the text node which needed it at first.\n\t */\n\trender() {\n\t\tlet inlineFillerPosition;\n\n\t\t// Refresh mappings.\n\t\tfor ( const element of this.markedChildren ) {\n\t\t\tthis._updateChildrenMappings( element );\n\t\t}\n\n\t\t// There was inline filler rendered in the DOM but it's not\n\t\t// at the selection position any more, so we can remove it\n\t\t// (cause even if it's needed, it must be placed in another location).\n\t\tif ( this._inlineFiller && !this._isSelectionInInlineFiller() ) {\n\t\t\tthis._removeInlineFiller();\n\t\t}\n\n\t\t// If we've got the filler, let's try to guess its position in the view.\n\t\tif ( this._inlineFiller ) {\n\t\t\tinlineFillerPosition = this._getInlineFillerPosition();\n\t\t}\n\t\t// Otherwise, if it's needed, create it at the selection position.\n\t\telse if ( this._needsInlineFillerAtSelection() ) {\n\t\t\tinlineFillerPosition = this.selection.getFirstPosition();\n\n\t\t\t// Do not use `markToSync` so it will be added even if the parent is already added.\n\t\t\tthis.markedChildren.add( inlineFillerPosition.parent );\n\t\t}\n\n\t\tfor ( const element of this.markedAttributes ) {\n\t\t\tthis._updateAttrs( element );\n\t\t}\n\n\t\tfor ( const element of this.markedChildren ) {\n\t\t\tthis._updateChildren( element, { inlineFillerPosition } );\n\t\t}\n\n\t\tfor ( const node of this.markedTexts ) {\n\t\t\tif ( !this.markedChildren.has( node.parent ) && this.domConverter.mapViewToDom( node.parent ) ) {\n\t\t\t\tthis._updateText( node, { inlineFillerPosition } );\n\t\t\t}\n\t\t}\n\n\t\t// Check whether the inline filler is required and where it really is in the DOM.\n\t\t// At this point in most cases it will be in the DOM, but there are exceptions.\n\t\t// For example, if the inline filler was deep in the created DOM structure, it will not be created.\n\t\t// Similarly, if it was removed at the beginning of this function and then neither text nor children were updated,\n\t\t// it will not be present.\n\t\t// Fix those and similar scenarios.\n\t\tif ( inlineFillerPosition ) {\n\t\t\tconst fillerDomPosition = this.domConverter.viewPositionToDom( inlineFillerPosition );\n\t\t\tconst domDocument = fillerDomPosition.parent.ownerDocument;\n\n\t\t\tif ( !startsWithFiller( fillerDomPosition.parent ) ) {\n\t\t\t\t// Filler has not been created at filler position. Create it now.\n\t\t\t\tthis._inlineFiller = addInlineFiller( domDocument, fillerDomPosition.parent, fillerDomPosition.offset );\n\t\t\t} else {\n\t\t\t\t// Filler has been found, save it.\n\t\t\t\tthis._inlineFiller = fillerDomPosition.parent;\n\t\t\t}\n\t\t} else {\n\t\t\t// There is no filler needed.\n\t\t\tthis._inlineFiller = null;\n\t\t}\n\n\t\tthis._updateSelection();\n\t\tthis._updateFocus();\n\n\t\tthis.markedTexts.clear();\n\t\tthis.markedAttributes.clear();\n\t\tthis.markedChildren.clear();\n\t}\n\n\t/**\n\t * Updates mappings of view element's children.\n\t *\n\t * Children that were replaced in the view structure by similar elements (same tag name) are treated as 'replaced'.\n\t * This means that their mappings can be updated so the new view elements are mapped to the existing DOM elements.\n\t * Thanks to that these elements do not need to be re-rendered completely.\n\t *\n\t * @private\n\t * @param {module:engine/view/node~Node} viewElement The view element whose children mappings will be updated.\n\t */\n\t_updateChildrenMappings( viewElement ) {\n\t\tconst domElement = this.domConverter.mapViewToDom( viewElement );\n\n\t\tif ( !domElement ) {\n\t\t\t// If there is no `domElement` it means that it was already removed from DOM and there is no need to process it.\n\t\t\treturn;\n\t\t}\n\n\t\tconst actualDomChildren = this.domConverter.mapViewToDom( viewElement ).childNodes;\n\t\tconst expectedDomChildren = Array.from(\n\t\t\tthis.domConverter.viewChildrenToDom( viewElement, domElement.ownerDocument, { withChildren: false } )\n\t\t);\n\t\tconst diff = this._diffNodeLists( actualDomChildren, expectedDomChildren );\n\t\tconst actions = this._findReplaceActions( diff, actualDomChildren, expectedDomChildren );\n\n\t\tif ( actions.indexOf( 'replace' ) !== -1 ) {\n\t\t\tconst counter = { equal: 0, insert: 0, delete: 0 };\n\n\t\t\tfor ( const action of actions ) {\n\t\t\t\tif ( action === 'replace' ) {\n\t\t\t\t\tconst insertIndex = counter.equal + counter.insert;\n\t\t\t\t\tconst deleteIndex = counter.equal + counter.delete;\n\t\t\t\t\tconst viewChild = viewElement.getChild( insertIndex );\n\n\t\t\t\t\t// The 'uiElement' is a special one and its children are not stored in a view (#799),\n\t\t\t\t\t// so we cannot use it with replacing flow (since it uses view children during rendering\n\t\t\t\t\t// which will always result in rendering empty element).\n\t\t\t\t\tif ( viewChild && !viewChild.is( 'uiElement' ) ) {\n\t\t\t\t\t\tthis._updateElementMappings( viewChild, actualDomChildren[ deleteIndex ] );\n\t\t\t\t\t}\n\n\t\t\t\t\tremove( expectedDomChildren[ insertIndex ] );\n\t\t\t\t\tcounter.equal++;\n\t\t\t\t} else {\n\t\t\t\t\tcounter[ action ]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates mappings of a given view element.\n\t *\n\t * @private\n\t * @param {module:engine/view/node~Node} viewElement The view element whose mappings will be updated.\n\t * @param {Node} domElement The DOM element representing the given view element.\n\t */\n\t_updateElementMappings( viewElement, domElement ) {\n\t\t// Remap 'DomConverter' bindings.\n\t\tthis.domConverter.unbindDomElement( domElement );\n\t\tthis.domConverter.bindElements( domElement, viewElement );\n\n\t\t// View element may have children which needs to be updated, but are not marked, mark them to update.\n\t\tthis.markedChildren.add( viewElement );\n\n\t\t// Because we replace new view element mapping with the existing one, the corresponding DOM element\n\t\t// will not be rerendered. The new view element may have different attributes than the previous one.\n\t\t// Since its corresponding DOM element will not be rerendered, new attributes will not be added\n\t\t// to the DOM, so we need to mark it here to make sure its attributes gets updated. See #1427 for more\n\t\t// detailed case study.\n\t\t// Also there are cases where replaced element is removed from the view structure and then has\n\t\t// its attributes changed or removed. In such cases the element will not be present in `markedAttributes`\n\t\t// and also may be the same (`element.isSimilar()`) as the reused element not having its attributes updated.\n\t\t// To prevent such situations we always mark reused element to have its attributes rerenderd (#1560).\n\t\tthis.markedAttributes.add( viewElement );\n\t}\n\n\t/**\n\t * Gets the position of the inline filler based on the current selection.\n\t * Here, we assume that we know that the filler is needed and\n\t * {@link #_isSelectionInInlineFiller is at the selection position}, and, since it is needed,\n\t * it is somewhere at the selection position.\n\t *\n\t * Note: The filler position cannot be restored based on the filler's DOM text node, because\n\t * when this method is called (before rendering), the bindings will often be broken. View-to-DOM\n\t * bindings are only dependable after rendering.\n\t *\n\t * @private\n\t * @returns {module:engine/view/position~Position}\n\t */\n\t_getInlineFillerPosition() {\n\t\tconst firstPos = this.selection.getFirstPosition();\n\n\t\tif ( firstPos.parent.is( 'text' ) ) {\n\t\t\treturn ViewPosition._createBefore( this.selection.getFirstPosition().parent );\n\t\t} else {\n\t\t\treturn firstPos;\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if the selection has not left the inline filler's text node.\n\t * If it is `true`, it means that the filler had been added for a reason and the selection did not\n\t * leave the filler's text node. For example, the user can be in the middle of a composition so it should not be touched.\n\t *\n\t * @private\n\t * @returns {Boolean} `true` if the inline filler and selection are in the same place.\n\t */\n\t_isSelectionInInlineFiller() {\n\t\tif ( this.selection.rangeCount != 1 || !this.selection.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Note, we can't check if selection's position equals position of the\n\t\t// this._inlineFiller node, because of #663. We may not be able to calculate\n\t\t// the filler's position in the view at this stage.\n\t\t// Instead, we check it the other way – whether selection is anchored in\n\t\t// that text node or next to it.\n\n\t\t// Possible options are:\n\t\t// \"FILLER{}\"\n\t\t// \"FILLERadded-text{}\"\n\t\tconst selectionPosition = this.selection.getFirstPosition();\n\t\tconst position = this.domConverter.viewPositionToDom( selectionPosition );\n\n\t\tif ( position && isText( position.parent ) && startsWithFiller( position.parent ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Removes the inline filler.\n\t *\n\t * @private\n\t */\n\t_removeInlineFiller() {\n\t\tconst domFillerNode = this._inlineFiller;\n\n\t\t// Something weird happened and the stored node doesn't contain the filler's text.\n\t\tif ( !startsWithFiller( domFillerNode ) ) {\n\t\t\t/**\n\t\t\t * The inline filler node was lost. Most likely, something overwrote the filler text node\n\t\t\t * in the DOM.\n\t\t\t *\n\t\t\t * @error view-renderer-filler-was-lost\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-renderer-filler-was-lost: The inline filler node was lost.', this );\n\t\t}\n\n\t\tif ( isInlineFiller( domFillerNode ) ) {\n\t\t\tdomFillerNode.parentNode.removeChild( domFillerNode );\n\t\t} else {\n\t\t\tdomFillerNode.data = domFillerNode.data.substr( INLINE_FILLER_LENGTH );\n\t\t}\n\n\t\tthis._inlineFiller = null;\n\t}\n\n\t/**\n\t * Checks if the inline {@link module:engine/view/filler filler} should be added.\n\t *\n\t * @private\n\t * @returns {Boolean} `true` if the inline filler should be added.\n\t */\n\t_needsInlineFillerAtSelection() {\n\t\tif ( this.selection.rangeCount != 1 || !this.selection.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst selectionPosition = this.selection.getFirstPosition();\n\t\tconst selectionParent = selectionPosition.parent;\n\t\tconst selectionOffset = selectionPosition.offset;\n\n\t\t// If there is no DOM root we do not care about fillers.\n\t\tif ( !this.domConverter.mapViewToDom( selectionParent.root ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( !( selectionParent.is( 'element' ) ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Prevent adding inline filler inside elements with contenteditable=false.\n\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/1170\n\t\tif ( !isEditable( selectionParent ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have block filler, we do not need inline one.\n\t\tif ( selectionOffset === selectionParent.getFillerOffset() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst nodeBefore = selectionPosition.nodeBefore;\n\t\tconst nodeAfter = selectionPosition.nodeAfter;\n\n\t\tif ( nodeBefore instanceof ViewText || nodeAfter instanceof ViewText ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks if text needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} viewText View text to update.\n\t * @param {Object} options\n\t * @param {module:engine/view/position~Position} options.inlineFillerPosition The position where the inline\n\t * filler should be rendered.\n\t */\n\t_updateText( viewText, options ) {\n\t\tconst domText = this.domConverter.findCorrespondingDomText( viewText );\n\t\tconst newDomText = this.domConverter.viewToDom( viewText, domText.ownerDocument );\n\n\t\tconst actualText = domText.data;\n\t\tlet expectedText = newDomText.data;\n\n\t\tconst filler = options.inlineFillerPosition;\n\n\t\tif ( filler && filler.parent == viewText.parent && filler.offset == viewText.index ) {\n\t\t\texpectedText = INLINE_FILLER + expectedText;\n\t\t}\n\n\t\tif ( actualText != expectedText ) {\n\t\t\tconst actions = fastDiff( actualText, expectedText );\n\n\t\t\tfor ( const action of actions ) {\n\t\t\t\tif ( action.type === 'insert' ) {\n\t\t\t\t\tdomText.insertData( action.index, action.values.join( '' ) );\n\t\t\t\t} else { // 'delete'\n\t\t\t\t\tdomText.deleteData( action.index, action.howMany );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if attribute list needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewElement The view element to update.\n\t */\n\t_updateAttrs( viewElement ) {\n\t\tconst domElement = this.domConverter.mapViewToDom( viewElement );\n\n\t\tif ( !domElement ) {\n\t\t\t// If there is no `domElement` it means that 'viewElement' is outdated as its mapping was updated\n\t\t\t// in 'this._updateChildrenMappings()'. There is no need to process it as new view element which\n\t\t\t// replaced old 'viewElement' mapping was also added to 'this.markedAttributes'\n\t\t\t// in 'this._updateChildrenMappings()' so it will be processed separately.\n\t\t\treturn;\n\t\t}\n\n\t\tconst domAttrKeys = Array.from( domElement.attributes ).map( attr => attr.name );\n\t\tconst viewAttrKeys = viewElement.getAttributeKeys();\n\n\t\t// Add or overwrite attributes.\n\t\tfor ( const key of viewAttrKeys ) {\n\t\t\tdomElement.setAttribute( key, viewElement.getAttribute( key ) );\n\t\t}\n\n\t\t// Remove from DOM attributes which do not exists in the view.\n\t\tfor ( const key of domAttrKeys ) {\n\t\t\tif ( !viewElement.hasAttribute( key ) ) {\n\t\t\t\tdomElement.removeAttribute( key );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if elements child list needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewElement View element to update.\n\t * @param {Object} options\n\t * @param {module:engine/view/position~Position} options.inlineFillerPosition The position where the inline\n\t * filler should be rendered.\n\t */\n\t_updateChildren( viewElement, options ) {\n\t\tconst domElement = this.domConverter.mapViewToDom( viewElement );\n\n\t\tif ( !domElement ) {\n\t\t\t// If there is no `domElement` it means that it was already removed from DOM.\n\t\t\t// There is no need to process it. It will be processed when re-inserted.\n\t\t\treturn;\n\t\t}\n\n\t\tconst inlineFillerPosition = options.inlineFillerPosition;\n\t\tconst actualDomChildren = this.domConverter.mapViewToDom( viewElement ).childNodes;\n\t\tconst expectedDomChildren = Array.from(\n\t\t\tthis.domConverter.viewChildrenToDom( viewElement, domElement.ownerDocument, { bind: true, inlineFillerPosition } )\n\t\t);\n\n\t\t// Inline filler element has to be created as it is present in the DOM, but not in the view. It is required\n\t\t// during diffing so text nodes could be compared correctly and also during rendering to maintain\n\t\t// proper order and indexes while updating the DOM.\n\t\tif ( inlineFillerPosition && inlineFillerPosition.parent === viewElement ) {\n\t\t\taddInlineFiller( domElement.ownerDocument, expectedDomChildren, inlineFillerPosition.offset );\n\t\t}\n\n\t\tconst diff = this._diffNodeLists( actualDomChildren, expectedDomChildren );\n\n\t\tlet i = 0;\n\t\tconst nodesToUnbind = new Set();\n\n\t\t// Handle deletions first.\n\t\t// This is to prevent a situation where an element that already exists in `actualDomChildren` is inserted at a different\n\t\t// index in `actualDomChildren`. Since `actualDomChildren` is a `NodeList`, this works like move, not like an insert,\n\t\t// and it disrupts the whole algorithm. See https://github.com/ckeditor/ckeditor5/issues/6367.\n\t\t//\n\t\t// It doesn't matter in what order we remove or add nodes, as long as we remove and add correct nodes at correct indexes.\n\t\tfor ( const action of diff ) {\n\t\t\tif ( action === 'delete' ) {\n\t\t\t\tnodesToUnbind.add( actualDomChildren[ i ] );\n\t\t\t\tremove( actualDomChildren[ i ] );\n\t\t\t} else if ( action === 'equal' ) {\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\ti = 0;\n\n\t\tfor ( const action of diff ) {\n\t\t\tif ( action === 'insert' ) {\n\t\t\t\tinsertAt( domElement, i, expectedDomChildren[ i ] );\n\t\t\t\ti++;\n\t\t\t} else if ( action === 'equal' ) {\n\t\t\t\t// Force updating text nodes inside elements which did not change and do not need to be re-rendered (#1125).\n\t\t\t\t// Do it here (not in the loop above) because only after insertions the `i` index is correct.\n\t\t\t\tthis._markDescendantTextToSync( this.domConverter.domToView( expectedDomChildren[ i ] ) );\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\t// Unbind removed nodes. When node does not have a parent it means that it was removed from DOM tree during\n\t\t// comparison with the expected DOM. We don't need to check child nodes, because if child node was reinserted,\n\t\t// it was moved to DOM tree out of the removed node.\n\t\tfor ( const node of nodesToUnbind ) {\n\t\t\tif ( !node.parentNode ) {\n\t\t\t\tthis.domConverter.unbindDomElement( node );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shorthand for diffing two arrays or node lists of DOM nodes.\n\t *\n\t * @private\n\t * @param {Array.<Node>|NodeList} actualDomChildren Actual DOM children\n\t * @param {Array.<Node>|NodeList} expectedDomChildren Expected DOM children.\n\t * @returns {Array.<String>} The list of actions based on the {@link module:utils/diff~diff} function.\n\t */\n\t_diffNodeLists( actualDomChildren, expectedDomChildren ) {\n\t\tactualDomChildren = filterOutFakeSelectionContainer( actualDomChildren, this._fakeSelectionContainer );\n\n\t\treturn diff( actualDomChildren, expectedDomChildren, sameNodes.bind( null, this.domConverter ) );\n\t}\n\n\t/**\n\t * Finds DOM nodes that were replaced with the similar nodes (same tag name) in the view. All nodes are compared\n\t * within one `insert`/`delete` action group, for example:\n\t *\n\t * \t\tActual DOM:\t\t<p><b>Foo</b>Bar<i>Baz</i><b>Bax</b></p>\n\t * \t\tExpected DOM:\t<p>Bar<b>123</b><i>Baz</i><b>456</b></p>\n\t * \t\tInput actions:\t[ insert, insert, delete, delete, equal, insert, delete ]\n\t * \t\tOutput actions:\t[ insert, replace, delete, equal, replace ]\n\t *\n\t * @private\n\t * @param {Array.<String>} actions Actions array which is a result of the {@link module:utils/diff~diff} function.\n\t * @param {Array.<Node>|NodeList} actualDom Actual DOM children\n\t * @param {Array.<Node>} expectedDom Expected DOM children.\n\t * @returns {Array.<String>} Actions array modified with the `replace` actions.\n\t */\n\t_findReplaceActions( actions, actualDom, expectedDom ) {\n\t\t// If there is no both 'insert' and 'delete' actions, no need to check for replaced elements.\n\t\tif ( actions.indexOf( 'insert' ) === -1 || actions.indexOf( 'delete' ) === -1 ) {\n\t\t\treturn actions;\n\t\t}\n\n\t\tlet newActions = [];\n\t\tlet actualSlice = [];\n\t\tlet expectedSlice = [];\n\n\t\tconst counter = { equal: 0, insert: 0, delete: 0 };\n\n\t\tfor ( const action of actions ) {\n\t\t\tif ( action === 'insert' ) {\n\t\t\t\texpectedSlice.push( expectedDom[ counter.equal + counter.insert ] );\n\t\t\t} else if ( action === 'delete' ) {\n\t\t\t\tactualSlice.push( actualDom[ counter.equal + counter.delete ] );\n\t\t\t} else { // equal\n\t\t\t\tnewActions = newActions.concat( diff( actualSlice, expectedSlice, areSimilar ).map( x => x === 'equal' ? 'replace' : x ) );\n\t\t\t\tnewActions.push( 'equal' );\n\t\t\t\t// Reset stored elements on 'equal'.\n\t\t\t\tactualSlice = [];\n\t\t\t\texpectedSlice = [];\n\t\t\t}\n\t\t\tcounter[ action ]++;\n\t\t}\n\n\t\treturn newActions.concat( diff( actualSlice, expectedSlice, areSimilar ).map( x => x === 'equal' ? 'replace' : x ) );\n\t}\n\n\t/**\n\t * Marks text nodes to be synchronized.\n\t *\n\t * If a text node is passed, it will be marked. If an element is passed, all descendant text nodes inside it will be marked.\n\t *\n\t * @private\n\t * @param {module:engine/view/node~Node} viewNode View node to sync.\n\t */\n\t_markDescendantTextToSync( viewNode ) {\n\t\tif ( !viewNode ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( viewNode.is( 'text' ) ) {\n\t\t\tthis.markedTexts.add( viewNode );\n\t\t} else if ( viewNode.is( 'element' ) ) {\n\t\t\tfor ( const child of viewNode.getChildren() ) {\n\t\t\t\tthis._markDescendantTextToSync( child );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the selection needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t */\n\t_updateSelection() {\n\t\t// If there is no selection - remove DOM and fake selections.\n\t\tif ( this.selection.rangeCount === 0 ) {\n\t\t\tthis._removeDomSelection();\n\t\t\tthis._removeFakeSelection();\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst domRoot = this.domConverter.mapViewToDom( this.selection.editableElement );\n\n\t\t// Do nothing if there is no focus, or there is no DOM element corresponding to selection's editable element.\n\t\tif ( !this.isFocused || !domRoot ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Render selection.\n\t\tif ( this.selection.isFake ) {\n\t\t\tthis._updateFakeSelection( domRoot );\n\t\t} else {\n\t\t\tthis._removeFakeSelection();\n\t\t\tthis._updateDomSelection( domRoot );\n\t\t}\n\t}\n\n\t/**\n\t * Updates the fake selection.\n\t *\n\t * @private\n\t * @param {HTMLElement} domRoot A valid DOM root where the fake selection container should be added.\n\t */\n\t_updateFakeSelection( domRoot ) {\n\t\tconst domDocument = domRoot.ownerDocument;\n\n\t\tif ( !this._fakeSelectionContainer ) {\n\t\t\tthis._fakeSelectionContainer = createFakeSelectionContainer( domDocument );\n\t\t}\n\n\t\tconst container = this._fakeSelectionContainer;\n\n\t\t// Bind fake selection container with the current selection *position*.\n\t\tthis.domConverter.bindFakeSelection( container, this.selection );\n\n\t\tif ( !this._fakeSelectionNeedsUpdate( domRoot ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !container.parentElement || container.parentElement != domRoot ) {\n\t\t\tdomRoot.appendChild( container );\n\t\t}\n\n\t\tcontainer.textContent = this.selection.fakeSelectionLabel || '\\u00A0';\n\n\t\tconst domSelection = domDocument.getSelection();\n\t\tconst domRange = domDocument.createRange();\n\n\t\tdomSelection.removeAllRanges();\n\t\tdomRange.selectNodeContents( container );\n\t\tdomSelection.addRange( domRange );\n\t}\n\n\t/**\n\t * Updates the DOM selection.\n\t *\n\t * @private\n\t * @param {HTMLElement} domRoot A valid DOM root where the DOM selection should be rendered.\n\t */\n\t_updateDomSelection( domRoot ) {\n\t\tconst domSelection = domRoot.ownerDocument.defaultView.getSelection();\n\n\t\t// Let's check whether DOM selection needs updating at all.\n\t\tif ( !this._domSelectionNeedsUpdate( domSelection ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Multi-range selection is not available in most browsers, and, at least in Chrome, trying to\n\t\t// set such selection, that is not continuous, throws an error. Because of that, we will just use anchor\n\t\t// and focus of view selection.\n\t\t// Since we are not supporting multi-range selection, we also do not need to check if proper editable is\n\t\t// selected. If there is any editable selected, it is okay (editable is taken from selection anchor).\n\t\tconst anchor = this.domConverter.viewPositionToDom( this.selection.anchor );\n\t\tconst focus = this.domConverter.viewPositionToDom( this.selection.focus );\n\n\t\t// Focus the new editing host.\n\t\t// Otherwise, FF may throw an error (https://github.com/ckeditor/ckeditor5/issues/721).\n\t\tdomRoot.focus();\n\n\t\tdomSelection.collapse( anchor.parent, anchor.offset );\n\t\tdomSelection.extend( focus.parent, focus.offset );\n\n\t\t// Firefox–specific hack (https://github.com/ckeditor/ckeditor5-engine/issues/1439).\n\t\tif ( env.isGecko ) {\n\t\t\tfixGeckoSelectionAfterBr( focus, domSelection );\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether a given DOM selection needs to be updated.\n\t *\n\t * @private\n\t * @param {Selection} domSelection The DOM selection to check.\n\t * @returns {Boolean}\n\t */\n\t_domSelectionNeedsUpdate( domSelection ) {\n\t\tif ( !this.domConverter.isDomSelectionCorrect( domSelection ) ) {\n\t\t\t// Current DOM selection is in incorrect position. We need to update it.\n\t\t\treturn true;\n\t\t}\n\n\t\tconst oldViewSelection = domSelection && this.domConverter.domSelectionToView( domSelection );\n\n\t\tif ( oldViewSelection && this.selection.isEqual( oldViewSelection ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If selection is not collapsed, it does not need to be updated if it is similar.\n\t\tif ( !this.selection.isCollapsed && this.selection.isSimilar( oldViewSelection ) ) {\n\t\t\t// Selection did not changed and is correct, do not update.\n\t\t\treturn false;\n\t\t}\n\n\t\t// Selections are not similar.\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks whether the fake selection needs to be updated.\n\t *\n\t * @private\n\t * @param {HTMLElement} domRoot A valid DOM root where a new fake selection container should be added.\n\t * @returns {Boolean}\n\t */\n\t_fakeSelectionNeedsUpdate( domRoot ) {\n\t\tconst container = this._fakeSelectionContainer;\n\t\tconst domSelection = domRoot.ownerDocument.getSelection();\n\n\t\t// Fake selection needs to be updated if there's no fake selection container, or the container currently sits\n\t\t// in a different root.\n\t\tif ( !container || container.parentElement !== domRoot ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Make sure that the selection actually is within the fake selection.\n\t\tif ( domSelection.anchorNode !== container && !container.contains( domSelection.anchorNode ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn container.textContent !== this.selection.fakeSelectionLabel;\n\t}\n\n\t/**\n\t * Removes the DOM selection.\n\t *\n\t * @private\n\t */\n\t_removeDomSelection() {\n\t\tfor ( const doc of this.domDocuments ) {\n\t\t\tconst domSelection = doc.getSelection();\n\n\t\t\tif ( domSelection.rangeCount ) {\n\t\t\t\tconst activeDomElement = doc.activeElement;\n\t\t\t\tconst viewElement = this.domConverter.mapDomToView( activeDomElement );\n\n\t\t\t\tif ( activeDomElement && viewElement ) {\n\t\t\t\t\tdoc.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes the fake selection.\n\t *\n\t * @private\n\t */\n\t_removeFakeSelection() {\n\t\tconst container = this._fakeSelectionContainer;\n\n\t\tif ( container ) {\n\t\t\tcontainer.remove();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if focus needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t */\n\t_updateFocus() {\n\t\tif ( this.isFocused ) {\n\t\t\tconst editable = this.selection.editableElement;\n\n\t\t\tif ( editable ) {\n\t\t\t\tthis.domConverter.focus( editable );\n\t\t\t}\n\t\t}\n\t}\n}\n\nmix( Renderer, ObservableMixin );\n\n// Checks if provided element is editable.\n//\n// @private\n// @param {module:engine/view/element~Element} element\n// @returns {Boolean}\nfunction isEditable( element ) {\n\tif ( element.getAttribute( 'contenteditable' ) == 'false' ) {\n\t\treturn false;\n\t}\n\n\tconst parent = element.findAncestor( element => element.hasAttribute( 'contenteditable' ) );\n\n\treturn !parent || parent.getAttribute( 'contenteditable' ) == 'true';\n}\n\n// Adds inline filler at a given position.\n//\n// The position can be given as an array of DOM nodes and an offset in that array,\n// or a DOM parent element and an offset in that element.\n//\n// @private\n// @param {Document} domDocument\n// @param {Element|Array.<Node>} domParentOrArray\n// @param {Number} offset\n// @returns {Text} The DOM text node that contains an inline filler.\nfunction addInlineFiller( domDocument, domParentOrArray, offset ) {\n\tconst childNodes = domParentOrArray instanceof Array ? domParentOrArray : domParentOrArray.childNodes;\n\tconst nodeAfterFiller = childNodes[ offset ];\n\n\tif ( isText( nodeAfterFiller ) ) {\n\t\tnodeAfterFiller.data = INLINE_FILLER + nodeAfterFiller.data;\n\n\t\treturn nodeAfterFiller;\n\t} else {\n\t\tconst fillerNode = domDocument.createTextNode( INLINE_FILLER );\n\n\t\tif ( Array.isArray( domParentOrArray ) ) {\n\t\t\tchildNodes.splice( offset, 0, fillerNode );\n\t\t} else {\n\t\t\tinsertAt( domParentOrArray, offset, fillerNode );\n\t\t}\n\n\t\treturn fillerNode;\n\t}\n}\n\n// Whether two DOM nodes should be considered as similar.\n// Nodes are considered similar if they have the same tag name.\n//\n// @private\n// @param {Node} node1\n// @param {Node} node2\n// @returns {Boolean}\nfunction areSimilar( node1, node2 ) {\n\treturn isNode( node1 ) && isNode( node2 ) &&\n\t\t!isText( node1 ) && !isText( node2 ) &&\n\t\tnode1.tagName.toLowerCase() === node2.tagName.toLowerCase();\n}\n\n// Whether two dom nodes should be considered as the same.\n// Two nodes which are considered the same are:\n//\n//\t\t* Text nodes with the same text.\n//\t\t* Element nodes represented by the same object.\n//\t\t* Two block filler elements.\n//\n// @private\n// @param {String} blockFillerMode Block filler mode, see {@link module:engine/view/domconverter~DomConverter#blockFillerMode}.\n// @param {Node} node1\n// @param {Node} node2\n// @returns {Boolean}\nfunction sameNodes( domConverter, actualDomChild, expectedDomChild ) {\n\t// Elements.\n\tif ( actualDomChild === expectedDomChild ) {\n\t\treturn true;\n\t}\n\t// Texts.\n\telse if ( isText( actualDomChild ) && isText( expectedDomChild ) ) {\n\t\treturn actualDomChild.data === expectedDomChild.data;\n\t}\n\t// Block fillers.\n\telse if ( domConverter.isBlockFiller( actualDomChild ) &&\n\t\tdomConverter.isBlockFiller( expectedDomChild ) ) {\n\t\treturn true;\n\t}\n\n\t// Not matching types.\n\treturn false;\n}\n\n// The following is a Firefox–specific hack (https://github.com/ckeditor/ckeditor5-engine/issues/1439).\n// When the native DOM selection is at the end of the block and preceded by <br /> e.g.\n//\n//\t\t<p>foo<br/>[]</p>\n//\n// which happens a lot when using the soft line break, the browser fails to (visually) move the\n// caret to the new line. A quick fix is as simple as force–refreshing the selection with the same range.\nfunction fixGeckoSelectionAfterBr( focus, domSelection ) {\n\tconst parent = focus.parent;\n\n\t// This fix works only when the focus point is at the very end of an element.\n\t// There is no point in running it in cases unrelated to the browser bug.\n\tif ( parent.nodeType != Node.ELEMENT_NODE || focus.offset != parent.childNodes.length - 1 ) {\n\t\treturn;\n\t}\n\n\tconst childAtOffset = parent.childNodes[ focus.offset ];\n\n\t// To stay on the safe side, the fix being as specific as possible, it targets only the\n\t// selection which is at the very end of the element and preceded by <br />.\n\tif ( childAtOffset && childAtOffset.tagName == 'BR' ) {\n\t\tdomSelection.addRange( domSelection.getRangeAt( 0 ) );\n\t}\n}\n\nfunction filterOutFakeSelectionContainer( domChildList, fakeSelectionContainer ) {\n\tconst childList = Array.from( domChildList );\n\n\tif ( childList.length == 0 || !fakeSelectionContainer ) {\n\t\treturn childList;\n\t}\n\n\tconst last = childList[ childList.length - 1 ];\n\n\tif ( last == fakeSelectionContainer ) {\n\t\tchildList.pop();\n\t}\n\n\treturn childList;\n}\n\n// Creates a fake selection container for a given document.\n//\n// @private\n// @param {Document} domDocument\n// @returns {HTMLElement}\nfunction createFakeSelectionContainer( domDocument ) {\n\tconst container = domDocument.createElement( 'div' );\n\n\tObject.assign( container.style, {\n\t\tposition: 'fixed',\n\t\ttop: 0,\n\t\tleft: '-9999px',\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/752.\n\t\twidth: '42px'\n\t} );\n\n\t// Fill it with a text node so we can update it later.\n\tcontainer.textContent = '\\u00A0';\n\n\treturn container;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals window, document */\n\n/**\n * @module utils/dom/global\n */\n\n/**\n * A helper (module) giving an access to the global DOM objects such as `window` and\n * `document`. Accessing these objects using this helper allows easy and bulletproof\n * testing, i.e. stubbing native properties:\n *\n *\t\timport global from 'ckeditor5/utils/dom/global.js';\n *\n *\t\t// This stub will work for any code using global module.\n *\t\ttestUtils.sinon.stub( global, 'window', {\n *\t\t\tinnerWidth: 10000\n *\t\t} );\n *\n *\t\tconsole.log( global.window.innerWidth );\n */\nexport default { window, document };\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/indexof\n */\n\n/**\n * Returns index of the node in the parent element.\n *\n * @param {Node} node Node which index is tested.\n * @returns {Number} Index of the node in the parent element. Returns 0 if node has no parent.\n */\nexport default function indexOf( node ) {\n\tlet index = 0;\n\n\twhile ( node.previousSibling ) {\n\t\tnode = node.previousSibling;\n\t\tindex++;\n\t}\n\n\treturn index;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals Node */\n\n/**\n * @module utils/dom/getancestors\n */\n\n/**\n * Returns all ancestors of given DOM node, starting from the top-most (root). Includes the given node itself. If the\n * node is a part of `DocumentFragment` that `DocumentFragment` will be returned. In contrary, if the node is\n * appended to a `Document`, that `Document` will not be returned (algorithms operating on DOM tree care for `Document#documentElement`\n * at most, which will be returned).\n *\n * @param {Node} node DOM node.\n * @returns {Array.<Node|DocumentFragment>} Array of given `node` parents.\n */\nexport default function getAncestors( node ) {\n\tconst nodes = [];\n\n\t// We are interested in `Node`s `DocumentFragment`s only.\n\twhile ( node && node.nodeType != Node.DOCUMENT_NODE ) {\n\t\tnodes.unshift( node );\n\t\tnode = node.parentNode;\n\t}\n\n\treturn nodes;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/getcommonancestor\n */\n\nimport getAncestors from './getancestors';\n\n/**\n * Searches and returns the lowest common ancestor of two given nodes.\n *\n * @param {Node} nodeA First node.\n * @param {Node} nodeB Second node.\n * @returns {Node|DocumentFragment|Document|null} Lowest common ancestor of both nodes or `null` if nodes do not have a common ancestor.\n */\nexport default function getCommonAncestor( nodeA, nodeB ) {\n\tconst ancestorsA = getAncestors( nodeA );\n\tconst ancestorsB = getAncestors( nodeB );\n\n\tlet i = 0;\n\n\t// It does not matter which array is shorter.\n\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\ti++;\n\t}\n\n\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/domconverter\n */\n\n/* globals document, Node, NodeFilter, Text */\n\nimport ViewText from './text';\nimport ViewElement from './element';\nimport ViewPosition from './position';\nimport ViewRange from './range';\nimport ViewSelection from './selection';\nimport ViewDocumentFragment from './documentfragment';\nimport ViewTreeWalker from './treewalker';\nimport { BR_FILLER, getDataWithoutFiller, INLINE_FILLER_LENGTH, isInlineFiller, NBSP_FILLER, startsWithFiller } from './filler';\n\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport indexOf from '@ckeditor/ckeditor5-utils/src/dom/indexof';\nimport getAncestors from '@ckeditor/ckeditor5-utils/src/dom/getancestors';\nimport getCommonAncestor from '@ckeditor/ckeditor5-utils/src/dom/getcommonancestor';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\nimport { isElement } from 'lodash-es';\n\n// eslint-disable-next-line new-cap\nconst BR_FILLER_REF = BR_FILLER( document );\n\n/**\n * DomConverter is a set of tools to do transformations between DOM nodes and view nodes. It also handles\n * {@link module:engine/view/domconverter~DomConverter#bindElements binding} these nodes.\n *\n * The instance of DOMConverter is available in {@link module:engine/view/view~View#domConverter `editor.editing.view.domConverter`}.\n *\n * DomConverter does not check which nodes should be rendered (use {@link module:engine/view/renderer~Renderer}), does not keep a\n * state of a tree nor keeps synchronization between tree view and DOM tree (use {@link module:engine/view/document~Document}).\n *\n * DomConverter keeps DOM elements to View element bindings, so when the converter will be destroyed, the binding will\n * be lost. Two converters will keep separate binding maps, so one tree view can be bound with two DOM trees.\n */\nexport default class DomConverter {\n\t/**\n\t * Creates DOM converter.\n\t *\n\t * @param {module:engine/view/document~Document} document The view document instance.\n\t * @param {Object} options Object with configuration options.\n\t * @param {module:engine/view/filler~BlockFillerMode} [options.blockFillerMode='br'] The type of the block filler to use.\n\t */\n\tconstructor( document, options = {} ) {\n\t\t/**\n\t\t * @readonly\n\t\t * @type {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * The mode of a block filler used by DOM converter.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'br'|'nbsp'} module:engine/view/domconverter~DomConverter#blockFillerMode\n\t\t */\n\t\tthis.blockFillerMode = options.blockFillerMode || 'br';\n\n\t\t/**\n\t\t * Elements which are considered pre-formatted elements.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<String>} module:engine/view/domconverter~DomConverter#preElements\n\t\t */\n\t\tthis.preElements = [ 'pre' ];\n\n\t\t/**\n\t\t * Elements which are considered block elements (and hence should be filled with a\n\t\t * {@link #isBlockFiller block filler}).\n\t\t *\n\t\t * Whether an element is considered a block element also affects handling of trailing whitespaces.\n\t\t *\n\t\t * You can extend this array if you introduce support for block elements which are not yet recognized here.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<String>} module:engine/view/domconverter~DomConverter#blockElements\n\t\t */\n\t\tthis.blockElements = [ 'p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'li', 'dd', 'dt', 'figcaption' ];\n\n\t\t/**\n\t\t * Block {@link module:engine/view/filler filler} creator, which is used to create all block fillers during the\n\t\t * view to DOM conversion and to recognize block fillers during the DOM to view conversion.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {Function} module:engine/view/domconverter~DomConverter#_blockFiller\n\t\t */\n\t\tthis._blockFiller = this.blockFillerMode == 'br' ? BR_FILLER : NBSP_FILLER;\n\n\t\t/**\n\t\t * DOM to View mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_domToViewMapping\n\t\t */\n\t\tthis._domToViewMapping = new WeakMap();\n\n\t\t/**\n\t\t * View to DOM mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_viewToDomMapping\n\t\t */\n\t\tthis._viewToDomMapping = new WeakMap();\n\n\t\t/**\n\t\t * Holds mapping between fake selection containers and corresponding view selections.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_fakeSelectionMapping\n\t\t */\n\t\tthis._fakeSelectionMapping = new WeakMap();\n\t}\n\n\t/**\n\t * Binds given DOM element that represents fake selection to a **position** of a\n\t * {@link module:engine/view/documentselection~DocumentSelection document selection}.\n\t * Document selection copy is stored and can be retrieved by\n\t * {@link module:engine/view/domconverter~DomConverter#fakeSelectionToView} method.\n\t *\n\t * @param {HTMLElement} domElement\n\t * @param {module:engine/view/documentselection~DocumentSelection} viewDocumentSelection\n\t */\n\tbindFakeSelection( domElement, viewDocumentSelection ) {\n\t\tthis._fakeSelectionMapping.set( domElement, new ViewSelection( viewDocumentSelection ) );\n\t}\n\n\t/**\n\t * Returns {@link module:engine/view/selection~Selection view selection} instance corresponding to\n\t * given DOM element that represents fake selection. Returns `undefined` if binding to given DOM element does not exists.\n\t *\n\t * @param {HTMLElement} domElement\n\t * @returns {module:engine/view/selection~Selection|undefined}\n\t */\n\tfakeSelectionToView( domElement ) {\n\t\treturn this._fakeSelectionMapping.get( domElement );\n\t}\n\n\t/**\n\t * Binds DOM and View elements, so it will be possible to get corresponding elements using\n\t * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\n\t * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\n\t *\n\t * @param {HTMLElement} domElement DOM element to bind.\n\t * @param {module:engine/view/element~Element} viewElement View element to bind.\n\t */\n\tbindElements( domElement, viewElement ) {\n\t\tthis._domToViewMapping.set( domElement, viewElement );\n\t\tthis._viewToDomMapping.set( viewElement, domElement );\n\t}\n\n\t/**\n\t * Unbinds given `domElement` from the view element it was bound to. Unbinding is deep, meaning that all children of\n\t * `domElement` will be unbound too.\n\t *\n\t * @param {HTMLElement} domElement DOM element to unbind.\n\t */\n\tunbindDomElement( domElement ) {\n\t\tconst viewElement = this._domToViewMapping.get( domElement );\n\n\t\tif ( viewElement ) {\n\t\t\tthis._domToViewMapping.delete( domElement );\n\t\t\tthis._viewToDomMapping.delete( viewElement );\n\n\t\t\tfor ( const child of domElement.childNodes ) {\n\t\t\t\tthis.unbindDomElement( child );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Binds DOM and View document fragments, so it will be possible to get corresponding document fragments using\n\t * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\n\t * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\n\t *\n\t * @param {DocumentFragment} domFragment DOM document fragment to bind.\n\t * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment View document fragment to bind.\n\t */\n\tbindDocumentFragments( domFragment, viewFragment ) {\n\t\tthis._domToViewMapping.set( domFragment, viewFragment );\n\t\tthis._viewToDomMapping.set( viewFragment, domFragment );\n\t}\n\n\t/**\n\t * Converts view to DOM. For all text nodes, not bound elements and document fragments new items will\n\t * be created. For bound elements and document fragments function will return corresponding items.\n\t *\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} viewNode\n\t * View node or document fragment to transform.\n\t * @param {Document} domDocument Document which will be used to create DOM nodes.\n\t * @param {Object} [options] Conversion options.\n\t * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n\t * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\n\t * @returns {Node|DocumentFragment} Converted node or DocumentFragment.\n\t */\n\tviewToDom( viewNode, domDocument, options = {} ) {\n\t\tif ( viewNode.is( 'text' ) ) {\n\t\t\tconst textData = this._processDataFromViewText( viewNode );\n\n\t\t\treturn domDocument.createTextNode( textData );\n\t\t} else {\n\t\t\tif ( this.mapViewToDom( viewNode ) ) {\n\t\t\t\treturn this.mapViewToDom( viewNode );\n\t\t\t}\n\n\t\t\tlet domElement;\n\n\t\t\tif ( viewNode.is( 'documentFragment' ) ) {\n\t\t\t\t// Create DOM document fragment.\n\t\t\t\tdomElement = domDocument.createDocumentFragment();\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindDocumentFragments( domElement, viewNode );\n\t\t\t\t}\n\t\t\t} else if ( viewNode.is( 'uiElement' ) ) {\n\t\t\t\t// UIElement has its own render() method (see #799).\n\t\t\t\tdomElement = viewNode.render( domDocument );\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindElements( domElement, viewNode );\n\t\t\t\t}\n\n\t\t\t\treturn domElement;\n\t\t\t} else {\n\t\t\t\t// Create DOM element.\n\t\t\t\tif ( viewNode.hasAttribute( 'xmlns' ) ) {\n\t\t\t\t\tdomElement = domDocument.createElementNS( viewNode.getAttribute( 'xmlns' ), viewNode.name );\n\t\t\t\t} else {\n\t\t\t\t\tdomElement = domDocument.createElement( viewNode.name );\n\t\t\t\t}\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindElements( domElement, viewNode );\n\t\t\t\t}\n\n\t\t\t\t// Copy element's attributes.\n\t\t\t\tfor ( const key of viewNode.getAttributeKeys() ) {\n\t\t\t\t\tdomElement.setAttribute( key, viewNode.getAttribute( key ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( options.withChildren || options.withChildren === undefined ) {\n\t\t\t\tfor ( const child of this.viewChildrenToDom( viewNode, domDocument, options ) ) {\n\t\t\t\t\tdomElement.appendChild( child );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn domElement;\n\t\t}\n\t}\n\n\t/**\n\t * Converts children of the view element to DOM using the\n\t * {@link module:engine/view/domconverter~DomConverter#viewToDom} method.\n\t * Additionally, this method adds block {@link module:engine/view/filler filler} to the list of children, if needed.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElement Parent view element.\n\t * @param {Document} domDocument Document which will be used to create DOM nodes.\n\t * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#viewToDom} options parameter.\n\t * @returns {Iterable.<Node>} DOM nodes.\n\t */\n\t* viewChildrenToDom( viewElement, domDocument, options = {} ) {\n\t\tconst fillerPositionOffset = viewElement.getFillerOffset && viewElement.getFillerOffset();\n\t\tlet offset = 0;\n\n\t\tfor ( const childView of viewElement.getChildren() ) {\n\t\t\tif ( fillerPositionOffset === offset ) {\n\t\t\t\tyield this._blockFiller( domDocument );\n\t\t\t}\n\n\t\t\tyield this.viewToDom( childView, domDocument, options );\n\n\t\t\toffset++;\n\t\t}\n\n\t\tif ( fillerPositionOffset === offset ) {\n\t\t\tyield this._blockFiller( domDocument );\n\t\t}\n\t}\n\n\t/**\n\t * Converts view {@link module:engine/view/range~Range} to DOM range.\n\t * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n\t *\n\t * @param {module:engine/view/range~Range} viewRange View range.\n\t * @returns {Range} DOM range.\n\t */\n\tviewRangeToDom( viewRange ) {\n\t\tconst domStart = this.viewPositionToDom( viewRange.start );\n\t\tconst domEnd = this.viewPositionToDom( viewRange.end );\n\n\t\tconst domRange = document.createRange();\n\t\tdomRange.setStart( domStart.parent, domStart.offset );\n\t\tdomRange.setEnd( domEnd.parent, domEnd.offset );\n\n\t\treturn domRange;\n\t}\n\n\t/**\n\t * Converts view {@link module:engine/view/position~Position} to DOM parent and offset.\n\t *\n\t * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n\t * If the converted position is directly before inline filler it is moved inside the filler.\n\t *\n\t * @param {module:engine/view/position~Position} viewPosition View position.\n\t * @returns {Object|null} position DOM position or `null` if view position could not be converted to DOM.\n\t * @returns {Node} position.parent DOM position parent.\n\t * @returns {Number} position.offset DOM position offset.\n\t */\n\tviewPositionToDom( viewPosition ) {\n\t\tconst viewParent = viewPosition.parent;\n\n\t\tif ( viewParent.is( 'text' ) ) {\n\t\t\tconst domParent = this.findCorrespondingDomText( viewParent );\n\n\t\t\tif ( !domParent ) {\n\t\t\t\t// Position is in a view text node that has not been rendered to DOM yet.\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet offset = viewPosition.offset;\n\n\t\t\tif ( startsWithFiller( domParent ) ) {\n\t\t\t\toffset += INLINE_FILLER_LENGTH;\n\t\t\t}\n\n\t\t\treturn { parent: domParent, offset };\n\t\t} else {\n\t\t\t// viewParent is instance of ViewElement.\n\t\t\tlet domParent, domBefore, domAfter;\n\n\t\t\tif ( viewPosition.offset === 0 ) {\n\t\t\t\tdomParent = this.mapViewToDom( viewParent );\n\n\t\t\t\tif ( !domParent ) {\n\t\t\t\t\t// Position is in a view element that has not been rendered to DOM yet.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tdomAfter = domParent.childNodes[ 0 ];\n\t\t\t} else {\n\t\t\t\tconst nodeBefore = viewPosition.nodeBefore;\n\n\t\t\t\tdomBefore = nodeBefore.is( 'text' ) ?\n\t\t\t\t\tthis.findCorrespondingDomText( nodeBefore ) :\n\t\t\t\t\tthis.mapViewToDom( viewPosition.nodeBefore );\n\n\t\t\t\tif ( !domBefore ) {\n\t\t\t\t\t// Position is after a view element that has not been rendered to DOM yet.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tdomParent = domBefore.parentNode;\n\t\t\t\tdomAfter = domBefore.nextSibling;\n\t\t\t}\n\n\t\t\t// If there is an inline filler at position return position inside the filler. We should never return\n\t\t\t// the position before the inline filler.\n\t\t\tif ( isText( domAfter ) && startsWithFiller( domAfter ) ) {\n\t\t\t\treturn { parent: domAfter, offset: INLINE_FILLER_LENGTH };\n\t\t\t}\n\n\t\t\tconst offset = domBefore ? indexOf( domBefore ) + 1 : 0;\n\n\t\t\treturn { parent: domParent, offset };\n\t\t}\n\t}\n\n\t/**\n\t * Converts DOM to view. For all text nodes, not bound elements and document fragments new items will\n\t * be created. For bound elements and document fragments function will return corresponding items. For\n\t * {@link module:engine/view/filler fillers} `null` will be returned.\n\t * For all DOM elements rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n\t *\n\t * @param {Node|DocumentFragment} domNode DOM node or document fragment to transform.\n\t * @param {Object} [options] Conversion options.\n\t * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n\t * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\n\t * @param {Boolean} [options.keepOriginalCase=false] If `false`, node's tag name will be converter to lower case.\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} Converted node or document fragment\n\t * or `null` if DOM node is a {@link module:engine/view/filler filler} or the given node is an empty text node.\n\t */\n\tdomToView( domNode, options = {} ) {\n\t\tif ( this.isBlockFiller( domNode, this.blockFillerMode ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// When node is inside UIElement return that UIElement as it's view representation.\n\t\tconst uiElement = this.getParentUIElement( domNode, this._domToViewMapping );\n\n\t\tif ( uiElement ) {\n\t\t\treturn uiElement;\n\t\t}\n\n\t\tif ( isText( domNode ) ) {\n\t\t\tif ( isInlineFiller( domNode ) ) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tconst textData = this._processDataFromDomText( domNode );\n\n\t\t\t\treturn textData === '' ? null : new ViewText( this.document, textData );\n\t\t\t}\n\t\t} else if ( this.isComment( domNode ) ) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tif ( this.mapDomToView( domNode ) ) {\n\t\t\t\treturn this.mapDomToView( domNode );\n\t\t\t}\n\n\t\t\tlet viewElement;\n\n\t\t\tif ( this.isDocumentFragment( domNode ) ) {\n\t\t\t\t// Create view document fragment.\n\t\t\t\tviewElement = new ViewDocumentFragment( this.document );\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindDocumentFragments( domNode, viewElement );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Create view element.\n\t\t\t\tconst viewName = options.keepOriginalCase ? domNode.tagName : domNode.tagName.toLowerCase();\n\t\t\t\tviewElement = new ViewElement( this.document, viewName );\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindElements( domNode, viewElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy element's attributes.\n\t\t\t\tconst attrs = domNode.attributes;\n\n\t\t\t\tfor ( let i = attrs.length - 1; i >= 0; i-- ) {\n\t\t\t\t\tviewElement._setAttribute( attrs[ i ].name, attrs[ i ].value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( options.withChildren || options.withChildren === undefined ) {\n\t\t\t\tfor ( const child of this.domChildrenToView( domNode, options ) ) {\n\t\t\t\t\tviewElement._appendChild( child );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn viewElement;\n\t\t}\n\t}\n\n\t/**\n\t * Converts children of the DOM element to view nodes using\n\t * the {@link module:engine/view/domconverter~DomConverter#domToView} method.\n\t * Additionally this method omits block {@link module:engine/view/filler filler}, if it exists in the DOM parent.\n\t *\n\t * @param {HTMLElement} domElement Parent DOM element.\n\t * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#domToView} options parameter.\n\t * @returns {Iterable.<module:engine/view/node~Node>} View nodes.\n\t */\n\t* domChildrenToView( domElement, options = {} ) {\n\t\tfor ( let i = 0; i < domElement.childNodes.length; i++ ) {\n\t\t\tconst domChild = domElement.childNodes[ i ];\n\t\t\tconst viewChild = this.domToView( domChild, options );\n\n\t\t\tif ( viewChild !== null ) {\n\t\t\t\tyield viewChild;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Converts DOM selection to view {@link module:engine/view/selection~Selection}.\n\t * Ranges which cannot be converted will be omitted.\n\t *\n\t * @param {Selection} domSelection DOM selection.\n\t * @returns {module:engine/view/selection~Selection} View selection.\n\t */\n\tdomSelectionToView( domSelection ) {\n\t\t// DOM selection might be placed in fake selection container.\n\t\t// If container contains fake selection - return corresponding view selection.\n\t\tif ( domSelection.rangeCount === 1 ) {\n\t\t\tlet container = domSelection.getRangeAt( 0 ).startContainer;\n\n\t\t\t// The DOM selection might be moved to the text node inside the fake selection container.\n\t\t\tif ( isText( container ) ) {\n\t\t\t\tcontainer = container.parentNode;\n\t\t\t}\n\n\t\t\tconst viewSelection = this.fakeSelectionToView( container );\n\n\t\t\tif ( viewSelection ) {\n\t\t\t\treturn viewSelection;\n\t\t\t}\n\t\t}\n\n\t\tconst isBackward = this.isDomSelectionBackward( domSelection );\n\n\t\tconst viewRanges = [];\n\n\t\tfor ( let i = 0; i < domSelection.rangeCount; i++ ) {\n\t\t\t// DOM Range have correct start and end, no matter what is the DOM Selection direction. So we don't have to fix anything.\n\t\t\tconst domRange = domSelection.getRangeAt( i );\n\t\t\tconst viewRange = this.domRangeToView( domRange );\n\n\t\t\tif ( viewRange ) {\n\t\t\t\tviewRanges.push( viewRange );\n\t\t\t}\n\t\t}\n\n\t\treturn new ViewSelection( viewRanges, { backward: isBackward } );\n\t}\n\n\t/**\n\t * Converts DOM Range to view {@link module:engine/view/range~Range}.\n\t * If the start or end position can not be converted `null` is returned.\n\t *\n\t * @param {Range} domRange DOM range.\n\t * @returns {module:engine/view/range~Range|null} View range.\n\t */\n\tdomRangeToView( domRange ) {\n\t\tconst viewStart = this.domPositionToView( domRange.startContainer, domRange.startOffset );\n\t\tconst viewEnd = this.domPositionToView( domRange.endContainer, domRange.endOffset );\n\n\t\tif ( viewStart && viewEnd ) {\n\t\t\treturn new ViewRange( viewStart, viewEnd );\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Converts DOM parent and offset to view {@link module:engine/view/position~Position}.\n\t *\n\t * If the position is inside a {@link module:engine/view/filler filler} which has no corresponding view node,\n\t * position of the filler will be converted and returned.\n\t *\n\t * If the position is inside DOM element rendered by {@link module:engine/view/uielement~UIElement}\n\t * that position will be converted to view position before that UIElement.\n\t *\n\t * If structures are too different and it is not possible to find corresponding position then `null` will be returned.\n\t *\n\t * @param {Node} domParent DOM position parent.\n\t * @param {Number} domOffset DOM position offset.\n\t * @returns {module:engine/view/position~Position} viewPosition View position.\n\t */\n\tdomPositionToView( domParent, domOffset ) {\n\t\tif ( this.isBlockFiller( domParent, this.blockFillerMode ) ) {\n\t\t\treturn this.domPositionToView( domParent.parentNode, indexOf( domParent ) );\n\t\t}\n\n\t\t// If position is somewhere inside UIElement - return position before that element.\n\t\tconst viewElement = this.mapDomToView( domParent );\n\n\t\tif ( viewElement && viewElement.is( 'uiElement' ) ) {\n\t\t\treturn ViewPosition._createBefore( viewElement );\n\t\t}\n\n\t\tif ( isText( domParent ) ) {\n\t\t\tif ( isInlineFiller( domParent ) ) {\n\t\t\t\treturn this.domPositionToView( domParent.parentNode, indexOf( domParent ) );\n\t\t\t}\n\n\t\t\tconst viewParent = this.findCorrespondingViewText( domParent );\n\t\t\tlet offset = domOffset;\n\n\t\t\tif ( !viewParent ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( startsWithFiller( domParent ) ) {\n\t\t\t\toffset -= INLINE_FILLER_LENGTH;\n\t\t\t\toffset = offset < 0 ? 0 : offset;\n\t\t\t}\n\n\t\t\treturn new ViewPosition( viewParent, offset );\n\t\t}\n\t\t// domParent instanceof HTMLElement.\n\t\telse {\n\t\t\tif ( domOffset === 0 ) {\n\t\t\t\tconst viewParent = this.mapDomToView( domParent );\n\n\t\t\t\tif ( viewParent ) {\n\t\t\t\t\treturn new ViewPosition( viewParent, 0 );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst domBefore = domParent.childNodes[ domOffset - 1 ];\n\t\t\t\tconst viewBefore = isText( domBefore ) ?\n\t\t\t\t\tthis.findCorrespondingViewText( domBefore ) :\n\t\t\t\t\tthis.mapDomToView( domBefore );\n\n\t\t\t\t// TODO #663\n\t\t\t\tif ( viewBefore && viewBefore.parent ) {\n\t\t\t\t\treturn new ViewPosition( viewBefore.parent, viewBefore.index + 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Returns corresponding view {@link module:engine/view/element~Element Element} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment} for provided DOM element or\n\t * document fragment. If there is no view item {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n\t * to the given DOM - `undefined` is returned.\n\t * For all DOM elements rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n\t *\n\t * @param {DocumentFragment|Element} domElementOrDocumentFragment DOM element or document fragment.\n\t * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|undefined}\n\t * Corresponding view element, document fragment or `undefined` if no element was bound.\n\t */\n\tmapDomToView( domElementOrDocumentFragment ) {\n\t\treturn this.getParentUIElement( domElementOrDocumentFragment ) || this._domToViewMapping.get( domElementOrDocumentFragment );\n\t}\n\n\t/**\n\t * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n\t * corresponding text node is returned based on the sibling or parent.\n\t *\n\t * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n\t * to find the corresponding text node.\n\t *\n\t * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n\t * element, it is used to find the corresponding text node.\n\t *\n\t * For all text nodes rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n\t *\n\t * Otherwise `null` is returned.\n\t *\n\t * Note that for the block or inline {@link module:engine/view/filler filler} this method returns `null`.\n\t *\n\t * @param {Text} domText DOM text node.\n\t * @returns {module:engine/view/text~Text|null} Corresponding view text node or `null`, if it was not possible to find a\n\t * corresponding node.\n\t */\n\tfindCorrespondingViewText( domText ) {\n\t\tif ( isInlineFiller( domText ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// If DOM text was rendered by UIElement - return that element.\n\t\tconst uiElement = this.getParentUIElement( domText );\n\n\t\tif ( uiElement ) {\n\t\t\treturn uiElement;\n\t\t}\n\n\t\tconst previousSibling = domText.previousSibling;\n\n\t\t// Try to use previous sibling to find the corresponding text node.\n\t\tif ( previousSibling ) {\n\t\t\tif ( !( this.isElement( previousSibling ) ) ) {\n\t\t\t\t// The previous is text or comment.\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst viewElement = this.mapDomToView( previousSibling );\n\n\t\t\tif ( viewElement ) {\n\t\t\t\tconst nextSibling = viewElement.nextSibling;\n\n\t\t\t\t// It might be filler which has no corresponding view node.\n\t\t\t\tif ( nextSibling instanceof ViewText ) {\n\t\t\t\t\treturn viewElement.nextSibling;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Try to use parent to find the corresponding text node.\n\t\telse {\n\t\t\tconst viewElement = this.mapDomToView( domText.parentNode );\n\n\t\t\tif ( viewElement ) {\n\t\t\t\tconst firstChild = viewElement.getChild( 0 );\n\n\t\t\t\t// It might be filler which has no corresponding view node.\n\t\t\t\tif ( firstChild instanceof ViewText ) {\n\t\t\t\t\treturn firstChild;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns corresponding DOM item for provided {@link module:engine/view/element~Element Element} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment}.\n\t * To find a corresponding text for {@link module:engine/view/text~Text view Text instance}\n\t * use {@link #findCorrespondingDomText}.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewNode\n\t * View element or document fragment.\n\t * @returns {Node|DocumentFragment|undefined} Corresponding DOM node or document fragment.\n\t */\n\tmapViewToDom( documentFragmentOrElement ) {\n\t\treturn this._viewToDomMapping.get( documentFragmentOrElement );\n\t}\n\n\t/**\n\t * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n\t * corresponding text node is returned based on the sibling or parent.\n\t *\n\t * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n\t * to find the corresponding text node.\n\t *\n\t * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n\t * element, it is used to find the corresponding text node.\n\t *\n\t * Otherwise `null` is returned.\n\t *\n\t * @param {module:engine/view/text~Text} viewText View text node.\n\t * @returns {Text|null} Corresponding DOM text node or `null`, if it was not possible to find a corresponding node.\n\t */\n\tfindCorrespondingDomText( viewText ) {\n\t\tconst previousSibling = viewText.previousSibling;\n\n\t\t// Try to use previous sibling to find the corresponding text node.\n\t\tif ( previousSibling && this.mapViewToDom( previousSibling ) ) {\n\t\t\treturn this.mapViewToDom( previousSibling ).nextSibling;\n\t\t}\n\n\t\t// If this is a first node, try to use parent to find the corresponding text node.\n\t\tif ( !previousSibling && viewText.parent && this.mapViewToDom( viewText.parent ) ) {\n\t\t\treturn this.mapViewToDom( viewText.parent ).childNodes[ 0 ];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Focuses DOM editable that is corresponding to provided {@link module:engine/view/editableelement~EditableElement}.\n\t *\n\t * @param {module:engine/view/editableelement~EditableElement} viewEditable\n\t */\n\tfocus( viewEditable ) {\n\t\tconst domEditable = this.mapViewToDom( viewEditable );\n\n\t\tif ( domEditable && domEditable.ownerDocument.activeElement !== domEditable ) {\n\t\t\t// Save the scrollX and scrollY positions before the focus.\n\t\t\tconst { scrollX, scrollY } = global.window;\n\t\t\tconst scrollPositions = [];\n\n\t\t\t// Save all scrollLeft and scrollTop values starting from domEditable up to\n\t\t\t// document#documentElement.\n\t\t\tforEachDomNodeAncestor( domEditable, node => {\n\t\t\t\tconst { scrollLeft, scrollTop } = node;\n\n\t\t\t\tscrollPositions.push( [ scrollLeft, scrollTop ] );\n\t\t\t} );\n\n\t\t\tdomEditable.focus();\n\n\t\t\t// Restore scrollLeft and scrollTop values starting from domEditable up to\n\t\t\t// document#documentElement.\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/951\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/957\n\t\t\tforEachDomNodeAncestor( domEditable, node => {\n\t\t\t\tconst [ scrollLeft, scrollTop ] = scrollPositions.shift();\n\n\t\t\t\tnode.scrollLeft = scrollLeft;\n\t\t\t\tnode.scrollTop = scrollTop;\n\t\t\t} );\n\n\t\t\t// Restore the scrollX and scrollY positions after the focus.\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/951\n\t\t\tglobal.window.scrollTo( scrollX, scrollY );\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` when `node.nodeType` equals `Node.ELEMENT_NODE`.\n\t *\n\t * @param {Node} node Node to check.\n\t * @returns {Boolean}\n\t */\n\tisElement( node ) {\n\t\treturn node && node.nodeType == Node.ELEMENT_NODE;\n\t}\n\n\t/**\n\t * Returns `true` when `node.nodeType` equals `Node.DOCUMENT_FRAGMENT_NODE`.\n\t *\n\t * @param {Node} node Node to check.\n\t * @returns {Boolean}\n\t */\n\tisDocumentFragment( node ) {\n\t\treturn node && node.nodeType == Node.DOCUMENT_FRAGMENT_NODE;\n\t}\n\n\t/**\n\t * Returns `true` when `node.nodeType` equals `Node.COMMENT_NODE`.\n\t *\n\t * @param {Node} node Node to check.\n\t * @returns {Boolean}\n\t */\n\tisComment( node ) {\n\t\treturn node && node.nodeType == Node.COMMENT_NODE;\n\t}\n\n\t/**\n\t * Checks if the node is an instance of the block filler for this DOM converter.\n\t *\n\t *\t\tconst converter = new DomConverter( viewDocument, { blockFillerMode: 'br' } );\n\t *\n\t *\t\tconverter.isBlockFiller( BR_FILLER( document ) ); // true\n\t *\t\tconverter.isBlockFiller( NBSP_FILLER( document ) ); // false\n\t *\n\t * **Note:**: For the `'nbsp'` mode the method also checks context of a node so it cannot be a detached node.\n\t *\n\t * **Note:** A special case in the `'nbsp'` mode exists where the `<br>` in `<p><br></p>` is treated as a block filler.\n\t *\n\t * @param {Node} domNode DOM node to check.\n\t * @returns {Boolean} True if a node is considered a block filler for given mode.\n\t */\n\tisBlockFiller( domNode ) {\n\t\tif ( this.blockFillerMode == 'br' ) {\n\t\t\treturn domNode.isEqualNode( BR_FILLER_REF );\n\t\t}\n\n\t\t// Special case for <p><br></p> in which case the <br> should be treated as filler even\n\t\t// when we're in the 'nbsp' mode. See ckeditor5#5564.\n\t\tif ( domNode.tagName === 'BR' && hasBlockParent( domNode, this.blockElements ) && domNode.parentNode.childNodes.length === 1 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn isNbspBlockFiller( domNode, this.blockElements );\n\t}\n\n\t/**\n\t * Returns `true` if given selection is a backward selection, that is, if it's `focus` is before `anchor`.\n\t *\n\t * @param {Selection} DOM Selection instance to check.\n\t * @returns {Boolean}\n\t */\n\tisDomSelectionBackward( selection ) {\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Since it takes multiple lines of code to check whether a \"DOM Position\" is before/after another \"DOM Position\",\n\t\t// we will use the fact that range will collapse if it's end is before it's start.\n\t\tconst range = document.createRange();\n\n\t\trange.setStart( selection.anchorNode, selection.anchorOffset );\n\t\trange.setEnd( selection.focusNode, selection.focusOffset );\n\n\t\tconst backward = range.collapsed;\n\n\t\trange.detach();\n\n\t\treturn backward;\n\t}\n\n\t/**\n\t * Returns parent {@link module:engine/view/uielement~UIElement} for provided DOM node. Returns `null` if there is no\n\t * parent UIElement.\n\t *\n\t * @param {Node} domNode\n\t * @returns {module:engine/view/uielement~UIElement|null}\n\t */\n\tgetParentUIElement( domNode ) {\n\t\tconst ancestors = getAncestors( domNode );\n\n\t\t// Remove domNode from the list.\n\t\tancestors.pop();\n\n\t\twhile ( ancestors.length ) {\n\t\t\tconst domNode = ancestors.pop();\n\t\t\tconst viewNode = this._domToViewMapping.get( domNode );\n\n\t\t\tif ( viewNode && viewNode.is( 'uiElement' ) ) {\n\t\t\t\treturn viewNode;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Checks if given selection's boundaries are at correct places.\n\t *\n\t * The following places are considered as incorrect for selection boundaries:\n\t * * before or in the middle of the inline filler sequence,\n\t * * inside the DOM element which represents {@link module:engine/view/uielement~UIElement a view ui element}.\n\t *\n\t * @param {Selection} domSelection DOM Selection object to be checked.\n\t * @returns {Boolean} `true` if the given selection is at a correct place, `false` otherwise.\n\t */\n\tisDomSelectionCorrect( domSelection ) {\n\t\treturn this._isDomSelectionPositionCorrect( domSelection.anchorNode, domSelection.anchorOffset ) &&\n\t\t\tthis._isDomSelectionPositionCorrect( domSelection.focusNode, domSelection.focusOffset );\n\t}\n\n\t/**\n\t * Checks if the given DOM position is a correct place for selection boundary. See {@link #isDomSelectionCorrect}.\n\t *\n\t * @private\n\t * @param {Element} domParent Position parent.\n\t * @param {Number} offset Position offset.\n\t * @returns {Boolean} `true` if given position is at a correct place for selection boundary, `false` otherwise.\n\t */\n\t_isDomSelectionPositionCorrect( domParent, offset ) {\n\t\t// If selection is before or in the middle of inline filler string, it is incorrect.\n\t\tif ( isText( domParent ) && startsWithFiller( domParent ) && offset < INLINE_FILLER_LENGTH ) {\n\t\t\t// Selection in a text node, at wrong position (before or in the middle of filler).\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this.isElement( domParent ) && startsWithFiller( domParent.childNodes[ offset ] ) ) {\n\t\t\t// Selection in an element node, before filler text node.\n\t\t\treturn false;\n\t\t}\n\n\t\tconst viewParent = this.mapDomToView( domParent );\n\n\t\t// If selection is in `view.UIElement`, it is incorrect. Note that `mapDomToView()` returns `view.UIElement`\n\t\t// also for any dom element that is inside the view ui element (so we don't need to perform any additional checks).\n\t\tif ( viewParent && viewParent.is( 'uiElement' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Takes text data from a given {@link module:engine/view/text~Text#data} and processes it so\n\t * it is correctly displayed in the DOM.\n\t *\n\t * Following changes are done:\n\t *\n\t * * a space at the beginning is changed to `&nbsp;` if this is the first text node in its container\n\t * element or if a previous text node ends with a space character,\n\t * * space at the end of the text node is changed to `&nbsp;` if there are two spaces at the end of a node or if next node\n\t * starts with a space or if it is the last text node in its container,\n\t * * remaining spaces are replaced to a chain of spaces and `&nbsp;` (e.g. `'x   x'` becomes `'x &nbsp; x'`).\n\t *\n\t * Content of {@link #preElements} is not processed.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} node View text node to process.\n\t * @returns {String} Processed text data.\n\t */\n\t_processDataFromViewText( node ) {\n\t\tlet data = node.data;\n\n\t\t// If any of node ancestors has a name which is in `preElements` array, then currently processed\n\t\t// view text node is (will be) in preformatted element. We should not change whitespaces then.\n\t\tif ( node.getAncestors().some( parent => this.preElements.includes( parent.name ) ) ) {\n\t\t\treturn data;\n\t\t}\n\n\t\t// 1. Replace the first space with a nbsp if the previous node ends with a space or there is no previous node\n\t\t// (container element boundary).\n\t\tif ( data.charAt( 0 ) == ' ' ) {\n\t\t\tconst prevNode = this._getTouchingViewTextNode( node, false );\n\t\t\tconst prevEndsWithSpace = prevNode && this._nodeEndsWithSpace( prevNode );\n\n\t\t\tif ( prevEndsWithSpace || !prevNode ) {\n\t\t\t\tdata = '\\u00A0' + data.substr( 1 );\n\t\t\t}\n\t\t}\n\n\t\t// 2. Replace the last space with nbsp if there are two spaces at the end or if the next node starts with space or there is no\n\t\t// next node (container element boundary).\n\t\t//\n\t\t// Keep in mind that Firefox prefers $nbsp; before tag, not inside it:\n\t\t//\n\t\t// Foo <span>&nbsp;bar</span>  <-- bad.\n\t\t// Foo&nbsp;<span> bar</span>  <-- good.\n\t\t//\n\t\t// More here: https://github.com/ckeditor/ckeditor5-engine/issues/1747.\n\t\tif ( data.charAt( data.length - 1 ) == ' ' ) {\n\t\t\tconst nextNode = this._getTouchingViewTextNode( node, true );\n\n\t\t\tif ( data.charAt( data.length - 2 ) == ' ' || !nextNode || nextNode.data.charAt( 0 ) == ' ' ) {\n\t\t\t\tdata = data.substr( 0, data.length - 1 ) + '\\u00A0';\n\t\t\t}\n\t\t}\n\n\t\t// 3. Create space+nbsp pairs.\n\t\treturn data.replace( / {2}/g, ' \\u00A0' );\n\t}\n\n\t/**\n\t * Checks whether given node ends with a space character after changing appropriate space characters to `&nbsp;`s.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} node Node to check.\n\t * @returns {Boolean} `true` if given `node` ends with space, `false` otherwise.\n\t */\n\t_nodeEndsWithSpace( node ) {\n\t\tif ( node.getAncestors().some( parent => this.preElements.includes( parent.name ) ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst data = this._processDataFromViewText( node );\n\n\t\treturn data.charAt( data.length - 1 ) == ' ';\n\t}\n\n\t/**\n\t * Takes text data from native `Text` node and processes it to a correct {@link module:engine/view/text~Text view text node} data.\n\t *\n\t * Following changes are done:\n\t *\n\t * * multiple whitespaces are replaced to a single space,\n\t * * space at the beginning of a text node is removed if it is the first text node in its container\n\t * element or if the previous text node ends with a space character,\n\t * * space at the end of the text node is removed if there are two spaces at the end of a node or if next node\n\t * starts with a space or if it is the last text node in its container\n\t * * nbsps are converted to spaces.\n\t *\n\t * @param {Node} node DOM text node to process.\n\t * @returns {String} Processed data.\n\t * @private\n\t */\n\t_processDataFromDomText( node ) {\n\t\tlet data = node.data;\n\n\t\tif ( _hasDomParentOfType( node, this.preElements ) ) {\n\t\t\treturn getDataWithoutFiller( node );\n\t\t}\n\n\t\t// Change all consecutive whitespace characters (from the [ \\n\\t\\r] set –\n\t\t// see https://github.com/ckeditor/ckeditor5-engine/issues/822#issuecomment-311670249) to a single space character.\n\t\t// That's how multiple whitespaces are treated when rendered, so we normalize those whitespaces.\n\t\t// We're replacing 1+ (and not 2+) to also normalize singular \\n\\t\\r characters (#822).\n\t\tdata = data.replace( /[ \\n\\t\\r]{1,}/g, ' ' );\n\n\t\tconst prevNode = this._getTouchingInlineDomNode( node, false );\n\t\tconst nextNode = this._getTouchingInlineDomNode( node, true );\n\n\t\tconst shouldLeftTrim = this._checkShouldLeftTrimDomText( prevNode );\n\t\tconst shouldRightTrim = this._checkShouldRightTrimDomText( node, nextNode );\n\n\t\t// If the previous dom text node does not exist or it ends by whitespace character, remove space character from the beginning\n\t\t// of this text node. Such space character is treated as a whitespace.\n\t\tif ( shouldLeftTrim ) {\n\t\t\tdata = data.replace( /^ /, '' );\n\t\t}\n\n\t\t// If the next text node does not exist remove space character from the end of this text node.\n\t\tif ( shouldRightTrim ) {\n\t\t\tdata = data.replace( / $/, '' );\n\t\t}\n\n\t\t// At the beginning and end of a block element, Firefox inserts normal space + <br> instead of non-breaking space.\n\t\t// This means that the text node starts/end with normal space instead of non-breaking space.\n\t\t// This causes a problem because the normal space would be removed in `.replace` calls above. To prevent that,\n\t\t// the inline filler is removed only after the data is initially processed (by the `.replace` above). See ckeditor5#692.\n\t\tdata = getDataWithoutFiller( new Text( data ) );\n\n\t\t// At this point we should have removed all whitespaces from DOM text data.\n\t\t//\n\t\t// Now, We will reverse the process that happens in `_processDataFromViewText`.\n\t\t//\n\t\t// We have to change &nbsp; chars, that were in DOM text data because of rendering reasons, to spaces.\n\t\t// First, change all ` \\u00A0` pairs (space + &nbsp;) to two spaces. DOM converter changes two spaces from model/view to\n\t\t// ` \\u00A0` to ensure proper rendering. Since here we convert back, we recognize those pairs and change them back to `  `.\n\t\tdata = data.replace( / \\u00A0/g, '  ' );\n\n\t\t// Then, let's change the last nbsp to a space.\n\t\tif ( /( |\\u00A0)\\u00A0$/.test( data ) || !nextNode || ( nextNode.data && nextNode.data.charAt( 0 ) == ' ' ) ) {\n\t\t\tdata = data.replace( /\\u00A0$/, ' ' );\n\t\t}\n\n\t\t// Then, change &nbsp; character that is at the beginning of the text node to space character.\n\t\t// We do that replacement only if this is the first node or the previous node ends on whitespace character.\n\t\tif ( shouldLeftTrim ) {\n\t\t\tdata = data.replace( /^\\u00A0/, ' ' );\n\t\t}\n\n\t\t// At this point, all whitespaces should be removed and all &nbsp; created for rendering reasons should be\n\t\t// changed to normal space. All left &nbsp; are &nbsp; inserted intentionally.\n\t\treturn data;\n\t}\n\n\t/**\n\t * Helper function which checks if a DOM text node, preceded by the given `prevNode` should\n\t * be trimmed from the left side.\n\t *\n\t * @param {Node} prevNode\n\t */\n\t_checkShouldLeftTrimDomText( prevNode ) {\n\t\tif ( !prevNode ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( isElement( prevNode ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn /[^\\S\\u00A0]/.test( prevNode.data.charAt( prevNode.data.length - 1 ) );\n\t}\n\n\t/**\n\t * Helper function which checks if a DOM text node, succeeded by the given `nextNode` should\n\t * be trimmed from the right side.\n\t *\n\t * @param {Node} node\n\t * @param {Node} nextNode\n\t */\n\t_checkShouldRightTrimDomText( node, nextNode ) {\n\t\tif ( nextNode ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !startsWithFiller( node );\n\t}\n\n\t/**\n\t * Helper function. For given {@link module:engine/view/text~Text view text node}, it finds previous or next sibling\n\t * that is contained in the same container element. If there is no such sibling, `null` is returned.\n\t *\n\t * @param {module:engine/view/text~Text} node Reference node.\n\t * @param {Boolean} getNext\n\t * @returns {module:engine/view/text~Text|null} Touching text node or `null` if there is no next or previous touching text node.\n\t */\n\t_getTouchingViewTextNode( node, getNext ) {\n\t\tconst treeWalker = new ViewTreeWalker( {\n\t\t\tstartPosition: getNext ? ViewPosition._createAfter( node ) : ViewPosition._createBefore( node ),\n\t\t\tdirection: getNext ? 'forward' : 'backward'\n\t\t} );\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\t// ViewContainerElement is found on a way to next ViewText node, so given `node` was first/last\n\t\t\t// text node in its container element.\n\t\t\tif ( value.item.is( 'containerElement' ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// <br> found – it works like a block boundary, so do not scan further.\n\t\t\telse if ( value.item.is( 'br' ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// Found a text node in the same container element.\n\t\t\telse if ( value.item.is( 'textProxy' ) ) {\n\t\t\t\treturn value.item;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Helper function. For the given text node, it finds the closest touching node which is either\n\t * a text node or a `<br>`. The search is terminated at block element boundaries and if a matching node\n\t * wasn't found so far, `null` is returned.\n\t *\n\t * In the following DOM structure:\n\t *\n\t *\t\t<p>foo<b>bar</b><br>bom</p>\n\t *\n\t * * `foo` doesn't have its previous touching inline node (`null` is returned),\n\t * * `foo`'s next touching inline node is `bar`\n\t * * `bar`'s next touching inline node is `<br>`\n\t *\n\t * This method returns text nodes and `<br>` elements because these types of nodes affect how\n\t * spaces in the given text node need to be converted.\n\t *\n\t * @private\n\t * @param {Text} node\n\t * @param {Boolean} getNext\n\t * @returns {Text|Element|null}\n\t */\n\t_getTouchingInlineDomNode( node, getNext ) {\n\t\tif ( !node.parentNode ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst direction = getNext ? 'nextNode' : 'previousNode';\n\t\tconst document = node.ownerDocument;\n\t\tconst topmostParent = getAncestors( node )[ 0 ];\n\n\t\tconst treeWalker = document.createTreeWalker( topmostParent, NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT, {\n\t\t\tacceptNode( node ) {\n\t\t\t\tif ( isText( node ) ) {\n\t\t\t\t\treturn NodeFilter.FILTER_ACCEPT;\n\t\t\t\t}\n\n\t\t\t\tif ( node.tagName == 'BR' ) {\n\t\t\t\t\treturn NodeFilter.FILTER_ACCEPT;\n\t\t\t\t}\n\n\t\t\t\treturn NodeFilter.FILTER_SKIP;\n\t\t\t}\n\t\t} );\n\n\t\ttreeWalker.currentNode = node;\n\n\t\tconst touchingNode = treeWalker[ direction ]();\n\n\t\tif ( touchingNode !== null ) {\n\t\t\tconst lca = getCommonAncestor( node, touchingNode );\n\n\t\t\t// If there is common ancestor between the text node and next/prev text node,\n\t\t\t// and there are no block elements on a way from the text node to that ancestor,\n\t\t\t// and there are no block elements on a way from next/prev text node to that ancestor...\n\t\t\tif (\n\t\t\t\tlca &&\n\t\t\t\t!_hasDomParentOfType( node, this.blockElements, lca ) &&\n\t\t\t\t!_hasDomParentOfType( touchingNode, this.blockElements, lca )\n\t\t\t) {\n\t\t\t\t// Then they are in the same container element.\n\t\t\t\treturn touchingNode;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\n// Helper function.\n// Used to check if given native `Element` or `Text` node has parent with tag name from `types` array.\n//\n// @param {Node} node\n// @param {Array.<String>} types\n// @param {Boolean} [boundaryParent] Can be given if parents should be checked up to a given element (excluding that element).\n// @returns {Boolean} `true` if such parent exists or `false` if it does not.\nfunction _hasDomParentOfType( node, types, boundaryParent ) {\n\tlet parents = getAncestors( node );\n\n\tif ( boundaryParent ) {\n\t\tparents = parents.slice( parents.indexOf( boundaryParent ) + 1 );\n\t}\n\n\treturn parents.some( parent => parent.tagName && types.includes( parent.tagName.toLowerCase() ) );\n}\n\n// A helper that executes given callback for each DOM node's ancestor, starting from the given node\n// and ending in document#documentElement.\n//\n// @param {Node} node\n// @param {Function} callback A callback to be executed for each ancestor.\nfunction forEachDomNodeAncestor( node, callback ) {\n\twhile ( node && node != global.document ) {\n\t\tcallback( node );\n\t\tnode = node.parentNode;\n\t}\n}\n\n// Checks if given node is a nbsp block filler.\n//\n// A &nbsp; is a block filler only if it is a single child of a block element.\n//\n// @param {Node} domNode DOM node.\n// @returns {Boolean}\nfunction isNbspBlockFiller( domNode, blockElements ) {\n\tconst isNBSP = isText( domNode ) && domNode.data == '\\u00A0';\n\n\treturn isNBSP && hasBlockParent( domNode, blockElements ) && domNode.parentNode.childNodes.length === 1;\n}\n\n// Checks if domNode has block parent.\n//\n// @param {Node} domNode DOM node.\n// @returns {Boolean}\nfunction hasBlockParent( domNode, blockElements ) {\n\tconst parent = domNode.parentNode;\n\n\treturn parent && parent.tagName && blockElements.includes( parent.tagName.toLowerCase() );\n}\n\n/**\n * Enum representing type of the block filler.\n *\n * Possible values:\n *\n * * `br` - for `<br>` block filler used in editing view,\n * * `nbsp` - for `&nbsp;` block fillers used in the data.\n *\n * @typedef {String} module:engine/view/filler~BlockFillerMode\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/iswindow\n */\n\n/**\n * Checks if the object is a native DOM Window.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isWindow( obj ) {\n\tconst stringifiedObject = Object.prototype.toString.apply( obj );\n\n\t// Returns `true` for the `window` object in browser environments.\n\tif ( stringifiedObject == '[object Window]' ) {\n\t\treturn true;\n\t}\n\n\t// Returns `true` for the `window` object in the Electron environment.\n\tif ( stringifiedObject == '[object global]' ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/emittermixin\n */\n\nimport { default as EmitterMixin, _getEmitterListenedTo, _setEmitterId } from '../emittermixin';\nimport uid from '../uid';\nimport isNode from './isnode';\nimport isWindow from './iswindow';\nimport { extend } from 'lodash-es';\n\n/**\n * Mixin that injects the DOM events API into its host. It provides the API\n * compatible with {@link module:utils/emittermixin~EmitterMixin}.\n *\n * DOM emitter mixin is by default available in the {@link module:ui/view~View} class,\n * but it can also be mixed into any other class:\n *\n *\t\timport mix from '../utils/mix.js';\n *\t\timport DomEmitterMixin from '../utils/dom/emittermixin.js';\n *\n *\t\tclass SomeView {}\n *\t\tmix( SomeView, DomEmitterMixin );\n *\n *\t\tconst view = new SomeView();\n *\t\tview.listenTo( domElement, ( evt, domEvt ) => {\n *\t\t\tconsole.log( evt, domEvt );\n *\t\t} );\n *\n * @mixin EmitterMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n */\nconst DomEmitterMixin = extend( {}, EmitterMixin, {\n\t/**\n\t * Registers a callback function to be executed when an event is fired in a specific Emitter or DOM Node.\n\t * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n\t *\n\t * @param {module:utils/emittermixin~Emitter|Node} emitter The object that fires the event.\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n\t * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n\t * order they were added.\n\t * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n\t * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n\t */\n\tlistenTo( emitter, ...rest ) {\n\t\t// Check if emitter is an instance of DOM Node. If so, replace the argument with\n\t\t// corresponding ProxyEmitter (or create one if not existing).\n\t\tif ( isNode( emitter ) || isWindow( emitter ) ) {\n\t\t\tconst proxy = this._getProxyEmitter( emitter ) || new ProxyEmitter( emitter );\n\n\t\t\tproxy.attach( ...rest );\n\n\t\t\temitter = proxy;\n\t\t}\n\n\t\t// Execute parent class method with Emitter (or ProxyEmitter) instance.\n\t\tEmitterMixin.listenTo.call( this, emitter, ...rest );\n\t},\n\n\t/**\n\t * Stops listening for events. It can be used at different levels:\n\t * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n\t *\n\t * * To stop listening to a specific callback.\n\t * * To stop listening to a specific event.\n\t * * To stop listening to all events fired by a specific object.\n\t * * To stop listening to all events fired by all object.\n\t *\n\t * @param {module:utils/emittermixin~Emitter|Node} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n\t * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n\t * for all events from `emitter`.\n\t * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n\t * `event`.\n\t */\n\tstopListening( emitter, event, callback ) {\n\t\t// Check if emitter is an instance of DOM Node. If so, replace the argument with corresponding ProxyEmitter.\n\t\tif ( isNode( emitter ) || isWindow( emitter ) ) {\n\t\t\tconst proxy = this._getProxyEmitter( emitter );\n\n\t\t\t// Element has no listeners.\n\t\t\tif ( !proxy ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\temitter = proxy;\n\t\t}\n\n\t\t// Execute parent class method with Emitter (or ProxyEmitter) instance.\n\t\tEmitterMixin.stopListening.call( this, emitter, event, callback );\n\n\t\tif ( emitter instanceof ProxyEmitter ) {\n\t\t\temitter.detach( event );\n\t\t}\n\t},\n\n\t/**\n\t * Retrieves ProxyEmitter instance for given DOM Node residing in this Host.\n\t *\n\t * @private\n\t * @param {Node} node DOM Node of the ProxyEmitter.\n\t * @returns {module:utils/dom/emittermixin~ProxyEmitter} ProxyEmitter instance or null.\n\t */\n\t_getProxyEmitter( node ) {\n\t\treturn _getEmitterListenedTo( this, getNodeUID( node ) );\n\t}\n} );\n\nexport default DomEmitterMixin;\n\n/**\n * Creates a ProxyEmitter instance. Such an instance is a bridge between a DOM Node firing events\n * and any Host listening to them. It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#on}.\n *\n *                                  listenTo( click, ... )\n *                    +-----------------------------------------+\n *                    |              stopListening( ... )       |\n *     +----------------------------+                           |             addEventListener( click, ... )\n *     | Host                       |                           |   +---------------------------------------------+\n *     +----------------------------+                           |   |       removeEventListener( click, ... )     |\n *     | _listeningTo: {            |                +----------v-------------+                                   |\n *     |   UID: {                   |                | ProxyEmitter           |                                   |\n *     |     emitter: ProxyEmitter, |                +------------------------+                      +------------v----------+\n *     |     callbacks: {           |                | events: {              |                      | Node (HTMLElement)    |\n *     |       click: [ callbacks ] |                |   click: [ callbacks ] |                      +-----------------------+\n *     |     }                      |                | },                     |                      | data-ck-expando: UID  |\n *     |   }                        |                | _domNode: Node,        |                      +-----------------------+\n *     | }                          |                | _domListeners: {},     |                                   |\n *     | +------------------------+ |                | _emitterId: UID        |                                   |\n *     | | DomEmitterMixin        | |                +--------------^---------+                                   |\n *     | +------------------------+ |                           |   |                                             |\n *     +--------------^-------------+                           |   +---------------------------------------------+\n *                    |                                         |                  click (DOM Event)\n *                    +-----------------------------------------+\n *                                fire( click, DOM Event )\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n * @private\n */\nclass ProxyEmitter {\n\t/**\n\t * @param {Node} node DOM Node that fires events.\n\t * @returns {Object} ProxyEmitter instance bound to the DOM Node.\n\t */\n\tconstructor( node ) {\n\t\t// Set emitter ID to match DOM Node \"expando\" property.\n\t\t_setEmitterId( this, getNodeUID( node ) );\n\n\t\t// Remember the DOM Node this ProxyEmitter is bound to.\n\t\tthis._domNode = node;\n\t}\n}\n\nextend( ProxyEmitter.prototype, EmitterMixin, {\n\t/**\n\t * Collection of native DOM listeners.\n\t *\n\t * @private\n\t * @member {Object} module:utils/dom/emittermixin~ProxyEmitter#_domListeners\n\t */\n\n\t/**\n\t * Registers a callback function to be executed when an event is fired.\n\t *\n\t * It attaches a native DOM listener to the DOM Node. When fired,\n\t * a corresponding Emitter event will also fire with DOM Event object as an argument.\n\t *\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#attach\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n\t * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n\t */\n\tattach( event, callback, options = {} ) {\n\t\t// If the DOM Listener for given event already exist it is pointless\n\t\t// to attach another one.\n\t\tif ( this._domListeners && this._domListeners[ event ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domListener = this._createDomListener( event, !!options.useCapture );\n\n\t\t// Attach the native DOM listener to DOM Node.\n\t\tthis._domNode.addEventListener( event, domListener, !!options.useCapture );\n\n\t\tif ( !this._domListeners ) {\n\t\t\tthis._domListeners = {};\n\t\t}\n\n\t\t// Store the native DOM listener in this ProxyEmitter. It will be helpful\n\t\t// when stopping listening to the event.\n\t\tthis._domListeners[ event ] = domListener;\n\t},\n\n\t/**\n\t * Stops executing the callback on the given event.\n\t *\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#detach\n\t * @param {String} event The name of the event.\n\t */\n\tdetach( event ) {\n\t\tlet events;\n\n\t\t// Remove native DOM listeners which are orphans. If no callbacks\n\t\t// are awaiting given event, detach native DOM listener from DOM Node.\n\t\t// See: {@link attach}.\n\n\t\tif ( this._domListeners[ event ] && ( !( events = this._events[ event ] ) || !events.callbacks.length ) ) {\n\t\t\tthis._domListeners[ event ].removeListener();\n\t\t}\n\t},\n\n\t/**\n\t * Creates a native DOM listener callback. When the native DOM event\n\t * is fired it will fire corresponding event on this ProxyEmitter.\n\t * Note: A native DOM Event is passed as an argument.\n\t *\n\t * @private\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#_createDomListener\n\t * @param {String} event The name of the event.\n\t * @param {Boolean} useCapture Indicates whether the listener was created for capturing event.\n\t * @returns {Function} The DOM listener callback.\n\t */\n\t_createDomListener( event, useCapture ) {\n\t\tconst domListener = domEvt => {\n\t\t\tthis.fire( event, domEvt );\n\t\t};\n\n\t\t// Supply the DOM listener callback with a function that will help\n\t\t// detach it from the DOM Node, when it is no longer necessary.\n\t\t// See: {@link detach}.\n\t\tdomListener.removeListener = () => {\n\t\t\tthis._domNode.removeEventListener( event, domListener, useCapture );\n\t\t\tdelete this._domListeners[ event ];\n\t\t};\n\n\t\treturn domListener;\n\t}\n} );\n\n// Gets an unique DOM Node identifier. The identifier will be set if not defined.\n//\n// @private\n// @param {Node} node\n// @returns {String} UID for given DOM Node.\nfunction getNodeUID( node ) {\n\treturn node[ 'data-ck-expando' ] || ( node[ 'data-ck-expando' ] = uid() );\n}\n\n/**\n * Interface representing classes which mix in {@link module:utils/dom/emittermixin~EmitterMixin}.\n *\n * @interface Emitter\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/observer\n */\n\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Abstract base observer class. Observers are classes which listen to DOM events, do the preliminary\n * processing and fire events on the {@link module:engine/view/document~Document} objects.\n * Observers can also add features to the view, for instance by updating its status or marking elements\n * which need refresh on DOM events.\n *\n * @abstract\n */\nexport default class Observer {\n\t/**\n\t * Creates an instance of the observer.\n\t *\n\t * @param {module:engine/view/view~View} view\n\t */\n\tconstructor( view ) {\n\t\t/**\n\t\t * Instance of the view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/view~View}\n\t\t */\n\t\tthis.view = view;\n\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/document~Document} object.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = view.document;\n\n\t\t/**\n\t\t * State of the observer. If it is disabled events will not be fired.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.isEnabled = false;\n\t}\n\n\t/**\n\t * Enables the observer. This method is called when the observer is registered to the\n\t * {@link module:engine/view/view~View} and after {@link module:engine/view/view~View#forceRender rendering}\n\t * (all observers are {@link #disable disabled} before rendering).\n\t *\n\t * A typical use case for disabling observers is that mutation observers need to be disabled for the rendering.\n\t * However, a child class may not need to be disabled, so it can implement an empty method.\n\t *\n\t * @see module:engine/view/observer/observer~Observer#disable\n\t */\n\tenable() {\n\t\tthis.isEnabled = true;\n\t}\n\n\t/**\n\t * Disables the observer. This method is called before\n\t * {@link module:engine/view/view~View#forceRender rendering} to prevent firing events during rendering.\n\t *\n\t * @see module:engine/view/observer/observer~Observer#enable\n\t */\n\tdisable() {\n\t\tthis.isEnabled = false;\n\t}\n\n\t/**\n\t * Disables and destroys the observer, among others removes event listeners created by the observer.\n\t */\n\tdestroy() {\n\t\tthis.disable();\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Starts observing the given root element.\n\t *\n\t * @method #observe\n\t * @param {HTMLElement} domElement\n\t * @param {String} name The name of the root element.\n\t */\n}\n\nmix( Observer, DomEmitterMixin );\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n","import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * This method is like `_.isEqual` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with up to\n * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, othValue) {\n *   if (isGreeting(objValue) && isGreeting(othValue)) {\n *     return true;\n *   }\n * }\n *\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * _.isEqualWith(array, other, customizer);\n * // => true\n */\nfunction isEqualWith(value, other, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  var result = customizer ? customizer(value, other) : undefined;\n  return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n}\n\nexport default isEqualWith;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/mutationobserver\n */\n\n/* globals window */\n\nimport Observer from './observer';\nimport ViewSelection from '../selection';\nimport { startsWithFiller, getDataWithoutFiller } from '../filler';\nimport { isEqualWith } from 'lodash-es';\n\n/**\n * Mutation observer class observes changes in the DOM, fires {@link module:engine/view/document~Document#event:mutations} event, mark view\n * elements as changed and call {@link module:engine/view/renderer~Renderer#render}.\n * Because all mutated nodes are marked as \"to be rendered\" and the\n * {@link module:engine/view/renderer~Renderer#render} is called, all changes will be reverted, unless the mutation will be handled by the\n * {@link module:engine/view/document~Document#event:mutations} event listener. It means user will see only handled changes, and the editor\n * will block all changes which are not handled.\n *\n * Mutation Observer also take care of reducing number of mutations which are fired. It removes duplicates and\n * mutations on elements which do not have corresponding view elements. Also\n * {@link module:engine/view/observer/mutationobserver~MutatedText text mutation} is fired only if parent element do not change child list.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class MutationObserver extends Observer {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * Native mutation observer config.\n\t\t *\n\t\t * @private\n\t\t * @member {Object}\n\t\t */\n\t\tthis._config = {\n\t\t\tchildList: true,\n\t\t\tcharacterData: true,\n\t\t\tcharacterDataOldValue: true,\n\t\t\tsubtree: true\n\t\t};\n\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/view~View#domConverter}.\n\t\t *\n\t\t * @member {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis.domConverter = view.domConverter;\n\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/view~View#_renderer}.\n\t\t *\n\t\t * @member {module:engine/view/renderer~Renderer}\n\t\t */\n\t\tthis.renderer = view._renderer;\n\n\t\t/**\n\t\t * Observed DOM elements.\n\t\t *\n\t\t * @private\n\t\t * @member {Array.<HTMLElement>}\n\t\t */\n\t\tthis._domElements = [];\n\n\t\t/**\n\t\t * Native mutation observer.\n\t\t *\n\t\t * @private\n\t\t * @member {MutationObserver}\n\t\t */\n\t\tthis._mutationObserver = new window.MutationObserver( this._onMutations.bind( this ) );\n\t}\n\n\t/**\n\t * Synchronously fires {@link module:engine/view/document~Document#event:mutations} event with all mutations in record queue.\n\t * At the same time empties the queue so mutations will not be fired twice.\n\t */\n\tflush() {\n\t\tthis._onMutations( this._mutationObserver.takeRecords() );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domElement ) {\n\t\tthis._domElements.push( domElement );\n\n\t\tif ( this.isEnabled ) {\n\t\t\tthis._mutationObserver.observe( domElement, this._config );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tenable() {\n\t\tsuper.enable();\n\n\t\tfor ( const domElement of this._domElements ) {\n\t\t\tthis._mutationObserver.observe( domElement, this._config );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisable() {\n\t\tsuper.disable();\n\n\t\tthis._mutationObserver.disconnect();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis._mutationObserver.disconnect();\n\t}\n\n\t/**\n\t * Handles mutations. Deduplicates, mark view elements to sync, fire event and call render.\n\t *\n\t * @private\n\t * @param {Array.<Object>} domMutations Array of native mutations.\n\t */\n\t_onMutations( domMutations ) {\n\t\t// As a result of this.flush() we can have an empty collection.\n\t\tif ( domMutations.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domConverter = this.domConverter;\n\n\t\t// Use map and set for deduplication.\n\t\tconst mutatedTexts = new Map();\n\t\tconst mutatedElements = new Set();\n\n\t\t// Handle `childList` mutations first, so we will be able to check if the `characterData` mutation is in the\n\t\t// element with changed structure anyway.\n\t\tfor ( const mutation of domMutations ) {\n\t\t\tif ( mutation.type === 'childList' ) {\n\t\t\t\tconst element = domConverter.mapDomToView( mutation.target );\n\n\t\t\t\t// Do not collect mutations from UIElements.\n\t\t\t\tif ( element && element.is( 'uiElement' ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ( element && !this._isBogusBrMutation( mutation ) ) {\n\t\t\t\t\tmutatedElements.add( element );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Handle `characterData` mutations later, when we have the full list of nodes which changed structure.\n\t\tfor ( const mutation of domMutations ) {\n\t\t\tconst element = domConverter.mapDomToView( mutation.target );\n\n\t\t\t// Do not collect mutations from UIElements.\n\t\t\tif ( element && element.is( 'uiElement' ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( mutation.type === 'characterData' ) {\n\t\t\t\tconst text = domConverter.findCorrespondingViewText( mutation.target );\n\n\t\t\t\tif ( text && !mutatedElements.has( text.parent ) ) {\n\t\t\t\t\t// Use text as a key, for deduplication. If there will be another mutation on the same text element\n\t\t\t\t\t// we will have only one in the map.\n\t\t\t\t\tmutatedTexts.set( text, {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\toldText: text.data,\n\t\t\t\t\t\tnewText: getDataWithoutFiller( mutation.target ),\n\t\t\t\t\t\tnode: text\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\t// When we added first letter to the text node which had only inline filler, for the DOM it is mutation\n\t\t\t\t// on text, but for the view, where filler text node did not existed, new text node was created, so we\n\t\t\t\t// need to fire 'children' mutation instead of 'text'.\n\t\t\t\telse if ( !text && startsWithFiller( mutation.target ) ) {\n\t\t\t\t\tmutatedElements.add( domConverter.mapDomToView( mutation.target.parentNode ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now we build the list of mutations to fire and mark elements. We did not do it earlier to avoid marking the\n\t\t// same node multiple times in case of duplication.\n\n\t\t// List of mutations we will fire.\n\t\tconst viewMutations = [];\n\n\t\tfor ( const mutatedText of mutatedTexts.values() ) {\n\t\t\tthis.renderer.markToSync( 'text', mutatedText.node );\n\t\t\tviewMutations.push( mutatedText );\n\t\t}\n\n\t\tfor ( const viewElement of mutatedElements ) {\n\t\t\tconst domElement = domConverter.mapViewToDom( viewElement );\n\t\t\tconst viewChildren = Array.from( viewElement.getChildren() );\n\t\t\tconst newViewChildren = Array.from( domConverter.domChildrenToView( domElement, { withChildren: false } ) );\n\n\t\t\t// It may happen that as a result of many changes (sth was inserted and then removed),\n\t\t\t// both elements haven't really changed. #1031\n\t\t\tif ( !isEqualWith( viewChildren, newViewChildren, sameNodes ) ) {\n\t\t\t\tthis.renderer.markToSync( 'children', viewElement );\n\n\t\t\t\tviewMutations.push( {\n\t\t\t\t\ttype: 'children',\n\t\t\t\t\toldChildren: viewChildren,\n\t\t\t\t\tnewChildren: newViewChildren,\n\t\t\t\t\tnode: viewElement\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\t// Retrieve `domSelection` using `ownerDocument` of one of mutated nodes.\n\t\t// There should not be simultaneous mutation in multiple documents, so it's fine.\n\t\tconst domSelection = domMutations[ 0 ].target.ownerDocument.getSelection();\n\n\t\tlet viewSelection = null;\n\n\t\tif ( domSelection && domSelection.anchorNode ) {\n\t\t\t// If `domSelection` is inside a dom node that is already bound to a view node from view tree, get\n\t\t\t// corresponding selection in the view and pass it together with `viewMutations`. The `viewSelection` may\n\t\t\t// be used by features handling mutations.\n\t\t\t// Only one range is supported.\n\n\t\t\tconst viewSelectionAnchor = domConverter.domPositionToView( domSelection.anchorNode, domSelection.anchorOffset );\n\t\t\tconst viewSelectionFocus = domConverter.domPositionToView( domSelection.focusNode, domSelection.focusOffset );\n\n\t\t\t// Anchor and focus has to be properly mapped to view.\n\t\t\tif ( viewSelectionAnchor && viewSelectionFocus ) {\n\t\t\t\tviewSelection = new ViewSelection( viewSelectionAnchor );\n\t\t\t\tviewSelection.setFocus( viewSelectionFocus );\n\t\t\t}\n\t\t}\n\n\t\t// In case only non-relevant mutations were recorded it skips the event and force render (#5600).\n\t\tif ( viewMutations.length ) {\n\t\t\tthis.document.fire( 'mutations', viewMutations, viewSelection );\n\n\t\t\t// If nothing changes on `mutations` event, at this point we have \"dirty DOM\" (changed) and de-synched\n\t\t\t// view (which has not been changed). In order to \"reset DOM\" we render the view again.\n\t\t\tthis.view.forceRender();\n\t\t}\n\n\t\tfunction sameNodes( child1, child2 ) {\n\t\t\t// First level of comparison (array of children vs array of children) – use the Lodash's default behavior.\n\t\t\tif ( Array.isArray( child1 ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Elements.\n\t\t\tif ( child1 === child2 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// Texts.\n\t\t\telse if ( child1.is( 'text' ) && child2.is( 'text' ) ) {\n\t\t\t\treturn child1.data === child2.data;\n\t\t\t}\n\n\t\t\t// Not matching types.\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Checks if mutation was generated by the browser inserting bogus br on the end of the block element.\n\t * Such mutations are generated while pressing space or performing native spellchecker correction\n\t * on the end of the block element in Firefox browser.\n\t *\n\t * @private\n\t * @param {Object} mutation Native mutation object.\n\t * @returns {Boolean}\n\t */\n\t_isBogusBrMutation( mutation ) {\n\t\tlet addedNode = null;\n\n\t\t// Check if mutation added only one node on the end of its parent.\n\t\tif ( mutation.nextSibling === null && mutation.removedNodes.length === 0 && mutation.addedNodes.length == 1 ) {\n\t\t\taddedNode = this.domConverter.domToView( mutation.addedNodes[ 0 ], {\n\t\t\t\twithChildren: false\n\t\t\t} );\n\t\t}\n\n\t\treturn addedNode && addedNode.is( 'element', 'br' );\n\t}\n}\n\n/**\n * Fired when mutation occurred. If tree view is not changed on this event, DOM will be reverted to the state before\n * mutation, so all changes which should be applied, should be handled on this event.\n *\n * Introduced by {@link module:engine/view/observer/mutationobserver~MutationObserver}.\n *\n * Note that because {@link module:engine/view/observer/mutationobserver~MutationObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @event module:engine/view/document~Document#event:mutations\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|module:engine/view/observer/mutationobserver~MutatedChildren>}\n * viewMutations Array of mutations.\n * For mutated texts it will be {@link module:engine/view/observer/mutationobserver~MutatedText} and for mutated elements it will be\n * {@link module:engine/view/observer/mutationobserver~MutatedChildren}. You can recognize the type based on the `type` property.\n * @param {module:engine/view/selection~Selection|null} viewSelection View selection that is a result of converting DOM selection to view.\n * Keep in\n * mind that the DOM selection is already \"updated\", meaning that it already acknowledges changes done in mutation.\n */\n\n/**\n * Mutation item for text.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedText\n *\n * @property {String} type For text mutations it is always 'text'.\n * @property {module:engine/view/text~Text} node Mutated text node.\n * @property {String} oldText Old text.\n * @property {String} newText New text.\n */\n\n/**\n * Mutation item for child nodes.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedText\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @property {String} type For child nodes mutations it is always 'children'.\n * @property {module:engine/view/element~Element} node Parent of the mutated children.\n * @property {Array.<module:engine/view/node~Node>} oldChildren Old child nodes.\n * @property {Array.<module:engine/view/node~Node>} newChildren New child nodes.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/domeventdata\n */\n\nimport { extend } from 'lodash-es';\n\n/**\n * Information about a DOM event in context of the {@link module:engine/view/document~Document}.\n * It wraps the native event, which usually should not be used as the wrapper contains\n * additional data (like key code for keyboard events).\n */\nexport default class DomEventData {\n\t/**\n\t * @param {module:engine/view/view~View} view The instance of the view controller.\n\t * @param {Event} domEvent The DOM event.\n\t * @param {Object} [additionalData] Additional properties that the instance should contain.\n\t */\n\tconstructor( view, domEvent, additionalData ) {\n\t\t/**\n\t\t * Instance of the view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/view~View} module:engine/view/observer/observer~Observer.DomEvent#view\n\t\t */\n\t\tthis.view = view;\n\n\t\t/**\n\t\t * The instance of the document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document} module:engine/view/observer/observer~Observer.DomEvent#document\n\t\t */\n\t\tthis.document = view.document;\n\n\t\t/**\n\t\t * The DOM event.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Event} module:engine/view/observer/observer~Observer.DomEvent#domEvent\n\t\t */\n\t\tthis.domEvent = domEvent;\n\n\t\t/**\n\t\t * The DOM target.\n\t\t *\n\t\t * @readonly\n\t\t * @member {HTMLElement} module:engine/view/observer/observer~Observer.DomEvent#target\n\t\t */\n\t\tthis.domTarget = domEvent.target;\n\n\t\textend( this, additionalData );\n\t}\n\n\t/**\n\t * The tree view element representing the target.\n\t *\n\t * @readonly\n\t * @type module:engine/view/element~Element\n\t */\n\tget target() {\n\t\treturn this.view.domConverter.mapDomToView( this.domTarget );\n\t}\n\n\t/**\n\t * Prevents the native's event default action.\n\t */\n\tpreventDefault() {\n\t\tthis.domEvent.preventDefault();\n\t}\n\n\t/**\n\t * Stops native event propagation.\n\t */\n\tstopPropagation() {\n\t\tthis.domEvent.stopPropagation();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/domeventobserver\n */\n\nimport Observer from './observer';\nimport DomEventData from './domeventdata';\n\n/**\n * Base class for DOM event observers. This class handles\n * {@link module:engine/view/observer/observer~Observer#observe adding} listeners to DOM elements,\n * {@link module:engine/view/observer/observer~Observer#disable disabling} and\n * {@link module:engine/view/observer/observer~Observer#enable re-enabling} events.\n * Child class needs to define\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#domEventType DOM event type} and\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#onDomEvent callback}.\n *\n * For instance:\n *\n *\t\tclass ClickObserver extends DomEventObserver {\n *\t\t\t// It can also be defined as a normal property in the constructor.\n *\t\t\tget domEventType() {\n *\t\t\t\treturn 'click';\n *\t\t\t}\n *\n *\t\t\tonDomEvent( domEvent ) {\n *\t\t\t\tthis.fire( 'click', domEvent );\n *\t\t\t}\n *\t\t}\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class DomEventObserver extends Observer {\n\t/**\n\t * Type of the DOM event the observer should listen on. Array of types can be defined\n\t * if the obsever should listen to multiple DOM events.\n\t *\n\t * @readonly\n\t * @member {String|Array.<String>} #domEventType\n\t */\n\n\t/**\n\t * Callback which should be called when the DOM event occurred. Note that the callback will not be called if\n\t * observer {@link #isEnabled is not enabled}.\n\t *\n\t * @see #domEventType\n\t * @abstract\n\t * @method #onDomEvent\n\t */\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * If set to `true` DOM events will be listened on the capturing phase.\n\t\t * Default value is `false`.\n\t\t *\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.useCapture = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domElement ) {\n\t\tconst types = typeof this.domEventType == 'string' ? [ this.domEventType ] : this.domEventType;\n\n\t\ttypes.forEach( type => {\n\t\t\tthis.listenTo( domElement, type, ( eventInfo, domEvent ) => {\n\t\t\t\tif ( this.isEnabled ) {\n\t\t\t\t\tthis.onDomEvent( domEvent );\n\t\t\t\t}\n\t\t\t}, { useCapture: this.useCapture } );\n\t\t} );\n\t}\n\n\t/**\n\t * Calls `Document#fire()` if observer {@link #isEnabled is enabled}.\n\t *\n\t * @see module:utils/emittermixin~EmitterMixin#fire\n\t * @param {String} eventType The event type (name).\n\t * @param {Event} domEvent The DOM event.\n\t * @param {Object} [additionalData] The additional data which should extend the\n\t * {@link module:engine/view/observer/domeventdata~DomEventData event data} object.\n\t */\n\tfire( eventType, domEvent, additionalData ) {\n\t\tif ( this.isEnabled ) {\n\t\t\tthis.document.fire( eventType, new DomEventData( this.view, domEvent, additionalData ) );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/keyobserver\n */\n\nimport DomEventObserver from './domeventobserver';\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * Observer for events connected with pressing keyboard keys.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class KeyObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'keydown', 'keyup' ];\n\t}\n\n\tonDomEvent( domEvt ) {\n\t\tthis.fire( domEvt.type, domEvt, {\n\t\t\tkeyCode: domEvt.keyCode,\n\n\t\t\taltKey: domEvt.altKey,\n\t\t\tctrlKey: domEvt.ctrlKey || domEvt.metaKey,\n\t\t\tshiftKey: domEvt.shiftKey,\n\n\t\t\tget keystroke() {\n\t\t\t\treturn getCode( this );\n\t\t\t}\n\t\t} );\n\t}\n}\n\n/**\n * Fired when a key has been pressed.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keydown\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * Fired when a key has been released.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keyup\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * The value of both events - {@link module:engine/view/document~Document#event:keydown} and\n * {@link module:engine/view/document~Document#event:keyup}.\n *\n * @class module:engine/view/observer/keyobserver~KeyEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n * @implements module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * Code of the whole keystroke. See {@link module:utils/keyboard~getCode}.\n *\n * @readonly\n * @member {Number} module:engine/view/observer/keyobserver~KeyEventData#keystroke\n */\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/fakeselectionobserver\n */\n\nimport Observer from './observer';\nimport ViewSelection from '../selection';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport { debounce } from 'lodash-es';\n\n/**\n * Fake selection observer class. If view selection is fake it is placed in dummy DOM container. This observer listens\n * on {@link module:engine/view/document~Document#event:keydown keydown} events and handles moving fake view selection to the correct place\n * if arrow keys are pressed.\n * Fires {@link module:engine/view/document~Document#event:selectionChange selectionChange event} simulating natural behaviour of\n * {@link module:engine/view/observer/selectionobserver~SelectionObserver SelectionObserver}.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class FakeSelectionObserver extends Observer {\n\t/**\n\t * Creates new FakeSelectionObserver instance.\n\t *\n\t * @param {module:engine/view/view~View} view\n\t */\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n\t\t *\n\t\t * @private\n\t\t * @param {Object} data Selection change data.\n\t\t * @method #_fireSelectionChangeDoneDebounced\n\t\t */\n\t\tthis._fireSelectionChangeDoneDebounced = debounce( data => this.document.fire( 'selectionChangeDone', data ), 200 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve() {\n\t\tconst document = this.document;\n\n\t\tdocument.on( 'keydown', ( eventInfo, data ) => {\n\t\t\tconst selection = document.selection;\n\n\t\t\tif ( selection.isFake && _isArrowKeyCode( data.keyCode ) && this.isEnabled ) {\n\t\t\t\t// Prevents default key down handling - no selection change will occur.\n\t\t\t\tdata.preventDefault();\n\n\t\t\t\tthis._handleSelectionMove( data.keyCode );\n\t\t\t}\n\t\t}, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis._fireSelectionChangeDoneDebounced.cancel();\n\t}\n\n\t/**\n\t * Handles collapsing view selection according to given key code. If left or up key is provided - new selection will be\n\t * collapsed to left. If right or down key is pressed - new selection will be collapsed to right.\n\t *\n\t * This method fires {@link module:engine/view/document~Document#event:selectionChange} and\n\t * {@link module:engine/view/document~Document#event:selectionChangeDone} events imitating behaviour of\n\t * {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n\t *\n\t * @private\n\t * @param {Number} keyCode\n\t * @fires module:engine/view/document~Document#event:selectionChange\n\t * @fires module:engine/view/document~Document#event:selectionChangeDone\n\t */\n\t_handleSelectionMove( keyCode ) {\n\t\tconst selection = this.document.selection;\n\t\tconst newSelection = new ViewSelection( selection.getRanges(), { backward: selection.isBackward, fake: false } );\n\n\t\t// Left or up arrow pressed - move selection to start.\n\t\tif ( keyCode == keyCodes.arrowleft || keyCode == keyCodes.arrowup ) {\n\t\t\tnewSelection.setTo( newSelection.getFirstPosition() );\n\t\t}\n\n\t\t// Right or down arrow pressed - move selection to end.\n\t\tif ( keyCode == keyCodes.arrowright || keyCode == keyCodes.arrowdown ) {\n\t\t\tnewSelection.setTo( newSelection.getLastPosition() );\n\t\t}\n\n\t\tconst data = {\n\t\t\toldSelection: selection,\n\t\t\tnewSelection,\n\t\t\tdomSelection: null\n\t\t};\n\n\t\t// Fire dummy selection change event.\n\t\tthis.document.fire( 'selectionChange', data );\n\n\t\t// Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n\t\t// This function is debounced what means that `selectionChangeDone` event will be fired only when\n\t\t// defined int the function time will elapse since the last time the function was called.\n\t\t// So `selectionChangeDone` will be fired when selection will stop changing.\n\t\tthis._fireSelectionChangeDoneDebounced( data );\n\t}\n}\n\n// Checks if one of the arrow keys is pressed.\n//\n// @private\n// @param {Number} keyCode\n// @returns {Boolean}\nfunction _isArrowKeyCode( keyCode ) {\n\treturn keyCode == keyCodes.arrowright ||\n\t\tkeyCode == keyCodes.arrowleft ||\n\t\tkeyCode == keyCodes.arrowup ||\n\t\tkeyCode == keyCodes.arrowdown;\n}\n\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/selectionobserver\n */\n\n/* global setInterval, clearInterval */\n\nimport Observer from './observer';\nimport MutationObserver from './mutationobserver';\nimport { debounce } from 'lodash-es';\n\n/**\n * Selection observer class observes selection changes in the document. If selection changes on the document this\n * observer checks if there are any mutations and if DOM selection is different than the\n * {@link module:engine/view/document~Document#selection view selection}. Selection observer fires\n * {@link module:engine/view/document~Document#event:selectionChange} event only if selection change was the only change in the document\n * and DOM selection is different then the view selection.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class SelectionObserver extends Observer {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * Instance of the mutation observer. Selection observer calls\n\t\t * {@link module:engine/view/observer/mutationobserver~MutationObserver#flush} to ensure that the mutations will be handled\n\t\t * before the {@link module:engine/view/document~Document#event:selectionChange} event is fired.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/observer/mutationobserver~MutationObserver}\n\t\t * module:engine/view/observer/selectionobserver~SelectionObserver#mutationObserver\n\t\t */\n\t\tthis.mutationObserver = view.getObserver( MutationObserver );\n\n\t\t/**\n\t\t * Reference to the view {@link module:engine/view/documentselection~DocumentSelection} object used to compare\n\t\t * new selection with it.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/documentselection~DocumentSelection}\n\t\t * module:engine/view/observer/selectionobserver~SelectionObserver#selection\n\t\t */\n\t\tthis.selection = this.document.selection;\n\n\t\t/* eslint-disable max-len */\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/view~View#domConverter}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/domconverter~DomConverter} module:engine/view/observer/selectionobserver~SelectionObserver#domConverter\n\t\t */\n\t\t/* eslint-enable max-len */\n\t\tthis.domConverter = view.domConverter;\n\n\t\t/**\n\t\t * Set of documents which have added \"selectionchange\" listener to avoid adding listener twice to the same\n\t\t * document.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakSet.<Document>} module:engine/view/observer/selectionobserver~SelectionObserver#_documents\n\t\t */\n\t\tthis._documents = new WeakSet();\n\n\t\t/**\n\t\t * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n\t\t *\n\t\t * @private\n\t\t * @param {Object} data Selection change data.\n\t\t * @method #_fireSelectionChangeDoneDebounced\n\t\t */\n\t\tthis._fireSelectionChangeDoneDebounced = debounce( data => this.document.fire( 'selectionChangeDone', data ), 200 );\n\n\t\tthis._clearInfiniteLoopInterval = setInterval( () => this._clearInfiniteLoop(), 1000 );\n\n\t\t/**\n\t\t * Private property to check if the code does not enter infinite loop.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} module:engine/view/observer/selectionobserver~SelectionObserver#_loopbackCounter\n\t\t */\n\t\tthis._loopbackCounter = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domElement ) {\n\t\tconst domDocument = domElement.ownerDocument;\n\n\t\t// Add listener once per each document.\n\t\tif ( this._documents.has( domDocument ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.listenTo( domDocument, 'selectionchange', () => {\n\t\t\tthis._handleSelectionChange( domDocument );\n\t\t} );\n\n\t\tthis._documents.add( domDocument );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tclearInterval( this._clearInfiniteLoopInterval );\n\t\tthis._fireSelectionChangeDoneDebounced.cancel();\n\t}\n\n\t/**\n\t * Selection change listener. {@link module:engine/view/observer/mutationobserver~MutationObserver#flush Flush} mutations, check if\n\t * selection changes and fires {@link module:engine/view/document~Document#event:selectionChange} event on every change\n\t * and {@link module:engine/view/document~Document#event:selectionChangeDone} when selection stop changing.\n\t *\n\t * @private\n\t * @param {Document} domDocument DOM document.\n\t */\n\t_handleSelectionChange( domDocument ) {\n\t\tif ( !this.isEnabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure the mutation event will be before selection event on all browsers.\n\t\tthis.mutationObserver.flush();\n\n\t\t// If there were mutations then the view will be re-rendered by the mutation observer and selection\n\t\t// will be updated, so selections will equal and event will not be fired, as expected.\n\t\tconst domSelection = domDocument.defaultView.getSelection();\n\t\tconst newViewSelection = this.domConverter.domSelectionToView( domSelection );\n\n\t\t// Do not convert selection change if the new view selection has no ranges in it.\n\t\t//\n\t\t// It means that the DOM selection is in some way incorrect. Ranges that were in the DOM selection could not be\n\t\t// converted to the view. This happens when the DOM selection was moved outside of the editable element.\n\t\tif ( newViewSelection.rangeCount == 0 ) {\n\t\t\tthis.view.hasDomSelection = false;\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.view.hasDomSelection = true;\n\n\t\tif ( this.selection.isEqual( newViewSelection ) && this.domConverter.isDomSelectionCorrect( domSelection ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure we are not in the infinite loop (#400).\n\t\t// This counter is reset each second. 60 selection changes in 1 second is enough high number\n\t\t// to be very difficult (impossible) to achieve using just keyboard keys (during normal editor use).\n\t\tif ( ++this._loopbackCounter > 60 ) {\n\t\t\t// Selection change observer detected an infinite rendering loop.\n\t\t\t// Most probably you try to put the selection in the position which is not allowed\n\t\t\t// by the browser and browser fixes it automatically what causes `selectionchange` event on\n\t\t\t// which a loopback through a model tries to re-render the wrong selection and again.\n\t\t\t//\n\t\t\t// @if CK_DEBUG // console.warn( 'Selection change observer detected an infinite rendering loop.' );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.selection.isSimilar( newViewSelection ) ) {\n\t\t\t// If selection was equal and we are at this point of algorithm, it means that it was incorrect.\n\t\t\t// Just re-render it, no need to fire any events, etc.\n\t\t\tthis.view.forceRender();\n\t\t} else {\n\t\t\tconst data = {\n\t\t\t\toldSelection: this.selection,\n\t\t\t\tnewSelection: newViewSelection,\n\t\t\t\tdomSelection\n\t\t\t};\n\n\t\t\t// Prepare data for new selection and fire appropriate events.\n\t\t\tthis.document.fire( 'selectionChange', data );\n\n\t\t\t// Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n\t\t\t// This function is debounced what means that `selectionChangeDone` event will be fired only when\n\t\t\t// defined int the function time will elapse since the last time the function was called.\n\t\t\t// So `selectionChangeDone` will be fired when selection will stop changing.\n\t\t\tthis._fireSelectionChangeDoneDebounced( data );\n\t\t}\n\t}\n\n\t/**\n\t * Clears `SelectionObserver` internal properties connected with preventing infinite loop.\n\t *\n\t * @protected\n\t */\n\t_clearInfiniteLoop() {\n\t\tthis._loopbackCounter = 0;\n\t}\n}\n\n/**\n * Fired when selection has changed. This event is fired only when the selection change was the only change that happened\n * in the document, and old selection is different then the new selection.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChange\n * @param {Object} data\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n\n/**\n * Fired when selection stops changing.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChangeDone\n * @param {Object} data\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/focusobserver\n */\n\n/* globals setTimeout, clearTimeout */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * {@link module:engine/view/document~Document#event:focus Focus}\n * and {@link module:engine/view/document~Document#event:blur blur} events observer.\n * Focus observer handle also {@link module:engine/view/rooteditableelement~RootEditableElement#isFocused isFocused} property of the\n * {@link module:engine/view/rooteditableelement~RootEditableElement root elements}.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class FocusObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'focus', 'blur' ];\n\t\tthis.useCapture = true;\n\t\tconst document = this.document;\n\n\t\tdocument.on( 'focus', () => {\n\t\t\tdocument.isFocused = true;\n\n\t\t\t// Unfortunately native `selectionchange` event is fired asynchronously.\n\t\t\t// We need to wait until `SelectionObserver` handle the event and then render. Otherwise rendering will\n\t\t\t// overwrite new DOM selection with selection from the view.\n\t\t\t// See https://github.com/ckeditor/ckeditor5-engine/issues/795 for more details.\n\t\t\t// Long timeout is needed to solve #676 and https://github.com/ckeditor/ckeditor5-engine/issues/1157 issues.\n\t\t\tthis._renderTimeoutId = setTimeout( () => view.forceRender(), 50 );\n\t\t} );\n\n\t\tdocument.on( 'blur', ( evt, data ) => {\n\t\t\tconst selectedEditable = document.selection.editableElement;\n\n\t\t\tif ( selectedEditable === null || selectedEditable === data.target ) {\n\t\t\t\tdocument.isFocused = false;\n\n\t\t\t\t// Re-render the document to update view elements.\n\t\t\t\tview.forceRender();\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * Identifier of the timeout currently used by focus listener to delay rendering execution.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} #_renderTimeoutId\n\t\t */\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tif ( this._renderTimeoutId ) {\n\t\t\tclearTimeout( this._renderTimeoutId );\n\t\t}\n\n\t\tsuper.destroy();\n\t}\n}\n\n/**\n * Fired when one of the editables gets focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:focus\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when one of the editables loses focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:blur\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/compositionobserver\n */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * {@link module:engine/view/document~Document#event:compositionstart Compositionstart},\n * {@link module:engine/view/document~Document#event:compositionupdate compositionupdate} and\n * {@link module:engine/view/document~Document#event:compositionend compositionend} events observer.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class CompositionObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'compositionstart', 'compositionupdate', 'compositionend' ];\n\t\tconst document = this.document;\n\n\t\tdocument.on( 'compositionstart', () => {\n\t\t\tdocument.isComposing = true;\n\t\t} );\n\n\t\tdocument.on( 'compositionend', () => {\n\t\t\tdocument.isComposing = false;\n\t\t} );\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n}\n\n/**\n * Fired when composition starts inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionstart\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when composition is updated inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionupdate\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when composition ends inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionend\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/inputobserver\n */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * Observer for events connected with data input.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class InputObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'beforeinput' ];\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n}\n\n/**\n * Fired before browser inputs (or deletes) some data.\n *\n * This event is available only on browsers which support DOM `beforeinput` event.\n *\n * Introduced by {@link module:engine/view/observer/inputobserver~InputObserver}.\n *\n * Note that because {@link module:engine/view/observer/inputobserver~InputObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/inputobserver~InputObserver\n * @event module:engine/view/document~Document#event:beforeinput\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/isrange\n */\n\n/**\n * Checks if the object is a native DOM Range.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isRange( obj ) {\n\treturn Object.prototype.toString.apply( obj ) == '[object Range]';\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/getborderwidths\n */\n\n/**\n * Returns an object containing CSS border widths of a specified HTML element.\n *\n * @param {HTMLElement} element An element which has CSS borders.\n * @returns {Object} An object containing `top`, `left`, `right` and `bottom` properties\n * with numerical values of the `border-[top,left,right,bottom]-width` CSS styles.\n */\nexport default function getBorderWidths( element ) {\n\t// Call getComputedStyle on the window the element document belongs to.\n\tconst style = element.ownerDocument.defaultView.getComputedStyle( element );\n\n\treturn {\n\t\ttop: parseInt( style.borderTopWidth, 10 ),\n\t\tright: parseInt( style.borderRightWidth, 10 ),\n\t\tbottom: parseInt( style.borderBottomWidth, 10 ),\n\t\tleft: parseInt( style.borderLeftWidth, 10 )\n\t};\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/rect\n */\n\nimport isRange from './isrange';\nimport isWindow from './iswindow';\nimport getBorderWidths from './getborderwidths';\nimport isText from './istext';\nimport { isElement } from 'lodash-es';\n\nconst rectProperties = [ 'top', 'right', 'bottom', 'left', 'width', 'height' ];\n\n/**\n * A helper class representing a `ClientRect` object, e.g. value returned by\n * the native `object.getBoundingClientRect()` method. Provides a set of methods\n * to manipulate the rect and compare it against other rect instances.\n */\nexport default class Rect {\n\t/**\n\t * Creates an instance of rect.\n\t *\n\t *\t\t// Rect of an HTMLElement.\n\t *\t\tconst rectA = new Rect( document.body );\n\t *\n\t *\t\t// Rect of a DOM Range.\n\t *\t\tconst rectB = new Rect( document.getSelection().getRangeAt( 0 ) );\n\t *\n\t *\t\t// Rect of a window (web browser viewport).\n\t *\t\tconst rectC = new Rect( window );\n\t *\n\t *\t\t// Rect out of an object.\n\t *\t\tconst rectD = new Rect( { top: 0, right: 10, bottom: 10, left: 0, width: 10, height: 10 } );\n\t *\n\t *\t\t// Rect out of another Rect instance.\n\t *\t\tconst rectE = new Rect( rectD );\n\t *\n\t *\t\t// Rect out of a ClientRect.\n\t *\t\tconst rectF = new Rect( document.body.getClientRects().item( 0 ) );\n\t *\n\t * **Note**: By default a rect of an HTML element includes its CSS borders and scrollbars (if any)\n\t * ant the rect of a `window` includes scrollbars too. Use {@link #excludeScrollbarsAndBorders}\n\t * to get the inner part of the rect.\n\t *\n\t * @param {HTMLElement|Range|Window|ClientRect|module:utils/dom/rect~Rect|Object} source A source object to create the rect.\n\t */\n\tconstructor( source ) {\n\t\tconst isSourceRange = isRange( source );\n\n\t\t/**\n\t\t * The object this rect is for.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @member {HTMLElement|Range|ClientRect|module:utils/dom/rect~Rect|Object} #_source\n\t\t */\n\t\tObject.defineProperty( this, '_source', {\n\t\t\t// If the source is a Rect instance, copy it's #_source.\n\t\t\tvalue: source._source || source,\n\t\t\twritable: true,\n\t\t\tenumerable: false\n\t\t} );\n\n\t\tif ( isElement( source ) || isSourceRange ) {\n\t\t\t// The `Rect` class depends on `getBoundingClientRect` and `getClientRects` DOM methods. If the source\n\t\t\t// of a rect in an HTML element or a DOM range but it does not belong to any rendered DOM tree, these methods\n\t\t\t// will fail to obtain the geometry and the rect instance makes little sense to the features using it.\n\t\t\t// To get rid of this warning make sure the source passed to the constructor is a descendant of `window.document.body`.\n\t\t\t// @if CK_DEBUG // const sourceNode = isSourceRange ? source.startContainer : source;\n\t\t\t// @if CK_DEBUG // if ( !sourceNode.ownerDocument || !sourceNode.ownerDocument.body.contains( sourceNode ) ) {\n\t\t\t// @if CK_DEBUG // \tconsole.warn(\n\t\t\t// @if CK_DEBUG // \t\t'rect-source-not-in-dom: The source of this rect does not belong to any rendered DOM tree.',\n\t\t\t// @if CK_DEBUG // \t\t{ source } );\n\t\t\t// @if CK_DEBUG // }\n\n\t\t\tif ( isSourceRange ) {\n\t\t\t\tcopyRectProperties( this, Rect.getDomRangeRects( source )[ 0 ] );\n\t\t\t} else {\n\t\t\t\tcopyRectProperties( this, source.getBoundingClientRect() );\n\t\t\t}\n\t\t} else if ( isWindow( source ) ) {\n\t\t\tconst { innerWidth, innerHeight } = source;\n\n\t\t\tcopyRectProperties( this, {\n\t\t\t\ttop: 0,\n\t\t\t\tright: innerWidth,\n\t\t\t\tbottom: innerHeight,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: innerWidth,\n\t\t\t\theight: innerHeight\n\t\t\t} );\n\t\t} else {\n\t\t\tcopyRectProperties( this, source );\n\t\t}\n\n\t\t/**\n\t\t * The \"top\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #top\n\t\t */\n\n\t\t/**\n\t\t * The \"right\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #right\n\t\t */\n\n\t\t/**\n\t\t * The \"bottom\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #bottom\n\t\t */\n\n\t\t/**\n\t\t * The \"left\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #left\n\t\t */\n\n\t\t/**\n\t\t * The \"width\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #width\n\t\t */\n\n\t\t/**\n\t\t * The \"height\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #height\n\t\t */\n\t}\n\n\t/**\n\t * Returns a clone of the rect.\n\t *\n\t * @returns {module:utils/dom/rect~Rect} A cloned rect.\n\t */\n\tclone() {\n\t\treturn new Rect( this );\n\t}\n\n\t/**\n\t * Moves the rect so that its upper–left corner lands in desired `[ x, y ]` location.\n\t *\n\t * @param {Number} x Desired horizontal location.\n\t * @param {Number} y Desired vertical location.\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n\t */\n\tmoveTo( x, y ) {\n\t\tthis.top = y;\n\t\tthis.right = x + this.width;\n\t\tthis.bottom = y + this.height;\n\t\tthis.left = x;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves the rect in–place by a dedicated offset.\n\t *\n\t * @param {Number} x A horizontal offset.\n\t * @param {Number} y A vertical offset\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n\t */\n\tmoveBy( x, y ) {\n\t\tthis.top += y;\n\t\tthis.right += x;\n\t\tthis.left += x;\n\t\tthis.bottom += y;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a new rect a a result of intersection with another rect.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect\n\t * @returns {module:utils/dom/rect~Rect}\n\t */\n\tgetIntersection( anotherRect ) {\n\t\tconst rect = {\n\t\t\ttop: Math.max( this.top, anotherRect.top ),\n\t\t\tright: Math.min( this.right, anotherRect.right ),\n\t\t\tbottom: Math.min( this.bottom, anotherRect.bottom ),\n\t\t\tleft: Math.max( this.left, anotherRect.left )\n\t\t};\n\n\t\trect.width = rect.right - rect.left;\n\t\trect.height = rect.bottom - rect.top;\n\n\t\tif ( rect.width < 0 || rect.height < 0 ) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn new Rect( rect );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the area of intersection with another rect.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect [description]\n\t * @returns {Number} Area of intersection.\n\t */\n\tgetIntersectionArea( anotherRect ) {\n\t\tconst rect = this.getIntersection( anotherRect );\n\n\t\tif ( rect ) {\n\t\t\treturn rect.getArea();\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the area of the rect.\n\t *\n\t * @returns {Number}\n\t */\n\tgetArea() {\n\t\treturn this.width * this.height;\n\t}\n\n\t/**\n\t * Returns a new rect, a part of the original rect, which is actually visible to the user,\n\t * e.g. an original rect cropped by parent element rects which have `overflow` set in CSS\n\t * other than `\"visible\"`.\n\t *\n\t * If there's no such visible rect, which is when the rect is limited by one or many of\n\t * the ancestors, `null` is returned.\n\t *\n\t * @returns {module:utils/dom/rect~Rect|null} A visible rect instance or `null`, if there's none.\n\t */\n\tgetVisible() {\n\t\tconst source = this._source;\n\t\tlet visibleRect = this.clone();\n\n\t\t// There's no ancestor to crop <body> with the overflow.\n\t\tif ( !isBody( source ) ) {\n\t\t\tlet parent = source.parentNode || source.commonAncestorContainer;\n\n\t\t\t// Check the ancestors all the way up to the <body>.\n\t\t\twhile ( parent && !isBody( parent ) ) {\n\t\t\t\tconst parentRect = new Rect( parent );\n\t\t\t\tconst intersectionRect = visibleRect.getIntersection( parentRect );\n\n\t\t\t\tif ( intersectionRect ) {\n\t\t\t\t\tif ( intersectionRect.getArea() < visibleRect.getArea() ) {\n\t\t\t\t\t\t// Reduce the visible rect to the intersection.\n\t\t\t\t\t\tvisibleRect = intersectionRect;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// There's no intersection, the rect is completely invisible.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\t}\n\n\t\treturn visibleRect;\n\t}\n\n\t/**\n\t * Checks if all property values ({@link #top}, {@link #left}, {@link #right},\n\t * {@link #bottom}, {@link #width} and {@link #height}) are the equal in both rect\n\t * instances.\n\t *\n\t * @param {module:utils/dom/rect~Rect} rect A rect instance to compare with.\n\t * @returns {Boolean} `true` when Rects are equal. `false` otherwise.\n\t */\n\tisEqual( anotherRect ) {\n\t\tfor ( const prop of rectProperties ) {\n\t\t\tif ( this[ prop ] !== anotherRect[ prop ] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks whether a rect fully contains another rect instance.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect\n\t * @returns {Boolean} `true` if contains, `false` otherwise.\n\t */\n\tcontains( anotherRect ) {\n\t\tconst intersectRect = this.getIntersection( anotherRect );\n\n\t\treturn !!( intersectRect && intersectRect.isEqual( anotherRect ) );\n\t}\n\n\t/**\n\t * Excludes scrollbars and CSS borders from the rect.\n\t *\n\t * * Borders are removed when {@link #_source} is an HTML element.\n\t * * Scrollbars are excluded from HTML elements and the `window`.\n\t *\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been updated.\n\t */\n\texcludeScrollbarsAndBorders() {\n\t\tconst source = this._source;\n\t\tlet scrollBarWidth, scrollBarHeight, direction;\n\n\t\tif ( isWindow( source ) ) {\n\t\t\tscrollBarWidth = source.innerWidth - source.document.documentElement.clientWidth;\n\t\t\tscrollBarHeight = source.innerHeight - source.document.documentElement.clientHeight;\n\t\t\tdirection = source.getComputedStyle( source.document.documentElement ).direction;\n\t\t} else {\n\t\t\tconst borderWidths = getBorderWidths( this._source );\n\n\t\t\tscrollBarWidth = source.offsetWidth - source.clientWidth - borderWidths.left - borderWidths.right;\n\t\t\tscrollBarHeight = source.offsetHeight - source.clientHeight - borderWidths.top - borderWidths.bottom;\n\t\t\tdirection = source.ownerDocument.defaultView.getComputedStyle( source ).direction;\n\n\t\t\tthis.left += borderWidths.left;\n\t\t\tthis.top += borderWidths.top;\n\t\t\tthis.right -= borderWidths.right;\n\t\t\tthis.bottom -= borderWidths.bottom;\n\t\t\tthis.width = this.right - this.left;\n\t\t\tthis.height = this.bottom - this.top;\n\t\t}\n\n\t\tthis.width -= scrollBarWidth;\n\n\t\tif ( direction === 'ltr' ) {\n\t\t\tthis.right -= scrollBarWidth;\n\t\t} else {\n\t\t\tthis.left += scrollBarWidth;\n\t\t}\n\n\t\tthis.height -= scrollBarHeight;\n\t\tthis.bottom -= scrollBarHeight;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns an array of rects of the given native DOM Range.\n\t *\n\t * @param {Range} range A native DOM range.\n\t * @returns {Array.<module:utils/dom/rect~Rect>} DOM Range rects.\n\t */\n\tstatic getDomRangeRects( range ) {\n\t\tconst rects = [];\n\t\t// Safari does not iterate over ClientRectList using for...of loop.\n\t\tconst clientRects = Array.from( range.getClientRects() );\n\n\t\tif ( clientRects.length ) {\n\t\t\tfor ( const rect of clientRects ) {\n\t\t\t\trects.push( new Rect( rect ) );\n\t\t\t}\n\t\t}\n\t\t// If there's no client rects for the Range, use parent container's bounding rect\n\t\t// instead and adjust rect's width to simulate the actual geometry of such range.\n\t\t// https://github.com/ckeditor/ckeditor5-utils/issues/153\n\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/317\n\t\telse {\n\t\t\tlet startContainer = range.startContainer;\n\n\t\t\tif ( isText( startContainer ) ) {\n\t\t\t\tstartContainer = startContainer.parentNode;\n\t\t\t}\n\n\t\t\tconst rect = new Rect( startContainer.getBoundingClientRect() );\n\t\t\trect.right = rect.left;\n\t\t\trect.width = 0;\n\n\t\t\trects.push( rect );\n\t\t}\n\n\t\treturn rects;\n\t}\n}\n\n// Acquires all the rect properties from the passed source.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} rect\n// @param {ClientRect|module:utils/dom/rect~Rect|Object} source\nfunction copyRectProperties( rect, source ) {\n\tfor ( const p of rectProperties ) {\n\t\trect[ p ] = source[ p ];\n\t}\n}\n\n// Checks if provided object is a <body> HTML element.\n//\n// @private\n// @param {HTMLElement|Range} elementOrRange\n// @returns {Boolean}\nfunction isBody( elementOrRange ) {\n\tif ( !isElement( elementOrRange ) ) {\n\t\treturn false;\n\t}\n\n\treturn elementOrRange === elementOrRange.ownerDocument.body;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/scroll\n */\n\nimport isRange from './isrange';\nimport Rect from './rect';\nimport isText from './istext';\n\nconst utils = {};\n\n/**\n * Makes any page `HTMLElement` or `Range` (`target`) visible inside the browser viewport.\n * This helper will scroll all `target` ancestors and the web browser viewport to reveal the target to\n * the user. If the `target` is already visible, nothing will happen.\n *\n * @param {HTMLElement|Range} options.target A target, which supposed to become visible to the user.\n * @param {Number} [options.viewportOffset] An offset from the edge of the viewport (in pixels)\n * the `target` will be moved by when the viewport is scrolled. It enhances the user experience\n * by keeping the `target` some distance from the edge of the viewport and thus making it easier to\n * read or edit by the user.\n */\nexport function scrollViewportToShowTarget( { target, viewportOffset = 0 } ) {\n\tconst targetWindow = getWindow( target );\n\tlet currentWindow = targetWindow;\n\tlet currentFrame = null;\n\n\t// Iterate over all windows, starting from target's parent window up to window#top.\n\twhile ( currentWindow ) {\n\t\tlet firstAncestorToScroll;\n\n\t\t// Let's scroll target's ancestors first to reveal it. Then, once the ancestor scrolls\n\t\t// settled down, the algorithm can eventually scroll the viewport of the current window.\n\t\t//\n\t\t// Note: If the current window is target's **original** window (e.g. the first one),\n\t\t// start scrolling the closest parent of the target. If not, scroll the closest parent\n\t\t// of an iframe that resides in the current window.\n\t\tif ( currentWindow == targetWindow ) {\n\t\t\tfirstAncestorToScroll = getParentElement( target );\n\t\t} else {\n\t\t\tfirstAncestorToScroll = getParentElement( currentFrame );\n\t\t}\n\n\t\t// Scroll the target's ancestors first. Once done, scrolling the viewport is easy.\n\t\tscrollAncestorsToShowRect( firstAncestorToScroll, () => {\n\t\t\t// Note: If the target does not belong to the current window **directly**,\n\t\t\t// i.e. it resides in an iframe belonging to the window, obtain the target's rect\n\t\t\t// in the coordinates of the current window. By default, a Rect returns geometry\n\t\t\t// relative to the current window's viewport. To make it work in a parent window,\n\t\t\t// it must be shifted.\n\t\t\treturn getRectRelativeToWindow( target, currentWindow );\n\t\t} );\n\n\t\t// Obtain the rect of the target after it has been scrolled within its ancestors.\n\t\t// It's time to scroll the viewport.\n\t\tconst targetRect = getRectRelativeToWindow( target, currentWindow );\n\n\t\tscrollWindowToShowRect( currentWindow, targetRect, viewportOffset );\n\n\t\tif ( currentWindow.parent != currentWindow ) {\n\t\t\t// Keep the reference to the <iframe> element the \"previous current window\" was\n\t\t\t// rendered within. It will be useful to re–calculate the rect of the target\n\t\t\t// in the parent window's relative geometry. The target's rect must be shifted\n\t\t\t// by it's iframe's position.\n\t\t\tcurrentFrame = currentWindow.frameElement;\n\t\t\tcurrentWindow = currentWindow.parent;\n\n\t\t\t// If the current window has some parent but frameElement is inaccessible, then they have\n\t\t\t// different domains/ports and, due to security reasons, accessing and scrolling\n\t\t\t// the parent window won't be possible.\n\t\t\t// See https://github.com/ckeditor/ckeditor5/issues/930.\n\t\t\tif ( !currentFrame ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentWindow = null;\n\t\t}\n\t}\n}\n\n/**\n * Makes any page `HTMLElement` or `Range` (target) visible within its scrollable ancestors,\n * e.g. if they have `overflow: scroll` CSS style.\n *\n * @param {HTMLElement|Range} target A target, which supposed to become visible to the user.\n */\nexport function scrollAncestorsToShowTarget( target ) {\n\tconst targetParent = getParentElement( target );\n\n\tscrollAncestorsToShowRect( targetParent, () => {\n\t\treturn new Rect( target );\n\t} );\n}\n\n// TODO: Using a property value shorthand in the top of the file\n// causes JSDoc to throw errors. See https://github.com/cksource/docs-builder/issues/75.\nObject.assign( utils, {\n\tscrollViewportToShowTarget,\n\tscrollAncestorsToShowTarget\n} );\n\n// Makes a given rect visible within its parent window.\n//\n// Note: Avoid the situation where the caret is still in the viewport, but totally\n// at the edge of it. In such situation, if it moved beyond the viewport in the next\n// action e.g. after paste, the scrolling would move it to the viewportOffset level\n// and it all would look like the caret visually moved up/down:\n//\n// 1.\n//\t\t| foo[]\n//\t\t|                                    <--- N px of space below the caret\n//\t\t+---------------------------------...\n//\n// 2. *paste*\n// 3.\n//\t\t|\n//\t\t|\n//\t\t+-foo-----------------------------...\n//\t\t  bar[]                              <--- caret below viewport, scrolling...\n//\n// 4. *scrolling*\n// 5.\n//\t\t|\n//\t\t| foo\n//\t\t| bar[]                              <--- caret precisely at the edge\n//\t\t+---------------------------------...\n//\n// To prevent this, this method checks the rects moved by the viewportOffset to cover\n// the upper/lower edge of the viewport. It makes sure if the action repeats, there's\n// no twitching – it's a purely visual improvement:\n//\n// 5. (after fix)\n//\t\t|\n//\t\t| foo\n//\t\t| bar[]\n//\t\t|                                    <--- N px of space below the caret\n//\t\t+---------------------------------...\n//\n// @private\n// @param {Window} window A window which is scrolled to reveal the rect.\n// @param {module:utils/dom/rect~Rect} rect A rect which is to be revealed.\n// @param {Number} viewportOffset See scrollViewportToShowTarget.\nfunction scrollWindowToShowRect( window, rect, viewportOffset ) {\n\tconst targetShiftedDownRect = rect.clone().moveBy( 0, viewportOffset );\n\tconst targetShiftedUpRect = rect.clone().moveBy( 0, -viewportOffset );\n\tconst viewportRect = new Rect( window ).excludeScrollbarsAndBorders();\n\n\tconst rects = [ targetShiftedUpRect, targetShiftedDownRect ];\n\n\tif ( !rects.every( rect => viewportRect.contains( rect ) ) ) {\n\t\tlet { scrollX, scrollY } = window;\n\n\t\tif ( isAbove( targetShiftedUpRect, viewportRect ) ) {\n\t\t\tscrollY -= viewportRect.top - rect.top + viewportOffset;\n\t\t} else if ( isBelow( targetShiftedDownRect, viewportRect ) ) {\n\t\t\tscrollY += rect.bottom - viewportRect.bottom + viewportOffset;\n\t\t}\n\n\t\t// TODO: Web browsers scroll natively to place the target in the middle\n\t\t// of the viewport. It's not a very popular case, though.\n\t\tif ( isLeftOf( rect, viewportRect ) ) {\n\t\t\tscrollX -= viewportRect.left - rect.left + viewportOffset;\n\t\t} else if ( isRightOf( rect, viewportRect ) ) {\n\t\t\tscrollX += rect.right - viewportRect.right + viewportOffset;\n\t\t}\n\n\t\twindow.scrollTo( scrollX, scrollY );\n\t}\n}\n\n// Recursively scrolls element ancestors to visually reveal a rect.\n//\n// @private\n// @param {HTMLElement} A parent The first ancestors to start scrolling.\n// @param {Function} getRect A function which returns the Rect, which is to be revealed.\nfunction scrollAncestorsToShowRect( parent, getRect ) {\n\tconst parentWindow = getWindow( parent );\n\tlet parentRect, targetRect;\n\n\twhile ( parent != parentWindow.document.body ) {\n\t\ttargetRect = getRect();\n\t\tparentRect = new Rect( parent ).excludeScrollbarsAndBorders();\n\n\t\tif ( !parentRect.contains( targetRect ) ) {\n\t\t\tif ( isAbove( targetRect, parentRect ) ) {\n\t\t\t\tparent.scrollTop -= parentRect.top - targetRect.top;\n\t\t\t} else if ( isBelow( targetRect, parentRect ) ) {\n\t\t\t\tparent.scrollTop += targetRect.bottom - parentRect.bottom;\n\t\t\t}\n\n\t\t\tif ( isLeftOf( targetRect, parentRect ) ) {\n\t\t\t\tparent.scrollLeft -= parentRect.left - targetRect.left;\n\t\t\t} else if ( isRightOf( targetRect, parentRect ) ) {\n\t\t\t\tparent.scrollLeft += targetRect.right - parentRect.right;\n\t\t\t}\n\t\t}\n\n\t\tparent = parent.parentNode;\n\t}\n}\n\n// Determines if a given `Rect` extends beyond the bottom edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\nfunction isBelow( firstRect, secondRect ) {\n\treturn firstRect.bottom > secondRect.bottom;\n}\n\n// Determines if a given `Rect` extends beyond the top edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\nfunction isAbove( firstRect, secondRect ) {\n\treturn firstRect.top < secondRect.top;\n}\n\n// Determines if a given `Rect` extends beyond the left edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\nfunction isLeftOf( firstRect, secondRect ) {\n\treturn firstRect.left < secondRect.left;\n}\n\n// Determines if a given `Rect` extends beyond the right edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\nfunction isRightOf( firstRect, secondRect ) {\n\treturn firstRect.right > secondRect.right;\n}\n\n// Returns the closest window of an element or range.\n//\n// @private\n// @param {HTMLElement|Range} firstRect\n// @returns {Window}\nfunction getWindow( elementOrRange ) {\n\tif ( isRange( elementOrRange ) ) {\n\t\treturn elementOrRange.startContainer.ownerDocument.defaultView;\n\t} else {\n\t\treturn elementOrRange.ownerDocument.defaultView;\n\t}\n}\n\n// Returns the closest parent of an element or DOM range.\n//\n// @private\n// @param {HTMLElement|Range} firstRect\n// @returns {HTMLelement}\nfunction getParentElement( elementOrRange ) {\n\tif ( isRange( elementOrRange ) ) {\n\t\tlet parent = elementOrRange.commonAncestorContainer;\n\n\t\t// If a Range is attached to the Text, use the closest element ancestor.\n\t\tif ( isText( parent ) ) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\treturn parent;\n\t} else {\n\t\treturn elementOrRange.parentNode;\n\t}\n}\n\n// Returns the rect of an element or range residing in an iframe.\n// The result rect is relative to the geometry of the passed window instance.\n//\n// @private\n// @param {HTMLElement|Range} target Element or range which rect should be returned.\n// @param {Window} relativeWindow A window the rect should be relative to.\n// @returns {module:utils/dom/rect~Rect}\nfunction getRectRelativeToWindow( target, relativeWindow ) {\n\tconst targetWindow = getWindow( target );\n\tconst rect = new Rect( target );\n\n\tif ( targetWindow === relativeWindow ) {\n\t\treturn rect;\n\t} else {\n\t\tlet currentWindow = targetWindow;\n\n\t\twhile ( currentWindow != relativeWindow ) {\n\t\t\tconst frame = currentWindow.frameElement;\n\t\t\tconst frameRect = new Rect( frame ).excludeScrollbarsAndBorders();\n\n\t\t\trect.moveBy( frameRect.left, frameRect.top );\n\n\t\t\tcurrentWindow = currentWindow.parent;\n\t\t}\n\t}\n\n\treturn rect;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/view\n */\n\nimport Document from './document';\nimport DowncastWriter from './downcastwriter';\nimport Renderer from './renderer';\nimport DomConverter from './domconverter';\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\n\nimport MutationObserver from './observer/mutationobserver';\nimport KeyObserver from './observer/keyobserver';\nimport FakeSelectionObserver from './observer/fakeselectionobserver';\nimport SelectionObserver from './observer/selectionobserver';\nimport FocusObserver from './observer/focusobserver';\nimport CompositionObserver from './observer/compositionobserver';\nimport InputObserver from './observer/inputobserver';\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { scrollViewportToShowTarget } from '@ckeditor/ckeditor5-utils/src/dom/scroll';\nimport { injectUiElementHandling } from './uielement';\nimport { injectQuirksHandling } from './filler';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * Editor's view controller class. Its main responsibility is DOM - View management for editing purposes, to provide\n * abstraction over the DOM structure and events and hide all browsers quirks.\n *\n * View controller renders view document to DOM whenever view structure changes. To determine when view can be rendered,\n * all changes need to be done using the {@link module:engine/view/view~View#change} method, using\n * {@link module:engine/view/downcastwriter~DowncastWriter}:\n *\n *\t\tview.change( writer => {\n *\t\t\twriter.insert( position, writer.createText( 'foo' ) );\n *\t\t} );\n *\n * View controller also register {@link module:engine/view/observer/observer~Observer observers} which observes changes\n * on DOM and fire events on the {@link module:engine/view/document~Document Document}.\n * Note that the following observers are added by the class constructor and are always available:\n *\n * * {@link module:engine/view/observer/mutationobserver~MutationObserver},\n * * {@link module:engine/view/observer/selectionobserver~SelectionObserver},\n * * {@link module:engine/view/observer/focusobserver~FocusObserver},\n * * {@link module:engine/view/observer/keyobserver~KeyObserver},\n * * {@link module:engine/view/observer/fakeselectionobserver~FakeSelectionObserver}.\n * * {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * This class also {@link module:engine/view/view~View#attachDomRoot binds the DOM and the view elements}.\n *\n * If you do not need full a DOM - view management, and only want to transform a tree of view elements to a tree of DOM\n * elements you do not need this controller. You can use the {@link module:engine/view/domconverter~DomConverter DomConverter} instead.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class View {\n\t/**\n\t * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor The styles processor instance.\n\t */\n\tconstructor( stylesProcessor ) {\n\t\t/**\n\t\t * Instance of the {@link module:engine/view/document~Document} associated with this view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = new Document( stylesProcessor );\n\n\t\t/**\n\t\t * Instance of the {@link module:engine/view/domconverter~DomConverter domConverter} used by\n\t\t * {@link module:engine/view/view~View#_renderer renderer}\n\t\t * and {@link module:engine/view/observer/observer~Observer observers}.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis.domConverter = new DomConverter( this.document );\n\n\t\t/**\n\t\t * Roots of the DOM tree. Map on the `HTMLElement`s with roots names as keys.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Map.<String, HTMLElement>}\n\t\t */\n\t\tthis.domRoots = new Map();\n\n\t\t/**\n\t\t * Used to prevent calling {@link #forceRender} and {@link #change} during rendering view to the DOM.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isRenderingInProgress\n\t\t */\n\t\tthis.set( 'isRenderingInProgress', false );\n\n\t\t/**\n\t\t * Informs whether the DOM selection is inside any of the DOM roots managed by the view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #hasDomSelection\n\t\t */\n\t\tthis.set( 'hasDomSelection', false );\n\n\t\t/**\n\t\t * Instance of the {@link module:engine/view/renderer~Renderer renderer}.\n\t\t *\n\t\t * @protected\n\t\t * @type {module:engine/view/renderer~Renderer}\n\t\t */\n\t\tthis._renderer = new Renderer( this.domConverter, this.document.selection );\n\t\tthis._renderer.bind( 'isFocused' ).to( this.document );\n\n\t\t/**\n\t\t * A DOM root attributes cache. It saves the initial values of DOM root attributes before the DOM element\n\t\t * is {@link module:engine/view/view~View#attachDomRoot attached} to the view so later on, when\n\t\t * the view is destroyed ({@link module:engine/view/view~View#detachDomRoot}), they can be easily restored.\n\t\t * This way, the DOM element can go back to the (clean) state as if the editing view never used it.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap.<HTMLElement,Object>}\n\t\t */\n\t\tthis._initialDomRootAttributes = new WeakMap();\n\n\t\t/**\n\t\t * Map of registered {@link module:engine/view/observer/observer~Observer observers}.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<Function, module:engine/view/observer/observer~Observer>}\n\t\t */\n\t\tthis._observers = new Map();\n\n\t\t/**\n\t\t * Is set to `true` when {@link #change view changes} are currently in progress.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._ongoingChange = false;\n\n\t\t/**\n\t\t * Used to prevent calling {@link #forceRender} and {@link #change} during rendering view to the DOM.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._postFixersInProgress = false;\n\n\t\t/**\n\t\t * Internal flag to temporary disable rendering. See the usage in the {@link #_disableRendering}.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._renderingDisabled = false;\n\n\t\t/**\n\t\t * Internal flag that disables rendering when there are no changes since the last rendering.\n\t\t * It stores information about changed selection and changed elements from attached document roots.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._hasChangedSinceTheLastRendering = false;\n\n\t\t/**\n\t\t * DowncastWriter instance used in {@link #change change method} callbacks.\n\t\t *\n\t\t * @private\n\t\t * @type {module:engine/view/downcastwriter~DowncastWriter}\n\t\t */\n\t\tthis._writer = new DowncastWriter( this.document );\n\n\t\t// Add default observers.\n\t\tthis.addObserver( MutationObserver );\n\t\tthis.addObserver( SelectionObserver );\n\t\tthis.addObserver( FocusObserver );\n\t\tthis.addObserver( KeyObserver );\n\t\tthis.addObserver( FakeSelectionObserver );\n\t\tthis.addObserver( CompositionObserver );\n\n\t\tif ( env.isAndroid ) {\n\t\t\tthis.addObserver( InputObserver );\n\t\t}\n\n\t\t// Inject quirks handlers.\n\t\tinjectQuirksHandling( this );\n\t\tinjectUiElementHandling( this );\n\n\t\t// Use 'normal' priority so that rendering is performed as first when using that priority.\n\t\tthis.on( 'render', () => {\n\t\t\tthis._render();\n\n\t\t\t// Informs that layout has changed after render.\n\t\t\tthis.document.fire( 'layoutChanged' );\n\n\t\t\t// Reset the `_hasChangedSinceTheLastRendering` flag after rendering.\n\t\t\tthis._hasChangedSinceTheLastRendering = false;\n\t\t} );\n\n\t\t// Listen to the document selection changes directly.\n\t\tthis.listenTo( this.document.selection, 'change', () => {\n\t\t\tthis._hasChangedSinceTheLastRendering = true;\n\t\t} );\n\t}\n\n\t/**\n\t * Attaches a DOM root element to the view element and enable all observers on that element.\n\t * Also {@link module:engine/view/renderer~Renderer#markToSync mark element} to be synchronized\n\t * with the view what means that all child nodes will be removed and replaced with content of the view root.\n\t *\n\t * This method also will change view element name as the same as tag name of given dom root.\n\t * Name is always transformed to lower case.\n\t *\n\t * **Note:** Use {@link #detachDomRoot `detachDomRoot()`} to revert this action.\n\t *\n\t * @param {Element} domRoot DOM root element.\n\t * @param {String} [name='main'] Name of the root.\n\t */\n\tattachDomRoot( domRoot, name = 'main' ) {\n\t\tconst viewRoot = this.document.getRoot( name );\n\n\t\t// Set view root name the same as DOM root tag name.\n\t\tviewRoot._name = domRoot.tagName.toLowerCase();\n\n\t\tconst initialDomRootAttributes = {};\n\n\t\t// 1. Copy and cache the attributes to remember the state of the element before attaching.\n\t\t//    The cached attributes will be restored in detachDomRoot() so the element goes to the\n\t\t//    clean state as if the editing view never used it.\n\t\t// 2. Apply the attributes using the view writer, so they all go under the control of the engine.\n\t\t//    The editing view takes over the attribute management completely because various\n\t\t//    features (e.g. addPlaceholder()) require dynamic changes of those attributes and they\n\t\t//    cannot be managed by the engine and the UI library at the same time.\n\t\tfor ( const { name, value } of Array.from( domRoot.attributes ) ) {\n\t\t\tinitialDomRootAttributes[ name ] = value;\n\n\t\t\t// Do not use writer.setAttribute() for the class attribute. The EditableUIView class\n\t\t\t// and its descendants could have already set some using the writer.addClass() on the view\n\t\t\t// document root. They haven't been rendered yet so they are not present in the DOM root.\n\t\t\t// Using writer.setAttribute( 'class', ... ) would override them completely.\n\t\t\tif ( name === 'class' ) {\n\t\t\t\tthis._writer.addClass( value.split( ' ' ), viewRoot );\n\t\t\t} else {\n\t\t\t\tthis._writer.setAttribute( name, value, viewRoot );\n\t\t\t}\n\t\t}\n\n\t\tthis._initialDomRootAttributes.set( domRoot, initialDomRootAttributes );\n\n\t\tconst updateContenteditableAttribute = () => {\n\t\t\tthis._writer.setAttribute( 'contenteditable', !viewRoot.isReadOnly, viewRoot );\n\n\t\t\tif ( viewRoot.isReadOnly ) {\n\t\t\t\tthis._writer.addClass( 'ck-read-only', viewRoot );\n\t\t\t} else {\n\t\t\t\tthis._writer.removeClass( 'ck-read-only', viewRoot );\n\t\t\t}\n\t\t};\n\n\t\t// Set initial value.\n\t\tupdateContenteditableAttribute();\n\n\t\tthis.domRoots.set( name, domRoot );\n\t\tthis.domConverter.bindElements( domRoot, viewRoot );\n\t\tthis._renderer.markToSync( 'children', viewRoot );\n\t\tthis._renderer.markToSync( 'attributes', viewRoot );\n\t\tthis._renderer.domDocuments.add( domRoot.ownerDocument );\n\n\t\tviewRoot.on( 'change:children', ( evt, node ) => this._renderer.markToSync( 'children', node ) );\n\t\tviewRoot.on( 'change:attributes', ( evt, node ) => this._renderer.markToSync( 'attributes', node ) );\n\t\tviewRoot.on( 'change:text', ( evt, node ) => this._renderer.markToSync( 'text', node ) );\n\t\tviewRoot.on( 'change:isReadOnly', () => this.change( updateContenteditableAttribute ) );\n\n\t\tviewRoot.on( 'change', () => {\n\t\t\tthis._hasChangedSinceTheLastRendering = true;\n\t\t} );\n\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.observe( domRoot, name );\n\t\t}\n\t}\n\n\t/**\n\t * Detaches a DOM root element from the view element and restores its attributes to the state before\n\t * {@link #attachDomRoot `attachDomRoot()`}.\n\t *\n\t * @param {String} name Name of the root to detach.\n\t */\n\tdetachDomRoot( name ) {\n\t\tconst domRoot = this.domRoots.get( name );\n\n\t\t// Remove all root attributes so the DOM element is \"bare\".\n\t\tArray.from( domRoot.attributes ).forEach( ( { name } ) => domRoot.removeAttribute( name ) );\n\n\t\tconst initialDomRootAttributes = this._initialDomRootAttributes.get( domRoot );\n\n\t\t// Revert all view root attributes back to the state before attachDomRoot was called.\n\t\tfor ( const attribute in initialDomRootAttributes ) {\n\t\t\tdomRoot.setAttribute( attribute, initialDomRootAttributes[ attribute ] );\n\t\t}\n\n\t\tthis.domRoots.delete( name );\n\t\tthis.domConverter.unbindDomElement( domRoot );\n\t}\n\n\t/**\n\t * Gets DOM root element.\n\t *\n\t * @param {String} [name='main']  Name of the root.\n\t * @returns {Element} DOM root element instance.\n\t */\n\tgetDomRoot( name = 'main' ) {\n\t\treturn this.domRoots.get( name );\n\t}\n\n\t/**\n\t * Creates observer of the given type if not yet created, {@link module:engine/view/observer/observer~Observer#enable enables} it\n\t * and {@link module:engine/view/observer/observer~Observer#observe attaches} to all existing and future\n\t * {@link #domRoots DOM roots}.\n\t *\n\t * Note: Observers are recognized by their constructor (classes). A single observer will be instantiated and used only\n\t * when registered for the first time. This means that features and other components can register a single observer\n\t * multiple times without caring whether it has been already added or not.\n\t *\n\t * @param {Function} Observer The constructor of an observer to add.\n\t * Should create an instance inheriting from {@link module:engine/view/observer/observer~Observer}.\n\t * @returns {module:engine/view/observer/observer~Observer} Added observer instance.\n\t */\n\taddObserver( Observer ) {\n\t\tlet observer = this._observers.get( Observer );\n\n\t\tif ( observer ) {\n\t\t\treturn observer;\n\t\t}\n\n\t\tobserver = new Observer( this );\n\n\t\tthis._observers.set( Observer, observer );\n\n\t\tfor ( const [ name, domElement ] of this.domRoots ) {\n\t\t\tobserver.observe( domElement, name );\n\t\t}\n\n\t\tobserver.enable();\n\n\t\treturn observer;\n\t}\n\n\t/**\n\t * Returns observer of the given type or `undefined` if such observer has not been added yet.\n\t *\n\t * @param {Function} Observer The constructor of an observer to get.\n\t * @returns {module:engine/view/observer/observer~Observer|undefined} Observer instance or undefined.\n\t */\n\tgetObserver( Observer ) {\n\t\treturn this._observers.get( Observer );\n\t}\n\n\t/**\n\t * Disables all added observers.\n\t */\n\tdisableObservers() {\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.disable();\n\t\t}\n\t}\n\n\t/**\n\t * Enables all added observers.\n\t */\n\tenableObservers() {\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.enable();\n\t\t}\n\t}\n\n\t/**\n\t * Scrolls the page viewport and {@link #domRoots} with their ancestors to reveal the\n\t * caret, if not already visible to the user.\n\t */\n\tscrollToTheSelection() {\n\t\tconst range = this.document.selection.getFirstRange();\n\n\t\tif ( range ) {\n\t\t\tscrollViewportToShowTarget( {\n\t\t\t\ttarget: this.domConverter.viewRangeToDom( range ),\n\t\t\t\tviewportOffset: 20\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * It will focus DOM element representing {@link module:engine/view/editableelement~EditableElement EditableElement}\n\t * that is currently having selection inside.\n\t */\n\tfocus() {\n\t\tif ( !this.document.isFocused ) {\n\t\t\tconst editable = this.document.selection.editableElement;\n\n\t\t\tif ( editable ) {\n\t\t\t\tthis.domConverter.focus( editable );\n\t\t\t\tthis.forceRender();\n\t\t\t} else {\n\t\t\t\t// Before focusing view document, selection should be placed inside one of the view's editables.\n\t\t\t\t// Normally its selection will be converted from model document (which have default selection), but\n\t\t\t\t// when using view document on its own, we need to manually place selection before focusing it.\n\t\t\t\t//\n\t\t\t\t// @if CK_DEBUG // console.warn( 'There is no selection in any editable to focus.' );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * The `change()` method is the primary way of changing the view. You should use it to modify any node in the view tree.\n\t * It makes sure that after all changes are made the view is rendered to the DOM (assuming that the view will be changed\n\t * inside the callback). It prevents situations when the DOM is updated when the view state is not yet correct. It allows\n\t * to nest calls one inside another and still performs a single rendering after all those changes are made.\n\t * It also returns the return value of its callback.\n\t *\n\t *\t\tconst text = view.change( writer => {\n\t *\t\t\tconst newText = writer.createText( 'foo' );\n\t *\t\t\twriter.insert( position1, newText );\n\t *\n\t *\t\t\tview.change( writer => {\n\t *\t\t\t\twriter.insert( position2, writer.createText( 'bar' ) );\n\t *\t\t\t} );\n\t *\n\t * \t\t\twriter.remove( range );\n\t *\n\t * \t\t\treturn newText;\n\t *\t\t} );\n\t *\n\t * When the outermost change block is done and rendering to the DOM is over the\n\t * {@link module:engine/view/view~View#event:render `View#render`} event is fired.\n\t *\n\t * This method throws a `applying-view-changes-on-rendering` error when\n\t * the change block is used after rendering to the DOM has started.\n\t *\n\t * @param {Function} callback Callback function which may modify the view.\n\t * @returns {*} Value returned by the callback.\n\t */\n\tchange( callback ) {\n\t\tif ( this.isRenderingInProgress || this._postFixersInProgress ) {\n\t\t\t/**\n\t\t\t * Thrown when there is an attempt to make changes to the view tree when it is in incorrect state. This may\n\t\t\t * cause some unexpected behaviour and inconsistency between the DOM and the view.\n\t\t\t * This may be caused by:\n\t\t\t *\n\t\t\t * * calling {@link #change} or {@link #forceRender} during rendering process,\n\t\t\t * * calling {@link #change} or {@link #forceRender} inside of\n\t\t\t *   {@link module:engine/view/document~Document#registerPostFixer post-fixer function}.\n\t\t\t *\n\t\t\t * @error cannot-change-view-tree\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'cannot-change-view-tree: ' +\n\t\t\t\t'Attempting to make changes to the view when it is in an incorrect state: rendering or post-fixers are in progress. ' +\n\t\t\t\t'This may cause some unexpected behavior and inconsistency between the DOM and the view.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\ttry {\n\t\t\t// Recursive call to view.change() method - execute listener immediately.\n\t\t\tif ( this._ongoingChange ) {\n\t\t\t\treturn callback( this._writer );\n\t\t\t}\n\n\t\t\t// This lock will assure that all recursive calls to view.change() will end up in same block - one \"render\"\n\t\t\t// event for all nested calls.\n\t\t\tthis._ongoingChange = true;\n\t\t\tconst callbackResult = callback( this._writer );\n\t\t\tthis._ongoingChange = false;\n\n\t\t\t// This lock is used by editing controller to render changes from outer most model.change() once. As plugins might call\n\t\t\t// view.change() inside model.change() block - this will ensures that postfixers and rendering are called once after all\n\t\t\t// changes. Also, we don't need to render anything if there're no changes since last rendering.\n\t\t\tif ( !this._renderingDisabled && this._hasChangedSinceTheLastRendering ) {\n\t\t\t\tthis._postFixersInProgress = true;\n\t\t\t\tthis.document._callPostFixers( this._writer );\n\t\t\t\tthis._postFixersInProgress = false;\n\n\t\t\t\tthis.fire( 'render' );\n\t\t\t}\n\n\t\t\treturn callbackResult;\n\t\t} catch ( err ) {\n\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t/* istanbul ignore next */\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t}\n\t}\n\n\t/**\n\t * Forces rendering {@link module:engine/view/document~Document view document} to DOM. If any view changes are\n\t * currently in progress, rendering will start after all {@link #change change blocks} are processed.\n\t *\n\t * Note that this method is dedicated for special cases. All view changes should be wrapped in the {@link #change}\n\t * block and the view will automatically check whether it needs to render DOM or not.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `applying-view-changes-on-rendering` when\n\t * trying to re-render when rendering to DOM has already started.\n\t */\n\tforceRender() {\n\t\tthis._hasChangedSinceTheLastRendering = true;\n\t\tthis.change( () => {} );\n\t}\n\n\t/**\n\t * Destroys this instance. Makes sure that all observers are destroyed and listeners removed.\n\t */\n\tdestroy() {\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.destroy();\n\t\t}\n\n\t\tthis.document.destroy();\n\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/view/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link #createPositionBefore},\n\t * * {@link #createPositionAfter},\n\t *\n\t * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tcreatePositionAt( itemOrPosition, offset ) {\n\t\treturn Position._createAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new position after given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionAfter( item ) {\n\t\treturn Position._createAfter( item );\n\t}\n\n\t/**\n\t * Creates a new position before given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionBefore( item ) {\n\t\treturn Position._createBefore( item );\n\t}\n\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** This factory method creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/view/position~Position} start Start position.\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRange( start, end ) {\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n\t *\n\t * @param {module:engine/view/item~Item} item\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeOn( item ) {\n\t\treturn Range._createOn( item );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeIn( element ) {\n\t\treturn Range._createIn( element );\n\t}\n\n\t/**\n\t Creates new {@link module:engine/view/selection~Selection} instance.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = view.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = view.createRange( start, end );\n\t *\t\tconst selection = view.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ view.createRange( start1, end2 ), view.createRange( star2, end2 ) ];\n\t *\t\tconst selection = view.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = view.createSelection();\n\t *\t\tconst selection = view.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the document selection.\n\t *\t\tconst selection = view.createSelection( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = view.createPositionFromPath( root, path );\n\t *\t\tconst selection = view.createSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = view.createContainerElement( 'paragraph' );\n\t *\t\tconst selection = view.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = view.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = view.createSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s factory method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = view.createSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = view.createSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t * @returns {module:engine/view/selection~Selection}\n\t */\n\tcreateSelection( selectable, placeOrOffset, options ) {\n\t\treturn new Selection( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Disables or enables rendering. If the flag is set to `true` then the rendering will be disabled.\n\t * If the flag is set to `false` and if there was some change in the meantime, then the rendering action will be performed.\n\t *\n\t * @protected\n\t * @param {Boolean} flag A flag indicates whether the rendering should be disabled.\n\t */\n\t_disableRendering( flag ) {\n\t\tthis._renderingDisabled = flag;\n\n\t\tif ( flag == false ) {\n\t\t\t// Render when you stop blocking rendering.\n\t\t\tthis.change( () => {} );\n\t\t}\n\t}\n\n\t/**\n\t * Renders all changes. In order to avoid triggering the observers (e.g. mutations) all observers are disabled\n\t * before rendering and re-enabled after that.\n\t *\n\t * @private\n\t */\n\t_render() {\n\t\tthis.isRenderingInProgress = true;\n\t\tthis.disableObservers();\n\t\tthis._renderer.render();\n\t\tthis.enableObservers();\n\t\tthis.isRenderingInProgress = false;\n\t}\n\n\t/**\n\t * Fired after a topmost {@link module:engine/view/view~View#change change block} and all\n\t * {@link module:engine/view/document~Document#registerPostFixer post-fixers} are executed.\n\t *\n\t * Actual rendering is performed as a first listener on 'normal' priority.\n\t *\n\t *\t\tview.on( 'render', () => {\n\t *\t\t\t// Rendering to the DOM is complete.\n\t *\t\t} );\n\t *\n\t * This event is useful when you want to update interface elements after the rendering, e.g. position of the\n\t * balloon panel. If you wants to change view structure use\n\t * {@link module:engine/view/document~Document#registerPostFixer post-fixers}.\n\t *\n\t * @event module:engine/view/view~View#event:render\n\t */\n}\n\nmix( View, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/node\n */\n\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\n// To check if component is loaded more than once.\nimport '@ckeditor/ckeditor5-utils/src/version';\n\n/**\n * Model node. Most basic structure of model tree.\n *\n * This is an abstract class that is a base for other classes representing different nodes in model.\n *\n * **Note:** If a node is detached from the model tree, you can manipulate it using it's API.\n * However, it is **very important** that nodes already attached to model tree should be only changed through\n * {@link module:engine/model/writer~Writer Writer API}.\n *\n * Changes done by `Node` methods, like {@link module:engine/model/element~Element#_insertChild _insertChild} or\n * {@link module:engine/model/node~Node#_setAttribute _setAttribute}\n * do not generate {@link module:engine/model/operation/operation~Operation operations}\n * which are essential for correct editor work if you modify nodes in {@link module:engine/model/document~Document document} root.\n *\n * The flow of working on `Node` (and classes that inherits from it) is as such:\n * 1. You can create a `Node` instance, modify it using it's API.\n * 2. Add `Node` to the model using `Batch` API.\n * 3. Change `Node` that was already added to the model using `Batch` API.\n *\n * Similarly, you cannot use `Batch` API on a node that has not been added to the model tree, with the exception\n * of {@link module:engine/model/writer~Writer#insert inserting} that node to the model tree.\n *\n * Be aware that using {@link module:engine/model/writer~Writer#remove remove from Batch API} does not allow to use `Node` API because\n * the information about `Node` is still kept in model document.\n *\n * In case of {@link module:engine/model/element~Element element node}, adding and removing children also counts as changing a node and\n * follows same rules.\n */\nexport default class Node {\n\t/**\n\t * Creates a model node.\n\t *\n\t * This is an abstract class, so this constructor should not be used directly.\n\t *\n\t * @abstract\n\t * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n\t */\n\tconstructor( attrs ) {\n\t\t/**\n\t\t * Parent of this node. It could be {@link module:engine/model/element~Element}\n\t\t * or {@link module:engine/model/documentfragment~DocumentFragment}.\n\t\t * Equals to `null` if the node has no parent.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t\t */\n\t\tthis.parent = null;\n\n\t\t/**\n\t\t * Attributes set on this node.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/model/node~Node#_attrs\n\t\t */\n\t\tthis._attrs = toMap( attrs );\n\t}\n\n\t/**\n\t * Index of this node in it's parent or `null` if the node has no parent.\n\t *\n\t * Accessing this property throws an error if this node's parent element does not contain it.\n\t * This means that model tree got broken.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget index() {\n\t\tlet pos;\n\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( ( pos = this.parent.getChildIndex( this ) ) === null ) {\n\t\t\tthrow new CKEditorError( 'model-node-not-found-in-parent: The node\\'s parent does not contain this node.', this );\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Offset at which this node starts in it's parent. It is equal to the sum of {@link #offsetSize offsetSize}\n\t * of all it's previous siblings. Equals to `null` if node has no parent.\n\t *\n\t * Accessing this property throws an error if this node's parent element does not contain it.\n\t * This means that model tree got broken.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget startOffset() {\n\t\tlet pos;\n\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( ( pos = this.parent.getChildStartOffset( this ) ) === null ) {\n\t\t\tthrow new CKEditorError( 'model-node-not-found-in-parent: The node\\'s parent does not contain this node.', this );\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Offset size of this node. Represents how much \"offset space\" is occupied by the node in it's parent.\n\t * It is important for {@link module:engine/model/position~Position position}. When node has `offsetSize` greater than `1`, position\n\t * can be placed between that node start and end. `offsetSize` greater than `1` is for nodes that represents more\n\t * than one entity, i.e. {@link module:engine/model/text~Text text node}.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget offsetSize() {\n\t\treturn 1;\n\t}\n\n\t/**\n\t * Offset at which this node ends in it's parent. It is equal to the sum of this node's\n\t * {@link module:engine/model/node~Node#startOffset start offset} and {@link #offsetSize offset size}.\n\t * Equals to `null` if the node has no parent.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget endOffset() {\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.startOffset + this.offsetSize;\n\t}\n\n\t/**\n\t * Node's next sibling or `null` if the node is a last child of it's parent or if the node has no parent.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|null}\n\t */\n\tget nextSibling() {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent.getChild( index + 1 ) ) || null;\n\t}\n\n\t/**\n\t * Node's previous sibling or `null` if the node is a first child of it's parent or if the node has no parent.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|null}\n\t */\n\tget previousSibling() {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent.getChild( index - 1 ) ) || null;\n\t}\n\n\t/**\n\t * The top-most ancestor of the node. If node has no parent it is the root itself. If the node is a part\n\t * of {@link module:engine/model/documentfragment~DocumentFragment}, it's `root` is equal to that `DocumentFragment`.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\tlet root = this; // eslint-disable-line consistent-this\n\n\t\twhile ( root.parent ) {\n\t\t\troot = root.parent;\n\t\t}\n\n\t\treturn root;\n\t}\n\n\t/**\n\t * Returns true if the node is in a tree rooted in the document (is a descendant of one of its roots).\n\t *\n\t * @returns {Boolean}\n\t */\n\tisAttached() {\n\t\treturn this.root.is( 'rootElement' );\n\t}\n\n\t/**\n\t * Gets path to the node. The path is an array containing starting offsets of consecutive ancestors of this node,\n\t * beginning from {@link module:engine/model/node~Node#root root}, down to this node's starting offset. The path can be used to\n\t * create {@link module:engine/model/position~Position Position} instance.\n\t *\n\t *\t\tconst abc = new Text( 'abc' );\n\t *\t\tconst foo = new Text( 'foo' );\n\t *\t\tconst h1 = new Element( 'h1', null, new Text( 'header' ) );\n\t *\t\tconst p = new Element( 'p', null, [ abc, foo ] );\n\t *\t\tconst div = new Element( 'div', null, [ h1, p ] );\n\t *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\n\t *\t\th1.getPath(); // Returns [ 0 ].\n\t *\t\tdiv.getPath(); // Returns [].\n\t *\n\t * @returns {Array.<Number>} The path.\n\t */\n\tgetPath() {\n\t\tconst path = [];\n\t\tlet node = this; // eslint-disable-line consistent-this\n\n\t\twhile ( node.parent ) {\n\t\t\tpath.unshift( node.startOffset );\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn path;\n\t}\n\n\t/**\n\t * Returns ancestors array of this node.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n\t * otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeSelf ? this : this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t/**\n\t * Returns a {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n\t * which is a common ancestor of both nodes.\n\t *\n\t * @param {module:engine/model/node~Node} node The second node.\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\n\t * Which means that if e.g. node A is inside B, then their common ancestor will be B.\n\t * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor( node, options = {} ) {\n\t\tconst ancestorsA = this.getAncestors( options );\n\t\tconst ancestorsB = node.getAncestors( options );\n\n\t\tlet i = 0;\n\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n\t}\n\n\t/**\n\t * Returns whether this node is before given node. `false` is returned if nodes are in different trees (for example,\n\t * in different {@link module:engine/model/documentfragment~DocumentFragment}s).\n\t *\n\t * @param {module:engine/model/node~Node} node Node to compare with.\n\t * @returns {Boolean}\n\t */\n\tisBefore( node ) {\n\t\t// Given node is not before this node if they are same.\n\t\tif ( this == node ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Return `false` if it is impossible to compare nodes.\n\t\tif ( this.root !== node.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst thisPath = this.getPath();\n\t\tconst nodePath = node.getPath();\n\n\t\tconst result = compareArrays( thisPath, nodePath );\n\n\t\tswitch ( result ) {\n\t\t\tcase 'prefix':\n\t\t\t\treturn true;\n\n\t\t\tcase 'extension':\n\t\t\t\treturn false;\n\n\t\t\tdefault:\n\t\t\t\treturn thisPath[ result ] < nodePath[ result ];\n\t\t}\n\t}\n\n\t/**\n\t * Returns whether this node is after given node. `false` is returned if nodes are in different trees (for example,\n\t * in different {@link module:engine/model/documentfragment~DocumentFragment}s).\n\t *\n\t * @param {module:engine/model/node~Node} node Node to compare with.\n\t * @returns {Boolean}\n\t */\n\tisAfter( node ) {\n\t\t// Given node is not before this node if they are same.\n\t\tif ( this == node ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Return `false` if it is impossible to compare nodes.\n\t\tif ( this.root !== node.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// In other cases, just check if the `node` is before, and return the opposite.\n\t\treturn !this.isBefore( node );\n\t}\n\n\t/**\n\t * Checks if the node has an attribute with given key.\n\t *\n\t * @param {String} key Key of attribute to check.\n\t * @returns {Boolean} `true` if attribute with given key is set on node, `false` otherwise.\n\t */\n\thasAttribute( key ) {\n\t\treturn this._attrs.has( key );\n\t}\n\n\t/**\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on node.\n\t *\n\t * @param {String} key Key of attribute to look for.\n\t * @returns {*} Attribute value or `undefined`.\n\t */\n\tgetAttribute( key ) {\n\t\treturn this._attrs.get( key );\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this node's attributes.\n\t *\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tgetAttributes() {\n\t\treturn this._attrs.entries();\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this node's attribute keys.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetAttributeKeys() {\n\t\treturn this._attrs.keys();\n\t}\n\n\t/**\n\t * Converts `Node` to plain object and returns it.\n\t *\n\t * @returns {Object} `Node` converted to plain object.\n\t */\n\ttoJSON() {\n\t\tconst json = {};\n\n\t\t// Serializes attributes to the object.\n\t\t// attributes = { a: 'foo', b: 1, c: true }.\n\t\tif ( this._attrs.size ) {\n\t\t\tjson.attributes = Array.from( this._attrs ).reduce( ( result, attr ) => {\n\t\t\t\tresult[ attr[ 0 ] ] = attr[ 1 ];\n\n\t\t\t\treturn result;\n\t\t\t}, {} );\n\t\t}\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t * This method is useful when processing model objects that are of unknown type. For example, a function\n\t * may return a {@link module:engine/model/documentfragment~DocumentFragment} or a {@link module:engine/model/node~Node}\n\t * that can be either a text node or an element. This method can be used to check what kind of object is returned.\n\t *\n\t *\t\tsomeObject.is( 'element' ); // -> true if this is an element\n\t *\t\tsomeObject.is( 'node' ); // -> true if this is a node (a text node or an element)\n\t *\t\tsomeObject.is( 'documentFragment' ); // -> true if this is a document fragment\n\t *\n\t * Since this method is also available on a range of view objects, you can prefix the type of the object with\n\t * `model:` or `view:` to check, for example, if this is the model's or view's element:\n\t *\n\t *\t\tmodelElement.is( 'model:element' ); // -> true\n\t *\t\tmodelElement.is( 'view:element' ); // -> false\n\t *\n\t * By using this method it is also possible to check a name of an element:\n\t *\n\t *\t\timageElement.is( 'image' ); // -> true\n\t *\t\timageElement.is( 'element', 'image' ); // -> same as above\n\t *\t\timageElement.is( 'model:element', 'image' ); // -> same as above, but more precise\n\t *\n\t * The list of model objects which implement the `is()` method:\n\t *\n\t * * {@link module:engine/model/node~Node#is `Node#is()`}\n\t * * {@link module:engine/model/text~Text#is `Text#is()`}\n\t * * {@link module:engine/model/element~Element#is `Element#is()`}\n\t * * {@link module:engine/model/rootelement~RootElement#is `RootElement#is()`}\n\t * * {@link module:engine/model/position~Position#is `Position#is()`}\n\t * * {@link module:engine/model/liveposition~LivePosition#is `LivePosition#is()`}\n\t * * {@link module:engine/model/range~Range#is `Range#is()`}\n\t * * {@link module:engine/model/liverange~LiveRange#is `LiveRange#is()`}\n\t * * {@link module:engine/model/documentfragment~DocumentFragment#is `DocumentFragment#is()`}\n\t * * {@link module:engine/model/selection~Selection#is `Selection#is()`}\n\t * * {@link module:engine/model/documentselection~DocumentSelection#is `DocumentSelection#is()`}\n\t * * {@link module:engine/model/markercollection~Marker#is `Marker#is()`}\n\t * * {@link module:engine/model/textproxy~TextProxy#is `TextProxy#is()`}\n\t *\n\t * @method #is\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'node' || type === 'model:node';\n\t}\n\n\t/**\n\t * Creates a copy of this node, that is a node with exactly same attributes, and returns it.\n\t *\n\t * @protected\n\t * @returns {module:engine/model/node~Node} Node with same attributes as this node.\n\t */\n\t_clone() {\n\t\treturn new Node( this._attrs );\n\t}\n\n\t/**\n\t * Removes this node from it's parent.\n\t *\n\t * @see module:engine/model/writer~Writer#remove\n\t * @protected\n\t */\n\t_remove() {\n\t\tthis.parent._removeChildren( this.index );\n\t}\n\n\t/**\n\t * Sets attribute on the node. If attribute with the same key already is set, it's value is overwritten.\n\t *\n\t * @see module:engine/model/writer~Writer#setAttribute\n\t * @protected\n\t * @param {String} key Key of attribute to set.\n\t * @param {*} value Attribute value.\n\t */\n\t_setAttribute( key, value ) {\n\t\tthis._attrs.set( key, value );\n\t}\n\n\t/**\n\t * Removes all attributes from the node and sets given attributes.\n\t *\n\t * @see module:engine/model/writer~Writer#setAttributes\n\t * @protected\n\t * @param {Object} [attrs] Attributes to set. See {@link module:utils/tomap~toMap} for a list of accepted values.\n\t */\n\t_setAttributesTo( attrs ) {\n\t\tthis._attrs = toMap( attrs );\n\t}\n\n\t/**\n\t * Removes an attribute with given key from the node.\n\t *\n\t * @see module:engine/model/writer~Writer#removeAttribute\n\t * @protected\n\t * @param {String} key Key of attribute to remove.\n\t * @returns {Boolean} `true` if the attribute was set on the element, `false` otherwise.\n\t */\n\t_removeAttribute( key ) {\n\t\treturn this._attrs.delete( key );\n\t}\n\n\t/**\n\t * Removes all attributes from the node.\n\t *\n\t * @see module:engine/model/writer~Writer#clearAttributes\n\t * @protected\n\t */\n\t_clearAttributes() {\n\t\tthis._attrs.clear();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/text\n */\n\nimport Node from './node';\n\n// @if CK_DEBUG_ENGINE // const { convertMapToStringifiedObject } = require( '../dev-utils/utils' );\n\n/**\n * Model text node. Type of {@link module:engine/model/node~Node node} that contains {@link module:engine/model/text~Text#data text data}.\n *\n * **Important:** see {@link module:engine/model/node~Node} to read about restrictions using `Text` and `Node` API.\n *\n * **Note:** keep in mind that `Text` instances might indirectly got removed from model tree when model is changed.\n * This happens when {@link module:engine/model/writer~Writer model writer} is used to change model and the text node is merged with\n * another text node. Then, both text nodes are removed and a new text node is inserted into the model. Because of\n * this behavior, keeping references to `Text` is not recommended. Instead, consider creating\n * {@link module:engine/model/liveposition~LivePosition live position} placed before the text node.\n *\n * @extends module:engine/model/node~Node\n */\nexport default class Text extends Node {\n\t/**\n\t * Creates a text node.\n\t *\n\t * **Note:** Constructor of this class shouldn't be used directly in the code.\n\t * Use the {@link module:engine/model/writer~Writer#createText} method instead.\n\t *\n\t * @protected\n\t * @param {String} data Node's text.\n\t * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n\t */\n\tconstructor( data, attrs ) {\n\t\tsuper( attrs );\n\n\t\t/**\n\t\t * Text data contained in this text node.\n\t\t *\n\t\t * @protected\n\t\t * @type {String}\n\t\t */\n\t\tthis._data = data || '';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget offsetSize() {\n\t\treturn this.data.length;\n\t}\n\n\t/**\n\t * Returns a text data contained in the node.\n\t *\n\t * @readonly\n\t * @type {String}\n\t */\n\tget data() {\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\ttext.is( 'text' ); // -> true\n\t *\t\ttext.is( 'node' ); // -> true\n\t *\t\ttext.is( 'model:text' ); // -> true\n\t *\t\ttext.is( 'model:node' ); // -> true\n\t *\n\t *\t\ttext.is( 'view:text' ); // -> false\n\t *\t\ttext.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'text' || type === 'model:text' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype === 'node' || type === 'model:node';\n\t}\n\n\t/**\n\t * Converts `Text` instance to plain object and returns it.\n\t *\n\t * @returns {Object} `Text` instance converted to plain object.\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.data = this.data;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Creates a copy of this text node and returns it. Created text node has same text data and attributes as original text node.\n\t *\n\t * @protected\n\t * @returns {module:engine/model/text~Text} `Text` instance created using given plain object.\n\t */\n\t_clone() {\n\t\treturn new Text( this.data, this.getAttributes() );\n\t}\n\n\t/**\n\t * Creates a `Text` instance from given plain object (i.e. parsed JSON string).\n\t *\n\t * @param {Object} json Plain object to be converted to `Text`.\n\t * @returns {module:engine/model/text~Text} `Text` instance created using given plain object.\n\t */\n\tstatic fromJSON( json ) {\n\t\treturn new Text( json.data, json.attributes );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( `ModelText: ${ this }, attrs: ${ convertMapToStringifiedObject( this.getAttributes() ) }` );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelText: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/textproxy\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n// @if CK_DEBUG_ENGINE // const { convertMapToStringifiedObject } = require( '../dev-utils/utils' );\n\n/**\n * `TextProxy` represents a part of {@link module:engine/model/text~Text text node}.\n *\n * Since {@link module:engine/model/position~Position positions} can be placed between characters of a text node,\n * {@link module:engine/model/range~Range ranges} may contain only parts of text nodes. When {@link module:engine/model/range~Range#getItems\n * getting items}\n * contained in such range, we need to represent a part of that text node, since returning the whole text node would be incorrect.\n * `TextProxy` solves this issue.\n *\n * `TextProxy` has an API similar to {@link module:engine/model/text~Text Text} and allows to do most of the common tasks performed\n * on model nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/model/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is not an instance of {@link module:engine/model/node~Node node}. Keep this in mind when using it as a\n * parameter of methods.\n *\n * **Note:** `TextProxy` is a readonly interface. If you want to perform changes on model data represented by a `TextProxy`\n * use {@link module:engine/model/writer~Writer model writer API}.\n *\n * **Note:** `TextProxy` instances are created on the fly, basing on the current state of model. Because of this, it is\n * highly unrecommended to store references to `TextProxy` instances. `TextProxy` instances are not refreshed when\n * model changes, so they might get invalidated. Instead, consider creating {@link module:engine/model/liveposition~LivePosition live\n * position}.\n *\n * `TextProxy` instances are created by {@link module:engine/model/treewalker~TreeWalker model tree walker}. You should not need to create\n * an instance of this class by your own.\n */\nexport default class TextProxy {\n\t/**\n\t * Creates a text proxy.\n\t *\n\t * @protected\n\t * @param {module:engine/model/text~Text} textNode Text node which part is represented by this text proxy.\n\t * @param {Number} offsetInText Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy\n\t * starts.\n\t * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n\t * @constructor\n\t */\n\tconstructor( textNode, offsetInText, length ) {\n\t\t/**\n\t\t * Text node which part is represented by this text proxy.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/text~Text}\n\t\t */\n\t\tthis.textNode = textNode;\n\n\t\tif ( offsetInText < 0 || offsetInText > textNode.offsetSize ) {\n\t\t\t/**\n\t\t\t * Given `offsetInText` value is incorrect.\n\t\t\t *\n\t\t\t * @error model-textproxy-wrong-offsetintext\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-textproxy-wrong-offsetintext: Given offsetInText value is incorrect.', this );\n\t\t}\n\n\t\tif ( length < 0 || offsetInText + length > textNode.offsetSize ) {\n\t\t\t/**\n\t\t\t * Given `length` value is incorrect.\n\t\t\t *\n\t\t\t * @error model-textproxy-wrong-length\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-textproxy-wrong-length: Given length value is incorrect.', this );\n\t\t}\n\n\t\t/**\n\t\t * Text data represented by this text proxy.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.data = textNode.data.substring( offsetInText, offsetInText + length );\n\n\t\t/**\n\t\t * Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy starts.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n\t\tthis.offsetInText = offsetInText;\n\t}\n\n\t/**\n\t * Offset at which this text proxy starts in it's parent.\n\t *\n\t * @see module:engine/model/node~Node#startOffset\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget startOffset() {\n\t\treturn this.textNode.startOffset !== null ? this.textNode.startOffset + this.offsetInText : null;\n\t}\n\n\t/**\n\t * Offset size of this text proxy. Equal to the number of characters represented by the text proxy.\n\t *\n\t * @see module:engine/model/node~Node#offsetSize\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget offsetSize() {\n\t\treturn this.data.length;\n\t}\n\n\t/**\n\t * Offset at which this text proxy ends in it's parent.\n\t *\n\t * @see module:engine/model/node~Node#endOffset\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget endOffset() {\n\t\treturn this.startOffset !== null ? this.startOffset + this.offsetSize : null;\n\t}\n\n\t/**\n\t * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/model/text~Text text node}\n\t * (`true`) or the whole text node (`false`).\n\t *\n\t * This is `false` when text proxy starts at the very beginning of {@link module:engine/model/textproxy~TextProxy#textNode textNode}\n\t * ({@link module:engine/model/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n\t * text node size.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isPartial() {\n\t\treturn this.offsetSize !== this.textNode.offsetSize;\n\t}\n\n\t/**\n\t * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t */\n\tget parent() {\n\t\treturn this.textNode.parent;\n\t}\n\n\t/**\n\t * Root of this text proxy, which is same as root of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.textNode.root;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\ttextProxy.is( 'textProxy' ); // -> true\n\t *\t\ttextProxy.is( 'model:textProxy' ); // -> true\n\t *\n\t *\t\ttextProxy.is( 'view:textProxy' ); // -> false\n\t *\t\ttextProxy.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'textProxy' || type === 'model:textProxy';\n\t}\n\n\t/**\n\t * Gets path to this text proxy.\n\t *\n\t * @see module:engine/model/node~Node#getPath\n\t * @returns {Array.<Number>}\n\t */\n\tgetPath() {\n\t\tconst path = this.textNode.getPath();\n\n\t\tif ( path.length > 0 ) {\n\t\t\tpath[ path.length - 1 ] += this.offsetInText;\n\t\t}\n\n\t\treturn path;\n\t}\n\n\t/**\n\t * Returns ancestors array of this text proxy.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` this text proxy will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to root element,\n\t * otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeSelf ? this : this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t/**\n\t * Checks if this text proxy has an attribute for given key.\n\t *\n\t * @param {String} key Key of attribute to check.\n\t * @returns {Boolean} `true` if attribute with given key is set on text proxy, `false` otherwise.\n\t */\n\thasAttribute( key ) {\n\t\treturn this.textNode.hasAttribute( key );\n\t}\n\n\t/**\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on text proxy.\n\t *\n\t * @param {String} key Key of attribute to look for.\n\t * @returns {*} Attribute value or `undefined`.\n\t */\n\tgetAttribute( key ) {\n\t\treturn this.textNode.getAttribute( key );\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this node's attributes. Attributes are returned as arrays containing two\n\t * items. First one is attribute key and second is attribute value.\n\t *\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tgetAttributes() {\n\t\treturn this.textNode.getAttributes();\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this node's attribute keys.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetAttributeKeys() {\n\t\treturn this.textNode.getAttributeKeys();\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelTextProxy: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( `ModelTextProxy: ${ this }, ` +\n\t// @if CK_DEBUG_ENGINE // \t\t`attrs: ${ convertMapToStringifiedObject( this.getAttributes() ) }` );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/nodelist\n */\n\nimport Node from './node';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Provides an interface to operate on a list of {@link module:engine/model/node~Node nodes}. `NodeList` is used internally\n * in classes like {@link module:engine/model/element~Element Element}\n * or {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n */\nexport default class NodeList {\n\t/**\n\t * Creates an empty node list.\n\t *\n\t * @protected\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes contained in this node list.\n\t */\n\tconstructor( nodes ) {\n\t\t/**\n\t\t * Nodes contained in this node list.\n\t\t *\n\t\t * @private\n\t\t * @member {Array.<module:engine/model/node~Node>}\n\t\t */\n\t\tthis._nodes = [];\n\n\t\tif ( nodes ) {\n\t\t\tthis._insertNodes( 0, nodes );\n\t\t}\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over all nodes contained inside this node list.\n\t *\n\t * @returns {Iterable.<module:engine/model/node~Node>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._nodes[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Number of nodes contained inside this node list.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget length() {\n\t\treturn this._nodes.length;\n\t}\n\n\t/**\n\t * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all nodes contained inside this node list.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget maxOffset() {\n\t\treturn this._nodes.reduce( ( sum, node ) => sum + node.offsetSize, 0 );\n\t}\n\n\t/**\n\t * Gets the node at the given index. Returns `null` if incorrect index was passed.\n\t *\n\t * @param {Number} index Index of node.\n\t * @returns {module:engine/model/node~Node|null} Node at given index.\n\t */\n\tgetNode( index ) {\n\t\treturn this._nodes[ index ] || null;\n\t}\n\n\t/**\n\t * Returns an index of the given node. Returns `null` if given node is not inside this node list.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number|null} Child node's index.\n\t */\n\tgetNodeIndex( node ) {\n\t\tconst index = this._nodes.indexOf( node );\n\n\t\treturn index == -1 ? null : index;\n\t}\n\n\t/**\n\t * Returns the starting offset of given node. Starting offset is equal to the sum of\n\t * {@link module:engine/model/node~Node#offsetSize offset sizes} of all nodes that are before this node in this node list.\n\t *\n\t * @param {module:engine/model/node~Node} node Node to look for.\n\t * @returns {Number|null} Node's starting offset.\n\t */\n\tgetNodeStartOffset( node ) {\n\t\tconst index = this.getNodeIndex( node );\n\n\t\treturn index === null ? null : this._nodes.slice( 0, index ).reduce( ( sum, node ) => sum + node.offsetSize, 0 );\n\t}\n\n\t/**\n\t * Converts index to offset in node list.\n\t *\n\t * Returns starting offset of a node that is at given index. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n\t * `model-nodelist-index-out-of-bounds` if given index is less than `0` or more than {@link #length}.\n\t *\n\t * @param {Number} index Node's index.\n\t * @returns {Number} Node's starting offset.\n\t */\n\tindexToOffset( index ) {\n\t\tif ( index == this._nodes.length ) {\n\t\t\treturn this.maxOffset;\n\t\t}\n\n\t\tconst node = this._nodes[ index ];\n\n\t\tif ( !node ) {\n\t\t\t/**\n\t\t\t * Given index cannot be found in the node list.\n\t\t\t *\n\t\t\t * @error nodelist-index-out-of-bounds\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-nodelist-index-out-of-bounds: Given index cannot be found in the node list.', this );\n\t\t}\n\n\t\treturn this.getNodeStartOffset( node );\n\t}\n\n\t/**\n\t * Converts offset in node list to index.\n\t *\n\t * Returns index of a node that occupies given offset. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n\t * `model-nodelist-offset-out-of-bounds` if given offset is less than `0` or more than {@link #maxOffset}.\n\t *\n\t * @param {Number} offset Offset to look for.\n\t * @returns {Number} Index of a node that occupies given offset.\n\t */\n\toffsetToIndex( offset ) {\n\t\tlet totalOffset = 0;\n\n\t\tfor ( const node of this._nodes ) {\n\t\t\tif ( offset >= totalOffset && offset < totalOffset + node.offsetSize ) {\n\t\t\t\treturn this.getNodeIndex( node );\n\t\t\t}\n\n\t\t\ttotalOffset += node.offsetSize;\n\t\t}\n\n\t\tif ( totalOffset != offset ) {\n\t\t\t/**\n\t\t\t * Given offset cannot be found in the node list.\n\t\t\t *\n\t\t\t * @error model-nodelist-offset-out-of-bounds\n\t\t\t * @param {Number} offset\n\t\t\t * @param {module:engine/model/nodelist~NodeList} nodeList Stringified node list.\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-nodelist-offset-out-of-bounds: Given offset cannot be found in the node list.',\n\t\t\t\tthis,\n\t\t\t\t{\n\t\t\t\t\toffset,\n\t\t\t\t\tnodeList: this\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\treturn this.length;\n\t}\n\n\t/**\n\t * Inserts given nodes at given index.\n\t *\n\t * @protected\n\t * @param {Number} index Index at which nodes should be inserted.\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\n\t */\n\t_insertNodes( index, nodes ) {\n\t\t// Validation.\n\t\tfor ( const node of nodes ) {\n\t\t\tif ( !( node instanceof Node ) ) {\n\t\t\t\t/**\n\t\t\t\t * Trying to insert an object which is not a Node instance.\n\t\t\t\t *\n\t\t\t\t * @error nodelist-insertNodes-not-node\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-nodelist-insertNodes-not-node: Trying to insert an object which is not a Node instance.',\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis._nodes.splice( index, 0, ...nodes );\n\t}\n\n\t/**\n\t * Removes one or more nodes starting at the given index.\n\t *\n\t * @protected\n\t * @param {Number} indexStart Index of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n\t */\n\t_removeNodes( indexStart, howMany = 1 ) {\n\t\treturn this._nodes.splice( indexStart, howMany );\n\t}\n\n\t/**\n\t * Converts `NodeList` instance to an array containing nodes that were inserted in the node list. Nodes\n\t * are also converted to their plain object representation.\n\t *\n\t * @returns {Array.<module:engine/model/node~Node>} `NodeList` instance converted to `Array`.\n\t */\n\ttoJSON() {\n\t\treturn this._nodes.map( node => node.toJSON() );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/element\n */\n\nimport Node from './node';\nimport NodeList from './nodelist';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\n// @if CK_DEBUG_ENGINE // const { stringifyMap, convertMapToStringifiedObject, convertMapToTags } = require( '../dev-utils/utils' );\n\n/**\n * Model element. Type of {@link module:engine/model/node~Node node} that has a {@link module:engine/model/element~Element#name name} and\n * {@link module:engine/model/element~Element#getChildren child nodes}.\n *\n * **Important**: see {@link module:engine/model/node~Node} to read about restrictions using `Element` and `Node` API.\n *\n * @extends module:engine/model/node~Node\n */\nexport default class Element extends Node {\n\t/**\n\t * Creates a model element.\n\t *\n\t * **Note:** Constructor of this class shouldn't be used directly in the code.\n\t * Use the {@link module:engine/model/writer~Writer#createElement} method instead.\n\t *\n\t * @protected\n\t * @param {String} name Element's name.\n\t * @param {Object} [attrs] Element's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n\t * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\n\t * One or more nodes to be inserted as children of created element.\n\t */\n\tconstructor( name, attrs, children ) {\n\t\tsuper( attrs );\n\n\t\t/**\n\t\t * Element name.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} module:engine/model/element~Element#name\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * List of children nodes.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/nodelist~NodeList} module:engine/model/element~Element#_children\n\t\t */\n\t\tthis._children = new NodeList();\n\n\t\tif ( children ) {\n\t\t\tthis._insertChild( 0, children );\n\t\t}\n\t}\n\n\t/**\n\t * Number of this element's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget childCount() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all of this element's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget maxOffset() {\n\t\treturn this._children.maxOffset;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this element, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this.childCount === 0;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\telement.is( 'element' ); // -> true\n\t *\t\telement.is( 'node' ); // -> true\n\t *\t\telement.is( 'model:element' ); // -> true\n\t *\t\telement.is( 'model:node' ); // -> true\n\t *\n\t *\t\telement.is( 'view:element' ); // -> false\n\t *\t\telement.is( 'documentSelection' ); // -> false\n\t *\n\t * Assuming that the object being checked is an element, you can also check its\n\t * {@link module:engine/model/element~Element#name name}:\n\t *\n\t *\t\telement.is( 'image' ); // -> true if this is an <image> element\n\t *\t\telement.is( 'element', 'image' ); // -> same as above\n\t *\t\ttext.is( 'image' ); -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'element' || type === 'model:element' ||\n\t\t\t\ttype === this.name || type === 'model:' + this.name ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'node' || type === 'model:node';\n\t\t}\n\n\t\treturn name === this.name && ( type === 'element' || type === 'model:element' );\n\t}\n\n\t/**\n\t * Gets the child at the given index.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/model/node~Node} Child node.\n\t */\n\tgetChild( index ) {\n\t\treturn this._children.getNode( index );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all of this element's children.\n\t *\n\t * @returns {Iterable.<module:engine/model/node~Node>}\n\t */\n\tgetChildren() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Returns an index of the given child node. Returns `null` if given node is not a child of this element.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number} Child node's index in this element.\n\t */\n\tgetChildIndex( node ) {\n\t\treturn this._children.getNodeIndex( node );\n\t}\n\n\t/**\n\t * Returns the starting offset of given child. Starting offset is equal to the sum of\n\t * {@link module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\n\t * given node is not a child of this element.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number} Child node's starting offset.\n\t */\n\tgetChildStartOffset( node ) {\n\t\treturn this._children.getNodeStartOffset( node );\n\t}\n\n\t/**\n\t * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\n\t * too high, returns {@link module:engine/model/element~Element#getChildIndex index after last child}.\n\t *\n\t *\t\tconst textNode = new Text( 'foo' );\n\t *\t\tconst pElement = new Element( 'p' );\n\t *\t\tconst divElement = new Element( [ textNode, pElement ] );\n\t *\t\tdivElement.offsetToIndex( -1 ); // Returns 0, because offset is too low.\n\t *\t\tdivElement.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\n\t *\t\tdivElement.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\n\t *\t\tdivElement.offsetToIndex( 2 ); // Returns 0.\n\t *\t\tdivElement.offsetToIndex( 3 ); // Returns 1.\n\t *\t\tdivElement.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\n\t *\n\t * @param {Number} offset Offset to look for.\n\t * @returns {Number}\n\t */\n\toffsetToIndex( offset ) {\n\t\treturn this._children.offsetToIndex( offset );\n\t}\n\n\t/**\n\t * Returns a descendant node by its path relative to this element.\n\t *\n\t *\t\t// <this>a<b>c</b></this>\n\t *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\n\t *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\n\t *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\n\t *\n\t * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\n\t * @returns {module:engine/model/node~Node}\n\t */\n\tgetNodeByPath( relativePath ) {\n\t\tlet node = this; // eslint-disable-line consistent-this\n\n\t\tfor ( const index of relativePath ) {\n\t\t\tnode = node.getChild( node.offsetToIndex( index ) );\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Converts `Element` instance to plain object and returns it. Takes care of converting all of this element's children.\n\t *\n\t * @returns {Object} `Element` instance converted to plain object.\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.name = this.name;\n\n\t\tif ( this._children.length > 0 ) {\n\t\t\tjson.children = [];\n\n\t\t\tfor ( const node of this._children ) {\n\t\t\t\tjson.children.push( node.toJSON() );\n\t\t\t}\n\t\t}\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Creates a copy of this element and returns it. Created element has the same name and attributes as the original element.\n\t * If clone is deep, the original element's children are also cloned. If not, then empty element is removed.\n\t *\n\t * @protected\n\t * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any child.\n\t */\n\t_clone( deep = false ) {\n\t\tconst children = deep ? Array.from( this._children ).map( node => node._clone( true ) ) : null;\n\n\t\treturn new Element( this.name, this.getAttributes(), children );\n\t}\n\n\t/**\n\t * {@link module:engine/model/element~Element#_insertChild Inserts} one or more nodes at the end of this element.\n\t *\n\t * @see module:engine/model/writer~Writer#append\n\t * @protected\n\t * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} nodes Nodes to be inserted.\n\t */\n\t_appendChild( nodes ) {\n\t\tthis._insertChild( this.childCount, nodes );\n\t}\n\n\t/**\n\t * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\n\t * to this element.\n\t *\n\t * @see module:engine/model/writer~Writer#insert\n\t * @protected\n\t * @param {Number} index Index at which nodes should be inserted.\n\t * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n\t */\n\t_insertChild( index, items ) {\n\t\tconst nodes = normalize( items );\n\n\t\tfor ( const node of nodes ) {\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\n\t\t\tif ( node.parent !== null ) {\n\t\t\t\tnode._remove();\n\t\t\t}\n\n\t\t\tnode.parent = this;\n\t\t}\n\n\t\tthis._children._insertNodes( index, nodes );\n\t}\n\n\t/**\n\t * Removes one or more nodes starting at the given index and sets\n\t * {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\n\t *\n\t * @see module:engine/model/writer~Writer#remove\n\t * @protected\n\t * @param {Number} index Index of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n\t */\n\t_removeChildren( index, howMany = 1 ) {\n\t\tconst nodes = this._children._removeNodes( index, howMany );\n\n\t\tfor ( const node of nodes ) {\n\t\t\tnode.parent = null;\n\t\t}\n\n\t\treturn nodes;\n\t}\n\n\t/**\n\t * Creates an `Element` instance from given plain object (i.e. parsed JSON string).\n\t * Converts `Element` children to proper nodes.\n\t *\n\t * @param {Object} json Plain object to be converted to `Element`.\n\t * @returns {module:engine/model/element~Element} `Element` instance created using given plain object.\n\t */\n\tstatic fromJSON( json ) {\n\t\tlet children = null;\n\n\t\tif ( json.children ) {\n\t\t\tchildren = [];\n\n\t\t\tfor ( const child of json.children ) {\n\t\t\t\tif ( child.name ) {\n\t\t\t\t\t// If child has name property, it is an Element.\n\t\t\t\t\tchildren.push( Element.fromJSON( child ) );\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise, it is a Text node.\n\t\t\t\t\tchildren.push( Text.fromJSON( child ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new Element( json.name, json.attributes, children );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `<${ this.rootName || this.name }>`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelElement: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( `ModelElement: ${ this }, ${ this.childCount } children,\n\t// @if CK_DEBUG_ENGINE //\t\tattrs: ${ convertMapToStringifiedObject( this.getAttributes() ) }` );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logAll() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( '--------------------' );\n\t// @if CK_DEBUG_ENGINE //\n\t// @if CK_DEBUG_ENGINE // \tthis.logExtended();\n\t// @if CK_DEBUG_ENGINE //\tconsole.log( 'List of children:' );\n\t// @if CK_DEBUG_ENGINE //\n\t// @if CK_DEBUG_ENGINE // \tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE // \t\tchild.log();\n\t// @if CK_DEBUG_ENGINE // \t}\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // printTree( level = 0) {\n\t// @if CK_DEBUG_ENGINE // \tlet string = '';\n\n\t// @if CK_DEBUG_ENGINE // \tstring += '\\t'.repeat( level );\n\t// @if CK_DEBUG_ENGINE // \tstring += `<${ this.rootName || this.name }${ convertMapToTags( this.getAttributes() ) }>`;\n\n\t// @if CK_DEBUG_ENGINE // \tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE // \t\tstring += '\\n';\n\n\t// @if CK_DEBUG_ENGINE // \t\tif ( child.is( 'text' ) ) {\n\t// @if CK_DEBUG_ENGINE // \t\t\tconst textAttrs = convertMapToTags( child._attrs );\n\n\t// @if CK_DEBUG_ENGINE // \t\t\tstring += '\\t'.repeat( level + 1 );\n\n\t// @if CK_DEBUG_ENGINE // \t\t\tif ( textAttrs !== '' ) {\n\t// @if CK_DEBUG_ENGINE // \t\t\t\tstring += `<$text${ textAttrs }>` + child.data + '</$text>';\n\t// @if CK_DEBUG_ENGINE // \t\t\t} else {\n\t// @if CK_DEBUG_ENGINE // \t\t\t\tstring += child.data;\n\t// @if CK_DEBUG_ENGINE // \t\t\t}\n\t// @if CK_DEBUG_ENGINE // \t\t} else {\n\t// @if CK_DEBUG_ENGINE // \t\t\tstring += child.printTree( level + 1 );\n\t// @if CK_DEBUG_ENGINE // \t\t}\n\t// @if CK_DEBUG_ENGINE // \t}\n\n\t// @if CK_DEBUG_ENGINE // \tif ( this.childCount ) {\n\t// @if CK_DEBUG_ENGINE // \t\tstring += '\\n' + '\\t'.repeat( level );\n\t// @if CK_DEBUG_ENGINE // \t}\n\n\t// @if CK_DEBUG_ENGINE // \tstring += `</${ this.rootName || this.name }>`;\n\n\t// @if CK_DEBUG_ENGINE // \treturn string;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logTree() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/model/item~Item|Iterable.<String|module:engine/model/item~Item>}\n// @returns {Iterable.<module:engine/model/node~Node>}\nfunction normalize( nodes ) {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\tif ( typeof node == 'string' ) {\n\t\t\t\treturn new Text( node );\n\t\t\t}\n\n\t\t\tif ( node instanceof TextProxy ) {\n\t\t\t\treturn new Text( node.data, node.getAttributes() );\n\t\t\t}\n\n\t\t\treturn node;\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/treewalker\n */\n\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport Element from './element';\nimport {\n\tdefault as Position,\n\tgetTextNodeAtPosition,\n\tgetNodeAfterPosition,\n\tgetNodeBeforePosition\n} from './position';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\nexport default class TreeWalker {\n\t/**\n\t * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n\t *\n\t * @constructor\n\t * @param {Object} [options={}] Object with configuration.\n\t * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n\t * @param {module:engine/model/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n\t * @param {module:engine/model/position~Position} [options.startPosition] Starting position.\n\t * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all consecutive characters with the same attributes\n\t * should be returned one by one as multiple {@link module:engine/model/textproxy~TextProxy} (`true`) objects or as one\n\t * {@link module:engine/model/textproxy~TextProxy} (`false`).\n\t * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n\t * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n\t * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n\t * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n\t * each {@link module:engine/model/element~Element} will be returned once, while if the option is `false` they might be returned\n\t * twice: for `'elementStart'` and `'elementEnd'`.\n\t */\n\tconstructor( options = {} ) {\n\t\tif ( !options.boundaries && !options.startPosition ) {\n\t\t\t/**\n\t\t\t * Neither boundaries nor starting position of a `TreeWalker` have been defined.\n\t\t\t *\n\t\t\t * @error model-tree-walker-no-start-position\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-tree-walker-no-start-position: Neither boundaries nor starting position have been defined.',\n\t\t\t\tnull\n\t\t\t);\n\t\t}\n\n\t\tconst direction = options.direction || 'forward';\n\n\t\tif ( direction != 'forward' && direction != 'backward' ) {\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-tree-walker-unknown-direction: Only `backward` and `forward` direction allowed.',\n\t\t\t\toptions,\n\t\t\t\t{ direction }\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Walking direction. Defaults `'forward'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'backward'|'forward'} module:engine/model/treewalker~TreeWalker#direction\n\t\t */\n\t\tthis.direction = direction;\n\n\t\t/**\n\t\t * Iterator boundaries.\n\t\t *\n\t\t * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n\t\t * on the start of boundary, then `{ done: true }` is returned.\n\t\t *\n\t\t * If boundaries are not defined they are set before first and after last child of the root node.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/range~Range} module:engine/model/treewalker~TreeWalker#boundaries\n\t\t */\n\t\tthis.boundaries = options.boundaries || null;\n\n\t\t/**\n\t\t * Iterator position. This is always static position, even if the initial position was a\n\t\t * {@link module:engine/model/liveposition~LivePosition live position}. If start position is not defined then position depends\n\t\t * on {@link #direction}. If direction is `'forward'` position starts form the beginning, when direction\n\t\t * is `'backward'` position starts from the end.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/position~Position} module:engine/model/treewalker~TreeWalker#position\n\t\t */\n\t\tif ( options.startPosition ) {\n\t\t\tthis.position = options.startPosition.clone();\n\t\t} else {\n\t\t\tthis.position = Position._createAt( this.boundaries[ this.direction == 'backward' ? 'end' : 'start' ] );\n\t\t}\n\n\t\t// Reset position stickiness in case it was set to other value, as the stickiness is kept after cloning.\n\t\tthis.position.stickiness = 'toNone';\n\n\t\t/**\n\t\t * Flag indicating whether all consecutive characters with the same attributes should be\n\t\t * returned as one {@link module:engine/model/textproxy~TextProxy} (`true`) or one by one (`false`).\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/model/treewalker~TreeWalker#singleCharacters\n\t\t */\n\t\tthis.singleCharacters = !!options.singleCharacters;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n\t\t * iterated node will not be returned along with `elementEnd` tag.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/model/treewalker~TreeWalker#shallow\n\t\t */\n\t\tthis.shallow = !!options.shallow;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should ignore `elementEnd` tags. If the option is true walker will not\n\t\t * return a parent node of the start position. If this option is `true` each {@link module:engine/model/element~Element} will\n\t\t * be returned once, while if the option is `false` they might be returned twice:\n\t\t * for `'elementStart'` and `'elementEnd'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/model/treewalker~TreeWalker#ignoreElementEnd\n\t\t */\n\t\tthis.ignoreElementEnd = !!options.ignoreElementEnd;\n\n\t\t/**\n\t\t * Start boundary cached for optimization purposes.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryStartParent\n\t\t */\n\t\tthis._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n\n\t\t/**\n\t\t * End boundary cached for optimization purposes.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryEndParent\n\t\t */\n\t\tthis._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n\n\t\t/**\n\t\t * Parent of the most recently visited node. Cached for optimization purposes.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n\t\t * module:engine/model/treewalker~TreeWalker#_visitedParent\n\t\t */\n\t\tthis._visitedParent = this.position.parent;\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterable.<module:engine/model/treewalker~TreeWalkerValue>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n\t *\n\t * For example:\n\t *\n\t * \t\twalker.skip( value => value.type == 'text' ); // <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\n\t * \t\twalker.skip( () => true ); // Move the position to the end: <paragraph>[]foo</paragraph> -> <paragraph>foo</paragraph>[]\n\t * \t\twalker.skip( () => false ); // Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t */\n\tskip( skip ) {\n\t\tlet done, value, prevPosition, prevVisitedParent;\n\n\t\tdo {\n\t\t\tprevPosition = this.position;\n\t\t\tprevVisitedParent = this._visitedParent;\n\n\t\t\t( { done, value } = this.next() );\n\t\t} while ( !done && skip( value ) );\n\n\t\tif ( !done ) {\n\t\t\tthis.position = prevPosition;\n\t\t\tthis._visitedParent = prevVisitedParent;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the next tree walker's value.\n\t *\n\t * @returns {module:engine/model/treewalker~TreeWalkerValue} Next tree walker's value.\n\t */\n\tnext() {\n\t\tif ( this.direction == 'forward' ) {\n\t\t\treturn this._next();\n\t\t} else {\n\t\t\treturn this._previous();\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step forward in model. Moves the {@link #position} to the next position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done True if iterator is done.\n\t * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\t_next() {\n\t\tconst previousPosition = this.position;\n\t\tconst position = this.position.clone();\n\t\tconst parent = this._visitedParent;\n\n\t\t// We are at the end of the root.\n\t\tif ( parent.parent === null && position.offset === parent.maxOffset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// Get node just after the current position.\n\t\t// Use a highly optimized version instead of checking the text node first and then getting the node after. See #6582.\n\t\tconst positionParent = position.parent;\n\t\tconst textNodeAtPosition = getTextNodeAtPosition( position, positionParent );\n\t\tconst node = textNodeAtPosition ? textNodeAtPosition : getNodeAfterPosition( position, positionParent, textNodeAtPosition );\n\n\t\tif ( node instanceof Element ) {\n\t\t\tif ( !this.shallow ) {\n\t\t\t\t// Manual operations on path internals for optimization purposes. Here and in the rest of the method.\n\t\t\t\tposition.path.push( 0 );\n\t\t\t\tthis._visitedParent = node;\n\t\t\t} else {\n\t\t\t\tposition.offset++;\n\t\t\t}\n\n\t\t\tthis.position = position;\n\n\t\t\treturn formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t} else if ( node instanceof Text ) {\n\t\t\tlet charactersCount;\n\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tcharactersCount = 1;\n\t\t\t} else {\n\t\t\t\tlet offset = node.endOffset;\n\n\t\t\t\tif ( this._boundaryEndParent == parent && this.boundaries.end.offset < offset ) {\n\t\t\t\t\toffset = this.boundaries.end.offset;\n\t\t\t\t}\n\n\t\t\t\tcharactersCount = offset - position.offset;\n\t\t\t}\n\n\t\t\tconst offsetInTextNode = position.offset - node.startOffset;\n\t\t\tconst item = new TextProxy( node, offsetInTextNode, charactersCount );\n\n\t\t\tposition.offset += charactersCount;\n\t\t\tthis.position = position;\n\n\t\t\treturn formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the end of current `parent`.\n\t\t\tposition.path.pop();\n\t\t\tposition.offset++;\n\t\t\tthis.position = position;\n\t\t\tthis._visitedParent = parent.parent;\n\n\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\treturn this._next();\n\t\t\t} else {\n\t\t\t\treturn formatReturnValue( 'elementEnd', parent, previousPosition, position );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step backward in model. Moves the {@link #position} to the previous position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done True if iterator is done.\n\t * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\t_previous() {\n\t\tconst previousPosition = this.position;\n\t\tconst position = this.position.clone();\n\t\tconst parent = this._visitedParent;\n\n\t\t// We are at the beginning of the root.\n\t\tif ( parent.parent === null && position.offset === 0 ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// Get node just before the current position.\n\t\t// Use a highly optimized version instead of checking the text node first and then getting the node before. See #6582.\n\t\tconst positionParent = position.parent;\n\t\tconst textNodeAtPosition = getTextNodeAtPosition( position, positionParent );\n\t\tconst node = textNodeAtPosition ? textNodeAtPosition : getNodeBeforePosition( position, positionParent, textNodeAtPosition );\n\n\t\tif ( node instanceof Element ) {\n\t\t\tposition.offset--;\n\n\t\t\tif ( !this.shallow ) {\n\t\t\t\tposition.path.push( node.maxOffset );\n\t\t\t\tthis.position = position;\n\t\t\t\tthis._visitedParent = node;\n\n\t\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\t\treturn this._previous();\n\t\t\t\t} else {\n\t\t\t\t\treturn formatReturnValue( 'elementEnd', node, previousPosition, position );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t\t}\n\t\t} else if ( node instanceof Text ) {\n\t\t\tlet charactersCount;\n\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tcharactersCount = 1;\n\t\t\t} else {\n\t\t\t\tlet offset = node.startOffset;\n\n\t\t\t\tif ( this._boundaryStartParent == parent && this.boundaries.start.offset > offset ) {\n\t\t\t\t\toffset = this.boundaries.start.offset;\n\t\t\t\t}\n\n\t\t\t\tcharactersCount = position.offset - offset;\n\t\t\t}\n\n\t\t\tconst offsetInTextNode = position.offset - node.startOffset;\n\t\t\tconst item = new TextProxy( node, offsetInTextNode - charactersCount, charactersCount );\n\n\t\t\tposition.offset -= charactersCount;\n\t\t\tthis.position = position;\n\n\t\t\treturn formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the beginning of current `parent`.\n\t\t\tposition.path.pop();\n\t\t\tthis.position = position;\n\t\t\tthis._visitedParent = parent.parent;\n\n\t\t\treturn formatReturnValue( 'elementStart', parent, previousPosition, position, 1 );\n\t\t}\n\t}\n}\n\nfunction formatReturnValue( type, item, previousPosition, nextPosition, length ) {\n\treturn {\n\t\tdone: false,\n\t\tvalue: {\n\t\t\ttype,\n\t\t\titem,\n\t\t\tpreviousPosition,\n\t\t\tnextPosition,\n\t\t\tlength\n\t\t}\n\t};\n}\n\n/**\n * Type of the step made by {@link module:engine/model/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end of node,\n * `'character'` if walker traversed over a character, or `'text'` if walker traversed over multiple characters (available in\n * character merging mode, see {@link module:engine/model/treewalker~TreeWalker#constructor}).\n *\n * @typedef {'elementStart'|'elementEnd'|'character'|'text'} module:engine/model/treewalker~TreeWalkerValueType\n */\n\n/**\n * Object returned by {@link module:engine/model/treewalker~TreeWalker} when traversing tree model.\n *\n * @typedef {Object} module:engine/model/treewalker~TreeWalkerValue\n * @property {module:engine/model/treewalker~TreeWalkerValueType} type\n * @property {module:engine/model/item~Item} item Item between old and new positions of {@link module:engine/model/treewalker~TreeWalker}.\n * @property {module:engine/model/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * @property {module:engine/model/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * @property {Number} [length] Length of the item. For `'elementStart'` and `'character'` it is 1. For `'text'` it is\n * the length of the text. For `'elementEnd'` it is `undefined`.\n */\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/position\n */\n\nimport TreeWalker from './treewalker';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n// To check if component is loaded more than once.\nimport '@ckeditor/ckeditor5-utils/src/version';\n\n/**\n * Represents a position in the model tree.\n *\n * A position is represented by its {@link module:engine/model/position~Position#root} and\n * a {@link module:engine/model/position~Position#path} in that root.\n *\n * You can create position instances via its constructor or the `createPosition*()` factory methods of\n * {@link module:engine/model/model~Model} and {@link module:engine/model/writer~Writer}.\n *\n * **Note:** Position is based on offsets, not indexes. This means that a position between two text nodes\n * `foo` and `bar` has offset `3`, not `1`. See {@link module:engine/model/position~Position#path} for more information.\n *\n * Since a position in the model is represented by a {@link module:engine/model/position~Position#root position root} and\n * {@link module:engine/model/position~Position#path position path} it is possible to create positions placed in non-existing places.\n * This requirement is important for operational transformation algorithms.\n *\n * Also, {@link module:engine/model/operation/operation~Operation operations}\n * kept in the {@link module:engine/model/document~Document#history document history}\n * are storing positions (and ranges) which were correct when those operations were applied, but may not be correct\n * after the document has changed.\n *\n * When changes are applied to the model, it may also happen that {@link module:engine/model/position~Position#parent position parent}\n * will change even if position path has not changed. Keep in mind, that if a position leads to non-existing element,\n * {@link module:engine/model/position~Position#parent} and some other properties and methods will throw errors.\n *\n * In most cases, position with wrong path is caused by an error in code, but it is sometimes needed, as described above.\n */\nexport default class Position {\n\t/**\n\t * Creates a position.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n\t * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n\t * See {@link module:engine/model/position~PositionStickiness}.\n\t */\n\tconstructor( root, path, stickiness = 'toNone' ) {\n\t\tif ( !root.is( 'element' ) && !root.is( 'documentFragment' ) ) {\n\t\t\t/**\n\t\t\t * Position root is invalid.\n\t\t\t *\n\t\t\t * Positions can only be anchored in elements or document fragments.\n\t\t\t *\n\t\t\t * @error model-position-root-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-position-root-invalid: Position root invalid.',\n\t\t\t\troot\n\t\t\t);\n\t\t}\n\n\t\tif ( !( path instanceof Array ) || path.length === 0 ) {\n\t\t\t/**\n\t\t\t * Position path must be an array with at least one item.\n\t\t\t *\n\t\t\t * @error model-position-path-incorrect-format\n\t\t\t * @param path\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-position-path-incorrect-format: Position path must be an array with at least one item.',\n\t\t\t\troot,\n\t\t\t\t{ path }\n\t\t\t);\n\t\t}\n\n\t\t// Normalize the root and path when element (not root) is passed.\n\t\tif ( root.is( 'rootElement' ) ) {\n\t\t\tpath = path.slice();\n\t\t} else {\n\t\t\tpath = [ ...root.getPath(), ...path ];\n\t\t\troot = root.root;\n\t\t}\n\n\t\t/**\n\t\t * Root of the position path.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n\t\t * module:engine/model/position~Position#root\n\t\t */\n\t\tthis.root = root;\n\n\t\t/**\n\t\t * Position of the node in the tree. **Path contains offsets, not indexes.**\n\t\t *\n\t\t * Position can be placed before, after or in a {@link module:engine/model/node~Node node} if that node has\n\t\t * {@link module:engine/model/node~Node#offsetSize} greater than `1`. Items in position path are\n\t\t * {@link module:engine/model/node~Node#startOffset starting offsets} of position ancestors, starting from direct root children,\n\t\t * down to the position offset in it's parent.\n\t\t *\n\t\t *\t\t ROOT\n\t\t *\t\t  |- P            before: [ 0 ]         after: [ 1 ]\n\t\t *\t\t  |- UL           before: [ 1 ]         after: [ 2 ]\n\t\t *\t\t     |- LI        before: [ 1, 0 ]      after: [ 1, 1 ]\n\t\t *\t\t     |  |- foo    before: [ 1, 0, 0 ]   after: [ 1, 0, 3 ]\n\t\t *\t\t     |- LI        before: [ 1, 1 ]      after: [ 1, 2 ]\n\t\t *\t\t        |- bar    before: [ 1, 1, 0 ]   after: [ 1, 1, 3 ]\n\t\t *\n\t\t * `foo` and `bar` are representing {@link module:engine/model/text~Text text nodes}. Since text nodes has offset size\n\t\t * greater than `1` you can place position offset between their start and end:\n\t\t *\n\t\t *\t\t ROOT\n\t\t *\t\t  |- P\n\t\t *\t\t  |- UL\n\t\t *\t\t     |- LI\n\t\t *\t\t     |  |- f^o|o  ^ has path: [ 1, 0, 1 ]   | has path: [ 1, 0, 2 ]\n\t\t *\t\t     |- LI\n\t\t *\t\t        |- b^a|r  ^ has path: [ 1, 1, 1 ]   | has path: [ 1, 1, 2 ]\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<Number>} module:engine/model/position~Position#path\n\t\t */\n\t\tthis.path = path;\n\n\t\t/**\n\t\t * Position stickiness. See {@link module:engine/model/position~PositionStickiness}.\n\t\t *\n\t\t * @member {module:engine/model/position~PositionStickiness} module:engine/model/position~Position#stickiness\n\t\t */\n\t\tthis.stickiness = stickiness;\n\t}\n\n\t/**\n\t * Offset at which this position is located in its {@link module:engine/model/position~Position#parent parent}. It is equal\n\t * to the last item in position {@link module:engine/model/position~Position#path path}.\n\t *\n\t * @type {Number}\n\t */\n\tget offset() {\n\t\treturn this.path[ this.path.length - 1 ];\n\t}\n\n\t/**\n\t * @param {Number} newOffset\n\t */\n\tset offset( newOffset ) {\n\t\tthis.path[ this.path.length - 1 ] = newOffset;\n\t}\n\n\t/**\n\t * Parent element of this position.\n\t *\n\t * Keep in mind that `parent` value is calculated when the property is accessed.\n\t * If {@link module:engine/model/position~Position#path position path}\n\t * leads to a non-existing element, `parent` property will throw error.\n\t *\n\t * Also it is a good idea to cache `parent` property if it is used frequently in an algorithm (i.e. in a long loop).\n\t *\n\t * @readonly\n\t * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget parent() {\n\t\tlet parent = this.root;\n\n\t\tfor ( let i = 0; i < this.path.length - 1; i++ ) {\n\t\t\tparent = parent.getChild( parent.offsetToIndex( this.path[ i ] ) );\n\n\t\t\tif ( !parent ) {\n\t\t\t\tthrow new CKEditorError( 'model-position-path-incorrect: The position\\'s path is incorrect.', this, { position: this } );\n\t\t\t}\n\t\t}\n\n\t\tif ( parent.is( 'text' ) ) {\n\t\t\t/**\n\t\t\t * The position's path is incorrect. This means that a position does not point to\n\t\t\t * a correct place in the tree and hence, some of its methods and getters cannot work correctly.\n\t\t\t *\n\t\t\t * **Note**: Unlike DOM and view positions, in the model, the\n\t\t\t * {@link module:engine/model/position~Position#parent position's parent} is always an element or a document fragment.\n\t\t\t * The last offset in the {@link module:engine/model/position~Position#path position's path} is the point in this element where\n\t\t\t * this position points.\n\t\t\t *\n\t\t\t * Read more about model positions and offsets in\n\t\t\t * the {@glink framework/guides/architecture/editing-engine#indexes-and-offsets Editing engine architecture guide}.\n\t\t\t *\n\t\t\t * @error position-incorrect-path\n\t\t\t * @param {module:engine/model/position~Position} position The incorrect position.\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-position-path-incorrect: The position\\'s path is incorrect.', this, { position: this } );\n\t\t}\n\n\t\treturn parent;\n\t}\n\n\t/**\n\t * Position {@link module:engine/model/position~Position#offset offset} converted to an index in position's parent node. It is\n\t * equal to the {@link module:engine/model/node~Node#index index} of a node after this position. If position is placed\n\t * in text node, position index is equal to the index of that text node.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget index() {\n\t\treturn this.parent.offsetToIndex( this.offset );\n\t}\n\n\t/**\n\t * Returns {@link module:engine/model/text~Text text node} instance in which this position is placed or `null` if this\n\t * position is not in a text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/text~Text|null}\n\t */\n\tget textNode() {\n\t\treturn getTextNodeAtPosition( this, this.parent );\n\t}\n\n\t/**\n\t * Node directly after this position or `null` if this position is in text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|null}\n\t */\n\tget nodeAfter() {\n\t\t// Cache the parent and reuse for performance reasons. See #6579 and #6582.\n\t\tconst parent = this.parent;\n\n\t\treturn getNodeAfterPosition( this, parent, getTextNodeAtPosition( this, parent ) );\n\t}\n\n\t/**\n\t * Node directly before this position or `null` if this position is in text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|null}\n\t */\n\tget nodeBefore() {\n\t\t// Cache the parent and reuse for performance reasons. See #6579 and #6582.\n\t\tconst parent = this.parent;\n\n\t\treturn getNodeBeforePosition( this, parent, getTextNodeAtPosition( this, parent ) );\n\t}\n\n\t/**\n\t * Is `true` if position is at the beginning of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isAtStart() {\n\t\treturn this.offset === 0;\n\t}\n\n\t/**\n\t * Is `true` if position is at the end of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isAtEnd() {\n\t\treturn this.offset == this.parent.maxOffset;\n\t}\n\n\t/**\n\t * Checks whether this position is before or after given position.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {module:engine/model/position~PositionRelation}\n\t */\n\tcompareWith( otherPosition ) {\n\t\tif ( this.root != otherPosition.root ) {\n\t\t\treturn 'different';\n\t\t}\n\n\t\tconst result = compareArrays( this.path, otherPosition.path );\n\n\t\tswitch ( result ) {\n\t\t\tcase 'same':\n\t\t\t\treturn 'same';\n\n\t\t\tcase 'prefix':\n\t\t\t\treturn 'before';\n\n\t\t\tcase 'extension':\n\t\t\t\treturn 'after';\n\n\t\t\tdefault:\n\t\t\t\treturn this.path[ result ] < otherPosition.path[ result ] ? 'before' : 'after';\n\t\t}\n\t}\n\n\t/**\n\t * Gets the farthest position which matches the callback using\n\t * {@link module:engine/model/treewalker~TreeWalker TreeWalker}.\n\t *\n\t * For example:\n\t *\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text' );\n\t * \t\t// <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\n\t *\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } );\n\t * \t\t// <paragraph>foo[]</paragraph> -> <paragraph>[]foo</paragraph>\n\t *\n\t * \t\tgetLastMatchingPosition( value => false );\n\t * \t\t// Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n\t *\n\t * @returns {module:engine/model/position~Position} The position after the last item which matches the `skip` callback test.\n\t */\n\tgetLastMatchingPosition( skip, options = {} ) {\n\t\toptions.startPosition = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\t\ttreeWalker.skip( skip );\n\n\t\treturn treeWalker.position;\n\t}\n\n\t/**\n\t * Returns a path to this position's parent. Parent path is equal to position {@link module:engine/model/position~Position#path path}\n\t * but without the last item.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @returns {Array.<Number>} Path to the parent.\n\t */\n\tgetParentPath() {\n\t\treturn this.path.slice( 0, -1 );\n\t}\n\n\t/**\n\t * Returns ancestors array of this position, that is this position's parent and its ancestors.\n\t *\n\t * @returns {Array.<module:engine/model/item~Item>} Array with ancestors.\n\t */\n\tgetAncestors() {\n\t\tconst parent = this.parent;\n\n\t\tif ( parent.is( 'documentFragment' ) ) {\n\t\t\treturn [ parent ];\n\t\t} else {\n\t\t\treturn parent.getAncestors( { includeSelf: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the slice of two position {@link #path paths} which is identical. The {@link #root roots}\n\t * of these two paths must be identical.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/position~Position} position The second position.\n\t * @returns {Array.<Number>} The common path.\n\t */\n\tgetCommonPath( position ) {\n\t\tif ( this.root != position.root ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// We find on which tree-level start and end have the lowest common ancestor\n\t\tconst cmp = compareArrays( this.path, position.path );\n\t\t// If comparison returned string it means that arrays are same.\n\t\tconst diffAt = ( typeof cmp == 'string' ) ? Math.min( this.path.length, position.path.length ) : cmp;\n\n\t\treturn this.path.slice( 0, diffAt );\n\t}\n\n\t/**\n\t * Returns an {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n\t * which is a common ancestor of both positions. The {@link #root roots} of these two positions must be identical.\n\t *\n\t * @param {module:engine/model/position~Position} position The second position.\n\t * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor( position ) {\n\t\tconst ancestorsA = this.getAncestors();\n\t\tconst ancestorsB = position.getAncestors();\n\n\t\tlet i = 0;\n\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n\t}\n\n\t/**\n\t * Returns a new instance of `Position`, that has same {@link #parent parent} but it's offset\n\t * is shifted by `shift` value (can be a negative value).\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {Number} shift Offset shift. Can be a negative value.\n\t * @returns {module:engine/model/position~Position} Shifted position.\n\t */\n\tgetShiftedBy( shift ) {\n\t\tconst shifted = this.clone();\n\n\t\tconst offset = shifted.offset + shift;\n\t\tshifted.offset = offset < 0 ? 0 : offset;\n\n\t\treturn shifted;\n\t}\n\n\t/**\n\t * Checks whether this position is after given position.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @see module:engine/model/position~Position#isBefore\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if this position is after given position.\n\t */\n\tisAfter( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'after';\n\t}\n\n\t/**\n\t * Checks whether this position is before given position.\n\t *\n\t * **Note:** watch out when using negation of the value returned by this method, because the negation will also\n\t * be `true` if positions are in different roots and you might not expect this. You should probably use\n\t * `a.isAfter( b ) || a.isEqual( b )` or `!a.isBefore( p ) && a.root == b.root` in most scenarios. If your\n\t * condition uses multiple `isAfter` and `isBefore` checks, build them so they do not use negated values, i.e.:\n\t *\n\t *\t\tif ( a.isBefore( b ) && c.isAfter( d ) ) {\n\t *\t\t\t// do A.\n\t *\t\t} else {\n\t *\t\t\t// do B.\n\t *\t\t}\n\t *\n\t * or, if you have only one if-branch:\n\t *\n\t *\t\tif ( !( a.isBefore( b ) && c.isAfter( d ) ) {\n\t *\t\t\t// do B.\n\t *\t\t}\n\t *\n\t * rather than:\n\t *\n\t *\t\tif ( !a.isBefore( b ) || && !c.isAfter( d ) ) {\n\t *\t\t\t// do B.\n\t *\t\t} else {\n\t *\t\t\t// do A.\n\t *\t\t}\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if this position is before given position.\n\t */\n\tisBefore( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'before';\n\t}\n\n\t/**\n\t * Checks whether this position is equal to given position.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if positions are same.\n\t */\n\tisEqual( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'same';\n\t}\n\n\t/**\n\t * Checks whether this position is touching given position. Positions touch when there are no text nodes\n\t * or empty nodes in a range between them. Technically, those positions are not equal but in many cases\n\t * they are very similar or even indistinguishable.\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if positions touch.\n\t */\n\tisTouching( otherPosition ) {\n\t\tlet left = null;\n\t\tlet right = null;\n\t\tconst compare = this.compareWith( otherPosition );\n\n\t\tswitch ( compare ) {\n\t\t\tcase 'same':\n\t\t\t\treturn true;\n\n\t\t\tcase 'before':\n\t\t\t\tleft = Position._createAt( this );\n\t\t\t\tright = Position._createAt( otherPosition );\n\t\t\t\tbreak;\n\n\t\t\tcase 'after':\n\t\t\t\tleft = Position._createAt( otherPosition );\n\t\t\t\tright = Position._createAt( this );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\n\t\t// Cached for optimization purposes.\n\t\tlet leftParent = left.parent;\n\n\t\twhile ( left.path.length + right.path.length ) {\n\t\t\tif ( left.isEqual( right ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( left.path.length > right.path.length ) {\n\t\t\t\tif ( left.offset !== leftParent.maxOffset ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tleft.path = left.path.slice( 0, -1 );\n\t\t\t\tleftParent = leftParent.parent;\n\t\t\t\tleft.offset++;\n\t\t\t} else {\n\t\t\t\tif ( right.offset !== 0 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tright.path = right.path.slice( 0, -1 );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tposition.is( 'position' ); // -> true\n\t *\t\tposition.is( 'model:position' ); // -> true\n\t *\n\t *\t\tposition.is( 'view:position' ); // -> false\n\t *\t\tposition.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'position' || type === 'model:position';\n\t}\n\n\t/**\n\t * Checks if two positions are in the same parent.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/position~Position} position Position to compare with.\n\t * @returns {Boolean} `true` if positions have the same parent, `false` otherwise.\n\t */\n\thasSameParentAs( position ) {\n\t\tif ( this.root !== position.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst thisParentPath = this.getParentPath();\n\t\tconst posParentPath = position.getParentPath();\n\n\t\treturn compareArrays( thisParentPath, posParentPath ) == 'same';\n\t}\n\n\t/**\n\t * Returns a copy of this position that is transformed by given `operation`.\n\t *\n\t * The new position's parameters are updated accordingly to the effect of the `operation`.\n\t *\n\t * For example, if `n` nodes are inserted before the position, the returned position {@link ~Position#offset} will be\n\t * increased by `n`. If the position was in a merged element, it will be accordingly moved to the new element, etc.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to transform by.\n\t * @returns {module:engine/model/position~Position} Transformed position.\n\t */\n\tgetTransformedByOperation( operation ) {\n\t\tlet result;\n\n\t\tswitch ( operation.type ) {\n\t\t\tcase 'insert':\n\t\t\t\tresult = this._getTransformedByInsertOperation( operation );\n\t\t\t\tbreak;\n\t\t\tcase 'move':\n\t\t\tcase 'remove':\n\t\t\tcase 'reinsert':\n\t\t\t\tresult = this._getTransformedByMoveOperation( operation );\n\t\t\t\tbreak;\n\t\t\tcase 'split':\n\t\t\t\tresult = this._getTransformedBySplitOperation( operation );\n\t\t\t\tbreak;\n\t\t\tcase 'merge':\n\t\t\t\tresult = this._getTransformedByMergeOperation( operation );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tresult = Position._createAt( this );\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Returns a copy of this position transformed by an insert operation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/insertoperation~InsertOperation} operation\n\t * @returns {module:engine/model/position~Position}\n\t */\n\t_getTransformedByInsertOperation( operation ) {\n\t\treturn this._getTransformedByInsertion( operation.position, operation.howMany );\n\t}\n\n\t/**\n\t * Returns a copy of this position transformed by a move operation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/moveoperation~MoveOperation} operation\n\t * @returns {module:engine/model/position~Position}\n\t */\n\t_getTransformedByMoveOperation( operation ) {\n\t\treturn this._getTransformedByMove( operation.sourcePosition, operation.targetPosition, operation.howMany );\n\t}\n\n\t/**\n\t * Returns a copy of this position transformed by a split operation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/splitoperation~SplitOperation} operation\n\t * @returns {module:engine/model/position~Position}\n\t */\n\t_getTransformedBySplitOperation( operation ) {\n\t\tconst movedRange = operation.movedRange;\n\n\t\tconst isContained = movedRange.containsPosition( this ) ||\n\t\t\t( movedRange.start.isEqual( this ) && this.stickiness == 'toNext' );\n\n\t\tif ( isContained ) {\n\t\t\treturn this._getCombined( operation.splitPosition, operation.moveTargetPosition );\n\t\t} else {\n\t\t\tif ( operation.graveyardPosition ) {\n\t\t\t\treturn this._getTransformedByMove( operation.graveyardPosition, operation.insertionPosition, 1 );\n\t\t\t} else {\n\t\t\t\treturn this._getTransformedByInsertion( operation.insertionPosition, 1 );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns a copy of this position transformed by merge operation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/mergeoperation~MergeOperation} operation\n\t * @returns {module:engine/model/position~Position}\n\t */\n\t_getTransformedByMergeOperation( operation ) {\n\t\tconst movedRange = operation.movedRange;\n\t\tconst isContained = movedRange.containsPosition( this ) || movedRange.start.isEqual( this );\n\n\t\tlet pos;\n\n\t\tif ( isContained ) {\n\t\t\tpos = this._getCombined( operation.sourcePosition, operation.targetPosition );\n\n\t\t\tif ( operation.sourcePosition.isBefore( operation.targetPosition ) ) {\n\t\t\t\t// Above happens during OT when the merged element is moved before the merged-to element.\n\t\t\t\tpos = pos._getTransformedByDeletion( operation.deletionPosition, 1 );\n\t\t\t}\n\t\t} else if ( this.isEqual( operation.deletionPosition ) ) {\n\t\t\tpos = Position._createAt( operation.deletionPosition );\n\t\t} else {\n\t\t\tpos = this._getTransformedByMove( operation.deletionPosition, operation.graveyardPosition, 1 );\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Returns a copy of this position that is updated by removing `howMany` nodes starting from `deletePosition`.\n\t * It may happen that this position is in a removed node. If that is the case, `null` is returned instead.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} deletePosition Position before the first removed node.\n\t * @param {Number} howMany How many nodes are removed.\n\t * @returns {module:engine/model/position~Position|null} Transformed position or `null`.\n\t */\n\t_getTransformedByDeletion( deletePosition, howMany ) {\n\t\tconst transformed = Position._createAt( this );\n\n\t\t// This position can't be affected if deletion was in a different root.\n\t\tif ( this.root != deletePosition.root ) {\n\t\t\treturn transformed;\n\t\t}\n\n\t\tif ( compareArrays( deletePosition.getParentPath(), this.getParentPath() ) == 'same' ) {\n\t\t\t// If nodes are removed from the node that is pointed by this position...\n\t\t\tif ( deletePosition.offset < this.offset ) {\n\t\t\t\t// And are removed from before an offset of that position...\n\t\t\t\tif ( deletePosition.offset + howMany > this.offset ) {\n\t\t\t\t\t// Position is in removed range, it's no longer in the tree.\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\t// Decrement the offset accordingly.\n\t\t\t\t\ttransformed.offset -= howMany;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( compareArrays( deletePosition.getParentPath(), this.getParentPath() ) == 'prefix' ) {\n\t\t\t// If nodes are removed from a node that is on a path to this position...\n\t\t\tconst i = deletePosition.path.length - 1;\n\n\t\t\tif ( deletePosition.offset <= this.path[ i ] ) {\n\t\t\t\t// And are removed from before next node of that path...\n\t\t\t\tif ( deletePosition.offset + howMany > this.path[ i ] ) {\n\t\t\t\t\t// If the next node of that path is removed return null\n\t\t\t\t\t// because the node containing this position got removed.\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise, decrement index on that path.\n\t\t\t\t\ttransformed.path[ i ] -= howMany;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn transformed;\n\t}\n\n\t/**\n\t * Returns a copy of this position that is updated by inserting `howMany` nodes at `insertPosition`.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\n\t * @param {Number} howMany How many nodes are inserted.\n\t * @returns {module:engine/model/position~Position} Transformed position.\n\t */\n\t_getTransformedByInsertion( insertPosition, howMany ) {\n\t\tconst transformed = Position._createAt( this );\n\n\t\t// This position can't be affected if insertion was in a different root.\n\t\tif ( this.root != insertPosition.root ) {\n\t\t\treturn transformed;\n\t\t}\n\n\t\tif ( compareArrays( insertPosition.getParentPath(), this.getParentPath() ) == 'same' ) {\n\t\t\t// If nodes are inserted in the node that is pointed by this position...\n\t\t\tif ( insertPosition.offset < this.offset || ( insertPosition.offset == this.offset && this.stickiness != 'toPrevious' ) ) {\n\t\t\t\t// And are inserted before an offset of that position...\n\t\t\t\t// \"Push\" this positions offset.\n\t\t\t\ttransformed.offset += howMany;\n\t\t\t}\n\t\t} else if ( compareArrays( insertPosition.getParentPath(), this.getParentPath() ) == 'prefix' ) {\n\t\t\t// If nodes are inserted in a node that is on a path to this position...\n\t\t\tconst i = insertPosition.path.length - 1;\n\n\t\t\tif ( insertPosition.offset <= this.path[ i ] ) {\n\t\t\t\t// And are inserted before next node of that path...\n\t\t\t\t// \"Push\" the index on that path.\n\t\t\t\ttransformed.path[ i ] += howMany;\n\t\t\t}\n\t\t}\n\n\t\treturn transformed;\n\t}\n\n\t/**\n\t * Returns a copy of this position that is updated by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} sourcePosition Position before the first element to move.\n\t * @param {module:engine/model/position~Position} targetPosition Position where moved elements will be inserted.\n\t * @param {Number} howMany How many consecutive nodes to move, starting from `sourcePosition`.\n\t * @returns {module:engine/model/position~Position} Transformed position.\n\t */\n\t_getTransformedByMove( sourcePosition, targetPosition, howMany ) {\n\t\t// Update target position, as it could be affected by nodes removal.\n\t\ttargetPosition = targetPosition._getTransformedByDeletion( sourcePosition, howMany );\n\n\t\tif ( sourcePosition.isEqual( targetPosition ) ) {\n\t\t\t// If `targetPosition` is equal to `sourcePosition` this isn't really any move. Just return position as it is.\n\t\t\treturn Position._createAt( this );\n\t\t}\n\n\t\t// Moving a range removes nodes from their original position. We acknowledge this by proper transformation.\n\t\tconst transformed = this._getTransformedByDeletion( sourcePosition, howMany );\n\n\t\tconst isMoved = transformed === null ||\n\t\t\t( sourcePosition.isEqual( this ) && this.stickiness == 'toNext' ) ||\n\t\t\t( sourcePosition.getShiftedBy( howMany ).isEqual( this ) && this.stickiness == 'toPrevious' );\n\n\t\tif ( isMoved ) {\n\t\t\t// This position is inside moved range (or sticks to it).\n\t\t\t// In this case, we calculate a combination of this position, move source position and target position.\n\t\t\treturn this._getCombined( sourcePosition, targetPosition );\n\t\t} else {\n\t\t\t// This position is not inside a removed range.\n\t\t\t//\n\t\t\t// In next step, we simply reflect inserting `howMany` nodes, which might further affect the position.\n\t\t\treturn transformed._getTransformedByInsertion( targetPosition, howMany );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new position that is a combination of this position and given positions.\n\t *\n\t * The combined position is a copy of this position transformed by moving a range starting at `source` position\n\t * to the `target` position. It is expected that this position is inside the moved range.\n\t *\n\t * Example:\n\t *\n\t *\t\tlet original = model.createPositionFromPath( root, [ 2, 3, 1 ] );\n\t *\t\tlet source = model.createPositionFromPath( root, [ 2, 2 ] );\n\t *\t\tlet target = model.createPositionFromPath( otherRoot, [ 1, 1, 3 ] );\n\t *\t\toriginal._getCombined( source, target ); // path is [ 1, 1, 4, 1 ], root is `otherRoot`\n\t *\n\t * Explanation:\n\t *\n\t * We have a position `[ 2, 3, 1 ]` and move some nodes from `[ 2, 2 ]` to `[ 1, 1, 3 ]`. The original position\n\t * was inside moved nodes and now should point to the new place. The moved nodes will be after\n\t * positions `[ 1, 1, 3 ]`, `[ 1, 1, 4 ]`, `[ 1, 1, 5 ]`. Since our position was in the second moved node,\n\t * the transformed position will be in a sub-tree of a node at `[ 1, 1, 4 ]`. Looking at original path, we\n\t * took care of `[ 2, 3 ]` part of it. Now we have to add the rest of the original path to the transformed path.\n\t * Finally, the transformed position will point to `[ 1, 1, 4, 1 ]`.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} source Beginning of the moved range.\n\t * @param {module:engine/model/position~Position} target Position where the range is moved.\n\t * @returns {module:engine/model/position~Position} Combined position.\n\t */\n\t_getCombined( source, target ) {\n\t\tconst i = source.path.length - 1;\n\n\t\t// The first part of a path to combined position is a path to the place where nodes were moved.\n\t\tconst combined = Position._createAt( target );\n\t\tcombined.stickiness = this.stickiness;\n\n\t\t// Then we have to update the rest of the path.\n\n\t\t// Fix the offset because this position might be after `from` position and we have to reflect that.\n\t\tcombined.offset = combined.offset + this.path[ i ] - source.offset;\n\n\t\t// Then, add the rest of the path.\n\t\t// If this position is at the same level as `from` position nothing will get added.\n\t\tcombined.path = [ ...combined.path, ...this.path.slice( i + 1 ) ];\n\n\t\treturn combined;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\treturn {\n\t\t\troot: this.root.toJSON(),\n\t\t\tpath: Array.from( this.path ),\n\t\t\tstickiness: this.stickiness\n\t\t};\n\t}\n\n\t/**\n\t * Returns a new position that is equal to current position.\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tclone() {\n\t\treturn new this.constructor( this.root, this.path, this.stickiness );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/model/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/model/item~Item model item} and `'before'` or `'after'` (sets position before or after given model item).\n\t *\n\t * This method is a shortcut to other factory methods such as:\n\t *\n\t * * {@link module:engine/model/position~Position._createBefore},\n\t * * {@link module:engine/model/position~Position._createAfter}.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when the\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness. Used only when the\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t * @protected\n\t */\n\tstatic _createAt( itemOrPosition, offset, stickiness = 'toNone' ) {\n\t\tif ( itemOrPosition instanceof Position ) {\n\t\t\treturn new Position( itemOrPosition.root, itemOrPosition.path, itemOrPosition.stickiness );\n\t\t} else {\n\t\t\tconst node = itemOrPosition;\n\n\t\t\tif ( offset == 'end' ) {\n\t\t\t\toffset = node.maxOffset;\n\t\t\t} else if ( offset == 'before' ) {\n\t\t\t\treturn this._createBefore( node, stickiness );\n\t\t\t} else if ( offset == 'after' ) {\n\t\t\t\treturn this._createAfter( node, stickiness );\n\t\t\t} else if ( offset !== 0 && !offset ) {\n\t\t\t\t/**\n\t\t\t\t * {@link module:engine/model/model~Model#createPositionAt `Model#createPositionAt()`}\n\t\t\t\t * requires the offset to be specified when the first parameter is a model item.\n\t\t\t\t *\n\t\t\t\t * @error model-createPositionAt-offset-required\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-createPositionAt-offset-required: ' +\n\t\t\t\t\t'Model#createPositionAt() requires the offset when the first parameter is a model item.',\n\t\t\t\t\t[ this, itemOrPosition ]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( !node.is( 'element' ) && !node.is( 'documentFragment' ) ) {\n\t\t\t\t/**\n\t\t\t\t * Position parent have to be a model element or model document fragment.\n\t\t\t\t *\n\t\t\t\t * @error model-position-parent-incorrect\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-position-parent-incorrect: Position parent have to be a element or document fragment.',\n\t\t\t\t\t[ this, itemOrPosition ]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst path = node.getPath();\n\n\t\t\tpath.push( offset );\n\n\t\t\treturn new this( node.root, path, stickiness );\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new position, after given {@link module:engine/model/item~Item model item}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n\t * @returns {module:engine/model/position~Position}\n\t * @protected\n\t */\n\tstatic _createAfter( item, stickiness ) {\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You can not make a position after a root element.\n\t\t\t *\n\t\t\t * @error model-position-after-root\n\t\t\t * @param {module:engine/model/item~Item} root\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-position-after-root: You cannot make a position after root.',\n\t\t\t\t[ this, item ],\n\t\t\t\t{ root: item }\n\t\t\t);\n\t\t}\n\n\t\treturn this._createAt( item.parent, item.endOffset, stickiness );\n\t}\n\n\t/**\n\t * Creates a new position, before the given {@link module:engine/model/item~Item model item}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item before which the position should be placed.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n\t * @returns {module:engine/model/position~Position}\n\t * @protected\n\t */\n\tstatic _createBefore( item, stickiness ) {\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You can not make a position before a root element.\n\t\t\t *\n\t\t\t * @error model-position-before-root\n\t\t\t * @param {module:engine/model/item~Item} root\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-position-before-root: You cannot make a position before root.',\n\t\t\t\titem,\n\t\t\t\t{ root: item }\n\t\t\t);\n\t\t}\n\n\t\treturn this._createAt( item.parent, item.startOffset, stickiness );\n\t}\n\n\t/**\n\t * Creates a `Position` instance from given plain object (i.e. parsed JSON string).\n\t *\n\t * @param {Object} json Plain object to be converted to `Position`.\n\t * @param {module:engine/model/document~Document} doc Document object that will be position owner.\n\t * @returns {module:engine/model/position~Position} `Position` instance created using given plain object.\n\t */\n\tstatic fromJSON( json, doc ) {\n\t\tif ( json.root === '$graveyard' ) {\n\t\t\tconst pos = new Position( doc.graveyard, json.path );\n\t\t\tpos.stickiness = json.stickiness;\n\n\t\t\treturn pos;\n\t\t}\n\n\t\tif ( !doc.getRoot( json.root ) ) {\n\t\t\t/**\n\t\t\t * Cannot create position for document. Root with specified name does not exist.\n\t\t\t *\n\t\t\t * @error model-position-fromjson-no-root\n\t\t\t * @param {String} rootName\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-position-fromjson-no-root: Cannot create position for document. Root with specified name does not exist.',\n\t\t\t\tdoc,\n\t\t\t\t{ rootName: json.root }\n\t\t\t);\n\t\t}\n\n\t\treturn new Position( doc.getRoot( json.root ), json.path, json.stickiness );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `${ this.root } [ ${ this.path.join( ', ' ) } ]`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelPosition: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/model/position~PositionRelation\n */\n\n/**\n * Represents how position is \"sticking\" with neighbour nodes. Used to define how position should be transformed (moved)\n * in edge cases. Possible values: `'toNone'`, `'toNext'`, `'toPrevious'`.\n *\n * Examples:\n *\n *\t\tInsert. Position is at | and nodes are inserted at the same position, marked as ^:\n *\n *\t\t- sticks to none:           <p>f^|oo</p>  ->  <p>fbar|oo</p>\n *\t\t- sticks to next node:      <p>f^|oo</p>  ->  <p>fbar|oo</p>\n *\t\t- sticks to previous node:  <p>f|^oo</p>  ->  <p>f|baroo</p>\n *\n *\n *\t\tMove. Position is at | and range [oo] is moved to position ^:\n *\n *\t\t- sticks to none:           <p>f|[oo]</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\t\t- sticks to none:           <p>f[oo]|</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\n *\t\t- sticks to next node:      <p>f|[oo]</p><p>b^ar</p>  ->  <p>f</p><p>b|ooar</p>\n *\t\t- sticks to next node:      <p>f[oo]|</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\n *\t\t- sticks to previous node:  <p>f|[oo]</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\t\t- sticks to previous node:  <p>f[oo]|</p><p>b^ar</p>  ->  <p>f</p><p>boo|ar</p>\n *\n * @typedef {String} module:engine/model/position~PositionStickiness\n */\n\n/**\n * Returns a text node at the given position.\n *\n * This is a helper function optimized to reuse the position parent instance for performance reasons.\n *\n * Normally, you should use {@link module:engine/model/position~Position#textNode `Position#textNode`}.\n * If you start hitting performance issues with {@link module:engine/model/position~Position#parent `Position#parent`}\n * check if your algorithm does not access it multiple times (which can happen directly or indirectly via other position properties).\n *\n * See https://github.com/ckeditor/ckeditor5/issues/6579.\n *\n * See also:\n *\n * * {@link module:engine/model/position~getNodeAfterPosition}\n * * {@link module:engine/model/position~getNodeBeforePosition}\n *\n * @param {module:engine/model/position~Position} position\n * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} positionParent The parent of the\n * given position.\n * @returns {module:engine/model/text~Text|null}\n */\nexport function getTextNodeAtPosition( position, positionParent ) {\n\tconst node = positionParent.getChild( positionParent.offsetToIndex( position.offset ) );\n\n\tif ( node && node.is( 'text' ) && node.startOffset < position.offset ) {\n\t\treturn node;\n\t}\n\n\treturn null;\n}\n\n/**\n * Returns the node after the given position.\n *\n * This is a helper function optimized to reuse the position parent instance and the calculation of the text node at the\n * specific position for performance reasons.\n *\n * Normally, you should use {@link module:engine/model/position~Position#nodeAfter `Position#nodeAfter`}.\n * If you start hitting performance issues with {@link module:engine/model/position~Position#parent `Position#parent`} and/or\n * {@link module:engine/model/position~Position#textNode `Position#textNode`}\n * check if your algorithm does not access those properties multiple times\n * (which can happen directly or indirectly via other position properties).\n *\n * See https://github.com/ckeditor/ckeditor5/issues/6579 and https://github.com/ckeditor/ckeditor5/issues/6582.\n *\n * See also:\n *\n * * {@link module:engine/model/position~getTextNodeAtPosition}\n * * {@link module:engine/model/position~getNodeBeforePosition}\n *\n * @param {module:engine/model/position~Position} position\n * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} positionParent The parent of the\n * given position.\n * @param {module:engine/model/text~Text|null} textNode Text node at the given position.\n * @returns {module:engine/model/node~Node|null}\n */\nexport function getNodeAfterPosition( position, positionParent, textNode ) {\n\tif ( textNode !== null ) {\n\t\treturn null;\n\t}\n\n\treturn positionParent.getChild( positionParent.offsetToIndex( position.offset ) );\n}\n\n/**\n * Returns the node before the given position.\n *\n * Refer to {@link module:engine/model/position~getNodeBeforePosition} for documentation on when to use this util method.\n *\n * See also:\n *\n * * {@link module:engine/model/position~getTextNodeAtPosition}\n * * {@link module:engine/model/position~getNodeAfterPosition}\n *\n * @param {module:engine/model/position~Position} position\n * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} positionParent The parent of the\n * given position.\n * @param {module:engine/model/text~Text|null} textNode Text node at the given position.\n * @returns {module:engine/model/node~Node|null}\n */\nexport function getNodeBeforePosition( position, positionParent, textNode ) {\n\tif ( textNode !== null ) {\n\t\treturn null;\n\t}\n\n\treturn positionParent.getChild( positionParent.offsetToIndex( position.offset ) - 1 );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/range\n */\n\nimport Position from './position';\nimport TreeWalker from './treewalker';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\n\n/**\n * Represents a range in the model tree.\n *\n * A range is defined by its {@link module:engine/model/range~Range#start} and {@link module:engine/model/range~Range#end}\n * positions.\n *\n * You can create range instances via its constructor or the `createRange*()` factory methods of\n * {@link module:engine/model/model~Model} and {@link module:engine/model/writer~Writer}.\n */\nexport default class Range {\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * @param {module:engine/model/position~Position} start Start position.\n\t * @param {module:engine/model/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t */\n\tconstructor( start, end = null ) {\n\t\t/**\n\t\t * Start position.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/position~Position}\n\t\t */\n\t\tthis.start = Position._createAt( start );\n\n\t\t/**\n\t\t * End position.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/position~Position}\n\t\t */\n\t\tthis.end = end ? Position._createAt( end ) : Position._createAt( start );\n\n\t\t// If the range is collapsed, treat in a similar way as a position and set its boundaries stickiness to 'toNone'.\n\t\t// In other case, make the boundaries stick to the \"inside\" of the range.\n\t\tthis.start.stickiness = this.isCollapsed ? 'toNone' : 'toNext';\n\t\tthis.end.stickiness = this.isCollapsed ? 'toNone' : 'toPrevious';\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\n\t * them together with additional information like length or {@link module:engine/model/position~Position positions},\n\t * grouped as {@link module:engine/model/treewalker~TreeWalkerValue}.\n\t * It iterates over all {@link module:engine/model/textproxy~TextProxy text contents} that are inside the range\n\t * and all the {@link module:engine/model/element~Element}s that are entered into when iterating over this range.\n\t *\n\t * This iterator uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range\n\t * and `ignoreElementEnd` option set to `true`.\n\t *\n\t * @returns {Iterable.<module:engine/model/treewalker~TreeWalkerValue>}\n\t */\n\t* [ Symbol.iterator ]() {\n\t\tyield* new TreeWalker( { boundaries: this, ignoreElementEnd: true } );\n\t}\n\n\t/**\n\t * Returns whether the range is collapsed, that is if {@link #start} and\n\t * {@link #end} positions are equal.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this.start.isEqual( this.end );\n\t}\n\n\t/**\n\t * Returns whether this range is flat, that is if {@link #start} position and\n\t * {@link #end} position are in the same {@link module:engine/model/position~Position#parent}.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isFlat() {\n\t\tconst startParentPath = this.start.getParentPath();\n\t\tconst endParentPath = this.end.getParentPath();\n\n\t\treturn compareArrays( startParentPath, endParentPath ) == 'same';\n\t}\n\n\t/**\n\t * Range root element.\n\t *\n\t * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.start.root;\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link module:engine/model/position~Position position}.\n\t *\n\t * @param {module:engine/model/position~Position} position Position to check.\n\t * @returns {Boolean} `true` if given {@link module:engine/model/position~Position position} is contained\n\t * in this range,`false` otherwise.\n\t */\n\tcontainsPosition( position ) {\n\t\treturn position.isAfter( this.start ) && position.isBefore( this.end );\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link ~Range range}.\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to check.\n\t * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\n\t * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\n\t * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\n\t * @returns {Boolean} `true` if given {@link ~Range range} boundaries are contained by this range, `false` otherwise.\n\t */\n\tcontainsRange( otherRange, loose = false ) {\n\t\tif ( otherRange.isCollapsed ) {\n\t\t\tloose = false;\n\t\t}\n\n\t\tconst containsStart = this.containsPosition( otherRange.start ) || ( loose && this.start.isEqual( otherRange.start ) );\n\t\tconst containsEnd = this.containsPosition( otherRange.end ) || ( loose && this.end.isEqual( otherRange.end ) );\n\n\t\treturn containsStart && containsEnd;\n\t}\n\n\t/**\n\t * Checks whether given {@link module:engine/model/item~Item} is inside this range.\n\t *\n\t * @param {module:engine/model/item~Item} item Model item to check.\n\t */\n\tcontainsItem( item ) {\n\t\tconst pos = Position._createBefore( item );\n\n\t\treturn this.containsPosition( pos ) || this.start.isEqual( pos );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\trange.is( 'range' ); // -> true\n\t *\t\trange.is( 'model:range' ); // -> true\n\t *\n\t *\t\trange.is( 'view:range' ); // -> false\n\t *\t\trange.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'range' || type === 'model:range';\n\t}\n\n\t/**\n\t * Two ranges are equal if their {@link #start} and {@link #end} positions are equal.\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} `true` if ranges are equal, `false` otherwise.\n\t */\n\tisEqual( otherRange ) {\n\t\treturn this.start.isEqual( otherRange.start ) && this.end.isEqual( otherRange.end );\n\t}\n\n\t/**\n\t * Checks and returns whether this range intersects with given range.\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} `true` if ranges intersect, `false` otherwise.\n\t */\n\tisIntersecting( otherRange ) {\n\t\treturn this.start.isBefore( otherRange.end ) && this.end.isAfter( otherRange.start );\n\t}\n\n\t/**\n\t * Computes which part(s) of this {@link ~Range range} is not a part of given {@link ~Range range}.\n\t * Returned array contains zero, one or two {@link ~Range ranges}.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet range = model.createRange(\n\t *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n\t *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n\t *\t\t);\n\t *\t\tlet otherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 5 ] ) );\n\t *\t\tlet transformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has no ranges because `otherRange` contains `range`\n\t *\n\t *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 3 ] ) );\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has one range: from [ 3 ] to [ 4, 0, 1 ]\n\t *\n\t *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 3 ] ), model.createPositionFromPath( root, [ 4 ] ) );\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3 ] and from [ 4 ] to [ 4, 0, 1 ]\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to differentiate against.\n\t * @returns {Array.<module:engine/model/range~Range>} The difference between ranges.\n\t */\n\tgetDifference( otherRange ) {\n\t\tconst ranges = [];\n\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect.\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the start to the middle of this range.\n\t\t\t\tranges.push( new Range( this.start, otherRange.start ) );\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the middle of this range to the end.\n\t\t\t\tranges.push( new Range( otherRange.end, this.end ) );\n\t\t\t}\n\t\t} else {\n\t\t\t// Ranges do not intersect, return the original range.\n\t\t\tranges.push( new Range( this.start, this.end ) );\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Returns an intersection of this {@link ~Range range} and given {@link ~Range range}.\n\t * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet range = model.createRange(\n\t *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n\t *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n\t *\t\t);\n\t *\t\tlet otherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 2 ] ) );\n\t *\t\tlet transformed = range.getIntersection( otherRange ); // null - ranges have no common part\n\t *\n\t *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 3 ] ), model.createPositionFromPath( root, [ 5 ] ) );\n\t *\t\ttransformed = range.getIntersection( otherRange ); // range from [ 3 ] to [ 4, 0, 1 ]\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to check for intersection.\n\t * @returns {module:engine/model/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n\t */\n\tgetIntersection( otherRange ) {\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect, so a common range will be returned.\n\t\t\t// At most, it will be same as this range.\n\t\t\tlet commonRangeStart = this.start;\n\t\t\tlet commonRangeEnd = this.end;\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means thaNt we have to\n\t\t\t\t// shrink common range to the given range start.\n\t\t\t\tcommonRangeStart = otherRange.start;\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// shrink common range to the given range end.\n\t\t\t\tcommonRangeEnd = otherRange.end;\n\t\t\t}\n\n\t\t\treturn new Range( commonRangeStart, commonRangeEnd );\n\t\t}\n\n\t\t// Ranges do not intersect, so they do not have common part.\n\t\treturn null;\n\t}\n\n\t/**\n\t * Computes and returns the smallest set of {@link #isFlat flat} ranges, that covers this range in whole.\n\t *\n\t * See an example of a model structure (`[` and `]` are range boundaries):\n\t *\n\t *\t\troot                                                            root\n\t *\t\t |- element DIV                         DIV             P2              P3             DIV\n\t *\t\t |   |- element H                   H        P1        f o o           b a r       H         P4\n\t *\t\t |   |   |- \"fir[st\"             fir[st     lorem                               se]cond     ipsum\n\t *\t\t |   |- element P1\n\t *\t\t |   |   |- \"lorem\"                                              ||\n\t *\t\t |- element P2                                                   ||\n\t *\t\t |   |- \"foo\"                                                    VV\n\t *\t\t |- element P3\n\t *\t\t |   |- \"bar\"                                                   root\n\t *\t\t |- element DIV                         DIV             [P2             P3]             DIV\n\t *\t\t |   |- element H                   H       [P1]       f o o           b a r        H         P4\n\t *\t\t |   |   |- \"se]cond\"            fir[st]    lorem                               [se]cond     ipsum\n\t *\t\t |   |- element P4\n\t *\t\t |   |   |- \"ipsum\"\n\t *\n\t * As it can be seen, letters contained in the range are: `stloremfoobarse`, spread across different parents.\n\t * We are looking for minimal set of flat ranges that contains the same nodes.\n\t *\n\t * Minimal flat ranges for above range `( [ 0, 0, 3 ], [ 3, 0, 2 ] )` will be:\n\t *\n\t *\t\t( [ 0, 0, 3 ], [ 0, 0, 5 ] ) = \"st\"\n\t *\t\t( [ 0, 1 ], [ 0, 2 ] ) = element P1 (\"lorem\")\n\t *\t\t( [ 1 ], [ 3 ] ) = element P2, element P3 (\"foobar\")\n\t *\t\t( [ 3, 0, 0 ], [ 3, 0, 2 ] ) = \"se\"\n\t *\n\t * **Note:** if an {@link module:engine/model/element~Element element} is not wholly contained in this range, it won't be returned\n\t * in any of the returned flat ranges. See in the example how `H` elements at the beginning and at the end of the range\n\t * were omitted. Only their parts that were wholly in the range were returned.\n\t *\n\t * **Note:** this method is not returning flat ranges that contain no nodes.\n\t *\n\t * @returns {Array.<module:engine/model/range~Range>} Array of flat ranges covering this range.\n\t */\n\tgetMinimalFlatRanges() {\n\t\tconst ranges = [];\n\t\tconst diffAt = this.start.getCommonPath( this.end ).length;\n\n\t\tconst pos = Position._createAt( this.start );\n\t\tlet posParent = pos.parent;\n\n\t\t// Go up.\n\t\twhile ( pos.path.length > diffAt + 1 ) {\n\t\t\tconst howMany = posParent.maxOffset - pos.offset;\n\n\t\t\tif ( howMany !== 0 ) {\n\t\t\t\tranges.push( new Range( pos, pos.getShiftedBy( howMany ) ) );\n\t\t\t}\n\n\t\t\tpos.path = pos.path.slice( 0, -1 );\n\t\t\tpos.offset++;\n\t\t\tposParent = posParent.parent;\n\t\t}\n\n\t\t// Go down.\n\t\twhile ( pos.path.length <= this.end.path.length ) {\n\t\t\tconst offset = this.end.path[ pos.path.length - 1 ];\n\t\t\tconst howMany = offset - pos.offset;\n\n\t\t\tif ( howMany !== 0 ) {\n\t\t\t\tranges.push( new Range( pos, pos.getShiftedBy( howMany ) ) );\n\t\t\t}\n\n\t\t\tpos.offset = offset;\n\t\t\tpos.path.push( 0 );\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/model/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n\t *\n\t * For example, to iterate over all items in the entire document root:\n\t *\n\t *\t\t// Create a range spanning over the entire root content:\n\t *\t\tconst range = editor.model.createRangeIn( editor.model.document.getRoot() );\n\t *\n\t *\t\t// Iterate over all items in this range:\n\t *\t\tfor ( const value of range.getWalker() ) {\n\t *\t\t\tconsole.log( value.item );\n\t *\t\t}\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n\t * @param {module:engine/model/position~Position} [options.startPosition]\n\t * @param {Boolean} [options.singleCharacters=false]\n\t * @param {Boolean} [options.shallow=false]\n\t * @param {Boolean} [options.ignoreElementEnd=false]\n\t */\n\tgetWalker( options = {} ) {\n\t\toptions.boundaries = this;\n\n\t\treturn new TreeWalker( options );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\n\t * them.\n\t *\n\t * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n\t * set to `true`. However it returns only {@link module:engine/model/item~Item model items},\n\t * not {@link module:engine/model/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/model/item~Item>}\n\t */\n\t* getItems( options = {} ) {\n\t\toptions.boundaries = this;\n\t\toptions.ignoreElementEnd = true;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.item;\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/model/position~Position positions} that are boundaries or\n\t * contained in this range.\n\t *\n\t * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n\t * {@link module:engine/model/position~Position positions}, not {@link module:engine/model/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/model/position~Position>}\n\t */\n\t* getPositions( options = {} ) {\n\t\toptions.boundaries = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tyield treeWalker.position;\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.nextPosition;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a range that is a result of transforming this range by given `operation`.\n\t *\n\t * **Note:** transformation may break one range into multiple ranges (for example, when a part of the range is\n\t * moved to a different part of document tree). For this reason, an array is returned by this method and it\n\t * may contain one or more `Range` instances.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to transform range by.\n\t * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\n\t */\n\tgetTransformedByOperation( operation ) {\n\t\tswitch ( operation.type ) {\n\t\t\tcase 'insert':\n\t\t\t\treturn this._getTransformedByInsertOperation( operation );\n\t\t\tcase 'move':\n\t\t\tcase 'remove':\n\t\t\tcase 'reinsert':\n\t\t\t\treturn this._getTransformedByMoveOperation( operation );\n\t\t\tcase 'split':\n\t\t\t\treturn [ this._getTransformedBySplitOperation( operation ) ];\n\t\t\tcase 'merge':\n\t\t\t\treturn [ this._getTransformedByMergeOperation( operation ) ];\n\t\t}\n\n\t\treturn [ new Range( this.start, this.end ) ];\n\t}\n\n\t/**\n\t * Returns a range that is a result of transforming this range by multiple `operations`.\n\t *\n\t * @see ~Range#getTransformedByOperation\n\t * @param {Iterable.<module:engine/model/operation/operation~Operation>} operations Operations to transform the range by.\n\t * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\n\t */\n\tgetTransformedByOperations( operations ) {\n\t\tconst ranges = [ new Range( this.start, this.end ) ];\n\n\t\tfor ( const operation of operations ) {\n\t\t\tfor ( let i = 0; i < ranges.length; i++ ) {\n\t\t\t\tconst result = ranges[ i ].getTransformedByOperation( operation );\n\n\t\t\t\tranges.splice( i, 1, ...result );\n\t\t\t\ti += result.length - 1;\n\t\t\t}\n\t\t}\n\n\t\t// It may happen that a range is split into two, and then the part of second \"piece\" is moved into first\n\t\t// \"piece\". In this case we will have incorrect third range, which should not be included in the result --\n\t\t// because it is already included in the first \"piece\". In this loop we are looking for all such ranges that\n\t\t// are inside other ranges and we simply remove them.\n\t\tfor ( let i = 0; i < ranges.length; i++ ) {\n\t\t\tconst range = ranges[ i ];\n\n\t\t\tfor ( let j = i + 1; j < ranges.length; j++ ) {\n\t\t\t\tconst next = ranges[ j ];\n\n\t\t\t\tif ( range.containsRange( next ) || next.containsRange( range ) || range.isEqual( next ) ) {\n\t\t\t\t\tranges.splice( j, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Returns an {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n\t * which is a common ancestor of the range's both ends (in which the entire range is contained).\n\t *\n\t * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor() {\n\t\treturn this.start.getCommonAncestor( this.end );\n\t}\n\n\t/**\n\t * Returns an {@link module:engine/model/element~Element Element} contained by the range.\n\t * The element will be returned when it is the **only** node within the range and **fully–contained**\n\t * at the same time.\n\t *\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\tgetContainedElement() {\n\t\tif ( this.isCollapsed ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst nodeAfterStart = this.start.nodeAfter;\n\t\tconst nodeBeforeEnd = this.end.nodeBefore;\n\n\t\tif ( nodeAfterStart && nodeAfterStart.is( 'element' ) && nodeAfterStart === nodeBeforeEnd ) {\n\t\t\treturn nodeAfterStart;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Converts `Range` to plain object and returns it.\n\t *\n\t * @returns {Object} `Node` converted to plain object.\n\t */\n\ttoJSON() {\n\t\treturn {\n\t\t\tstart: this.start.toJSON(),\n\t\t\tend: this.end.toJSON()\n\t\t};\n\t}\n\n\t/**\n\t * Returns a new range that is equal to current range.\n\t *\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tclone() {\n\t\treturn new this.constructor( this.start, this.end );\n\t}\n\n\t/**\n\t * Returns a result of transforming a copy of this range by insert operation.\n\t *\n\t * One or more ranges may be returned as a result of this transformation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/insertoperation~InsertOperation} operation\n\t * @returns {Array.<module:engine/model/range~Range>}\n\t */\n\t_getTransformedByInsertOperation( operation, spread = false ) {\n\t\treturn this._getTransformedByInsertion( operation.position, operation.howMany, spread );\n\t}\n\n\t/**\n\t * Returns a result of transforming a copy of this range by move operation.\n\t *\n\t * One or more ranges may be returned as a result of this transformation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/moveoperation~MoveOperation} operation\n\t * @returns {Array.<module:engine/model/range~Range>}\n\t */\n\t_getTransformedByMoveOperation( operation, spread = false ) {\n\t\tconst sourcePosition = operation.sourcePosition;\n\t\tconst howMany = operation.howMany;\n\t\tconst targetPosition = operation.targetPosition;\n\n\t\treturn this._getTransformedByMove( sourcePosition, targetPosition, howMany, spread );\n\t}\n\n\t/**\n\t * Returns a result of transforming a copy of this range by split operation.\n\t *\n\t * Always one range is returned. The transformation is done in a way to not break the range.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/splitoperation~SplitOperation} operation\n\t * @returns {module:engine/model/range~Range}\n\t */\n\t_getTransformedBySplitOperation( operation ) {\n\t\tconst start = this.start._getTransformedBySplitOperation( operation );\n\t\tlet end = this.end._getTransformedBySplitOperation( operation );\n\n\t\tif ( this.end.isEqual( operation.insertionPosition ) ) {\n\t\t\tend = this.end.getShiftedBy( 1 );\n\t\t}\n\n\t\t// Below may happen when range contains graveyard element used by split operation.\n\t\tif ( start.root != end.root ) {\n\t\t\t// End position was next to the moved graveyard element and was moved with it.\n\t\t\t// Fix it by using old `end` which has proper `root`.\n\t\t\tend = this.end.getShiftedBy( -1 );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Returns a result of transforming a copy of this range by merge operation.\n\t *\n\t * Always one range is returned. The transformation is done in a way to not break the range.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/mergeoperation~MergeOperation} operation\n\t * @returns {module:engine/model/range~Range}\n\t */\n\t_getTransformedByMergeOperation( operation ) {\n\t\t// Special case when the marker is set on \"the closing tag\" of an element. Marker can be set like that during\n\t\t// transformations, especially when a content of a few block elements were removed. For example:\n\t\t//\n\t\t// {} is the transformed range, [] is the removed range.\n\t\t// <p>F[o{o</p><p>B}ar</p><p>Xy]z</p>\n\t\t//\n\t\t// <p>Fo{o</p><p>B}ar</p><p>z</p>\n\t\t// <p>F{</p><p>B}ar</p><p>z</p>\n\t\t// <p>F{</p>}<p>z</p>\n\t\t// <p>F{}z</p>\n\t\t//\n\t\tif ( this.start.isEqual( operation.targetPosition ) && this.end.isEqual( operation.deletionPosition ) ) {\n\t\t\treturn new Range( this.start );\n\t\t}\n\n\t\tlet start = this.start._getTransformedByMergeOperation( operation );\n\t\tlet end = this.end._getTransformedByMergeOperation( operation );\n\n\t\tif ( start.root != end.root ) {\n\t\t\t// This happens when the end position was next to the merged (deleted) element.\n\t\t\t// Then, the end position was moved to the graveyard root. In this case we need to fix\n\t\t\t// the range cause its boundaries would be in different roots.\n\t\t\tend = this.end.getShiftedBy( -1 );\n\t\t}\n\n\t\tif ( start.isAfter( end ) ) {\n\t\t\t// This happens in three following cases:\n\t\t\t//\n\t\t\t// Case 1: Merge operation source position is before the target position (due to some transformations, OT, etc.)\n\t\t\t//         This means that start can be moved before the end of the range.\n\t\t\t//\n\t\t\t// Before: <p>a{a</p><p>b}b</p><p>cc</p>\n\t\t\t// Merge:  <p>b}b</p><p>cca{a</p>\n\t\t\t// Fix:    <p>{b}b</p><p>ccaa</p>\n\t\t\t//\n\t\t\t// Case 2: Range start is before merged node but not directly.\n\t\t\t//         Result should include all nodes that were in the original range.\n\t\t\t//\n\t\t\t// Before: <p>aa</p>{<p>cc</p><p>b}b</p>\n\t\t\t// Merge:  <p>aab}b</p>{<p>cc</p>\n\t\t\t// Fix:    <p>aa{bb</p><p>cc</p>}\n\t\t\t//\n\t\t\t//         The range is expanded by an additional `b` letter but it is better than dropping the whole `cc` paragraph.\n\t\t\t//\n\t\t\t// Case 3: Range start is directly before merged node.\n\t\t\t//         Resulting range should include only nodes from the merged element:\n\t\t\t//\n\t\t\t// Before: <p>aa</p>{<p>b}b</p><p>cc</p>\n\t\t\t// Merge:  <p>aab}b</p>{<p>cc</p>\n\t\t\t// Fix:    <p>aa{b}b</p><p>cc</p>\n\t\t\t//\n\n\t\t\tif ( operation.sourcePosition.isBefore( operation.targetPosition ) ) {\n\t\t\t\t// Case 1.\n\t\t\t\tstart = Position._createAt( end );\n\t\t\t\tstart.offset = 0;\n\t\t\t} else {\n\t\t\t\tif ( !operation.deletionPosition.isEqual( start ) ) {\n\t\t\t\t\t// Case 2.\n\t\t\t\t\tend = operation.deletionPosition;\n\t\t\t\t}\n\n\t\t\t\t// In both case 2 and 3 start is at the end of the merge-to element.\n\t\t\t\tstart = operation.targetPosition;\n\t\t\t}\n\n\t\t\treturn new Range( start, end );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Returns an array containing one or two {@link ~Range ranges} that are a result of transforming this\n\t * {@link ~Range range} by inserting `howMany` nodes at `insertPosition`. Two {@link ~Range ranges} are\n\t * returned if the insertion was inside this {@link ~Range range} and `spread` is set to `true`.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet range = model.createRange(\n\t *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n\t *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n\t *\t\t);\n\t *\t\tlet transformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 1 ] ), 2 );\n\t *\t\t// transformed array has one range from [ 4, 7 ] to [ 6, 0, 1 ]\n\t *\n\t *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 4, 0, 0 ] ), 4 );\n\t *\t\t// transformed array has one range from [ 2, 7 ] to [ 4, 0, 5 ]\n\t *\n\t *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 3, 2 ] ), 4 );\n\t *\t\t// transformed array has one range, which is equal to original range\n\t *\n\t *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 3, 2 ] ), 4, true );\n\t *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3, 2 ] and from [ 3, 6 ] to [ 4, 0, 1 ]\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\n\t * @param {Number} howMany How many nodes are inserted.\n\t * @param {Boolean} [spread] Flag indicating whether this {~Range range} should be spread if insertion\n\t * was inside the range. Defaults to `false`.\n\t * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\n\t */\n\t_getTransformedByInsertion( insertPosition, howMany, spread = false ) {\n\t\tif ( spread && this.containsPosition( insertPosition ) ) {\n\t\t\t// Range has to be spread. The first part is from original start to the spread point.\n\t\t\t// The other part is from spread point to the original end, but transformed by\n\t\t\t// insertion to reflect insertion changes.\n\n\t\t\treturn [\n\t\t\t\tnew Range( this.start, insertPosition ),\n\t\t\t\tnew Range(\n\t\t\t\t\tinsertPosition.getShiftedBy( howMany ),\n\t\t\t\t\tthis.end._getTransformedByInsertion( insertPosition, howMany )\n\t\t\t\t)\n\t\t\t];\n\t\t} else {\n\t\t\tconst range = new Range( this.start, this.end );\n\n\t\t\trange.start = range.start._getTransformedByInsertion( insertPosition, howMany );\n\t\t\trange.end = range.end._getTransformedByInsertion( insertPosition, howMany );\n\n\t\t\treturn [ range ];\n\t\t}\n\t}\n\n\t/**\n\t * Returns an array containing {@link ~Range ranges} that are a result of transforming this\n\t * {@link ~Range range} by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} sourcePosition Position from which nodes are moved.\n\t * @param {module:engine/model/position~Position} targetPosition Position to where nodes are moved.\n\t * @param {Number} howMany How many nodes are moved.\n\t * @param {Boolean} [spread=false] Whether the range should be spread if the move points inside the range.\n\t * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\n\t */\n\t_getTransformedByMove( sourcePosition, targetPosition, howMany, spread = false ) {\n\t\t// Special case for transforming a collapsed range. Just transform it like a position.\n\t\tif ( this.isCollapsed ) {\n\t\t\tconst newPos = this.start._getTransformedByMove( sourcePosition, targetPosition, howMany );\n\n\t\t\treturn [ new Range( newPos ) ];\n\t\t}\n\n\t\t// Special case for transformation when a part of the range is moved towards the range.\n\t\t//\n\t\t// Examples:\n\t\t//\n\t\t// <div><p>ab</p><p>c[d</p></div><p>e]f</p> --> <div><p>ab</p></div><p>c[d</p><p>e]f</p>\n\t\t// <p>e[f</p><div><p>a]b</p><p>cd</p></div> --> <p>e[f</p><p>a]b</p><div><p>cd</p></div>\n\t\t//\n\t\t// Without this special condition, the default algorithm leaves an \"artifact\" range from one of `differenceSet` parts:\n\t\t//\n\t\t// <div><p>ab</p><p>c[d</p></div><p>e]f</p> --> <div><p>ab</p>{</div>}<p>c[d</p><p>e]f</p>\n\t\t//\n\t\t// This special case is applied only if the range is to be kept together (not spread).\n\t\tconst moveRange = Range._createFromPositionAndShift( sourcePosition, howMany );\n\t\tconst insertPosition = targetPosition._getTransformedByDeletion( sourcePosition, howMany );\n\n\t\tif ( this.containsPosition( targetPosition ) && !spread ) {\n\t\t\tif ( moveRange.containsPosition( this.start ) || moveRange.containsPosition( this.end ) ) {\n\t\t\t\tconst start = this.start._getTransformedByMove( sourcePosition, targetPosition, howMany );\n\t\t\t\tconst end = this.end._getTransformedByMove( sourcePosition, targetPosition, howMany );\n\n\t\t\t\treturn [ new Range( start, end ) ];\n\t\t\t}\n\t\t}\n\n\t\t// Default algorithm.\n\t\tlet result;\n\n\t\tconst differenceSet = this.getDifference( moveRange );\n\t\tlet difference = null;\n\n\t\tconst common = this.getIntersection( moveRange );\n\n\t\tif ( differenceSet.length == 1 ) {\n\t\t\t// `moveRange` and this range may intersect but may be separate.\n\t\t\tdifference = new Range(\n\t\t\t\tdifferenceSet[ 0 ].start._getTransformedByDeletion( sourcePosition, howMany ),\n\t\t\t\tdifferenceSet[ 0 ].end._getTransformedByDeletion( sourcePosition, howMany )\n\t\t\t);\n\t\t} else if ( differenceSet.length == 2 ) {\n\t\t\t// `moveRange` is inside this range.\n\t\t\tdifference = new Range(\n\t\t\t\tthis.start,\n\t\t\t\tthis.end._getTransformedByDeletion( sourcePosition, howMany )\n\t\t\t);\n\t\t} // else, `moveRange` contains this range.\n\n\t\tif ( difference ) {\n\t\t\tresult = difference._getTransformedByInsertion( insertPosition, howMany, common !== null || spread );\n\t\t} else {\n\t\t\tresult = [];\n\t\t}\n\n\t\tif ( common ) {\n\t\t\tconst transformedCommon = new Range(\n\t\t\t\tcommon.start._getCombined( moveRange.start, insertPosition ),\n\t\t\t\tcommon.end._getCombined( moveRange.start, insertPosition )\n\t\t\t);\n\n\t\t\tif ( result.length == 2 ) {\n\t\t\t\tresult.splice( 1, 0, transformedCommon );\n\t\t\t} else {\n\t\t\t\tresult.push( transformedCommon );\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Returns a copy of this range that is transformed by deletion of `howMany` nodes from `deletePosition`.\n\t *\n\t * If the deleted range is intersecting with the transformed range, the transformed range will be shrank.\n\t *\n\t * If the deleted range contains transformed range, `null` will be returned.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} deletionPosition Position from which nodes are removed.\n\t * @param {Number} howMany How many nodes are removed.\n\t * @returns {module:engine/model/range~Range|null} Result of the transformation.\n\t */\n\t_getTransformedByDeletion( deletePosition, howMany ) {\n\t\tlet newStart = this.start._getTransformedByDeletion( deletePosition, howMany );\n\t\tlet newEnd = this.end._getTransformedByDeletion( deletePosition, howMany );\n\n\t\tif ( newStart == null && newEnd == null ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( newStart == null ) {\n\t\t\tnewStart = deletePosition;\n\t\t}\n\n\t\tif ( newEnd == null ) {\n\t\t\tnewEnd = deletePosition;\n\t\t}\n\n\t\treturn new Range( newStart, newEnd );\n\t}\n\n\t/**\n\t * Creates a new range, spreading from specified {@link module:engine/model/position~Position position} to a position moved by\n\t * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} position Beginning of the range.\n\t * @param {Number} shift How long the range should be.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tstatic _createFromPositionAndShift( position, shift ) {\n\t\tconst start = position;\n\t\tconst end = position.getShiftedBy( shift );\n\n\t\treturn shift > 0 ? new this( start, end ) : new this( end, start );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @protected\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tstatic _createIn( element ) {\n\t\treturn new this( Position._createAt( element, 0 ), Position._createAt( element, element.maxOffset ) );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/model/item~Item model item} and ends after it.\n\t *\n\t * @protected\n\t * @param {module:engine/model/item~Item} item\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tstatic _createOn( item ) {\n\t\treturn this._createFromPositionAndShift( Position._createBefore( item ), item.offsetSize );\n\t}\n\n\t/**\n\t * Combines all ranges from the passed array into a one range. At least one range has to be passed.\n\t * Passed ranges must not have common parts.\n\t *\n\t * The first range from the array is a reference range. If other ranges start or end on the exactly same position where\n\t * the reference range, they get combined into one range.\n\t *\n\t *\t\t[  ][]  [    ][ ][             ][ ][]  [  ]  // Passed ranges, shown sorted\n\t *\t\t[    ]                                       // The result of the function if the first range was a reference range.\n\t *\t            [                           ]        // The result of the function if the third-to-seventh range was a reference range.\n\t *\t                                           [  ]  // The result of the function if the last range was a reference range.\n\t *\n\t * @param {Array.<module:engine/model/range~Range>} ranges Ranges to combine.\n\t * @returns {module:engine/model/range~Range} Combined range.\n\t */\n\tstatic _createFromRanges( ranges ) {\n\t\tif ( ranges.length === 0 ) {\n\t\t\t/**\n\t\t\t * At least one range has to be passed to\n\t\t\t * {@link module:engine/model/range~Range._createFromRanges `Range._createFromRanges()`}.\n\t\t\t *\n\t\t\t * @error range-create-from-ranges-empty-array\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'range-create-from-ranges-empty-array: At least one range has to be passed.',\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if ( ranges.length == 1 ) {\n\t\t\treturn ranges[ 0 ].clone();\n\t\t}\n\n\t\t// 1. Set the first range in `ranges` array as a reference range.\n\t\t// If we are going to return just a one range, one of the ranges need to be the reference one.\n\t\t// Other ranges will be stuck to that range, if possible.\n\t\tconst ref = ranges[ 0 ];\n\n\t\t// 2. Sort all the ranges so it's easier to process them.\n\t\tranges.sort( ( a, b ) => {\n\t\t\treturn a.start.isAfter( b.start ) ? 1 : -1;\n\t\t} );\n\n\t\t// 3. Check at which index the reference range is now.\n\t\tconst refIndex = ranges.indexOf( ref );\n\n\t\t// 4. At this moment we don't need the original range.\n\t\t// We are going to modify the result and we need to return a new instance of Range.\n\t\t// We have to create a copy of the reference range.\n\t\tconst result = new this( ref.start, ref.end );\n\n\t\t// 5. Ranges should be checked and glued starting from the range that is closest to the reference range.\n\t\t// Since ranges are sorted, start with the range with index that is closest to reference range index.\n\t\tif ( refIndex > 0 ) {\n\t\t\tfor ( let i = refIndex - 1; true; i++ ) {\n\t\t\t\tif ( ranges[ i ].end.isEqual( result.start ) ) {\n\t\t\t\t\tresult.start = Position._createAt( ranges[ i ].start );\n\t\t\t\t} else {\n\t\t\t\t\t// If ranges are not starting/ending at the same position there is no point in looking further.\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 6. Ranges should be checked and glued starting from the range that is closest to the reference range.\n\t\t// Since ranges are sorted, start with the range with index that is closest to reference range index.\n\t\tfor ( let i = refIndex + 1; i < ranges.length; i++ ) {\n\t\t\tif ( ranges[ i ].start.isEqual( result.end ) ) {\n\t\t\t\tresult.end = Position._createAt( ranges[ i ].end );\n\t\t\t} else {\n\t\t\t\t// If ranges are not starting/ending at the same position there is no point in looking further.\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Creates a `Range` instance from given plain object (i.e. parsed JSON string).\n\t *\n\t * @param {Object} json Plain object to be converted to `Range`.\n\t * @param {module:engine/model/document~Document} doc Document object that will be range owner.\n\t * @returns {module:engine/model/element~Element} `Range` instance created using given plain object.\n\t */\n\tstatic fromJSON( json, doc ) {\n\t\treturn new this( Position.fromJSON( json.start, doc ), Position.fromJSON( json.end, doc ) );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `${ this.root } [ ${ this.start.path.join( ', ' ) } ] - [ ${ this.end.path.join( ', ' ) } ]`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelPosition: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/mapper\n */\n\nimport ModelPosition from '../model/position';\nimport ModelRange from '../model/range';\n\nimport ViewPosition from '../view/position';\nimport ViewRange from '../view/range';\nimport ViewText from '../view/text';\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Maps elements, positions and markers between {@link module:engine/view/document~Document the view} and\n * {@link module:engine/model/model the model}.\n *\n * The instance of the Mapper used for the editing pipeline is available in\n * {@link module:engine/controller/editingcontroller~EditingController#mapper `editor.editing.mapper`}.\n *\n * Mapper uses bound elements to find corresponding elements and positions, so, to get proper results,\n * all model elements should be {@link module:engine/conversion/mapper~Mapper#bindElements bound}.\n *\n * To map complex model to/from view relations, you may provide custom callbacks for\n * {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition modelToViewPosition event} and\n * {@link module:engine/conversion/mapper~Mapper#event:viewToModelPosition viewToModelPosition event} that are fired whenever\n * a position mapping request occurs.\n * Those events are fired by {@link module:engine/conversion/mapper~Mapper#toViewPosition toViewPosition}\n * and {@link module:engine/conversion/mapper~Mapper#toModelPosition toModelPosition} methods. `Mapper` adds it's own default callbacks\n * with `'lowest'` priority. To override default `Mapper` mapping, add custom callback with higher priority and\n * stop the event.\n */\nexport default class Mapper {\n\t/**\n\t * Creates an instance of the mapper.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Model element to view element mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap}\n\t\t */\n\t\tthis._modelToViewMapping = new WeakMap();\n\n\t\t/**\n\t\t * View element to model element mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap}\n\t\t */\n\t\tthis._viewToModelMapping = new WeakMap();\n\n\t\t/**\n\t\t * A map containing callbacks between view element names and functions evaluating length of view elements\n\t\t * in model.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._viewToModelLengthCallbacks = new Map();\n\n\t\t/**\n\t\t * Model marker name to view elements mapping.\n\t\t *\n\t\t * Keys are `String`s while values are `Set`s with {@link module:engine/view/element~Element view elements}.\n\t\t * One marker (name) can be mapped to multiple elements.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._markerNameToElements = new Map();\n\n\t\t/**\n\t\t * View element to model marker names mapping.\n\t\t *\n\t\t * This is reverse to {@link ~Mapper#_markerNameToElements} map.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._elementToMarkerNames = new Map();\n\n\t\t/**\n\t\t * Stores marker names of markers which has changed due to unbinding a view element (so it is assumed that the view element\n\t\t * has been removed, moved or renamed).\n\t\t *\n\t\t * @private\n\t\t * @member {Set.<module:engine/model/markercollection~Marker>}\n\t\t */\n\t\tthis._unboundMarkerNames = new Set();\n\n\t\t// Default mapper algorithm for mapping model position to view position.\n\t\tthis.on( 'modelToViewPosition', ( evt, data ) => {\n\t\t\tif ( data.viewPosition ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst viewContainer = this._modelToViewMapping.get( data.modelPosition.parent );\n\n\t\t\tdata.viewPosition = this._findPositionIn( viewContainer, data.modelPosition.offset );\n\t\t}, { priority: 'low' } );\n\n\t\t// Default mapper algorithm for mapping view position to model position.\n\t\tthis.on( 'viewToModelPosition', ( evt, data ) => {\n\t\t\tif ( data.modelPosition ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst viewBlock = this.findMappedViewAncestor( data.viewPosition );\n\t\t\tconst modelParent = this._viewToModelMapping.get( viewBlock );\n\t\t\tconst modelOffset = this._toModelOffset( data.viewPosition.parent, data.viewPosition.offset, viewBlock );\n\n\t\t\tdata.modelPosition = ModelPosition._createAt( modelParent, modelOffset );\n\t\t}, { priority: 'low' } );\n\t}\n\n\t/**\n\t * Marks model and view elements as corresponding. Corresponding elements can be retrieved by using\n\t * the {@link module:engine/conversion/mapper~Mapper#toModelElement toModelElement} and\n\t * {@link module:engine/conversion/mapper~Mapper#toViewElement toViewElement} methods.\n\t * The information that elements are bound is also used to translate positions.\n\t *\n\t * @param {module:engine/model/element~Element} modelElement Model element.\n\t * @param {module:engine/view/element~Element} viewElement View element.\n\t */\n\tbindElements( modelElement, viewElement ) {\n\t\tthis._modelToViewMapping.set( modelElement, viewElement );\n\t\tthis._viewToModelMapping.set( viewElement, modelElement );\n\t}\n\n\t/**\n\t * Unbinds given {@link module:engine/view/element~Element view element} from the map.\n\t *\n\t * **Note:** view-to-model binding will be removed, if it existed. However, corresponding model-to-view binding\n\t * will be removed only if model element is still bound to passed `viewElement`.\n\t *\n\t * This behavior lets for re-binding model element to another view element without fear of losing the new binding\n\t * when the previously bound view element is unbound.\n\t *\n\t * @param {module:engine/view/element~Element} viewElement View element to unbind.\n\t */\n\tunbindViewElement( viewElement ) {\n\t\tconst modelElement = this.toModelElement( viewElement );\n\n\t\tthis._viewToModelMapping.delete( viewElement );\n\n\t\tif ( this._elementToMarkerNames.has( viewElement ) ) {\n\t\t\tfor ( const markerName of this._elementToMarkerNames.get( viewElement ) ) {\n\t\t\t\tthis._unboundMarkerNames.add( markerName );\n\t\t\t}\n\t\t}\n\n\t\tif ( this._modelToViewMapping.get( modelElement ) == viewElement ) {\n\t\t\tthis._modelToViewMapping.delete( modelElement );\n\t\t}\n\t}\n\n\t/**\n\t * Unbinds given {@link module:engine/model/element~Element model element} from the map.\n\t *\n\t * **Note:** model-to-view binding will be removed, if it existed. However, corresponding view-to-model binding\n\t * will be removed only if view element is still bound to passed `modelElement`.\n\t *\n\t * This behavior lets for re-binding view element to another model element without fear of losing the new binding\n\t * when the previously bound model element is unbound.\n\t *\n\t * @param {module:engine/model/element~Element} modelElement Model element to unbind.\n\t */\n\tunbindModelElement( modelElement ) {\n\t\tconst viewElement = this.toViewElement( modelElement );\n\n\t\tthis._modelToViewMapping.delete( modelElement );\n\n\t\tif ( this._viewToModelMapping.get( viewElement ) == modelElement ) {\n\t\t\tthis._viewToModelMapping.delete( viewElement );\n\t\t}\n\t}\n\n\t/**\n\t * Binds given marker name with given {@link module:engine/view/element~Element view element}. The element\n\t * will be added to the current set of elements bound with given marker name.\n\t *\n\t * @param {module:engine/view/element~Element} element Element to bind.\n\t * @param {String} name Marker name.\n\t */\n\tbindElementToMarker( element, name ) {\n\t\tconst elements = this._markerNameToElements.get( name ) || new Set();\n\t\telements.add( element );\n\n\t\tconst names = this._elementToMarkerNames.get( element ) || new Set();\n\t\tnames.add( name );\n\n\t\tthis._markerNameToElements.set( name, elements );\n\t\tthis._elementToMarkerNames.set( element, names );\n\t}\n\n\t/**\n\t * Unbinds an element from given marker name.\n\t *\n\t * @param {module:engine/view/element~Element} element Element to unbind.\n\t * @param {String} name Marker name.\n\t */\n\tunbindElementFromMarkerName( element, name ) {\n\t\tconst nameToElements = this._markerNameToElements.get( name );\n\n\t\tif ( nameToElements ) {\n\t\t\tnameToElements.delete( element );\n\n\t\t\tif ( nameToElements.size == 0 ) {\n\t\t\t\tthis._markerNameToElements.delete( name );\n\t\t\t}\n\t\t}\n\n\t\tconst elementToNames = this._elementToMarkerNames.get( element );\n\n\t\tif ( elementToNames ) {\n\t\t\telementToNames.delete( name );\n\n\t\t\tif ( elementToNames.size == 0 ) {\n\t\t\t\tthis._elementToMarkerNames.delete( element );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns all marker names of markers which has changed due to unbinding a view element (so it is assumed that the view element\n\t * has been removed, moved or renamed) since the last flush. After returning, the marker names list is cleared.\n\t *\n\t * @returns {Array.<String>}\n\t */\n\tflushUnboundMarkerNames() {\n\t\tconst markerNames = Array.from( this._unboundMarkerNames );\n\n\t\tthis._unboundMarkerNames.clear();\n\n\t\treturn markerNames;\n\t}\n\n\t/**\n\t * Removes all model to view and view to model bindings.\n\t */\n\tclearBindings() {\n\t\tthis._modelToViewMapping = new WeakMap();\n\t\tthis._viewToModelMapping = new WeakMap();\n\t\tthis._markerNameToElements = new Map();\n\t\tthis._elementToMarkerNames = new Map();\n\t\tthis._unboundMarkerNames = new Set();\n\t}\n\n\t/**\n\t * Gets the corresponding model element.\n\t *\n\t * **Note:** {@link module:engine/view/uielement~UIElement} does not have corresponding element in model.\n\t *\n\t * @param {module:engine/view/element~Element} viewElement View element.\n\t * @returns {module:engine/model/element~Element|undefined} Corresponding model element or `undefined` if not found.\n\t */\n\ttoModelElement( viewElement ) {\n\t\treturn this._viewToModelMapping.get( viewElement );\n\t}\n\n\t/**\n\t * Gets the corresponding view element.\n\t *\n\t * @param {module:engine/model/element~Element} modelElement Model element.\n\t * @returns {module:engine/view/element~Element|undefined} Corresponding view element or `undefined` if not found.\n\t */\n\ttoViewElement( modelElement ) {\n\t\treturn this._modelToViewMapping.get( modelElement );\n\t}\n\n\t/**\n\t * Gets the corresponding model range.\n\t *\n\t * @param {module:engine/view/range~Range} viewRange View range.\n\t * @returns {module:engine/model/range~Range} Corresponding model range.\n\t */\n\ttoModelRange( viewRange ) {\n\t\treturn new ModelRange( this.toModelPosition( viewRange.start ), this.toModelPosition( viewRange.end ) );\n\t}\n\n\t/**\n\t * Gets the corresponding view range.\n\t *\n\t * @param {module:engine/model/range~Range} modelRange Model range.\n\t * @returns {module:engine/view/range~Range} Corresponding view range.\n\t */\n\ttoViewRange( modelRange ) {\n\t\treturn new ViewRange( this.toViewPosition( modelRange.start ), this.toViewPosition( modelRange.end ) );\n\t}\n\n\t/**\n\t * Gets the corresponding model position.\n\t *\n\t * @fires viewToModelPosition\n\t * @param {module:engine/view/position~Position} viewPosition View position.\n\t * @returns {module:engine/model/position~Position} Corresponding model position.\n\t */\n\ttoModelPosition( viewPosition ) {\n\t\tconst data = {\n\t\t\tviewPosition,\n\t\t\tmapper: this\n\t\t};\n\n\t\tthis.fire( 'viewToModelPosition', data );\n\n\t\treturn data.modelPosition;\n\t}\n\n\t/**\n\t * Gets the corresponding view position.\n\t *\n\t * @fires modelToViewPosition\n\t * @param {module:engine/model/position~Position} modelPosition Model position.\n\t * @param {Object} [options] Additional options for position mapping process.\n\t * @param {Boolean} [options.isPhantom=false] Should be set to `true` if the model position to map is pointing to a place\n\t * in model tree which no longer exists. For example, it could be an end of a removed model range.\n\t * @returns {module:engine/view/position~Position} Corresponding view position.\n\t */\n\ttoViewPosition( modelPosition, options = { isPhantom: false } ) {\n\t\tconst data = {\n\t\t\tmodelPosition,\n\t\t\tmapper: this,\n\t\t\tisPhantom: options.isPhantom\n\t\t};\n\n\t\tthis.fire( 'modelToViewPosition', data );\n\n\t\treturn data.viewPosition;\n\t}\n\n\t/**\n\t * Gets all view elements bound to the given marker name.\n\t *\n\t * @param {String} name Marker name.\n\t * @returns {Set.<module:engine/view/element~Element>|null} View elements bound with given marker name or `null`\n\t * if no elements are bound to given marker name.\n\t */\n\tmarkerNameToElements( name ) {\n\t\tconst boundElements = this._markerNameToElements.get( name );\n\n\t\tif ( !boundElements ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst elements = new Set();\n\n\t\tfor ( const element of boundElements ) {\n\t\t\tif ( element.is( 'attributeElement' ) ) {\n\t\t\t\tfor ( const clone of element.getElementsWithSameId() ) {\n\t\t\t\t\telements.add( clone );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telements.add( element );\n\t\t\t}\n\t\t}\n\n\t\treturn elements;\n\t}\n\n\t/**\n\t * Registers a callback that evaluates the length in the model of a view element with given name.\n\t *\n\t * The callback is fired with one argument, which is a view element instance. The callback is expected to return\n\t * a number representing the length of view element in model.\n\t *\n\t *\t\t// List item in view may contain nested list, which have other list items. In model though,\n\t *\t\t// the lists are represented by flat structure. Because of those differences, length of list view element\n\t *\t\t// may be greater than one. In the callback it's checked how many nested list items are in evaluated list item.\n\t *\n\t *\t\tfunction getViewListItemLength( element ) {\n\t *\t\t\tlet length = 1;\n\t *\n\t *\t\t\tfor ( let child of element.getChildren() ) {\n\t *\t\t\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n\t *\t\t\t\t\tfor ( let item of child.getChildren() ) {\n\t *\t\t\t\t\t\tlength += getViewListItemLength( item );\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\n\t *\t\t\treturn length;\n\t *\t\t}\n\t *\n\t *\t\tmapper.registerViewToModelLength( 'li', getViewListItemLength );\n\t *\n\t * @param {String} viewElementName Name of view element for which callback is registered.\n\t * @param {Function} lengthCallback Function return a length of view element instance in model.\n\t */\n\tregisterViewToModelLength( viewElementName, lengthCallback ) {\n\t\tthis._viewToModelLengthCallbacks.set( viewElementName, lengthCallback );\n\t}\n\n\t/**\n\t * For given `viewPosition`, finds and returns the closest ancestor of this position that has a mapping to\n\t * the model.\n\t *\n\t * @param {module:engine/view/position~Position} viewPosition Position for which mapped ancestor should be found.\n\t * @returns {module:engine/view/element~Element}\n\t */\n\tfindMappedViewAncestor( viewPosition ) {\n\t\tlet parent = viewPosition.parent;\n\n\t\twhile ( !this._viewToModelMapping.has( parent ) ) {\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn parent;\n\t}\n\n\t/**\n\t * Calculates model offset based on the view position and the block element.\n\t *\n\t * Example:\n\t *\n\t *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, p ) -> 5\n\t *\n\t * Is a sum of:\n\t *\n\t *\t\t<p>foo|<b>bar</b></p> // _toModelOffset( p, 3, p ) -> 3\n\t *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, b ) -> 2\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewParent Position parent.\n\t * @param {Number} viewOffset Position offset.\n\t * @param {module:engine/view/element~Element} viewBlock Block used as a base to calculate offset.\n\t * @returns {Number} Offset in the model.\n\t */\n\t_toModelOffset( viewParent, viewOffset, viewBlock ) {\n\t\tif ( viewBlock != viewParent ) {\n\t\t\t// See example.\n\t\t\tconst offsetToParentStart = this._toModelOffset( viewParent.parent, viewParent.index, viewBlock );\n\t\t\tconst offsetInParent = this._toModelOffset( viewParent, viewOffset, viewParent );\n\n\t\t\treturn offsetToParentStart + offsetInParent;\n\t\t}\n\n\t\t// viewBlock == viewParent, so we need to calculate the offset in the parent element.\n\n\t\t// If the position is a text it is simple (\"ba|r\" -> 2).\n\t\tif ( viewParent.is( 'text' ) ) {\n\t\t\treturn viewOffset;\n\t\t}\n\n\t\t// If the position is in an element we need to sum lengths of siblings ( <b> bar </b> foo | -> 3 + 3 = 6 ).\n\t\tlet modelOffset = 0;\n\n\t\tfor ( let i = 0; i < viewOffset; i++ ) {\n\t\t\tmodelOffset += this.getModelLength( viewParent.getChild( i ) );\n\t\t}\n\n\t\treturn modelOffset;\n\t}\n\n\t/**\n\t * Gets the length of the view element in the model.\n\t *\n\t * The length is calculated as follows:\n\t * * if {@link #registerViewToModelLength length mapping callback} is provided for given `viewNode` it is used to\n\t * evaluate model length (`viewNode` is used as first and only parameter passed to the callback),\n\t * * length of a {@link module:engine/view/text~Text text node} is equal to the length of it's\n\t * {@link module:engine/view/text~Text#data data},\n\t * * length of a {@link module:engine/view/uielement~UIElement ui element} is equal to 0,\n\t * * length of a mapped {@link module:engine/view/element~Element element} is equal to 1,\n\t * * length of a not-mapped {@link module:engine/view/element~Element element} is equal to the length of it's children.\n\t *\n\t * Examples:\n\t *\n\t *\t\tfoo                          -> 3 // Text length is equal to it's data length.\n\t *\t\t<p>foo</p>                   -> 1 // Length of an element which is mapped is by default equal to 1.\n\t *\t\t<b>foo</b>                   -> 3 // Length of an element which is not mapped is a length of its children.\n\t *\t\t<div><p>x</p><p>y</p></div>  -> 2 // Assuming that <div> is not mapped and <p> are mapped.\n\t *\n\t * @param {module:engine/view/element~Element} viewNode View node.\n\t * @returns {Number} Length of the node in the tree model.\n\t */\n\tgetModelLength( viewNode ) {\n\t\tif ( this._viewToModelLengthCallbacks.get( viewNode.name ) ) {\n\t\t\tconst callback = this._viewToModelLengthCallbacks.get( viewNode.name );\n\n\t\t\treturn callback( viewNode );\n\t\t} else if ( this._viewToModelMapping.has( viewNode ) ) {\n\t\t\treturn 1;\n\t\t} else if ( viewNode.is( 'text' ) ) {\n\t\t\treturn viewNode.data.length;\n\t\t} else if ( viewNode.is( 'uiElement' ) ) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tlet len = 0;\n\n\t\t\tfor ( const child of viewNode.getChildren() ) {\n\t\t\t\tlen += this.getModelLength( child );\n\t\t\t}\n\n\t\t\treturn len;\n\t\t}\n\t}\n\n\t/**\n\t * Finds the position in the view node (or its children) with the expected model offset.\n\t *\n\t * Example:\n\t *\n\t *\t\t<p>fo<b>bar</b>bom</p> -> expected offset: 4\n\t *\n\t *\t\t_findPositionIn( p, 4 ):\n\t *\t\t<p>|fo<b>bar</b>bom</p> -> expected offset: 4, actual offset: 0\n\t *\t\t<p>fo|<b>bar</b>bom</p> -> expected offset: 4, actual offset: 2\n\t *\t\t<p>fo<b>bar</b>|bom</p> -> expected offset: 4, actual offset: 5 -> we are too far\n\t *\n\t *\t\t_findPositionIn( b, 4 - ( 5 - 3 ) ):\n\t *\t\t<p>fo<b>|bar</b>bom</p> -> expected offset: 2, actual offset: 0\n\t *\t\t<p>fo<b>bar|</b>bom</p> -> expected offset: 2, actual offset: 3 -> we are too far\n\t *\n\t *\t\t_findPositionIn( bar, 2 - ( 3 - 3 ) ):\n\t *\t\tWe are in the text node so we can simple find the offset.\n\t *\t\t<p>fo<b>ba|r</b>bom</p> -> expected offset: 2, actual offset: 2 -> position found\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewParent Tree view element in which we are looking for the position.\n\t * @param {Number} expectedOffset Expected offset.\n\t * @returns {module:engine/view/position~Position} Found position.\n\t */\n\t_findPositionIn( viewParent, expectedOffset ) {\n\t\t// Last scanned view node.\n\t\tlet viewNode;\n\t\t// Length of the last scanned view node.\n\t\tlet lastLength = 0;\n\n\t\tlet modelOffset = 0;\n\t\tlet viewOffset = 0;\n\n\t\t// In the text node it is simple: offset in the model equals offset in the text.\n\t\tif ( viewParent.is( 'text' ) ) {\n\t\t\treturn new ViewPosition( viewParent, expectedOffset );\n\t\t}\n\n\t\t// In other cases we add lengths of child nodes to find the proper offset.\n\n\t\t// If it is smaller we add the length.\n\t\twhile ( modelOffset < expectedOffset ) {\n\t\t\tviewNode = viewParent.getChild( viewOffset );\n\t\t\tlastLength = this.getModelLength( viewNode );\n\t\t\tmodelOffset += lastLength;\n\t\t\tviewOffset++;\n\t\t}\n\n\t\t// If it equals we found the position.\n\t\tif ( modelOffset == expectedOffset ) {\n\t\t\treturn this._moveViewPositionToTextNode( new ViewPosition( viewParent, viewOffset ) );\n\t\t}\n\t\t// If it is higher we need to enter last child.\n\t\telse {\n\t\t\t// ( modelOffset - lastLength ) is the offset to the child we enter,\n\t\t\t// so we subtract it from the expected offset to fine the offset in the child.\n\t\t\treturn this._findPositionIn( viewNode, expectedOffset - ( modelOffset - lastLength ) );\n\t\t}\n\t}\n\n\t/**\n\t * Because we prefer positions in text nodes over positions next to text node moves view position to the text node\n\t * if it was next to it.\n\t *\n\t *\t\t<p>[]<b>foo</b></p> -> <p>[]<b>foo</b></p> // do not touch if position is not directly next to text\n\t *\t\t<p>foo[]<b>foo</b></p> -> <p>foo{}<b>foo</b></p> // move to text node\n\t *\t\t<p><b>[]foo</b></p> -> <p><b>{}foo</b></p> // move to text node\n\t *\n\t * @private\n\t * @param {module:engine/view/position~Position} viewPosition Position potentially next to text node.\n\t * @returns {module:engine/view/position~Position} Position in text node if possible.\n\t */\n\t_moveViewPositionToTextNode( viewPosition ) {\n\t\t// If the position is just after text node, put it at the end of that text node.\n\t\t// If the position is just before text node, put it at the beginning of that text node.\n\t\tconst nodeBefore = viewPosition.nodeBefore;\n\t\tconst nodeAfter = viewPosition.nodeAfter;\n\n\t\tif ( nodeBefore instanceof ViewText ) {\n\t\t\treturn new ViewPosition( nodeBefore, nodeBefore.data.length );\n\t\t} else if ( nodeAfter instanceof ViewText ) {\n\t\t\treturn new ViewPosition( nodeAfter, 0 );\n\t\t}\n\n\t\t// Otherwise, just return the given position.\n\t\treturn viewPosition;\n\t}\n\n\t/**\n\t * Fired for each model-to-view position mapping request. The purpose of this event is to enable custom model-to-view position\n\t * mapping. Callbacks added to this event take {@link module:engine/model/position~Position model position} and are expected to\n\t * calculate {@link module:engine/view/position~Position view position}. Calculated view position should be added as `viewPosition`\n\t * value in `data` object that is passed as one of parameters to the event callback.\n\t *\n\t * \t\t// Assume that \"captionedImage\" model element is converted to <img> and following <span> elements in view,\n\t * \t\t// and the model element is bound to <img> element. Force mapping model positions inside \"captionedImage\" to that\n\t * \t\t// <span> element.\n\t *\t\tmapper.on( 'modelToViewPosition', ( evt, data ) => {\n\t *\t\t\tconst positionParent = modelPosition.parent;\n\t *\n\t *\t\t\tif ( positionParent.name == 'captionedImage' ) {\n\t *\t\t\t\tconst viewImg = data.mapper.toViewElement( positionParent );\n\t *\t\t\t\tconst viewCaption = viewImg.nextSibling; // The <span> element.\n\t *\n\t *\t\t\t\tdata.viewPosition = new ViewPosition( viewCaption, modelPosition.offset );\n\t *\n\t *\t\t\t\t// Stop the event if other callbacks should not modify calculated value.\n\t *\t\t\t\tevt.stop();\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * **Note:** keep in mind that sometimes a \"phantom\" model position is being converted. \"Phantom\" model position is\n\t * a position that points to a non-existing place in model. Such position might still be valid for conversion, though\n\t * (it would point to a correct place in view when converted). One example of such situation is when a range is\n\t * removed from model, there may be a need to map the range's end (which is no longer valid model position). To\n\t * handle such situation, check `data.isPhantom` flag:\n\t *\n\t * \t\t// Assume that there is \"customElement\" model element and whenever position is before it, we want to move it\n\t * \t\t// to the inside of the view element bound to \"customElement\".\n\t *\t\tmapper.on( 'modelToViewPosition', ( evt, data ) => {\n\t *\t\t\tif ( data.isPhantom ) {\n\t *\t\t\t\treturn;\n\t *\t\t\t}\n\t *\n\t *\t\t\t// Below line might crash for phantom position that does not exist in model.\n\t *\t\t\tconst sibling = data.modelPosition.nodeBefore;\n\t *\n\t *\t\t\t// Check if this is the element we are interested in.\n\t *\t\t\tif ( !sibling.is( 'customElement' ) ) {\n\t *\t\t\t\treturn;\n\t *\t\t\t}\n\t *\n\t *\t\t\tconst viewElement = data.mapper.toViewElement( sibling );\n\t *\n\t *\t\t\tdata.viewPosition = new ViewPosition( sibling, 0 );\n\t *\n\t *\t\t\tevt.stop();\n\t *\t\t} );\n\t *\n\t * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\n\t * attach a custom callback after default callback and also use `data.viewPosition` calculated by default callback\n\t * (for example to fix it).\n\t *\n\t * **Note:** default mapping callback will not fire if `data.viewPosition` is already set.\n\t *\n\t * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\n\t * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\n\t * the condition that checks if special case scenario happened should be as simple as possible.\n\t *\n\t * @event modelToViewPosition\n\t * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\n\t * `viewPosition` value to that object with calculated {@link module:engine/view/position~Position view position}.\n\t * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\n\t */\n\n\t/**\n\t * Fired for each view-to-model position mapping request. See {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition}.\n\t *\n\t * \t\t// See example in `modelToViewPosition` event description.\n\t * \t\t// This custom mapping will map positions from <span> element next to <img> to the \"captionedImage\" element.\n\t *\t\tmapper.on( 'viewToModelPosition', ( evt, data ) => {\n\t *\t\t\tconst positionParent = viewPosition.parent;\n\t *\n\t *\t\t\tif ( positionParent.hasClass( 'image-caption' ) ) {\n\t *\t\t\t\tconst viewImg = positionParent.previousSibling;\n\t *\t\t\t\tconst modelImg = data.mapper.toModelElement( viewImg );\n\t *\n\t *\t\t\t\tdata.modelPosition = new ModelPosition( modelImg, viewPosition.offset );\n\t *\t\t\t\tevt.stop();\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\n\t * attach a custom callback after default callback and also use `data.modelPosition` calculated by default callback\n\t * (for example to fix it).\n\t *\n\t * **Note:** default mapping callback will not fire if `data.modelPosition` is already set.\n\t *\n\t * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\n\t * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\n\t * the condition that checks if special case scenario happened should be as simple as possible.\n\t *\n\t * @event viewToModelPosition\n\t * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\n\t * `modelPosition` value to that object with calculated {@link module:engine/model/position~Position model position}.\n\t * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\n\t */\n}\n\nmix( Mapper, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/modelconsumable\n */\n\nimport TextProxy from '../model/textproxy';\n\n/**\n * Manages a list of consumable values for {@link module:engine/model/item~Item model items}.\n *\n * Consumables are various aspects of the model. A model item can be broken down into singular properties that might be\n * taken into consideration when converting that item.\n *\n * `ModelConsumable` is used by {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} while analyzing changed\n * parts of {@link module:engine/model/document~Document the document}. The added / changed / removed model items are broken down\n * into singular properties (the item itself and it's attributes). All those parts are saved in `ModelConsumable`. Then,\n * during conversion, when given part of model item is converted (i.e. the view element has been inserted into the view,\n * but without attributes), consumable value is removed from `ModelConsumable`.\n *\n * For model items, `ModelConsumable` stores consumable values of one of following types: `insert`, `addattribute:<attributeKey>`,\n * `changeattributes:<attributeKey>`, `removeattributes:<attributeKey>`.\n *\n * In most cases, it is enough to let {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n * gather consumable values, so there is no need to use\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#add add method} directly.\n * However, it is important to understand how consumable values can be\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed}.\n * See {@link module:engine/conversion/downcasthelpers default downcast converters} for more information.\n *\n * Keep in mind, that one conversion event may have multiple callbacks (converters) attached to it. Each of those is\n * able to convert one or more parts of the model. However, when one of those callbacks actually converts\n * something, other should not, because they would duplicate the results. Using `ModelConsumable` helps avoiding\n * this situation, because callbacks should only convert those values, which were not yet consumed from `ModelConsumable`.\n *\n * Consuming multiple values in a single callback:\n *\n *\t\t// Converter for custom `image` element that might have a `caption` element inside which changes\n *\t\t// how the image is displayed in the view:\n *\t\t//\n *\t\t// Model:\n *\t\t//\n *\t\t// [image]\n *\t\t//   └─ [caption]\n *\t\t//       └─ foo\n *\t\t//\n *\t\t// View:\n *\t\t//\n *\t\t// <figure>\n *\t\t//   ├─ <img />\n *\t\t//   └─ <caption>\n *\t\t//       └─ foo\n *\t\tmodelConversionDispatcher.on( 'insert:image', ( evt, data, conversionApi ) => {\n *\t\t\t// First, consume the `image` element.\n *\t\t\tconversionApi.consumable.consume( data.item, 'insert' );\n *\n *\t\t\t// Just create normal image element for the view.\n *\t\t\t// Maybe it will be \"decorated\" later.\n *\t\t\tconst viewImage = new ViewElement( 'img' );\n *\t\t\tconst insertPosition = conversionApi.mapper.toViewPosition( data.range.start );\n *\t\t\tconst viewWriter = conversionApi.writer;\n *\n *\t\t\t// Check if the `image` element has children.\n *\t\t\tif ( data.item.childCount > 0 ) {\n *\t\t\t\tconst modelCaption = data.item.getChild( 0 );\n *\n *\t\t\t\t// `modelCaption` insertion change is consumed from consumable values.\n *\t\t\t\t// It will not be converted by other converters, but it's children (probably some text) will be.\n *\t\t\t\t// Through mapping, converters for text will know where to insert contents of `modelCaption`.\n *\t\t\t\tif ( conversionApi.consumable.consume( modelCaption, 'insert' ) ) {\n *\t\t\t\t\tconst viewCaption = new ViewElement( 'figcaption' );\n *\n *\t\t\t\t\tconst viewImageHolder = new ViewElement( 'figure', null, [ viewImage, viewCaption ] );\n *\n *\t\t\t\t\tconversionApi.mapper.bindElements( modelCaption, viewCaption );\n *\t\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImageHolder );\n *\t\t\t\t\tviewWriter.insert( insertPosition, viewImageHolder );\n *\t\t\t\t}\n *\t\t\t} else {\n *\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImage );\n *\t\t\t\tviewWriter.insert( insertPosition, viewImage );\n *\t\t\t}\n *\n *\t\t\tevt.stop();\n *\t\t} );\n */\nexport default class ModelConsumable {\n\t/**\n\t * Creates an empty consumables list.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Contains list of consumable values.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_consumable\n\t\t */\n\t\tthis._consumable = new Map();\n\n\t\t/**\n\t\t * For each {@link module:engine/model/textproxy~TextProxy} added to `ModelConsumable`, this registry holds parent\n\t\t * of that `TextProxy` and start and end indices of that `TextProxy`. This allows identification of `TextProxy`\n\t\t * instances that points to the same part of the model but are different instances. Each distinct `TextProxy`\n\t\t * is given unique `Symbol` which is then registered as consumable. This process is transparent for `ModelConsumable`\n\t\t * API user because whenever `TextProxy` is added, tested, consumed or reverted, internal mechanisms of\n\t\t * `ModelConsumable` translates `TextProxy` to that unique `Symbol`.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_textProxyRegistry\n\t\t */\n\t\tthis._textProxyRegistry = new Map();\n\t}\n\n\t/**\n\t * Adds a consumable value to the consumables list and links it with given model item.\n\t *\n\t *\t\tmodelConsumable.add( modelElement, 'insert' ); // Add `modelElement` insertion change to consumable values.\n\t *\t\tmodelConsumable.add( modelElement, 'addAttribute:bold' ); // Add `bold` attribute insertion on `modelElement` change.\n\t *\t\tmodelConsumable.add( modelElement, 'removeAttribute:bold' ); // Add `bold` attribute removal on `modelElement` change.\n\t *\t\tmodelConsumable.add( modelSelection, 'selection' ); // Add `modelSelection` to consumable values.\n\t *\t\tmodelConsumable.add( modelRange, 'range' ); // Add `modelRange` to consumable values.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n\t * Model item, range or selection that has the consumable.\n\t * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n\t * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n\t */\n\tadd( item, type ) {\n\t\ttype = _normalizeConsumableType( type );\n\n\t\tif ( item instanceof TextProxy ) {\n\t\t\titem = this._getSymbolForTextProxy( item );\n\t\t}\n\n\t\tif ( !this._consumable.has( item ) ) {\n\t\t\tthis._consumable.set( item, new Map() );\n\t\t}\n\n\t\tthis._consumable.get( item ).set( type, true );\n\t}\n\n\t/**\n\t * Removes given consumable value from given model item.\n\t *\n\t *\t\tmodelConsumable.consume( modelElement, 'insert' ); // Remove `modelElement` insertion change from consumable values.\n\t *\t\tmodelConsumable.consume( modelElement, 'addAttribute:bold' ); // Remove `bold` attribute insertion on `modelElement` change.\n\t *\t\tmodelConsumable.consume( modelElement, 'removeAttribute:bold' ); // Remove `bold` attribute removal on `modelElement` change.\n\t *\t\tmodelConsumable.consume( modelSelection, 'selection' ); // Remove `modelSelection` from consumable values.\n\t *\t\tmodelConsumable.consume( modelRange, 'range' ); // Remove 'modelRange' from consumable values.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n\t * Model item, range or selection from which consumable will be consumed.\n\t * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n\t * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n\t * @returns {Boolean} `true` if consumable value was available and was consumed, `false` otherwise.\n\t */\n\tconsume( item, type ) {\n\t\ttype = _normalizeConsumableType( type );\n\n\t\tif ( item instanceof TextProxy ) {\n\t\t\titem = this._getSymbolForTextProxy( item );\n\t\t}\n\n\t\tif ( this.test( item, type ) ) {\n\t\t\tthis._consumable.get( item ).set( type, false );\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Tests whether there is a consumable value of given type connected with given model item.\n\t *\n\t *\t\tmodelConsumable.test( modelElement, 'insert' ); // Check for `modelElement` insertion change.\n\t *\t\tmodelConsumable.test( modelElement, 'addAttribute:bold' ); // Check for `bold` attribute insertion on `modelElement` change.\n\t *\t\tmodelConsumable.test( modelElement, 'removeAttribute:bold' ); // Check for `bold` attribute removal on `modelElement` change.\n\t *\t\tmodelConsumable.test( modelSelection, 'selection' ); // Check if `modelSelection` is consumable.\n\t *\t\tmodelConsumable.test( modelRange, 'range' ); // Check if `modelRange` is consumable.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n\t * Model item, range or selection to be tested.\n\t * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n\t * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n\t * @returns {null|Boolean} `null` if such consumable was never added, `false` if the consumable values was\n\t * already consumed or `true` if it was added and not consumed yet.\n\t */\n\ttest( item, type ) {\n\t\ttype = _normalizeConsumableType( type );\n\n\t\tif ( item instanceof TextProxy ) {\n\t\t\titem = this._getSymbolForTextProxy( item );\n\t\t}\n\n\t\tconst itemConsumables = this._consumable.get( item );\n\n\t\tif ( itemConsumables === undefined ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst value = itemConsumables.get( type );\n\n\t\tif ( value === undefined ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Reverts consuming of consumable value.\n\t *\n\t *\t\tmodelConsumable.revert( modelElement, 'insert' ); // Revert consuming `modelElement` insertion change.\n\t *\t\tmodelConsumable.revert( modelElement, 'addAttribute:bold' ); // Revert consuming `bold` attribute insert from `modelElement`.\n\t *\t\tmodelConsumable.revert( modelElement, 'removeAttribute:bold' ); // Revert consuming `bold` attribute remove from `modelElement`.\n\t *\t\tmodelConsumable.revert( modelSelection, 'selection' ); // Revert consuming `modelSelection`.\n\t *\t\tmodelConsumable.revert( modelRange, 'range' ); // Revert consuming `modelRange`.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n\t * Model item, range or selection to be reverted.\n\t * @param {String} type Consumable type.\n\t * @returns {null|Boolean} `true` if consumable has been reversed, `false` otherwise. `null` if the consumable has\n\t * never been added.\n\t */\n\trevert( item, type ) {\n\t\ttype = _normalizeConsumableType( type );\n\n\t\tif ( item instanceof TextProxy ) {\n\t\t\titem = this._getSymbolForTextProxy( item );\n\t\t}\n\n\t\tconst test = this.test( item, type );\n\n\t\tif ( test === false ) {\n\t\t\tthis._consumable.get( item ).set( type, true );\n\n\t\t\treturn true;\n\t\t} else if ( test === true ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets a unique symbol for passed {@link module:engine/model/textproxy~TextProxy} instance. All `TextProxy` instances that\n\t * have same parent, same start index and same end index will get the same symbol.\n\t *\n\t * Used internally to correctly consume `TextProxy` instances.\n\t *\n\t * @private\n\t * @param {module:engine/model/textproxy~TextProxy} textProxy `TextProxy` instance to get a symbol for.\n\t * @returns {Symbol} Symbol representing all equal instances of `TextProxy`.\n\t */\n\t_getSymbolForTextProxy( textProxy ) {\n\t\tlet symbol = null;\n\n\t\tconst startMap = this._textProxyRegistry.get( textProxy.startOffset );\n\n\t\tif ( startMap ) {\n\t\t\tconst endMap = startMap.get( textProxy.endOffset );\n\n\t\t\tif ( endMap ) {\n\t\t\t\tsymbol = endMap.get( textProxy.parent );\n\t\t\t}\n\t\t}\n\n\t\tif ( !symbol ) {\n\t\t\tsymbol = this._addSymbolForTextProxy( textProxy.startOffset, textProxy.endOffset, textProxy.parent );\n\t\t}\n\n\t\treturn symbol;\n\t}\n\n\t/**\n\t * Adds a symbol for given properties that characterizes a {@link module:engine/model/textproxy~TextProxy} instance.\n\t *\n\t * Used internally to correctly consume `TextProxy` instances.\n\t *\n\t * @private\n\t * @param {Number} startIndex Text proxy start index in it's parent.\n\t * @param {Number} endIndex Text proxy end index in it's parent.\n\t * @param {module:engine/model/element~Element} parent Text proxy parent.\n\t * @returns {Symbol} Symbol generated for given properties.\n\t */\n\t_addSymbolForTextProxy( start, end, parent ) {\n\t\tconst symbol = Symbol( 'textProxySymbol' );\n\t\tlet startMap, endMap;\n\n\t\tstartMap = this._textProxyRegistry.get( start );\n\n\t\tif ( !startMap ) {\n\t\t\tstartMap = new Map();\n\t\t\tthis._textProxyRegistry.set( start, startMap );\n\t\t}\n\n\t\tendMap = startMap.get( end );\n\n\t\tif ( !endMap ) {\n\t\t\tendMap = new Map();\n\t\t\tstartMap.set( end, endMap );\n\t\t}\n\n\t\tendMap.set( parent, symbol );\n\n\t\treturn symbol;\n\t}\n}\n\n// Returns a normalized consumable type name from given string. A normalized consumable type name is a string that has\n// at most one colon, for example: `insert` or `addMarker:highlight`. If string to normalize has more \"parts\" (more colons),\n// the other parts are dropped, for example: `addattribute:bold:$text` -> `addattributes:bold`.\n//\n// @param {String} type Consumable type.\n// @returns {String} Normalized consumable type.\nfunction _normalizeConsumableType( type ) {\n\tconst parts = type.split( ':' );\n\n\treturn parts.length > 1 ? parts[ 0 ] + ':' + parts[ 1 ] : parts[ 0 ];\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/downcastdispatcher\n */\n\nimport Consumable from './modelconsumable';\nimport Range from '../model/range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { extend } from 'lodash-es';\n\n/**\n * `DowncastDispatcher` is a central point of downcasting (conversion from model to view), which is a process of reacting to changes\n * in the model and firing a set of events. Callbacks listening to those events are called converters. Those\n * converters role is to convert the model changes to changes in view (for example, adding view nodes or\n * changing attributes on view elements).\n *\n * During conversion process, `DowncastDispatcher` fires events, basing on state of the model and prepares\n * data for those events. It is important to understand that those events are connected with changes done on model,\n * for example: \"node has been inserted\" or \"attribute has changed\". This is in a contrary to upcasting (view to model conversion),\n * where we convert view state (view nodes) to a model tree.\n *\n * The events are prepared basing on a diff created by {@link module:engine/model/differ~Differ Differ}, which buffers them\n * and then passes to `DowncastDispatcher` as a diff between old model state and new model state.\n *\n * Note, that because changes are converted there is a need to have a mapping between model structure and view structure.\n * To map positions and elements during downcast (model to view conversion) use {@link module:engine/conversion/mapper~Mapper}.\n *\n * `DowncastDispatcher` fires following events for model tree changes:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert insert}\n * if a range of nodes has been inserted to the model tree,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove remove}\n * if a range of nodes has been removed from the model tree,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute attribute}\n * if attribute has been added, changed or removed from a model node.\n *\n * For {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert insert}\n * and {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute attribute},\n * `DowncastDispatcher` generates {@link module:engine/conversion/modelconsumable~ModelConsumable consumables}.\n * These are used to have a control over which changes has been already consumed. It is useful when some converters\n * overwrite other or converts multiple changes (for example converts insertion of an element and also converts that\n * element's attributes during insertion).\n *\n * Additionally, `DowncastDispatcher` fires events for {@link module:engine/model/markercollection~Marker marker} changes:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker} if a marker has been added,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:removeMarker} if a marker has been removed.\n *\n * Note, that changing a marker is done through removing the marker from the old range, and adding on the new range,\n * so both those events are fired.\n *\n * Finally, `DowncastDispatcher` also handles firing events for {@link module:engine/model/selection model selection}\n * conversion:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:selection}\n * which converts selection from model to view,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute}\n * which is fired for every selection attribute,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}\n * which is fired for every marker which contains selection.\n *\n * Unlike model tree and markers, events for selection are not fired for changes but for selection state.\n *\n * When providing custom listeners for `DowncastDispatcher` remember to check whether given change has not been\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed} yet.\n *\n * When providing custom listeners for `DowncastDispatcher` keep in mind that any callback that had\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed} a value from a consumable and\n * converted the change should also stop the event (for efficiency purposes).\n *\n * When providing custom listeners for `DowncastDispatcher` remember to use provided\n * {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer} to apply changes to the view document.\n *\n * Example of a custom converter for `DowncastDispatcher`:\n *\n *\t\t// We will convert inserting \"paragraph\" model element into the model.\n *\t\tdowncastDispatcher.on( 'insert:paragraph', ( evt, data, conversionApi ) => {\n *\t\t\t// Remember to check whether the change has not been consumed yet and consume it.\n *\t\t\tif ( conversionApi.consumable.consume( data.item, 'insert' ) ) {\n *\t\t\t\treturn;\n *\t\t\t}\n *\n *\t\t\t// Translate position in model to position in view.\n *\t\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n *\n *\t\t\t// Create <p> element that will be inserted in view at `viewPosition`.\n *\t\t\tconst viewElement = conversionApi.writer.createContainerElement( 'p' );\n *\n *\t\t\t// Bind the newly created view element to model element so positions will map accordingly in future.\n *\t\t\tconversionApi.mapper.bindElements( data.item, viewElement );\n *\n *\t\t\t// Add the newly created view element to the view.\n *\t\t\tconversionApi.writer.insert( viewPosition, viewElement );\n *\n *\t\t\t// Remember to stop the event propagation.\n *\t\t\tevt.stop();\n *\t\t} );\n */\nexport default class DowncastDispatcher {\n\t/**\n\t * Creates a `DowncastDispatcher` instance.\n\t *\n\t * @see module:engine/conversion/downcastdispatcher~DowncastConversionApi\n\t * @param {Object} conversionApi Additional properties for interface that will be passed to events fired\n\t * by `DowncastDispatcher`.\n\t */\n\tconstructor( conversionApi ) {\n\t\t/**\n\t\t * Interface passed by dispatcher to the events callbacks.\n\t\t *\n\t\t * @member {module:engine/conversion/downcastdispatcher~DowncastConversionApi}\n\t\t */\n\t\tthis.conversionApi = extend( { dispatcher: this }, conversionApi );\n\t}\n\n\t/**\n\t * Takes {@link module:engine/model/differ~Differ model differ} object with buffered changes and fires conversion basing on it.\n\t *\n\t * @param {module:engine/model/differ~Differ} differ Differ object with buffered changes.\n\t * @param {module:engine/model/markercollection~MarkerCollection} markers Markers connected with converted model.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertChanges( differ, markers, writer ) {\n\t\t// Before the view is updated, remove markers which have changed.\n\t\tfor ( const change of differ.getMarkersToRemove() ) {\n\t\t\tthis.convertMarkerRemove( change.name, change.range, writer );\n\t\t}\n\n\t\t// Convert changes that happened on model tree.\n\t\tfor ( const entry of differ.getChanges() ) {\n\t\t\tif ( entry.type == 'insert' ) {\n\t\t\t\tthis.convertInsert( Range._createFromPositionAndShift( entry.position, entry.length ), writer );\n\t\t\t} else if ( entry.type == 'remove' ) {\n\t\t\t\tthis.convertRemove( entry.position, entry.length, entry.name, writer );\n\t\t\t} else {\n\t\t\t\t// entry.type == 'attribute'.\n\t\t\t\tthis.convertAttribute( entry.range, entry.attributeKey, entry.attributeOldValue, entry.attributeNewValue, writer );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const markerName of this.conversionApi.mapper.flushUnboundMarkerNames() ) {\n\t\t\tconst markerRange = markers.get( markerName ).getRange();\n\n\t\t\tthis.convertMarkerRemove( markerName, markerRange, writer );\n\t\t\tthis.convertMarkerAdd( markerName, markerRange, writer );\n\t\t}\n\n\t\t// After the view is updated, convert markers which have changed.\n\t\tfor ( const change of differ.getMarkersToAdd() ) {\n\t\t\tthis.convertMarkerAdd( change.name, change.range, writer );\n\t\t}\n\t}\n\n\t/**\n\t * Starts conversion of a range insertion.\n\t *\n\t * For each node in the range, {@link #event:insert insert event is fired}. For each attribute on each node,\n\t * {@link #event:attribute attribute event is fired}.\n\t *\n\t * @fires insert\n\t * @fires attribute\n\t * @param {module:engine/model/range~Range} range Inserted range.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertInsert( range, writer ) {\n\t\tthis.conversionApi.writer = writer;\n\n\t\t// Create a list of things that can be consumed, consisting of nodes and their attributes.\n\t\tthis.conversionApi.consumable = this._createInsertConsumable( range );\n\n\t\t// Fire a separate insert event for each node and text fragment contained in the range.\n\t\tfor ( const value of range ) {\n\t\t\tconst item = value.item;\n\t\t\tconst itemRange = Range._createFromPositionAndShift( value.previousPosition, value.length );\n\t\t\tconst data = {\n\t\t\t\titem,\n\t\t\t\trange: itemRange\n\t\t\t};\n\n\t\t\tthis._testAndFire( 'insert', data );\n\n\t\t\t// Fire a separate addAttribute event for each attribute that was set on inserted items.\n\t\t\t// This is important because most attributes converters will listen only to add/change/removeAttribute events.\n\t\t\t// If we would not add this part, attributes on inserted nodes would not be converted.\n\t\t\tfor ( const key of item.getAttributeKeys() ) {\n\t\t\t\tdata.attributeKey = key;\n\t\t\t\tdata.attributeOldValue = null;\n\t\t\t\tdata.attributeNewValue = item.getAttribute( key );\n\n\t\t\t\tthis._testAndFire( `attribute:${ key }`, data );\n\t\t\t}\n\t\t}\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Fires conversion of a single node removal. Fires {@link #event:remove remove event} with provided data.\n\t *\n\t * @param {module:engine/model/position~Position} position Position from which node was removed.\n\t * @param {Number} length Offset size of removed node.\n\t * @param {String} name Name of removed node.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertRemove( position, length, name, writer ) {\n\t\tthis.conversionApi.writer = writer;\n\n\t\tthis.fire( 'remove:' + name, { position, length }, this.conversionApi );\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Starts conversion of attribute change on given `range`.\n\t *\n\t * For each node in the given `range`, {@link #event:attribute attribute event} is fired with the passed data.\n\t *\n\t * @fires attribute\n\t * @param {module:engine/model/range~Range} range Changed range.\n\t * @param {String} key Key of the attribute that has changed.\n\t * @param {*} oldValue Attribute value before the change or `null` if the attribute has not been set before.\n\t * @param {*} newValue New attribute value or `null` if the attribute has been removed.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertAttribute( range, key, oldValue, newValue, writer ) {\n\t\tthis.conversionApi.writer = writer;\n\n\t\t// Create a list with attributes to consume.\n\t\tthis.conversionApi.consumable = this._createConsumableForRange( range, `attribute:${ key }` );\n\n\t\t// Create a separate attribute event for each node in the range.\n\t\tfor ( const value of range ) {\n\t\t\tconst item = value.item;\n\t\t\tconst itemRange = Range._createFromPositionAndShift( value.previousPosition, value.length );\n\t\t\tconst data = {\n\t\t\t\titem,\n\t\t\t\trange: itemRange,\n\t\t\t\tattributeKey: key,\n\t\t\t\tattributeOldValue: oldValue,\n\t\t\t\tattributeNewValue: newValue\n\t\t\t};\n\n\t\t\tthis._testAndFire( `attribute:${ key }`, data );\n\t\t}\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Starts model selection conversion.\n\t *\n\t * Fires events for given {@link module:engine/model/selection~Selection selection} to start selection conversion.\n\t *\n\t * @fires selection\n\t * @fires addMarker\n\t * @fires attribute\n\t * @param {module:engine/model/selection~Selection} selection Selection to convert.\n\t * @param {module:engine/model/markercollection~MarkerCollection} markers Markers connected with converted model.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertSelection( selection, markers, writer ) {\n\t\tconst markersAtSelection = Array.from( markers.getMarkersAtPosition( selection.getFirstPosition() ) );\n\n\t\tthis.conversionApi.writer = writer;\n\t\tthis.conversionApi.consumable = this._createSelectionConsumable( selection, markersAtSelection );\n\n\t\tthis.fire( 'selection', { selection }, this.conversionApi );\n\n\t\tif ( !selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const marker of markersAtSelection ) {\n\t\t\tconst markerRange = marker.getRange();\n\n\t\t\tif ( !shouldMarkerChangeBeConverted( selection.getFirstPosition(), marker, this.conversionApi.mapper ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst data = {\n\t\t\t\titem: selection,\n\t\t\t\tmarkerName: marker.name,\n\t\t\t\tmarkerRange\n\t\t\t};\n\n\t\t\tif ( this.conversionApi.consumable.test( selection, 'addMarker:' + marker.name ) ) {\n\t\t\t\tthis.fire( 'addMarker:' + marker.name, data, this.conversionApi );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const key of selection.getAttributeKeys() ) {\n\t\t\tconst data = {\n\t\t\t\titem: selection,\n\t\t\t\trange: selection.getFirstRange(),\n\t\t\t\tattributeKey: key,\n\t\t\t\tattributeOldValue: null,\n\t\t\t\tattributeNewValue: selection.getAttribute( key )\n\t\t\t};\n\n\t\t\t// Do not fire event if the attribute has been consumed.\n\t\t\tif ( this.conversionApi.consumable.test( selection, 'attribute:' + data.attributeKey ) ) {\n\t\t\t\tthis.fire( 'attribute:' + data.attributeKey + ':$text', data, this.conversionApi );\n\t\t\t}\n\t\t}\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Converts added marker. Fires {@link #event:addMarker addMarker} event for each item\n\t * in marker's range. If range is collapsed single event is dispatched. See event description for more details.\n\t *\n\t * @fires addMarker\n\t * @param {String} markerName Marker name.\n\t * @param {module:engine/model/range~Range} markerRange Marker range.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertMarkerAdd( markerName, markerRange, writer ) {\n\t\t// Do not convert if range is in graveyard or not in the document (e.g. in DocumentFragment).\n\t\tif ( !markerRange.root.document || markerRange.root.rootName == '$graveyard' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.conversionApi.writer = writer;\n\n\t\t// In markers' case, event name == consumable name.\n\t\tconst eventName = 'addMarker:' + markerName;\n\n\t\t//\n\t\t// First, fire an event for the whole marker.\n\t\t//\n\t\tconst consumable = new Consumable();\n\t\tconsumable.add( markerRange, eventName );\n\n\t\tthis.conversionApi.consumable = consumable;\n\n\t\tthis.fire( eventName, { markerName, markerRange }, this.conversionApi );\n\n\t\t//\n\t\t// Do not fire events for each item inside the range if the range got consumed.\n\t\t//\n\t\tif ( !consumable.test( markerRange, eventName ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t//\n\t\t// Then, fire an event for each item inside the marker range.\n\t\t//\n\t\tthis.conversionApi.consumable = this._createConsumableForRange( markerRange, eventName );\n\n\t\tfor ( const item of markerRange.getItems() ) {\n\t\t\t// Do not fire event for already consumed items.\n\t\t\tif ( !this.conversionApi.consumable.test( item, eventName ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst data = { item, range: Range._createOn( item ), markerName, markerRange };\n\n\t\t\tthis.fire( eventName, data, this.conversionApi );\n\t\t}\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Fires conversion of marker removal. Fires {@link #event:removeMarker removeMarker} event with provided data.\n\t *\n\t * @fires removeMarker\n\t * @param {String} markerName Marker name.\n\t * @param {module:engine/model/range~Range} markerRange Marker range.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertMarkerRemove( markerName, markerRange, writer ) {\n\t\t// Do not convert if range is in graveyard or not in the document (e.g. in DocumentFragment).\n\t\tif ( !markerRange.root.document || markerRange.root.rootName == '$graveyard' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.conversionApi.writer = writer;\n\n\t\tthis.fire( 'removeMarker:' + markerName, { markerName, markerRange }, this.conversionApi );\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values to consume from given range,\n\t * assuming that the range has just been inserted to the model.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range Inserted range.\n\t * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n\t */\n\t_createInsertConsumable( range ) {\n\t\tconst consumable = new Consumable();\n\n\t\tfor ( const value of range ) {\n\t\t\tconst item = value.item;\n\n\t\t\tconsumable.add( item, 'insert' );\n\n\t\t\tfor ( const key of item.getAttributeKeys() ) {\n\t\t\t\tconsumable.add( item, 'attribute:' + key );\n\t\t\t}\n\t\t}\n\n\t\treturn consumable;\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values to consume for given range.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range Affected range.\n\t * @param {String} type Consumable type.\n\t * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n\t */\n\t_createConsumableForRange( range, type ) {\n\t\tconst consumable = new Consumable();\n\n\t\tfor ( const item of range.getItems() ) {\n\t\t\tconsumable.add( item, type );\n\t\t}\n\n\t\treturn consumable;\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with selection consumable values.\n\t *\n\t * @private\n\t * @param {module:engine/model/selection~Selection} selection Selection to create consumable from.\n\t * @param {Iterable.<module:engine/model/markercollection~Marker>} markers Markers which contains selection.\n\t * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n\t */\n\t_createSelectionConsumable( selection, markers ) {\n\t\tconst consumable = new Consumable();\n\n\t\tconsumable.add( selection, 'selection' );\n\n\t\tfor ( const marker of markers ) {\n\t\t\tconsumable.add( selection, 'addMarker:' + marker.name );\n\t\t}\n\n\t\tfor ( const key of selection.getAttributeKeys() ) {\n\t\t\tconsumable.add( selection, 'attribute:' + key );\n\t\t}\n\n\t\treturn consumable;\n\t}\n\n\t/**\n\t * Tests passed `consumable` to check whether given event can be fired and if so, fires it.\n\t *\n\t * @private\n\t * @fires insert\n\t * @fires attribute\n\t * @param {String} type Event type.\n\t * @param {Object} data Event data.\n\t */\n\t_testAndFire( type, data ) {\n\t\tif ( !this.conversionApi.consumable.test( data.item, type ) ) {\n\t\t\t// Do not fire event if the item was consumed.\n\t\t\treturn;\n\t\t}\n\n\t\tconst name = data.item.name || '$text';\n\n\t\tthis.fire( type + ':' + name, data, this.conversionApi );\n\t}\n\n\t/**\n\t * Clears conversion API object.\n\t *\n\t * @private\n\t */\n\t_clearConversionApi() {\n\t\tdelete this.conversionApi.writer;\n\t\tdelete this.conversionApi.consumable;\n\t}\n\n\t/**\n\t * Fired for inserted nodes.\n\t *\n\t * `insert` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `insert:name`. `name` is either `'$text'`, when {@link module:engine/model/text~Text a text node} has been inserted,\n\t * or {@link module:engine/model/element~Element#name name} of inserted element.\n\t *\n\t * This way listeners can either listen to a general `insert` event or specific event (for example `insert:paragraph`).\n\t *\n\t * @event insert\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/item~Item} data.item Inserted item.\n\t * @param {module:engine/model/range~Range} data.range Range spanning over inserted item.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired for removed nodes.\n\t *\n\t * `remove` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `remove:name`. `name` is either `'$text'`, when {@link module:engine/model/text~Text a text node} has been removed,\n\t * or the {@link module:engine/model/element~Element#name name} of removed element.\n\t *\n\t * This way listeners can either listen to a general `remove` event or specific event (for example `remove:paragraph`).\n\t *\n\t * @event remove\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/position~Position} data.position Position from which the node has been removed.\n\t * @param {Number} data.length Offset size of the removed node.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired in the following cases:\n\t *\n\t * * when an attribute has been added, changed, or removed from a node,\n\t * * when a node with an attribute is inserted,\n\t * * when collapsed model selection attribute is converted.\n\t *\n\t * `attribute` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `attribute:attributeKey:name`. `attributeKey` is the key of added/changed/removed attribute.\n\t * `name` is either `'$text'` if change was on {@link module:engine/model/text~Text a text node},\n\t * or the {@link module:engine/model/element~Element#name name} of element which attribute has changed.\n\t *\n\t * This way listeners can either listen to a general `attribute:bold` event or specific event (for example `attribute:src:image`).\n\t *\n\t * @event attribute\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/item~Item|module:engine/model/documentselection~DocumentSelection} data.item Changed item\n\t * or converted selection.\n\t * @param {module:engine/model/range~Range} data.range Range spanning over changed item or selection range.\n\t * @param {String} data.attributeKey Attribute key.\n\t * @param {*} data.attributeOldValue Attribute value before the change. This is `null` when selection attribute is converted.\n\t * @param {*} data.attributeNewValue New attribute value.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired for {@link module:engine/model/selection~Selection selection} changes.\n\t *\n\t * @event selection\n\t * @param {module:engine/model/selection~Selection} selection Selection that is converted.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired when a new marker is added to the model. Also fired when collapsed model selection that is inside marker is converted.\n\t *\n\t * `addMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `addMarker:markerName`. By specifying certain marker names, you can make the events even more gradual. For example,\n\t * if markers are named `foo:abc`, `foo:bar`, then it is possible to listen to `addMarker:foo` or `addMarker:foo:abc` and\n\t * `addMarker:foo:bar` events.\n\t *\n\t * If the marker range is not collapsed:\n\t *\n\t * * the event is fired for each item in the marker range one by one,\n\t * * `conversionApi.consumable` includes each item of the marker range and the consumable value is same as event name.\n\t *\n\t * If the marker range is collapsed:\n\t *\n\t * * there is only one event,\n\t * * `conversionApi.consumable` includes marker range with event name.\n\t *\n\t * If selection inside a marker is converted:\n\t *\n\t * * there is only one event,\n\t * * `conversionApi.consumable` includes selection instance with event name.\n\t *\n\t * @event addMarker\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection} data.item Item inside the new marker or\n\t * the selection that is being converted.\n\t * @param {module:engine/model/range~Range} [data.range] Range spanning over converted item. Available only in marker conversion, if\n\t * the marker range was not collapsed.\n\t * @param {module:engine/model/range~Range} data.markerRange Marker range.\n\t * @param {String} data.markerName Marker name.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired when marker is removed from the model.\n\t *\n\t * `removeMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `removeMarker:markerName`. By specifying certain marker names, you can make the events even more gradual. For example,\n\t * if markers are named `foo:abc`, `foo:bar`, then it is possible to listen to `removeMarker:foo` or `removeMarker:foo:abc` and\n\t * `removeMarker:foo:bar` events.\n\t *\n\t * @event removeMarker\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/range~Range} data.markerRange Marker range.\n\t * @param {String} data.markerName Marker name.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n}\n\nmix( DowncastDispatcher, EmitterMixin );\n\n// Helper function, checks whether change of `marker` at `modelPosition` should be converted. Marker changes are not\n// converted if they happen inside an element with custom conversion method.\n//\n// @param {module:engine/model/position~Position} modelPosition\n// @param {module:engine/model/markercollection~Marker} marker\n// @param {module:engine/conversion/mapper~Mapper} mapper\n// @returns {Boolean}\nfunction shouldMarkerChangeBeConverted( modelPosition, marker, mapper ) {\n\tconst range = marker.getRange();\n\tconst ancestors = Array.from( modelPosition.getAncestors() );\n\tancestors.shift(); // Remove root element. It cannot be passed to `model.Range#containsItem`.\n\tancestors.reverse();\n\n\tconst hasCustomHandling = ancestors.some( element => {\n\t\tif ( range.containsItem( element ) ) {\n\t\t\tconst viewElement = mapper.toViewElement( element );\n\n\t\t\treturn !!viewElement.getCustomProperty( 'addHighlight' );\n\t\t}\n\t} );\n\n\treturn !hasCustomHandling;\n}\n\n/**\n * Conversion interface that is registered for given {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n * and is passed as one of parameters when {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher dispatcher}\n * fires it's events.\n *\n * @interface module:engine/conversion/downcastdispatcher~DowncastConversionApi\n */\n\n/**\n * The {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} instance.\n *\n * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher} #dispatcher\n */\n\n/**\n * Stores information about what parts of processed model item are still waiting to be handled. After a piece of model item\n * was converted, appropriate consumable value should be {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed}.\n *\n * @member {module:engine/conversion/modelconsumable~ModelConsumable} #consumable\n */\n\n/**\n * The {@link module:engine/conversion/mapper~Mapper} instance.\n *\n * @member {module:engine/conversion/mapper~Mapper} #mapper\n */\n\n/**\n * The {@link module:engine/view/downcastwriter~DowncastWriter} instance used to manipulate data during conversion.\n *\n * @member {module:engine/view/downcastwriter~DowncastWriter} #writer\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/selection\n */\n\nimport Position from './position';\nimport Node from './node';\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\n/**\n * Selection is a set of {@link module:engine/model/range~Range ranges}. It has a direction specified by its\n * {@link module:engine/model/selection~Selection#anchor anchor} and {@link module:engine/model/selection~Selection#focus focus}\n * (it can be {@link module:engine/model/selection~Selection#isBackward forward or backward}).\n * Additionally, selection may have its own attributes (think – whether text typed in in this selection\n * should have those attributes – e.g. whether you type a bolded text).\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class Selection {\n\t/**\n\t * Creates a new selection instance based on the given {@link module:engine/model/selection~Selectable selectable}\n\t * or creates an empty selection if no arguments were passed.\n\t *\n\t *\t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the given document selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst documentSelection = model.document.selection;\n\t *\t\tconst selection = writer.createSelection( documentSelection );\n\t *\n\t *\t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates selection at the given offset in the given element.\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/model/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t * Selection's constructor allow passing additional options (`'backward'`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t */\n\tconstructor( selectable, placeOrOffset, options ) {\n\t\t/**\n\t\t * Specifies whether the last added range was added as a backward or forward range.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._lastRangeBackward = false;\n\n\t\t/**\n\t\t * Stores selection ranges.\n\t\t *\n\t\t * @protected\n\t\t * @type {Array.<module:engine/model/range~Range>}\n\t\t */\n\t\tthis._ranges = [];\n\n\t\t/**\n\t\t * List of attributes set on current selection.\n\t\t *\n\t\t * @protected\n\t\t * @type {Map.<String,*>}\n\t\t */\n\t\tthis._attrs = new Map();\n\n\t\tif ( selectable ) {\n\t\t\tthis.setTo( selectable, placeOrOffset, options );\n\t\t}\n\t}\n\n\t/**\n\t * Selection anchor. Anchor is the position from which the selection was started. If a user is making a selection\n\t * by dragging the mouse, the anchor is where the user pressed the mouse button (the beginning of the selection).\n\t *\n\t * Anchor and {@link #focus} define the direction of the selection, which is important\n\t * when expanding/shrinking selection. The focus moves, while the anchor should remain in the same place.\n\t *\n\t * Anchor is always set to the {@link module:engine/model/range~Range#start start} or\n\t * {@link module:engine/model/range~Range#end end} position of the last of selection's ranges. Whether it is\n\t * the `start` or `end` depends on the specified `options.backward`. See the {@link #setTo `setTo()`} method.\n\t *\n\t * May be set to `null` if there are no ranges in the selection.\n\t *\n\t * @see #focus\n\t * @readonly\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget anchor() {\n\t\tif ( this._ranges.length > 0 ) {\n\t\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\n\t\t\treturn this._lastRangeBackward ? range.end : range.start;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Selection focus. Focus is the position where the selection ends. If a user is making a selection\n\t * by dragging the mouse, the focus is where the mouse cursor is.\n\t *\n\t * May be set to `null` if there are no ranges in the selection.\n\t *\n\t * @see #anchor\n\t * @readonly\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget focus() {\n\t\tif ( this._ranges.length > 0 ) {\n\t\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\n\t\t\treturn this._lastRangeBackward ? range.start : range.end;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Whether the selection is collapsed. Selection is collapsed when there is exactly one range in it\n\t * and it is collapsed.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\tconst length = this._ranges.length;\n\n\t\tif ( length === 1 ) {\n\t\t\treturn this._ranges[ 0 ].isCollapsed;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the number of ranges in the selection.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget rangeCount() {\n\t\treturn this._ranges.length;\n\t}\n\n\t/**\n\t * Specifies whether the selection's {@link #focus} precedes the selection's {@link #anchor}.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isBackward() {\n\t\treturn !this.isCollapsed && this._lastRangeBackward;\n\t}\n\n\t/**\n\t * Checks whether this selection is equal to the given selection. Selections are equal if they have the same directions,\n\t * the same number of ranges and all ranges from one selection equal to ranges from the another selection.\n\t *\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n\t */\n\tisEqual( otherSelection ) {\n\t\tif ( this.rangeCount != otherSelection.rangeCount ) {\n\t\t\treturn false;\n\t\t} else if ( this.rangeCount === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( !this.anchor.isEqual( otherSelection.anchor ) || !this.focus.isEqual( otherSelection.focus ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor ( const thisRange of this._ranges ) {\n\t\t\tlet found = false;\n\n\t\t\tfor ( const otherRange of otherSelection._ranges ) {\n\t\t\t\tif ( thisRange.isEqual( otherRange ) ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !found ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns an iterable object that iterates over copies of selection ranges.\n\t *\n\t * @returns {Iterable.<module:engine/model/range~Range>}\n\t */\n\t* getRanges() {\n\t\tfor ( const range of this._ranges ) {\n\t\t\tyield new Range( range.start, range.end );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a copy of the first range in the selection.\n\t * First range is the one which {@link module:engine/model/range~Range#start start} position\n\t * {@link module:engine/model/position~Position#isBefore is before} start position of all other ranges\n\t * (not to confuse with the first range added to the selection).\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetFirstRange() {\n\t\tlet first = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !first || range.start.isBefore( first.start ) ) {\n\t\t\t\tfirst = range;\n\t\t\t}\n\t\t}\n\n\t\treturn first ? new Range( first.start, first.end ) : null;\n\t}\n\n\t/**\n\t * Returns a copy of the last range in the selection.\n\t * Last range is the one which {@link module:engine/model/range~Range#end end} position\n\t * {@link module:engine/model/position~Position#isAfter is after} end position of all other ranges (not to confuse with the range most\n\t * recently added to the selection).\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetLastRange() {\n\t\tlet last = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !last || range.end.isAfter( last.end ) ) {\n\t\t\t\tlast = range;\n\t\t\t}\n\t\t}\n\n\t\treturn last ? new Range( last.start, last.end ) : null;\n\t}\n\n\t/**\n\t * Returns the first position in the selection.\n\t * First position is the position that {@link module:engine/model/position~Position#isBefore is before}\n\t * any other position in the selection.\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/position~Position|null}\n\t */\n\tgetFirstPosition() {\n\t\tconst first = this.getFirstRange();\n\n\t\treturn first ? first.start.clone() : null;\n\t}\n\n\t/**\n\t * Returns the last position in the selection.\n\t * Last position is the position that {@link module:engine/model/position~Position#isAfter is after}\n\t * any other position in the selection.\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/position~Position|null}\n\t */\n\tgetLastPosition() {\n\t\tconst lastRange = this.getLastRange();\n\n\t\treturn lastRange ? lastRange.end.clone() : null;\n\t}\n\n\t/**\n\t * Sets this selection's ranges and direction to the specified location based on the given\n\t * {@link module:engine/model/selection~Selectable selectable}.\n\t *\n\t *\t\t// Removes all selection's ranges.\n\t *\t\tselection.setTo( null );\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tselection.setTo( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tselection.setTo( ranges );\n\t *\n\t *\t\t// Sets selection to other selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tselection.setTo( otherSelection );\n\t *\n\t *\t\t// Sets selection to the given document selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst documentSelection = new DocumentSelection( doc );\n\t *\t\tselection.setTo( documentSelection );\n\t *\n\t *\t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tselection.setTo( position );\n\t *\n\t *\t\t// Sets collapsed selection at the position of the given node and an offset.\n\t *\t\tselection.setTo( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n \t * that element and ends after the last child of that element.\n\t *\n\t *\t\tselection.setTo( paragraph, 'in' );\n\t *\n\t * Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\tselection.setTo( paragraph, 'on' );\n\t *\n\t * `Selection#setTo()`' method allow passing additional options (`backward`) as the last argument.\n\t *\n\t *\t\t// Sets backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t */\n\tsetTo( selectable, placeOrOffset, options ) {\n\t\tif ( selectable === null ) {\n\t\t\tthis._setRanges( [] );\n\t\t} else if ( selectable instanceof Selection ) {\n\t\t\tthis._setRanges( selectable.getRanges(), selectable.isBackward );\n\t\t} else if ( selectable && typeof selectable.getRanges == 'function' ) {\n\t\t\t// We assume that the selectable is a DocumentSelection.\n\t\t\t// It can't be imported here, because it would lead to circular imports.\n\t\t\tthis._setRanges( selectable.getRanges(), selectable.isBackward );\n\t\t} else if ( selectable instanceof Range ) {\n\t\t\tthis._setRanges( [ selectable ], !!placeOrOffset && !!placeOrOffset.backward );\n\t\t} else if ( selectable instanceof Position ) {\n\t\t\tthis._setRanges( [ new Range( selectable ) ] );\n\t\t} else if ( selectable instanceof Node ) {\n\t\t\tconst backward = !!options && !!options.backward;\n\t\t\tlet range;\n\n\t\t\tif ( placeOrOffset == 'in' ) {\n\t\t\t\trange = Range._createIn( selectable );\n\t\t\t} else if ( placeOrOffset == 'on' ) {\n\t\t\t\trange = Range._createOn( selectable );\n\t\t\t} else if ( placeOrOffset !== undefined ) {\n\t\t\t\trange = new Range( Position._createAt( selectable, placeOrOffset ) );\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * selection.setTo requires the second parameter when the first parameter is a node.\n\t\t\t\t *\n\t\t\t\t * @error model-selection-setTo-required-second-parameter\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-selection-setTo-required-second-parameter: ' +\n\t\t\t\t\t'selection.setTo requires the second parameter when the first parameter is a node.',\n\t\t\t\t\t[ this, selectable ]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis._setRanges( [ range ], backward );\n\t\t} else if ( isIterable( selectable ) ) {\n\t\t\t// We assume that the selectable is an iterable of ranges.\n\t\t\tthis._setRanges( selectable, placeOrOffset && !!placeOrOffset.backward );\n\t\t} else {\n\t\t\t/**\n\t\t\t * Cannot set the selection to the given place.\n\t\t\t *\n\t\t\t * Invalid parameters were specified when setting the selection. Common issues:\n\t\t\t *\n\t\t\t * * A {@link module:engine/model/textproxy~TextProxy} instance was passed instead of\n\t\t\t * a real {@link module:engine/model/text~Text}.\n\t\t\t * * View nodes were passed instead of model nodes.\n\t\t\t * * `null`/`undefined` was passed.\n\t\t\t *\n\t\t\t * @error model-selection-setTo-not-selectable\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-selection-setTo-not-selectable: Cannot set the selection to the given place.',\n\t\t\t\t[ this, selectable ]\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n\t * is treated like the last added range and is used to set {@link module:engine/model/selection~Selection#anchor} and\n\t * {@link module:engine/model/selection~Selection#focus}. Accepts a flag describing in which direction the selection is made.\n\t *\n\t * @protected\n\t * @fires change:range\n\t * @param {Iterable.<module:engine/model/range~Range>} newRanges Ranges to set.\n\t * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end (`false`)\n\t * or backward - from end to start (`true`).\n\t */\n\t_setRanges( newRanges, isLastBackward = false ) {\n\t\tnewRanges = Array.from( newRanges );\n\n\t\t// Check whether there is any range in new ranges set that is different than all already added ranges.\n\t\tconst anyNewRange = newRanges.some( newRange => {\n\t\t\tif ( !( newRange instanceof Range ) ) {\n\t\t\t\t/**\n\t\t\t\t * Selection range set to an object that is not an instance of {@link module:engine/model/range~Range}.\n\t\t\t\t *\n\t\t\t\t * Only {@link module:engine/model/range~Range} instances can be used to set a selection.\n\t\t\t\t * Common mistakes leading to this error are:\n\t\t\t\t *\n\t\t\t\t * * using DOM `Range` object,\n\t\t\t\t * * incorrect CKEditor 5 installation with multiple `ckeditor5-engine` packages having different versions.\n\t\t\t\t *\n\t\t\t\t * @error model-selection-set-ranges-not-range\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-selection-set-ranges-not-range: ' +\n\t\t\t\t\t'Selection range set to an object that is not an instance of model.Range.',\n\t\t\t\t\t[ this, newRanges ]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn this._ranges.every( oldRange => {\n\t\t\t\treturn !oldRange.isEqual( newRange );\n\t\t\t} );\n\t\t} );\n\n\t\t// Don't do anything if nothing changed.\n\t\tif ( newRanges.length === this._ranges.length && !anyNewRange ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._removeAllRanges();\n\n\t\tfor ( const range of newRanges ) {\n\t\t\tthis._pushRange( range );\n\t\t}\n\n\t\tthis._lastRangeBackward = !!isLastBackward;\n\n\t\tthis.fire( 'change:range', { directChange: true } );\n\t}\n\n\t/**\n\t * Moves {@link module:engine/model/selection~Selection#focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as\n\t * {@link module:engine/model/writer~Writer#createPositionAt writer.createPositionAt()} parameters.\n\t *\n\t * @fires change:range\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tsetFocus( itemOrPosition, offset ) {\n\t\tif ( this.anchor === null ) {\n\t\t\t/**\n\t\t\t * Cannot set selection focus if there are no ranges in selection.\n\t\t\t *\n\t\t\t * @error model-selection-setFocus-no-ranges\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-selection-setFocus-no-ranges: Cannot set selection focus if there are no ranges in selection.',\n\t\t\t\t[ this, itemOrPosition ]\n\t\t\t);\n\t\t}\n\n\t\tconst newFocus = Position._createAt( itemOrPosition, offset );\n\n\t\tif ( newFocus.compareWith( this.focus ) == 'same' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst anchor = this.anchor;\n\n\t\tif ( this._ranges.length ) {\n\t\t\tthis._popRange();\n\t\t}\n\n\t\tif ( newFocus.compareWith( anchor ) == 'before' ) {\n\t\t\tthis._pushRange( new Range( newFocus, anchor ) );\n\t\t\tthis._lastRangeBackward = true;\n\t\t} else {\n\t\t\tthis._pushRange( new Range( anchor, newFocus ) );\n\t\t\tthis._lastRangeBackward = false;\n\t\t}\n\n\t\tthis.fire( 'change:range', { directChange: true } );\n\t}\n\n\t/**\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on the selection.\n\t *\n\t * @param {String} key Key of attribute to look for.\n\t * @returns {*} Attribute value or `undefined`.\n\t */\n\tgetAttribute( key ) {\n\t\treturn this._attrs.get( key );\n\t}\n\n\t/**\n\t * Returns iterable that iterates over this selection's attributes.\n\t *\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tgetAttributes() {\n\t\treturn this._attrs.entries();\n\t}\n\n\t/**\n\t * Returns iterable that iterates over this selection's attribute keys.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetAttributeKeys() {\n\t\treturn this._attrs.keys();\n\t}\n\n\t/**\n\t * Checks if the selection has an attribute for given key.\n\t *\n\t * @param {String} key Key of attribute to check.\n\t * @returns {Boolean} `true` if attribute with given key is set on selection, `false` otherwise.\n\t */\n\thasAttribute( key ) {\n\t\treturn this._attrs.has( key );\n\t}\n\n\t/**\n\t * Removes an attribute with given key from the selection.\n\t *\n\t * If given attribute was set on the selection, fires the {@link #event:change:range} event with\n\t * removed attribute key.\n\t *\n\t * @fires change:attribute\n\t * @param {String} key Key of attribute to remove.\n\t */\n\tremoveAttribute( key ) {\n\t\tif ( this.hasAttribute( key ) ) {\n\t\t\tthis._attrs.delete( key );\n\n\t\t\tthis.fire( 'change:attribute', { attributeKeys: [ key ], directChange: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Sets attribute on the selection. If attribute with the same key already is set, it's value is overwritten.\n\t *\n\t * If the attribute value has changed, fires the {@link #event:change:range} event with\n\t * the attribute key.\n\t *\n\t * @fires change:attribute\n\t * @param {String} key Key of attribute to set.\n\t * @param {*} value Attribute value.\n\t */\n\tsetAttribute( key, value ) {\n\t\tif ( this.getAttribute( key ) !== value ) {\n\t\t\tthis._attrs.set( key, value );\n\n\t\t\tthis.fire( 'change:attribute', { attributeKeys: [ key ], directChange: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the selected element. {@link module:engine/model/element~Element Element} is considered as selected if there is only\n\t * one range in the selection, and that range contains exactly one element.\n\t * Returns `null` if there is no selected element.\n\t *\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\tgetSelectedElement() {\n\t\tif ( this.rangeCount !== 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.getFirstRange().getContainedElement();\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tselection.is( 'selection' ); // -> true\n\t *\t\tselection.is( 'model:selection' ); // -> true\n\t *\n\t *\t\tselection.is( 'view:selection' ); // -> false\n\t *\t\tselection.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'selection' || type === 'model:selection';\n\t}\n\n\t/**\n\t * Gets elements of type {@link module:engine/model/schema~Schema#isBlock \"block\"} touched by the selection.\n\t *\n\t * This method's result can be used for example to apply block styling to all blocks covered by this selection.\n\t *\n\t * **Note:** `getSelectedBlocks()` returns blocks that are nested in other non-block elements\n\t * but will not return blocks nested in other blocks.\n\t *\n\t * In this case the function will return exactly all 3 paragraphs (note: `<blockQuote>` is not a block itself):\n\t *\n\t *\t\t<paragraph>[a</paragraph>\n\t *\t\t<blockQuote>\n\t *\t\t\t<paragraph>b</paragraph>\n\t *\t\t</blockQuote>\n\t *\t\t<paragraph>c]d</paragraph>\n\t *\n\t * In this case the paragraph will also be returned, despite the collapsed selection:\n\t *\n\t *\t\t<paragraph>[]a</paragraph>\n\t *\n\t * In such a scenario, however, only blocks A, B & E will be returned as blocks C & D are nested in block B:\n\t *\n\t *\t\t[<blockA></blockA>\n\t *\t\t<blockB>\n\t *\t\t\t<blockC></blockC>\n\t *\t\t\t<blockD></blockD>\n\t *\t\t</blockB>\n\t *\t\t<blockE></blockE>]\n\t *\n\t * If the selection is inside a block all the inner blocks (A & B) are returned:\n\t *\n\t * \t\t<block>\n\t *\t\t\t<blockA>[a</blockA>\n\t * \t\t\t<blockB>b]</blockB>\n\t * \t\t</block>\n\t *\n\t * **Special case**: If a selection ends at the beginning of a block, that block is not returned as from user perspective\n\t * this block wasn't selected. See [#984](https://github.com/ckeditor/ckeditor5-engine/issues/984) for more details.\n\t *\n\t *\t\t<paragraph>[a</paragraph>\n\t *\t\t<paragraph>b</paragraph>\n\t *\t\t<paragraph>]c</paragraph> // this block will not be returned\n\t *\n\t * @returns {Iterable.<module:engine/model/element~Element>}\n\t */\n\t* getSelectedBlocks() {\n\t\tconst visited = new WeakSet();\n\n\t\tfor ( const range of this.getRanges() ) {\n\t\t\t// Get start block of range in case of a collapsed range.\n\t\t\tconst startBlock = getParentBlock( range.start, visited );\n\n\t\t\tif ( startBlock && isTopBlockInRange( startBlock, range ) ) {\n\t\t\t\tyield startBlock;\n\t\t\t}\n\n\t\t\tfor ( const value of range.getWalker() ) {\n\t\t\t\tconst block = value.item;\n\n\t\t\t\tif ( value.type == 'elementEnd' && isUnvisitedTopBlock( block, visited, range ) ) {\n\t\t\t\t\tyield block;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst endBlock = getParentBlock( range.end, visited );\n\n\t\t\t// #984. Don't return the end block if the range ends right at its beginning.\n\t\t\tif ( endBlock && !range.end.isTouching( Position._createAt( endBlock, 0 ) ) && isTopBlockInRange( endBlock, range ) ) {\n\t\t\t\tyield endBlock;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether the selection contains the entire content of the given element. This means that selection must start\n\t * at a position {@link module:engine/model/position~Position#isTouching touching} the element's start and ends at position\n\t * touching the element's end.\n\t *\n\t * By default, this method will check whether the entire content of the selection's current root is selected.\n\t * Useful to check if e.g. the user has just pressed <kbd>Ctrl</kbd> + <kbd>A</kbd>.\n\t *\n\t * @param {module:engine/model/element~Element} [element=this.anchor.root]\n\t * @returns {Boolean}\n\t */\n\tcontainsEntireContent( element = this.anchor.root ) {\n\t\tconst limitStartPosition = Position._createAt( element, 0 );\n\t\tconst limitEndPosition = Position._createAt( element, 'end' );\n\n\t\treturn limitStartPosition.isTouching( this.getFirstPosition() ) &&\n\t\t\tlimitEndPosition.isTouching( this.getLastPosition() );\n\t}\n\n\t/**\n\t * Adds given range to internal {@link #_ranges ranges array}. Throws an error\n\t * if given range is intersecting with any range that is already stored in this selection.\n\t *\n\t * @protected\n\t * @param {module:engine/model/range~Range} range Range to add.\n\t */\n\t_pushRange( range ) {\n\t\tthis._checkRange( range );\n\t\tthis._ranges.push( new Range( range.start, range.end ) );\n\t}\n\n\t/**\n\t * Checks if given range intersects with ranges that are already in the selection. Throws an error if it does.\n\t *\n\t * @protected\n\t * @param {module:engine/model/range~Range} range Range to check.\n\t */\n\t_checkRange( range ) {\n\t\tfor ( let i = 0; i < this._ranges.length; i++ ) {\n\t\t\tif ( range.isIntersecting( this._ranges[ i ] ) ) {\n\t\t\t\t/**\n\t\t\t\t * Trying to add a range that intersects with another range in the selection.\n\t\t\t\t *\n\t\t\t\t * @error model-selection-range-intersects\n\t\t\t\t * @param {module:engine/model/range~Range} addedRange Range that was added to the selection.\n\t\t\t\t * @param {module:engine/model/range~Range} intersectingRange Range in the selection that intersects with `addedRange`.\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-selection-range-intersects: Trying to add a range that intersects with another range in the selection.',\n\t\t\t\t\t[ this, range ],\n\t\t\t\t\t{ addedRange: range, intersectingRange: this._ranges[ i ] }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Deletes ranges from internal range array. Uses {@link #_popRange _popRange} to\n\t * ensure proper ranges removal.\n\t *\n\t * @protected\n\t */\n\t_removeAllRanges() {\n\t\twhile ( this._ranges.length > 0 ) {\n\t\t\tthis._popRange();\n\t\t}\n\t}\n\n\t/**\n\t * Removes most recently added range from the selection.\n\t *\n\t * @protected\n\t */\n\t_popRange() {\n\t\tthis._ranges.pop();\n\t}\n\n\t/**\n\t * Fired when selection range(s) changed.\n\t *\n\t * @event change:range\n\t * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n\t * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n\t * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its position\n\t * was directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n\t * changed because the structure of the model has been changed (which means an indirect change).\n\t * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n\t * which mean that they are not updated once the document changes.\n\t */\n\n\t/**\n\t * Fired when selection attribute changed.\n\t *\n\t * @event change:attribute\n\t * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n\t * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n\t * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its attributes\n\t * were directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n\t * changed in the model and its attributes were refreshed (which means an indirect change).\n\t * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n\t * which mean that they are not updated once the document changes.\n\t * @param {Array.<String>} attributeKeys Array containing keys of attributes that changed.\n\t */\n}\n\nmix( Selection, EmitterMixin );\n\n// Checks whether the given element extends $block in the schema and has a parent (is not a root).\n// Marks it as already visited.\nfunction isUnvisitedBlock( element, visited ) {\n\tif ( visited.has( element ) ) {\n\t\treturn false;\n\t}\n\n\tvisited.add( element );\n\n\treturn element.root.document.model.schema.isBlock( element ) && element.parent;\n}\n\n// Checks if the given element is a $block was not previously visited and is a top block in a range.\nfunction isUnvisitedTopBlock( element, visited, range ) {\n\treturn isUnvisitedBlock( element, visited ) && isTopBlockInRange( element, range );\n}\n\n// Finds the lowest element in position's ancestors which is a block.\n// It will search until first ancestor that is a limit element.\n// Marks all ancestors as already visited to not include any of them later on.\nfunction getParentBlock( position, visited ) {\n\tconst element = position.parent;\n\tconst schema = element.root.document.model.schema;\n\n\tconst ancestors = position.parent.getAncestors( { parentFirst: true, includeSelf: true } );\n\n\tlet hasParentLimit = false;\n\n\tconst block = ancestors.find( element => {\n\t\t// Stop searching after first parent node that is limit element.\n\t\tif ( hasParentLimit ) {\n\t\t\treturn false;\n\t\t}\n\n\t\thasParentLimit = schema.isLimit( element );\n\n\t\treturn !hasParentLimit && isUnvisitedBlock( element, visited );\n\t} );\n\n\t// Mark all ancestors of this position's parent, because find() might've stopped early and\n\t// the found block may be a child of another block.\n\tancestors.forEach( element => visited.add( element ) );\n\n\treturn block;\n}\n\n// Checks if the blocks is not nested in other block inside a range.\n//\n// @param {module:engine/model/element~Element} block Block to check.\n// @param {module:engine/model/range~Range} range Range to check.\nfunction isTopBlockInRange( block, range ) {\n\tconst parentBlock = findAncestorBlock( block );\n\n\tif ( !parentBlock ) {\n\t\treturn true;\n\t}\n\n\t// Add loose flag to check as parentRange can be equal to range.\n\tconst isParentInRange = range.containsRange( Range._createOn( parentBlock ), true );\n\n\treturn !isParentInRange;\n}\n\n// Returns first ancestor block of a node.\n//\n// @param {module:engine/model/node~Node} node\n// @returns {module:engine/model/node~Node|undefined}\nfunction findAncestorBlock( node ) {\n\tconst schema = node.root.document.model.schema;\n\n\tlet parent = node.parent;\n\n\twhile ( parent ) {\n\t\tif ( schema.isBlock( parent ) ) {\n\t\t\treturn parent;\n\t\t}\n\n\t\tparent = parent.parent;\n\t}\n}\n\n/**\n * An entity that is used to set selection.\n *\n * See also {@link module:engine/model/selection~Selection#setTo}\n *\n * @typedef {\n *     module:engine/model/selection~Selection|\n *     module:engine/model/documentselection~DocumentSelection|\n *     module:engine/model/position~Position|\n *     module:engine/model/range~Range|\n *     module:engine/model/node~Node|\n *     Iterable.<module:engine/model/range~Range>|\n *     null\n * } module:engine/model/selection~Selectable\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/liverange\n */\n\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * `LiveRange` is a type of {@link module:engine/model/range~Range Range}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Be very careful when dealing with `LiveRange`. Each `LiveRange` instance bind events that might\n * have to be unbound. Use {@link module:engine/model/liverange~LiveRange#detach detach} whenever you don't need `LiveRange` anymore.\n */\nexport default class LiveRange extends Range {\n\t/**\n\t * Creates a live range.\n\t *\n\t * @see module:engine/model/range~Range\n\t */\n\tconstructor( start, end ) {\n\t\tsuper( start, end );\n\n\t\tbindWithDocument.call( this );\n\t}\n\n\t/**\n\t * Unbinds all events previously bound by `LiveRange`. Use it whenever you don't need `LiveRange` instance\n\t * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n\t * referring to it).\n\t */\n\tdetach() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tliveRange.is( 'range' ); // -> true\n\t *\t\tliveRange.is( 'model:range' ); // -> true\n\t *\t\tliveRange.is( 'liveRange' ); // -> true\n\t *\t\tliveRange.is( 'model:liveRange' ); // -> true\n\t *\n\t *\t\tliveRange.is( 'view:range' ); // -> false\n\t *\t\tliveRange.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'liveRange' || type === 'model:liveRange' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype == 'range' || type === 'model:range';\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/model/range~Range range instance} that is equal to this live range.\n\t *\n\t * @returns {module:engine/model/range~Range}\n\t */\n\ttoRange() {\n\t\treturn new Range( this.start, this.end );\n\t}\n\n\t/**\n\t * Creates a `LiveRange` instance that is equal to the given range.\n\t *\n\t * @param {module:engine/model/range~Range} range\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\tstatic fromRange( range ) {\n\t\treturn new LiveRange( range.start, range.end );\n\t}\n\n\t/**\n\t * @see module:engine/model/range~Range._createIn\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liverange~LiveRange._createIn\n\t * @param {module:engine/model/element~Element} element\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * @see module:engine/model/range~Range._createOn\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liverange~LiveRange._createOn\n\t * @param {module:engine/model/element~Element} element\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * @see module:engine/model/range~Range._createFromPositionAndShift\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liverange~LiveRange._createFromPositionAndShift\n\t * @param {module:engine/model/position~Position} position\n\t * @param {Number} shift\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * Fired when `LiveRange` instance boundaries have changed due to changes in the\n\t * {@link module:engine/model/document~Document document}.\n\t *\n\t * @event change:range\n\t * @param {module:engine/model/range~Range} oldRange Range with start and end position equal to start and end position of this live\n\t * range before it got changed.\n\t * @param {Object} data Object with additional information about the change.\n\t * @param {module:engine/model/position~Position|null} data.deletionPosition Source position for remove and merge changes.\n\t * Available if the range was moved to the graveyard root, `null` otherwise.\n\t */\n\n\t/**\n\t * Fired when `LiveRange` instance boundaries have not changed after a change in {@link module:engine/model/document~Document document}\n\t * but the change took place inside the range, effectively changing its content.\n\t *\n\t * @event change:content\n\t * @param {module:engine/model/range~Range} range Range with start and end position equal to start and end position of\n\t * change range.\n\t * @param {Object} data Object with additional information about the change.\n\t * @param {null} data.deletionPosition Due to the nature of this event, this property is always set to `null`. It is passed\n\t * for compatibility with the {@link module:engine/model/liverange~LiveRange#event:change:range} event.\n\t */\n}\n\n// Binds this `LiveRange` to the {@link module:engine/model/document~Document document}\n// that owns this range's {@link module:engine/model/range~Range#root root}.\n//\n// @private\nfunction bindWithDocument() {\n\tthis.listenTo(\n\t\tthis.root.document.model,\n\t\t'applyOperation',\n\t\t( event, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( !operation.isDocumentOperation ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttransform.call( this, operation );\n\t\t},\n\t\t{ priority: 'low' }\n\t);\n}\n\n// Updates this range accordingly to the updates applied to the model. Bases on change events.\n//\n// @private\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\nfunction transform( operation ) {\n\t// Transform the range by the operation. Join the result ranges if needed.\n\tconst ranges = this.getTransformedByOperation( operation );\n\tconst result = Range._createFromRanges( ranges );\n\n\tconst boundariesChanged = !result.isEqual( this );\n\tconst contentChanged = doesOperationChangeRangeContent( this, operation );\n\n\tlet deletionPosition = null;\n\n\tif ( boundariesChanged ) {\n\t\t// If range boundaries have changed, fire `change:range` event.\n\t\t//\n\t\tif ( result.root.rootName == '$graveyard' ) {\n\t\t\t// If the range was moved to the graveyard root, set `deletionPosition`.\n\t\t\tif ( operation.type == 'remove' ) {\n\t\t\t\tdeletionPosition = operation.sourcePosition;\n\t\t\t} else {\n\t\t\t\t// Merge operation.\n\t\t\t\tdeletionPosition = operation.deletionPosition;\n\t\t\t}\n\t\t}\n\n\t\tconst oldRange = this.toRange();\n\n\t\tthis.start = result.start;\n\t\tthis.end = result.end;\n\n\t\tthis.fire( 'change:range', oldRange, { deletionPosition } );\n\t} else if ( contentChanged ) {\n\t\t// If range boundaries have not changed, but there was change inside the range, fire `change:content` event.\n\t\tthis.fire( 'change:content', this.toRange(), { deletionPosition } );\n\t}\n}\n\n// Checks whether given operation changes something inside the range (even if it does not change boundaries).\n//\n// @private\n// @param {module:engine/model/range~Range} range Range to check.\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\n// @returns {Boolean}\nfunction doesOperationChangeRangeContent( range, operation ) {\n\tswitch ( operation.type ) {\n\t\tcase 'insert':\n\t\t\treturn range.containsPosition( operation.position );\n\t\tcase 'move':\n\t\tcase 'remove':\n\t\tcase 'reinsert':\n\t\tcase 'merge':\n\t\t\treturn range.containsPosition( operation.sourcePosition ) ||\n\t\t\t\trange.start.isEqual( operation.sourcePosition ) ||\n\t\t\t\trange.containsPosition( operation.targetPosition );\n\t\tcase 'split':\n\t\t\treturn range.containsPosition( operation.splitPosition ) || range.containsPosition( operation.insertionPosition );\n\t}\n\n\treturn false;\n}\n\nmix( LiveRange, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/documentselection\n */\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n\nimport Selection from './selection';\nimport LiveRange from './liverange';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\n\nconst storePrefix = 'selection:';\n\n/**\n * `DocumentSelection` is a special selection which is used as the\n * {@link module:engine/model/document~Document#selection document's selection}.\n * There can be only one instance of `DocumentSelection` per document.\n *\n * Document selection can only be changed by using the {@link module:engine/model/writer~Writer} instance\n * inside the {@link module:engine/model/model~Model#change `change()`} block, as it provides a secure way to modify model.\n *\n * `DocumentSelection` is automatically updated upon changes in the {@link module:engine/model/document~Document document}\n * to always contain valid ranges. Its attributes are inherited from the text unless set explicitly.\n *\n * Differences between {@link module:engine/model/selection~Selection} and `DocumentSelection` are:\n * * there is always a range in `DocumentSelection` - even if no ranges were added there is a \"default range\"\n * present in the selection,\n * * ranges added to this selection updates automatically when the document changes,\n * * attributes of `DocumentSelection` are updated automatically according to selection ranges.\n *\n * Since `DocumentSelection` uses {@link module:engine/model/liverange~LiveRange live ranges}\n * and is updated when {@link module:engine/model/document~Document document}\n * changes, it cannot be set on {@link module:engine/model/node~Node nodes}\n * that are inside {@link module:engine/model/documentfragment~DocumentFragment document fragment}.\n * If you need to represent a selection in document fragment,\n * use {@link module:engine/model/selection~Selection Selection class} instead.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class DocumentSelection {\n\t/**\n\t * Creates an empty live selection for given {@link module:engine/model/document~Document}.\n\t *\n\t * @param {module:engine/model/document~Document} doc Document which owns this selection.\n\t */\n\tconstructor( doc ) {\n\t\t/**\n\t\t * Selection used internally by that class (`DocumentSelection` is a proxy to that selection).\n\t\t *\n\t\t * @protected\n\t\t */\n\t\tthis._selection = new LiveSelection( doc );\n\n\t\tthis._selection.delegate( 'change:range' ).to( this );\n\t\tthis._selection.delegate( 'change:attribute' ).to( this );\n\t\tthis._selection.delegate( 'change:marker' ).to( this );\n\t}\n\n\t/**\n\t * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n\t * collapsed.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this._selection.isCollapsed;\n\t}\n\n\t/**\n\t * Selection anchor. Anchor may be described as a position where the most recent part of the selection starts.\n\t * Together with {@link #focus} they define the direction of selection, which is important\n\t * when expanding/shrinking selection. Anchor is always {@link module:engine/model/range~Range#start start} or\n\t * {@link module:engine/model/range~Range#end end} position of the most recently added range.\n\t *\n\t * Is set to `null` if there are no ranges in selection.\n\t *\n\t * @see #focus\n\t * @readonly\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget anchor() {\n\t\treturn this._selection.anchor;\n\t}\n\n\t/**\n\t * Selection focus. Focus is a position where the selection ends.\n\t *\n\t * Is set to `null` if there are no ranges in selection.\n\t *\n\t * @see #anchor\n\t * @readonly\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget focus() {\n\t\treturn this._selection.focus;\n\t}\n\n\t/**\n\t * Returns number of ranges in selection.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget rangeCount() {\n\t\treturn this._selection.rangeCount;\n\t}\n\n\t/**\n\t * Describes whether `Documentselection` has own range(s) set, or if it is defaulted to\n\t * {@link module:engine/model/document~Document#_getDefaultRange document's default range}.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget hasOwnRange() {\n\t\treturn this._selection.hasOwnRange;\n\t}\n\n\t/**\n\t * Specifies whether the {@link #focus}\n\t * precedes {@link #anchor}.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isBackward() {\n\t\treturn this._selection.isBackward;\n\t}\n\n\t/**\n\t * Describes whether the gravity is overridden (using {@link module:engine/model/writer~Writer#overrideSelectionGravity}) or not.\n\t *\n\t * Note that the gravity remains overridden as long as will not be restored the same number of times as it was overridden.\n\t *\n\t * @readonly\n\t * @returns {Boolean}\n\t */\n\tget isGravityOverridden() {\n\t\treturn this._selection.isGravityOverridden;\n\t}\n\n\t/**\n\t * A collection of selection markers.\n\t * Marker is a selection marker when selection range is inside the marker range.\n\t *\n\t * @readonly\n\t * @type {module:utils/collection~Collection.<module:engine/model/markercollection~Marker>}\n\t */\n\tget markers() {\n\t\treturn this._selection.markers;\n\t}\n\n\t/**\n\t * Used for the compatibility with the {@link module:engine/model/selection~Selection#isEqual} method.\n\t *\n\t * @protected\n\t */\n\tget _ranges() {\n\t\treturn this._selection._ranges;\n\t}\n\n\t/**\n\t * Returns an iterable that iterates over copies of selection ranges.\n\t *\n\t * @returns {Iterable.<module:engine/model/range~Range>}\n\t */\n\tgetRanges() {\n\t\treturn this._selection.getRanges();\n\t}\n\n\t/**\n\t * Returns the first position in the selection.\n\t * First position is the position that {@link module:engine/model/position~Position#isBefore is before}\n\t * any other position in the selection.\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/position~Position|null}\n\t */\n\tgetFirstPosition() {\n\t\treturn this._selection.getFirstPosition();\n\t}\n\n\t/**\n\t * Returns the last position in the selection.\n\t * Last position is the position that {@link module:engine/model/position~Position#isAfter is after}\n\t * any other position in the selection.\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/position~Position|null}\n\t */\n\tgetLastPosition() {\n\t\treturn this._selection.getLastPosition();\n\t}\n\n\t/**\n\t * Returns a copy of the first range in the selection.\n\t * First range is the one which {@link module:engine/model/range~Range#start start} position\n\t * {@link module:engine/model/position~Position#isBefore is before} start position of all other ranges\n\t * (not to confuse with the first range added to the selection).\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetFirstRange() {\n\t\treturn this._selection.getFirstRange();\n\t}\n\n\t/**\n\t * Returns a copy of the last range in the selection.\n\t * Last range is the one which {@link module:engine/model/range~Range#end end} position\n\t * {@link module:engine/model/position~Position#isAfter is after} end position of all other ranges (not to confuse with the range most\n\t * recently added to the selection).\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetLastRange() {\n\t\treturn this._selection.getLastRange();\n\t}\n\n\t/**\n\t * Gets elements of type {@link module:engine/model/schema~Schema#isBlock \"block\"} touched by the selection.\n\t *\n\t * This method's result can be used for example to apply block styling to all blocks covered by this selection.\n\t *\n\t * **Note:** `getSelectedBlocks()` returns blocks that are nested in other non-block elements\n\t * but will not return blocks nested in other blocks.\n\t *\n\t * In this case the function will return exactly all 3 paragraphs (note: `<blockQuote>` is not a block itself):\n\t *\n\t *\t\t<paragraph>[a</paragraph>\n\t *\t\t<blockQuote>\n\t *\t\t\t<paragraph>b</paragraph>\n\t *\t\t</blockQuote>\n\t *\t\t<paragraph>c]d</paragraph>\n\t *\n\t * In this case the paragraph will also be returned, despite the collapsed selection:\n\t *\n\t *\t\t<paragraph>[]a</paragraph>\n\t *\n\t * In such a scenario, however, only blocks A, B & E will be returned as blocks C & D are nested in block B:\n\t *\n\t *\t\t[<blockA></blockA>\n\t *\t\t<blockB>\n\t *\t\t\t<blockC></blockC>\n\t *\t\t\t<blockD></blockD>\n\t *\t\t</blockB>\n\t *\t\t<blockE></blockE>]\n\t *\n\t * If the selection is inside a block all the inner blocks (A & B) are returned:\n\t *\n\t * \t\t<block>\n\t *\t\t\t<blockA>[a</blockA>\n\t * \t\t\t<blockB>b]</blockB>\n\t * \t\t</block>\n\t *\n\t * **Special case**: If a selection ends at the beginning of a block, that block is not returned as from user perspective\n\t * this block wasn't selected. See [#984](https://github.com/ckeditor/ckeditor5-engine/issues/984) for more details.\n\t *\n\t *\t\t<paragraph>[a</paragraph>\n\t *\t\t<paragraph>b</paragraph>\n\t *\t\t<paragraph>]c</paragraph> // this block will not be returned\n\t *\n\t * @returns {Iterable.<module:engine/model/element~Element>}\n\t */\n\tgetSelectedBlocks() {\n\t\treturn this._selection.getSelectedBlocks();\n\t}\n\n\t/**\n\t * Returns the selected element. {@link module:engine/model/element~Element Element} is considered as selected if there is only\n\t * one range in the selection, and that range contains exactly one element.\n\t * Returns `null` if there is no selected element.\n\t *\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\tgetSelectedElement() {\n\t\treturn this._selection.getSelectedElement();\n\t}\n\n\t/**\n\t * Checks whether the selection contains the entire content of the given element. This means that selection must start\n\t * at a position {@link module:engine/model/position~Position#isTouching touching} the element's start and ends at position\n\t * touching the element's end.\n\t *\n\t * By default, this method will check whether the entire content of the selection's current root is selected.\n\t * Useful to check if e.g. the user has just pressed <kbd>Ctrl</kbd> + <kbd>A</kbd>.\n\t *\n\t * @param {module:engine/model/element~Element} [element=this.anchor.root]\n\t * @returns {Boolean}\n\t */\n\tcontainsEntireContent( element ) {\n\t\treturn this._selection.containsEntireContent( element );\n\t}\n\n\t/**\n\t * Unbinds all events previously bound by document selection.\n\t */\n\tdestroy() {\n\t\tthis._selection.destroy();\n\t}\n\n\t/**\n\t * Returns iterable that iterates over this selection's attribute keys.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetAttributeKeys() {\n\t\treturn this._selection.getAttributeKeys();\n\t}\n\n\t/**\n\t * Returns iterable that iterates over this selection's attributes.\n\t *\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tgetAttributes() {\n\t\treturn this._selection.getAttributes();\n\t}\n\n\t/**\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on the selection.\n\t *\n\t * @param {String} key Key of attribute to look for.\n\t * @returns {*} Attribute value or `undefined`.\n\t */\n\tgetAttribute( key ) {\n\t\treturn this._selection.getAttribute( key );\n\t}\n\n\t/**\n\t * Checks if the selection has an attribute for given key.\n\t *\n\t * @param {String} key Key of attribute to check.\n\t * @returns {Boolean} `true` if attribute with given key is set on selection, `false` otherwise.\n\t */\n\thasAttribute( key ) {\n\t\treturn this._selection.hasAttribute( key );\n\t}\n\n\t/**\n\t * Refreshes selection attributes and markers according to the current position in the model.\n\t */\n\trefresh() {\n\t\tthis._selection._updateMarkers();\n\t\tthis._selection._updateAttributes( false );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tselection.is( 'selection' ); // -> true\n\t *\t\tselection.is( 'documentSelection' ); // -> true\n\t *\t\tselection.is( 'model:selection' ); // -> true\n\t *\t\tselection.is( 'model:documentSelection' ); // -> true\n\t *\n\t *\t\tselection.is( 'view:selection' ); // -> false\n\t *\t\tselection.is( 'element' ); // -> false\n\t *\t\tselection.is( 'node' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'selection' ||\n\t\t\ttype == 'model:selection' ||\n\t\t\ttype == 'documentSelection' ||\n\t\t\ttype == 'model:documentSelection';\n\t}\n\n\t/**\n\t * Moves {@link module:engine/model/documentselection~DocumentSelection#focus} to the specified location.\n\t * Should be used only within the {@link module:engine/model/writer~Writer#setSelectionFocus} method.\n\t *\n\t * The location can be specified in the same form as\n\t * {@link module:engine/model/writer~Writer#createPositionAt writer.createPositionAt()} parameters.\n\t *\n\t * @see module:engine/model/writer~Writer#setSelectionFocus\n\t * @protected\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\t_setFocus( itemOrPosition, offset ) {\n\t\tthis._selection.setFocus( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Sets this selection's ranges and direction to the specified location based on the given\n\t * {@link module:engine/model/selection~Selectable selectable}.\n\t * Should be used only within the {@link module:engine/model/writer~Writer#setSelection} method.\n\t *\n\t * @see module:engine/model/writer~Writer#setSelection\n\t * @protected\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t */\n\t_setTo( selectable, placeOrOffset, options ) {\n\t\tthis._selection.setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Sets attribute on the selection. If attribute with the same key already is set, it's value is overwritten.\n\t * Should be used only within the {@link module:engine/model/writer~Writer#setSelectionAttribute} method.\n\t *\n\t * @see module:engine/model/writer~Writer#setSelectionAttribute\n\t * @protected\n\t * @param {String} key Key of the attribute to set.\n\t * @param {*} value Attribute value.\n\t */\n\t_setAttribute( key, value ) {\n\t\tthis._selection.setAttribute( key, value );\n\t}\n\n\t/**\n\t * Removes an attribute with given key from the selection.\n\t * If the given attribute was set on the selection, fires the {@link module:engine/model/selection~Selection#event:change:range}\n\t * event with removed attribute key.\n\t * Should be used only within the {@link module:engine/model/writer~Writer#removeSelectionAttribute} method.\n\t *\n\t * @see module:engine/model/writer~Writer#removeSelectionAttribute\n\t * @protected\n\t * @param {String} key Key of the attribute to remove.\n\t */\n\t_removeAttribute( key ) {\n\t\tthis._selection.removeAttribute( key );\n\t}\n\n\t/**\n\t * Returns an iterable that iterates through all selection attributes stored in current selection's parent.\n\t *\n\t * @protected\n\t * @returns {Iterable.<*>}\n\t */\n\t_getStoredAttributes() {\n\t\treturn this._selection._getStoredAttributes();\n\t}\n\n\t/**\n\t * Temporarily changes the gravity of the selection from the left to the right.\n\t *\n\t * The gravity defines from which direction the selection inherits its attributes. If it's the default left\n\t * gravity, the selection (after being moved by the the user) inherits attributes from its left hand side.\n\t * This method allows to temporarily override this behavior by forcing the gravity to the right.\n\t *\n\t * It returns an unique identifier which is required to restore the gravity. It guarantees the symmetry\n\t * of the process.\n\t *\n\t * @see module:engine/model/writer~Writer#overrideSelectionGravity\n\t * @protected\n\t * @returns {String} The unique id which allows restoring the gravity.\n\t */\n\t_overrideGravity() {\n\t\treturn this._selection.overrideGravity();\n\t}\n\n\t/**\n\t * Restores the {@link ~DocumentSelection#_overrideGravity overridden gravity}.\n\t *\n\t * Restoring the gravity is only possible using the unique identifier returned by\n\t * {@link ~DocumentSelection#_overrideGravity}. Note that the gravity remains overridden as long as won't be restored\n\t * the same number of times it was overridden.\n\t *\n\t * @see module:engine/model/writer~Writer#restoreSelectionGravity\n\t * @protected\n\t * @param {String} uid The unique id returned by {@link #_overrideGravity}.\n\t */\n\t_restoreGravity( uid ) {\n\t\tthis._selection.restoreGravity( uid );\n\t}\n\n\t/**\n\t * Generates and returns an attribute key for selection attributes store, basing on original attribute key.\n\t *\n\t * @protected\n\t * @param {String} key Attribute key to convert.\n\t * @returns {String} Converted attribute key, applicable for selection store.\n\t */\n\tstatic _getStoreAttributeKey( key ) {\n\t\treturn storePrefix + key;\n\t}\n\n\t/**\n\t * Checks whether the given attribute key is an attribute stored on an element.\n\t *\n\t * @protected\n\t * @param {String} key\n\t * @returns {Boolean}\n\t */\n\tstatic _isStoreAttributeKey( key ) {\n\t\treturn key.startsWith( storePrefix );\n\t}\n}\n\nmix( DocumentSelection, EmitterMixin );\n\n/**\n * Fired when selection range(s) changed.\n *\n * @event change:range\n * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its position\n * was directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n * changed because the structure of the model has been changed (which means an indirect change).\n * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n * which mean that they are not updated once the document changes.\n */\n\n/**\n * Fired when selection attribute changed.\n *\n * @event change:attribute\n * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its attributes\n * were directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n * changed in the model and its attributes were refreshed (which means an indirect change).\n * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n * which mean that they are not updated once the document changes.\n * @param {Array.<String>} attributeKeys Array containing keys of attributes that changed.\n */\n\n/**\n * Fired when selection marker(s) changed.\n *\n * @event change:marker\n * @param {Boolean} directChange This is always set to `false` in case of `change:marker` event as there is no possibility\n * to change markers directly through {@link module:engine/model/documentselection~DocumentSelection} API.\n * See also {@link module:engine/model/documentselection~DocumentSelection#event:change:range} and\n * {@link module:engine/model/documentselection~DocumentSelection#event:change:attribute}.\n * @param {Array.<module:engine/model/markercollection~Marker>} oldMarkers Markers in which the selection was before the change.\n */\n\n// `LiveSelection` is used internally by {@link module:engine/model/documentselection~DocumentSelection} and shouldn't be used directly.\n//\n// LiveSelection` is automatically updated upon changes in the {@link module:engine/model/document~Document document}\n// to always contain valid ranges. Its attributes are inherited from the text unless set explicitly.\n//\n// Differences between {@link module:engine/model/selection~Selection} and `LiveSelection` are:\n// * there is always a range in `LiveSelection` - even if no ranges were added there is a \"default range\"\n// present in the selection,\n// * ranges added to this selection updates automatically when the document changes,\n// * attributes of `LiveSelection` are updated automatically according to selection ranges.\n//\n// @extends module:engine/model/selection~Selection\n//\n\nclass LiveSelection extends Selection {\n\t// Creates an empty live selection for given {@link module:engine/model/document~Document}.\n\t// @param {module:engine/model/document~Document} doc Document which owns this selection.\n\tconstructor( doc ) {\n\t\tsuper();\n\n\t\t// List of selection markers.\n\t\t// Marker is a selection marker when selection range is inside the marker range.\n\t\t//\n\t\t// @type {module:utils/collection~Collection}\n\t\tthis.markers = new Collection( { idProperty: 'name' } );\n\n\t\t// Document which owns this selection.\n\t\t//\n\t\t// @protected\n\t\t// @member {module:engine/model/model~Model}\n\t\tthis._model = doc.model;\n\n\t\t// Document which owns this selection.\n\t\t//\n\t\t// @protected\n\t\t// @member {module:engine/model/document~Document}\n\t\tthis._document = doc;\n\n\t\t// Keeps mapping of attribute name to priority with which the attribute got modified (added/changed/removed)\n\t\t// last time. Possible values of priority are: `'low'` and `'normal'`.\n\t\t//\n\t\t// Priorities are used by internal `LiveSelection` mechanisms. All attributes set using `LiveSelection`\n\t\t// attributes API are set with `'normal'` priority.\n\t\t//\n\t\t// @private\n\t\t// @member {Map} module:engine/model/liveselection~LiveSelection#_attributePriority\n\t\tthis._attributePriority = new Map();\n\n\t\t// Contains data required to fix ranges which have been moved to the graveyard.\n\t\t// @private\n\t\t// @member {Array} module:engine/model/liveselection~LiveSelection#_fixGraveyardRangesData\n\t\tthis._fixGraveyardRangesData = [];\n\n\t\t// Flag that informs whether the selection ranges have changed. It is changed on true when `LiveRange#change:range` event is fired.\n\t\t// @private\n\t\t// @member {Array} module:engine/model/liveselection~LiveSelection#_hasChangedRange\n\t\tthis._hasChangedRange = false;\n\n\t\t// Each overriding gravity adds an UID to the set and each removal removes it.\n\t\t// Gravity is overridden when there's at least one UID in the set.\n\t\t// Gravity is restored when the set is empty.\n\t\t// This is to prevent conflicts when gravity is overridden by more than one feature at the same time.\n\t\t// @private\n\t\t// @type {Set}\n\t\tthis._overriddenGravityRegister = new Set();\n\n\t\t// Ensure selection is correct after each operation.\n\t\tthis.listenTo( this._model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( !operation.isDocumentOperation || operation.type == 'marker' || operation.type == 'rename' || operation.type == 'noop' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twhile ( this._fixGraveyardRangesData.length ) {\n\t\t\t\tconst { liveRange, sourcePosition } = this._fixGraveyardRangesData.shift();\n\n\t\t\t\tthis._fixGraveyardSelection( liveRange, sourcePosition );\n\t\t\t}\n\n\t\t\tif ( this._hasChangedRange ) {\n\t\t\t\tthis._hasChangedRange = false;\n\t\t\t\tthis.fire( 'change:range', { directChange: false } );\n\t\t\t}\n\t\t}, { priority: 'lowest' } );\n\n\t\t// Ensure selection is correct and up to date after each range change.\n\t\tthis.on( 'change:range', () => {\n\t\t\tfor ( const range of this.getRanges() ) {\n\t\t\t\tif ( !this._document._validateSelectionRange( range ) ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Range from {@link module:engine/model/documentselection~DocumentSelection document selection}\n\t\t\t\t\t * starts or ends at incorrect position.\n\t\t\t\t\t *\n\t\t\t\t\t * @error document-selection-wrong-position\n\t\t\t\t\t * @param {module:engine/model/range~Range} range\n\t\t\t\t\t */\n\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t'document-selection-wrong-position: Range from document selection starts or ends at incorrect position.',\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t{ range }\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Update markers data stored by the selection after each marker change.\n\t\tthis.listenTo( this._model.markers, 'update', () => this._updateMarkers() );\n\n\t\t// Ensure selection is up to date after each change block.\n\t\tthis.listenTo( this._document, 'change', ( evt, batch ) => {\n\t\t\tclearAttributesStoredInElement( this._model, batch );\n\t\t} );\n\t}\n\n\tget isCollapsed() {\n\t\tconst length = this._ranges.length;\n\n\t\treturn length === 0 ? this._document._getDefaultRange().isCollapsed : super.isCollapsed;\n\t}\n\n\tget anchor() {\n\t\treturn super.anchor || this._document._getDefaultRange().start;\n\t}\n\n\tget focus() {\n\t\treturn super.focus || this._document._getDefaultRange().end;\n\t}\n\n\tget rangeCount() {\n\t\treturn this._ranges.length ? this._ranges.length : 1;\n\t}\n\n\t// Describes whether `LiveSelection` has own range(s) set, or if it is defaulted to\n\t// {@link module:engine/model/document~Document#_getDefaultRange document's default range}.\n\t//\n\t// @readonly\n\t// @type {Boolean}\n\tget hasOwnRange() {\n\t\treturn this._ranges.length > 0;\n\t}\n\n\t// When set to `true` then selection attributes on node before the caret won't be taken\n\t// into consideration while updating selection attributes.\n\t//\n\t// @protected\n\t// @type {Boolean}\n\tget isGravityOverridden() {\n\t\treturn !!this._overriddenGravityRegister.size;\n\t}\n\n\t// Unbinds all events previously bound by live selection.\n\tdestroy() {\n\t\tfor ( let i = 0; i < this._ranges.length; i++ ) {\n\t\t\tthis._ranges[ i ].detach();\n\t\t}\n\n\t\tthis.stopListening();\n\t}\n\n\t* getRanges() {\n\t\tif ( this._ranges.length ) {\n\t\t\tyield* super.getRanges();\n\t\t} else {\n\t\t\tyield this._document._getDefaultRange();\n\t\t}\n\t}\n\n\tgetFirstRange() {\n\t\treturn super.getFirstRange() || this._document._getDefaultRange();\n\t}\n\n\tgetLastRange() {\n\t\treturn super.getLastRange() || this._document._getDefaultRange();\n\t}\n\n\tsetTo( selectable, optionsOrPlaceOrOffset, options ) {\n\t\tsuper.setTo( selectable, optionsOrPlaceOrOffset, options );\n\t\tthis._updateAttributes( true );\n\t\tthis._updateMarkers();\n\t}\n\n\tsetFocus( itemOrPosition, offset ) {\n\t\tsuper.setFocus( itemOrPosition, offset );\n\t\tthis._updateAttributes( true );\n\t\tthis._updateMarkers();\n\t}\n\n\tsetAttribute( key, value ) {\n\t\tif ( this._setAttribute( key, value ) ) {\n\t\t\t// Fire event with exact data.\n\t\t\tconst attributeKeys = [ key ];\n\t\t\tthis.fire( 'change:attribute', { attributeKeys, directChange: true } );\n\t\t}\n\t}\n\n\tremoveAttribute( key ) {\n\t\tif ( this._removeAttribute( key ) ) {\n\t\t\t// Fire event with exact data.\n\t\t\tconst attributeKeys = [ key ];\n\t\t\tthis.fire( 'change:attribute', { attributeKeys, directChange: true } );\n\t\t}\n\t}\n\n\toverrideGravity() {\n\t\tconst overrideUid = uid();\n\n\t\t// Remember that another overriding has been requested. It will need to be removed\n\t\t// before the gravity is to be restored.\n\t\tthis._overriddenGravityRegister.add( overrideUid );\n\n\t\tif ( this._overriddenGravityRegister.size === 1 ) {\n\t\t\tthis._updateAttributes( true );\n\t\t}\n\n\t\treturn overrideUid;\n\t}\n\n\trestoreGravity( uid ) {\n\t\tif ( !this._overriddenGravityRegister.has( uid ) ) {\n\t\t\t/**\n\t\t\t * Restoring gravity for an unknown UID is not possible. Make sure you are using a correct\n\t\t\t * UID obtained from the {@link module:engine/model/writer~Writer#overrideSelectionGravity} to restore.\n\t\t\t *\n\t\t\t * @error document-selection-gravity-wrong-restore\n\t\t\t * @param {String} uid The unique identifier returned by\n\t\t\t * {@link module:engine/model/documentselection~DocumentSelection#_overrideGravity}.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'document-selection-gravity-wrong-restore: Attempting to restore the selection gravity for an unknown UID.',\n\t\t\t\tthis,\n\t\t\t\t{ uid }\n\t\t\t);\n\t\t}\n\n\t\tthis._overriddenGravityRegister.delete( uid );\n\n\t\t// Restore gravity only when all overriding have been restored.\n\t\tif ( !this.isGravityOverridden ) {\n\t\t\tthis._updateAttributes( true );\n\t\t}\n\t}\n\n\t_popRange() {\n\t\tthis._ranges.pop().detach();\n\t}\n\n\t_pushRange( range ) {\n\t\tconst liveRange = this._prepareRange( range );\n\n\t\t// `undefined` is returned when given `range` is in graveyard root.\n\t\tif ( liveRange ) {\n\t\t\tthis._ranges.push( liveRange );\n\t\t}\n\t}\n\n\t// Prepares given range to be added to selection. Checks if it is correct,\n\t// converts it to {@link module:engine/model/liverange~LiveRange LiveRange}\n\t// and sets listeners listening to the range's change event.\n\t//\n\t// @private\n\t// @param {module:engine/model/range~Range} range\n\t_prepareRange( range ) {\n\t\tthis._checkRange( range );\n\n\t\tif ( range.root == this._document.graveyard ) {\n\t\t\t// @if CK_DEBUG // console.warn( 'Trying to add a Range that is in the graveyard root. Range rejected.' );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst liveRange = LiveRange.fromRange( range );\n\n\t\tliveRange.on( 'change:range', ( evt, oldRange, data ) => {\n\t\t\tthis._hasChangedRange = true;\n\n\t\t\t// If `LiveRange` is in whole moved to the graveyard, save necessary data. It will be fixed on `Model#applyOperation` event.\n\t\t\tif ( liveRange.root == this._document.graveyard ) {\n\t\t\t\tthis._fixGraveyardRangesData.push( {\n\t\t\t\t\tliveRange,\n\t\t\t\t\tsourcePosition: data.deletionPosition\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\treturn liveRange;\n\t}\n\n\t_updateMarkers() {\n\t\tconst markers = [];\n\t\tlet changed = false;\n\n\t\tfor ( const marker of this._model.markers ) {\n\t\t\tconst markerRange = marker.getRange();\n\n\t\t\tfor ( const selectionRange of this.getRanges() ) {\n\t\t\t\tif ( markerRange.containsRange( selectionRange, !selectionRange.isCollapsed ) ) {\n\t\t\t\t\tmarkers.push( marker );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst oldMarkers = Array.from( this.markers );\n\n\t\tfor ( const marker of markers ) {\n\t\t\tif ( !this.markers.has( marker ) ) {\n\t\t\t\tthis.markers.add( marker );\n\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\n\t\tfor ( const marker of Array.from( this.markers ) ) {\n\t\t\tif ( !markers.includes( marker ) ) {\n\t\t\t\tthis.markers.remove( marker );\n\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( changed ) {\n\t\t\tthis.fire( 'change:marker', { oldMarkers, directChange: false } );\n\t\t}\n\t}\n\n\t// Updates this selection attributes according to its ranges and the {@link module:engine/model/document~Document model document}.\n\t//\n\t// @protected\n\t// @param {Boolean} clearAll\n\t// @fires change:attribute\n\t_updateAttributes( clearAll ) {\n\t\tconst newAttributes = toMap( this._getSurroundingAttributes() );\n\t\tconst oldAttributes = toMap( this.getAttributes() );\n\n\t\tif ( clearAll ) {\n\t\t\t// If `clearAll` remove all attributes and reset priorities.\n\t\t\tthis._attributePriority = new Map();\n\t\t\tthis._attrs = new Map();\n\t\t} else {\n\t\t\t// If not, remove only attributes added with `low` priority.\n\t\t\tfor ( const [ key, priority ] of this._attributePriority ) {\n\t\t\t\tif ( priority == 'low' ) {\n\t\t\t\t\tthis._attrs.delete( key );\n\t\t\t\t\tthis._attributePriority.delete( key );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._setAttributesTo( newAttributes );\n\n\t\t// Let's evaluate which attributes really changed.\n\t\tconst changed = [];\n\n\t\t// First, loop through all attributes that are set on selection right now.\n\t\t// Check which of them are different than old attributes.\n\t\tfor ( const [ newKey, newValue ] of this.getAttributes() ) {\n\t\t\tif ( !oldAttributes.has( newKey ) || oldAttributes.get( newKey ) !== newValue ) {\n\t\t\t\tchanged.push( newKey );\n\t\t\t}\n\t\t}\n\n\t\t// Then, check which of old attributes got removed.\n\t\tfor ( const [ oldKey ] of oldAttributes ) {\n\t\t\tif ( !this.hasAttribute( oldKey ) ) {\n\t\t\t\tchanged.push( oldKey );\n\t\t\t}\n\t\t}\n\n\t\t// Fire event with exact data (fire only if anything changed).\n\t\tif ( changed.length > 0 ) {\n\t\t\tthis.fire( 'change:attribute', { attributeKeys: changed, directChange: false } );\n\t\t}\n\t}\n\n\t// Internal method for setting `LiveSelection` attribute. Supports attribute priorities (through `directChange`\n\t// parameter).\n\t//\n\t// @private\n\t// @param {String} key Attribute key.\n\t// @param {*} value Attribute value.\n\t// @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n\t// is caused by `Batch` API.\n\t// @returns {Boolean} Whether value has changed.\n\t_setAttribute( key, value, directChange = true ) {\n\t\tconst priority = directChange ? 'normal' : 'low';\n\n\t\tif ( priority == 'low' && this._attributePriority.get( key ) == 'normal' ) {\n\t\t\t// Priority too low.\n\t\t\treturn false;\n\t\t}\n\n\t\tconst oldValue = super.getAttribute( key );\n\n\t\t// Don't do anything if value has not changed.\n\t\tif ( oldValue === value ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._attrs.set( key, value );\n\n\t\t// Update priorities map.\n\t\tthis._attributePriority.set( key, priority );\n\n\t\treturn true;\n\t}\n\n\t// Internal method for removing `LiveSelection` attribute. Supports attribute priorities (through `directChange`\n\t// parameter).\n\t//\n\t// NOTE: Even if attribute is not present in the selection but is provided to this method, it's priority will\n\t// be changed according to `directChange` parameter.\n\t//\n\t// @private\n\t// @param {String} key Attribute key.\n\t// @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n\t// is caused by `Batch` API.\n\t// @returns {Boolean} Whether attribute was removed. May not be true if such attributes didn't exist or the\n\t// existing attribute had higher priority.\n\t_removeAttribute( key, directChange = true ) {\n\t\tconst priority = directChange ? 'normal' : 'low';\n\n\t\tif ( priority == 'low' && this._attributePriority.get( key ) == 'normal' ) {\n\t\t\t// Priority too low.\n\t\t\treturn false;\n\t\t}\n\n\t\t// Update priorities map.\n\t\tthis._attributePriority.set( key, priority );\n\n\t\t// Don't do anything if value has not changed.\n\t\tif ( !super.hasAttribute( key ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._attrs.delete( key );\n\n\t\treturn true;\n\t}\n\n\t// Internal method for setting multiple `LiveSelection` attributes. Supports attribute priorities (through\n\t// `directChange` parameter).\n\t//\n\t// @private\n\t// @param {Map.<String,*>} attrs Iterable object containing attributes to be set.\n\t// @returns {Set.<String>} Changed attribute keys.\n\t_setAttributesTo( attrs ) {\n\t\tconst changed = new Set();\n\n\t\tfor ( const [ oldKey, oldValue ] of this.getAttributes() ) {\n\t\t\t// Do not remove attribute if attribute with same key and value is about to be set.\n\t\t\tif ( attrs.get( oldKey ) === oldValue ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// All rest attributes will be removed so changed attributes won't change .\n\t\t\tthis._removeAttribute( oldKey, false );\n\t\t}\n\n\t\tfor ( const [ key, value ] of attrs ) {\n\t\t\t// Attribute may not be set because of attributes or because same key/value is already added.\n\t\t\tconst gotAdded = this._setAttribute( key, value, false );\n\n\t\t\tif ( gotAdded ) {\n\t\t\t\tchanged.add( key );\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n\n\t// Returns an iterable that iterates through all selection attributes stored in current selection's parent.\n\t//\n\t// @protected\n\t// @returns {Iterable.<*>}\n\t* _getStoredAttributes() {\n\t\tconst selectionParent = this.getFirstPosition().parent;\n\n\t\tif ( this.isCollapsed && selectionParent.isEmpty ) {\n\t\t\tfor ( const key of selectionParent.getAttributeKeys() ) {\n\t\t\t\tif ( key.startsWith( storePrefix ) ) {\n\t\t\t\t\tconst realKey = key.substr( storePrefix.length );\n\n\t\t\t\t\tyield [ realKey, selectionParent.getAttribute( key ) ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Checks model text nodes that are closest to the selection's first position and returns attributes of first\n\t// found element. If there are no text nodes in selection's first position parent, it returns selection\n\t// attributes stored in that parent.\n\t//\n\t// @private\n\t// @returns {Iterable.<*>} Collection of attributes.\n\t_getSurroundingAttributes() {\n\t\tconst position = this.getFirstPosition();\n\t\tconst schema = this._model.schema;\n\n\t\tlet attrs = null;\n\n\t\tif ( !this.isCollapsed ) {\n\t\t\t// 1. If selection is a range...\n\t\t\tconst range = this.getFirstRange();\n\n\t\t\t// ...look for a first character node in that range and take attributes from it.\n\t\t\tfor ( const value of range ) {\n\t\t\t\t// If the item is an object, we don't want to get attributes from its children.\n\t\t\t\tif ( value.item.is( 'element' ) && schema.isObject( value.item ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( value.type == 'text' ) {\n\t\t\t\t\tattrs = value.item.getAttributes();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// 2. If the selection is a caret or the range does not contain a character node...\n\n\t\t\tconst nodeBefore = position.textNode ? position.textNode : position.nodeBefore;\n\t\t\tconst nodeAfter = position.textNode ? position.textNode : position.nodeAfter;\n\n\t\t\t// When gravity is overridden then don't take node before into consideration.\n\t\t\tif ( !this.isGravityOverridden ) {\n\t\t\t\t// ...look at the node before caret and take attributes from it if it is a character node.\n\t\t\t\tattrs = getAttrsIfCharacter( nodeBefore );\n\t\t\t}\n\n\t\t\t// 3. If not, look at the node after caret...\n\t\t\tif ( !attrs ) {\n\t\t\t\tattrs = getAttrsIfCharacter( nodeAfter );\n\t\t\t}\n\n\t\t\t// 4. If not, try to find the first character on the left, that is in the same node.\n\t\t\t// When gravity is overridden then don't take node before into consideration.\n\t\t\tif ( !this.isGravityOverridden && !attrs ) {\n\t\t\t\tlet node = nodeBefore;\n\n\t\t\t\twhile ( node && !attrs ) {\n\t\t\t\t\tnode = node.previousSibling;\n\t\t\t\t\tattrs = getAttrsIfCharacter( node );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 5. If not found, try to find the first character on the right, that is in the same node.\n\t\t\tif ( !attrs ) {\n\t\t\t\tlet node = nodeAfter;\n\n\t\t\t\twhile ( node && !attrs ) {\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t\tattrs = getAttrsIfCharacter( node );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 6. If not found, selection should retrieve attributes from parent.\n\t\t\tif ( !attrs ) {\n\t\t\t\tattrs = this._getStoredAttributes();\n\t\t\t}\n\t\t}\n\n\t\treturn attrs;\n\t}\n\n\t// Fixes a selection range after it ends up in graveyard root.\n\t//\n\t// @private\n\t// @param {module:engine/model/liverange~LiveRange} liveRange The range from selection, that ended up in the graveyard root.\n\t// @param {module:engine/model/position~Position} removedRangeStart Start position of a range which was removed.\n\t_fixGraveyardSelection( liveRange, removedRangeStart ) {\n\t\t// The start of the removed range is the closest position to the `liveRange` - the original selection range.\n\t\t// This is a good candidate for a fixed selection range.\n\t\tconst positionCandidate = removedRangeStart.clone();\n\n\t\t// Find a range that is a correct selection range and is closest to the start of removed range.\n\t\tconst selectionRange = this._model.schema.getNearestSelectionRange( positionCandidate );\n\n\t\t// Remove the old selection range before preparing and adding new selection range. This order is important,\n\t\t// because new range, in some cases, may intersect with old range (it depends on `getNearestSelectionRange()` result).\n\t\tconst index = this._ranges.indexOf( liveRange );\n\t\tthis._ranges.splice( index, 1 );\n\t\tliveRange.detach();\n\n\t\t// If nearest valid selection range has been found - add it in the place of old range.\n\t\t// If range is equal to any other selection ranges then it is probably due to contents\n\t\t// of a multi-range selection being removed. See ckeditor/ckeditor5#6501.\n\t\tif ( selectionRange && !isRangeCollidingWithSelection( selectionRange, this ) ) {\n\t\t\t// Check the range, convert it to live range, bind events, etc.\n\t\t\tconst newRange = this._prepareRange( selectionRange );\n\n\t\t\t// Add new range in the place of old range.\n\t\t\tthis._ranges.splice( index, 0, newRange );\n\t\t}\n\t\t// If nearest valid selection range cannot be found or is intersecting with other selection ranges removing the old range is fine.\n\t}\n}\n\n// Helper function for {@link module:engine/model/liveselection~LiveSelection#_updateAttributes}.\n//\n// It takes model item, checks whether it is a text node (or text proxy) and, if so, returns it's attributes. If not, returns `null`.\n//\n// @param {module:engine/model/item~Item|null}  node\n// @returns {Boolean}\nfunction getAttrsIfCharacter( node ) {\n\tif ( node instanceof TextProxy || node instanceof Text ) {\n\t\treturn node.getAttributes();\n\t}\n\n\treturn null;\n}\n\n// Removes selection attributes from element which is not empty anymore.\n//\n// @param {module:engine/model/model~Model} model\n// @param {module:engine/model/batch~Batch} batch\nfunction clearAttributesStoredInElement( model, batch ) {\n\tconst differ = model.document.differ;\n\n\tfor ( const entry of differ.getChanges() ) {\n\t\tif ( entry.type != 'insert' ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst changeParent = entry.position.parent;\n\t\tconst isNoLongerEmpty = entry.length === changeParent.maxOffset;\n\n\t\tif ( isNoLongerEmpty ) {\n\t\t\tmodel.enqueueChange( batch, writer => {\n\t\t\t\tconst storedAttributes = Array.from( changeParent.getAttributeKeys() )\n\t\t\t\t\t.filter( key => key.startsWith( storePrefix ) );\n\n\t\t\t\tfor ( const key of storedAttributes ) {\n\t\t\t\t\twriter.removeAttribute( key, changeParent );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n}\n\n// Checks if range collides with any of selection ranges.\nfunction isRangeCollidingWithSelection( range, selection ) {\n\treturn !selection._ranges.every( selectionRange => !range.isEqual( selectionRange ) );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/conversionhelpers\n */\n\n/**\n * Base class for conversion helpers.\n */\nexport default class ConversionHelpers {\n\t/**\n\t * Creates a conversion helpers instance.\n\t *\n\t * @param {Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n\t * module:engine/conversion/upcastdispatcher~UpcastDispatcher>} dispatchers\n\t */\n\tconstructor( dispatchers ) {\n\t\tthis._dispatchers = dispatchers;\n\t}\n\n\t/**\n\t * Registers a conversion helper.\n\t *\n\t * **Note**: See full usage example in the `{@link module:engine/conversion/conversion~Conversion#for conversion.for()}`\n\t * method description.\n\t *\n\t * @param {Function} conversionHelper The function to be called on event.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers|module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\tadd( conversionHelper ) {\n\t\tfor ( const dispatcher of this._dispatchers ) {\n\t\t\tconversionHelper( dispatcher );\n\t\t}\n\n\t\treturn this;\n\t}\n}\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Contains downcast (model-to-view) converters for {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}.\n *\n * @module engine/conversion/downcasthelpers\n */\n\nimport ModelRange from '../model/range';\nimport ModelSelection from '../model/selection';\nimport ModelElement from '../model/element';\n\nimport ViewAttributeElement from '../view/attributeelement';\nimport DocumentSelection from '../model/documentselection';\nimport ConversionHelpers from './conversionhelpers';\n\nimport { cloneDeep } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Downcast conversion helper functions.\n *\n * @extends module:engine/conversion/conversionhelpers~ConversionHelpers\n */\nexport default class DowncastHelpers extends ConversionHelpers {\n\t/**\n\t * Model element to view element conversion helper.\n\t *\n\t * This conversion results in creating a view element. For example, model `<paragraph>Foo</paragraph>` becomes `<p>Foo</p>` in the view.\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n\t *\t\t\tmodel: 'paragraph',\n\t *\t\t\tview: 'p'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n\t *\t\t\tmodel: 'paragraph',\n\t *\t\t\tview: 'div',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n\t *\t\t\tmodel: 'fancyParagraph',\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'p',\n\t *\t\t\t\tclasses: 'fancy'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n\t *\t\t\tmodel: 'heading',\n\t *\t\t\tview: ( modelElement, viewWriter ) => {\n\t *\t\t\t\treturn viewWriter.createContainerElement( 'h' + modelElement.getAttribute( 'level' ) )\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #elementToElement\n\t * @param {Object} config Conversion configuration.\n\t * @param {String} config.model The name of the model element to convert.\n\t * @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n\t * that takes the model element and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n\t * as parameters and returns a view container element.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n\t */\n\telementToElement( config ) {\n\t\treturn this.add( downcastElementToElement( config ) );\n\t}\n\n\t/**\n\t * Model attribute to view element conversion helper.\n\t *\n\t * This conversion results in wrapping view nodes with a view attribute element. For example, a model text node with\n\t * `\"Foo\"` as data and the `bold` attribute becomes `<strong>Foo</strong>` in the view.\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tview: 'strong'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tview: 'b',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: 'invert',\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tclasses: [ 'font-light', 'bg-dark' ]\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'fontSize',\n\t *\t\t\t\tvalues: [ 'big', 'small' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\tbig: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'font-size': '1.2em'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t},\n\t *\t\t\t\tsmall: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'font-size': '0.8em'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tview: ( modelAttributeValue, viewWriter ) => {\n\t *\t\t\t\treturn viewWriter.createAttributeElement( 'span', {\n\t *\t\t\t\t\tstyle: 'font-weight:' + modelAttributeValue\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'color',\n\t *\t\t\t\tname: '$text'\n\t *\t\t\t},\n\t *\t\t\tview: ( modelAttributeValue, viewWriter ) => {\n\t *\t\t\t\treturn viewWriter.createAttributeElement( 'span', {\n\t *\t\t\t\t\tstyle: 'color:' + modelAttributeValue\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #attributeToElement\n\t * @param {Object} config Conversion configuration.\n\t * @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values }` object. `values` is an array\n\t * of `String`s with possible values if the model attribute is an enumerable.\n\t * @param {module:engine/view/elementdefinition~ElementDefinition|Function|Object} config.view A view element definition or a function\n\t * that takes the model attribute value and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n\t * as parameters and returns a view attribute element. If `config.model.values` is\n\t * given, `config.view` should be an object assigning values from `config.model.values` to view element definitions or functions.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n\t */\n\tattributeToElement( config ) {\n\t\treturn this.add( downcastAttributeToElement( config ) );\n\t}\n\n\t/**\n\t * Model attribute to view attribute conversion helper.\n\t *\n\t * This conversion results in adding an attribute to a view node, basing on an attribute from a model node. For example,\n\t * `<image src='foo.jpg'></image>` is converted to `<img src='foo.jpg'></img>`.\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: 'source',\n\t *\t\t\tview: 'src'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: 'source',\n\t *\t\t\tview: 'href',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tname: 'image',\n\t *\t\t\t\tkey: 'source'\n\t *\t\t\t},\n\t *\t\t\tview: 'src'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tname: 'styled',\n\t *\t\t\t\tvalues: [ 'dark', 'light' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\tdark: {\n\t *\t\t\t\t\tkey: 'class',\n\t *\t\t\t\t\tvalue: [ 'styled', 'styled-dark' ]\n\t *\t\t\t\t},\n\t *\t\t\t\tlight: {\n\t *\t\t\t\t\tkey: 'class',\n\t *\t\t\t\t\tvalue: [ 'styled', 'styled-light' ]\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: 'styled',\n\t *\t\t\tview: modelAttributeValue => ( { key: 'class', value: 'styled-' + modelAttributeValue } )\n\t *\t\t} );\n\t *\n\t * **Note**: Downcasting to a style property requires providing `value` as an object:\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: 'lineHeight',\n\t *\t\t\tview: modelAttributeValue => ( {\n\t *\t\t\t\tkey: 'style',\n\t *\t\t\t\tvalue: {\n\t *\t\t\t\t\t'line-height': modelAttributeValue,\n\t *\t\t\t\t\t'border-bottom': '1px dotted #ba2'\n\t *\t\t\t\t}\n\t *\t\t\t} )\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #attributeToAttribute\n\t * @param {Object} config Conversion configuration.\n\t * @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values, [ name ] }` object describing\n\t * the attribute key, possible values and, optionally, an element name to convert from.\n\t * @param {String|Object|Function} config.view A view attribute key, or a `{ key, value }` object or a function that takes\n\t * the model attribute value and returns a `{ key, value }` object. If `key` is `'class'`, `value` can be a `String` or an\n\t * array of `String`s. If `key` is `'style'`, `value` is an object with key-value pairs. In other cases, `value` is a `String`.\n\t * If `config.model.values` is set, `config.view` should be an object assigning values from `config.model.values` to\n\t * `{ key, value }` objects or a functions.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n\t */\n\tattributeToAttribute( config ) {\n\t\treturn this.add( downcastAttributeToAttribute( config ) );\n\t}\n\n\t/**\n\t * Model marker to view element conversion helper.\n\t *\n\t * This conversion results in creating a view element on the boundaries of the converted marker. If the converted marker\n\t * is collapsed, only one element is created. For example, model marker set like this: `<paragraph>F[oo b]ar</paragraph>`\n\t * becomes `<p>F<span data-marker=\"search\"></span>oo b<span data-marker=\"search\"></span>ar</p>` in the view.\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\n\t *\t\t\tmodel: 'search',\n\t *\t\t\tview: 'marker-search'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\n\t *\t\t\tmodel: 'search',\n\t *\t\t\tview: 'search-result',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\n\t *\t\t\tmodel: 'search',\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tattributes: {\n\t *\t\t\t\t\t'data-marker': 'search'\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\n\t *\t\t\tmodel: 'search',\n\t *\t\t\tview: ( markerData, viewWriter ) => {\n\t *\t\t\t\treturn viewWriter.createUIElement( 'span', {\n\t *\t\t\t\t\t'data-marker': 'search',\n\t *\t\t\t\t\t'data-start': markerData.isOpening\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * If a function is passed as the `config.view` parameter, it will be used to generate both boundary elements. The function\n\t * receives the `data` object as a parameter and should return an instance of the\n\t * {@link module:engine/view/uielement~UIElement view UI element}. The `data` object and\n\t * {@link module:engine/conversion/downcastdispatcher~DowncastConversionApi `conversionApi`} are passed from\n\t * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}. Additionally,\n\t * the `data.isOpening` parameter is passed, which is set to `true` for the marker start boundary element, and `false` to\n\t * the marker end boundary element.\n\t *\n\t * This kind of conversion is useful for saving data into the database, so it should be used in the data conversion pipeline.\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #markerToElement\n\t * @param {Object} config Conversion configuration.\n\t * @param {String} config.model The name of the model marker (or model marker group) to convert.\n\t * @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n\t * that takes the model marker data as a parameter and returns a view UI element.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n\t */\n\tmarkerToElement( config ) {\n\t\treturn this.add( downcastMarkerToElement( config ) );\n\t}\n\n\t/**\n\t * Model marker to highlight conversion helper.\n\t *\n\t * This conversion results in creating a highlight on view nodes. For this kind of conversion,\n\t * {@link module:engine/conversion/downcasthelpers~HighlightDescriptor} should be provided.\n\t *\n\t * For text nodes, a `<span>` {@link module:engine/view/attributeelement~AttributeElement} is created and it wraps all text nodes\n\t * in the converted marker range. For example, a model marker set like this: `<paragraph>F[oo b]ar</paragraph>` becomes\n\t * `<p>F<span class=\"comment\">oo b</span>ar</p>` in the view.\n\t *\n\t * {@link module:engine/view/containerelement~ContainerElement} may provide a custom way of handling highlight. Most often,\n\t * the element itself is given classes and attributes described in the highlight descriptor (instead of being wrapped in `<span>`).\n\t * For example, a model marker set like this: `[<image src=\"foo.jpg\"></image>]` becomes `<img src=\"foo.jpg\" class=\"comment\"></img>`\n\t * in the view.\n\t *\n\t * For container elements, the conversion is two-step. While the converter processes the highlight descriptor and passes it\n\t * to a container element, it is the container element instance itself that applies values from the highlight descriptor.\n\t * So, in a sense, the converter takes care of stating what should be applied on what, while the element decides how to apply that.\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( { model: 'comment', view: { classes: 'comment' } } );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( {\n\t *\t\t\tmodel: 'comment',\n\t *\t\t\tview: { classes: 'new-comment' },\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( {\n\t *\t\t\tmodel: 'comment',\n\t *\t\t\tview: data => {\n\t *\t\t\t\t// Assuming that the marker name is in a form of comment:commentType.\n\t *\t\t\t\tconst commentType = data.markerName.split( ':' )[ 1 ];\n\t *\n\t *\t\t\t\treturn {\n\t *\t\t\t\t\tclasses: [ 'comment', 'comment-' + commentType ]\n\t *\t\t\t\t};\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * If a function is passed as the `config.view` parameter, it will be used to generate the highlight descriptor. The function\n\t * receives the `data` object as a parameter and should return a\n\t * {@link module:engine/conversion/downcasthelpers~HighlightDescriptor highlight descriptor}.\n\t * The `data` object properties are passed from {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}.\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #markerToHighlight\n\t * @param {Object} config Conversion configuration.\n\t * @param {String} config.model The name of the model marker (or model marker group) to convert.\n\t * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} config.view A highlight descriptor\n\t * that will be used for highlighting or a function that takes the model marker data as a parameter and returns a highlight descriptor.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n\t */\n\tmarkerToHighlight( config ) {\n\t\treturn this.add( downcastMarkerToHighlight( config ) );\n\t}\n}\n\n/**\n * Function factory that creates a default downcast converter for text insertion changes.\n *\n * The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'insert:$text', insertText() );\n *\n * @returns {Function} Insert text event converter.\n */\nexport function insertText() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( !conversionApi.consumable.consume( data.item, 'insert' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n\t\tconst viewText = viewWriter.createText( data.item.data );\n\n\t\tviewWriter.insert( viewPosition, viewText );\n\t};\n}\n\n/**\n * Function factory that creates a default downcast converter for node remove changes.\n *\n *\t\tmodelDispatcher.on( 'remove', remove() );\n *\n * @returns {Function} Remove event converter.\n */\nexport function remove() {\n\treturn ( evt, data, conversionApi ) => {\n\t\t// Find view range start position by mapping model position at which the remove happened.\n\t\tconst viewStart = conversionApi.mapper.toViewPosition( data.position );\n\n\t\tconst modelEnd = data.position.getShiftedBy( data.length );\n\t\tconst viewEnd = conversionApi.mapper.toViewPosition( modelEnd, { isPhantom: true } );\n\n\t\tconst viewRange = conversionApi.writer.createRange( viewStart, viewEnd );\n\n\t\t// Trim the range to remove in case some UI elements are on the view range boundaries.\n\t\tconst removed = conversionApi.writer.remove( viewRange.getTrimmed() );\n\n\t\t// After the range is removed, unbind all view elements from the model.\n\t\t// Range inside view document fragment is used to unbind deeply.\n\t\tfor ( const child of conversionApi.writer.createRangeIn( removed ).getItems() ) {\n\t\t\tconversionApi.mapper.unbindViewElement( child );\n\t\t}\n\t};\n}\n\n/**\n * Creates a `<span>` {@link module:engine/view/attributeelement~AttributeElement view attribute element} from the information\n * provided by the {@link module:engine/conversion/downcasthelpers~HighlightDescriptor highlight descriptor} object. If a priority\n * is not provided in the descriptor, the default priority will be used.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} descriptor\n * @returns {module:engine/view/attributeelement~AttributeElement}\n */\nexport function createViewElementFromHighlightDescriptor( writer, descriptor ) {\n\tconst viewElement = writer.createAttributeElement( 'span', descriptor.attributes );\n\n\tif ( descriptor.classes ) {\n\t\tviewElement._addClass( descriptor.classes );\n\t}\n\n\tif ( descriptor.priority ) {\n\t\tviewElement._priority = descriptor.priority;\n\t}\n\n\tviewElement._id = descriptor.id;\n\n\treturn viewElement;\n}\n\n/**\n * Function factory that creates a converter which converts a non-collapsed {@link module:engine/model/selection~Selection model selection}\n * to a {@link module:engine/view/documentselection~DocumentSelection view selection}. The converter consumes appropriate\n * value from the `consumable` object and maps model positions from the selection to view positions.\n *\n *\t\tmodelDispatcher.on( 'selection', convertRangeSelection() );\n *\n * @returns {Function} Selection converter.\n */\nexport function convertRangeSelection() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst selection = data.selection;\n\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( selection, 'selection' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewRanges = [];\n\n\t\tfor ( const range of selection.getRanges() ) {\n\t\t\tconst viewRange = conversionApi.mapper.toViewRange( range );\n\t\t\tviewRanges.push( viewRange );\n\t\t}\n\n\t\tconversionApi.writer.setSelection( viewRanges, { backward: selection.isBackward } );\n\t};\n}\n\n/**\n * Function factory that creates a converter which converts a collapsed {@link module:engine/model/selection~Selection model selection} to\n * a {@link module:engine/view/documentselection~DocumentSelection view selection}. The converter consumes appropriate\n * value from the `consumable` object, maps the model selection position to the view position and breaks\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements} at the selection position.\n *\n *\t\tmodelDispatcher.on( 'selection', convertCollapsedSelection() );\n *\n * An example of the view state before and after converting the collapsed selection:\n *\n *\t\t   <p><strong>f^oo<strong>bar</p>\n *\t\t-> <p><strong>f</strong>^<strong>oo</strong>bar</p>\n *\n * By breaking attribute elements like `<strong>`, the selection is in a correct element. Then, when the selection attribute is\n * converted, broken attributes might be merged again, or the position where the selection is may be wrapped\n * with different, appropriate attribute elements.\n *\n * See also {@link module:engine/conversion/downcasthelpers~clearAttributes} which does a clean-up\n * by merging attributes.\n *\n * @returns {Function} Selection converter.\n */\nexport function convertCollapsedSelection() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst selection = data.selection;\n\n\t\tif ( !selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( selection, 'selection' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst modelPosition = selection.getFirstPosition();\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( modelPosition );\n\t\tconst brokenPosition = viewWriter.breakAttributes( viewPosition );\n\n\t\tviewWriter.setSelection( brokenPosition );\n\t};\n}\n\n/**\n * Function factory that creates a converter which clears artifacts after the previous\n * {@link module:engine/model/selection~Selection model selection} conversion. It removes all empty\n * {@link module:engine/view/attributeelement~AttributeElement view attribute elements} and merges sibling attributes at all start and end\n * positions of all ranges.\n *\n *\t\t   <p><strong>^</strong></p>\n *\t\t-> <p>^</p>\n *\n *\t\t   <p><strong>foo</strong>^<strong>bar</strong>bar</p>\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\n *\n *\t\t   <p><strong>foo</strong><em>^</em><strong>bar</strong>bar</p>\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\n *\n * This listener should be assigned before any converter for the new selection:\n *\n *\t\tmodelDispatcher.on( 'selection', clearAttributes() );\n *\n * See {@link module:engine/conversion/downcasthelpers~convertCollapsedSelection}\n * which does the opposite by breaking attributes in the selection position.\n *\n * @returns {Function} Selection converter.\n */\nexport function clearAttributes() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst viewSelection = viewWriter.document.selection;\n\n\t\tfor ( const range of viewSelection.getRanges() ) {\n\t\t\t// Not collapsed selection should not have artifacts.\n\t\t\tif ( range.isCollapsed ) {\n\t\t\t\t// Position might be in the node removed by the view writer.\n\t\t\t\tif ( range.end.parent.isAttached() ) {\n\t\t\t\t\tconversionApi.writer.mergeAttributes( range.start );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tviewWriter.setSelection( null );\n\t};\n}\n\n/**\n * Function factory that creates a converter which converts set/change/remove attribute changes from the model to the view.\n * It can also be used to convert selection attributes. In that case, an empty attribute element will be created and the\n * selection will be put inside it.\n *\n * Attributes from the model are converted to a view element that will be wrapping these view nodes that are bound to\n * model elements having the given attribute. This is useful for attributes like `bold` that may be set on text nodes in the model\n * but are represented as an element in the view:\n *\n *\t\t[paragraph]              MODEL ====> VIEW        <p>\n *\t\t\t|- a {bold: true}                             |- <b>\n *\t\t\t|- b {bold: true}                             |   |- ab\n *\t\t\t|- c                                          |- c\n *\n * Passed `Function` will be provided with the attribute value and then all the parameters of the\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute `attribute` event}.\n * It is expected that the function returns an {@link module:engine/view/element~Element}.\n * The result of the function will be the wrapping element.\n * When the provided `Function` does not return any element, no conversion will take place.\n *\n * The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'attribute:bold', wrap( ( modelAttributeValue, viewWriter ) => {\n *\t\t\treturn viewWriter.createAttributeElement( 'strong' );\n *\t\t} );\n *\n * @protected\n * @param {Function} elementCreator Function returning a view element that will be used for wrapping.\n * @returns {Function} Set/change attribute converter.\n */\nexport function wrap( elementCreator ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\t// Recreate current wrapping node. It will be used to unwrap view range if the attribute value has changed\n\t\t// or the attribute was removed.\n\t\tconst oldViewElement = elementCreator( data.attributeOldValue, conversionApi.writer );\n\n\t\t// Create node to wrap with.\n\t\tconst newViewElement = elementCreator( data.attributeNewValue, conversionApi.writer );\n\n\t\tif ( !oldViewElement && !newViewElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst viewSelection = viewWriter.document.selection;\n\n\t\tif ( data.item instanceof ModelSelection || data.item instanceof DocumentSelection ) {\n\t\t\t// Selection attribute conversion.\n\t\t\tviewWriter.wrap( viewSelection.getFirstRange(), newViewElement );\n\t\t} else {\n\t\t\t// Node attribute conversion.\n\t\t\tlet viewRange = conversionApi.mapper.toViewRange( data.range );\n\n\t\t\t// First, unwrap the range from current wrapper.\n\t\t\tif ( data.attributeOldValue !== null && oldViewElement ) {\n\t\t\t\tviewRange = viewWriter.unwrap( viewRange, oldViewElement );\n\t\t\t}\n\n\t\t\tif ( data.attributeNewValue !== null && newViewElement ) {\n\t\t\t\tviewWriter.wrap( viewRange, newViewElement );\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * Function factory that creates a converter which converts node insertion changes from the model to the view.\n * The function passed will be provided with all the parameters of the dispatcher's\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert `insert` event}.\n * It is expected that the function returns an {@link module:engine/view/element~Element}.\n * The result of the function will be inserted into the view.\n *\n * The converter automatically consumes the corresponding value from the consumables list, stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}) and binds the model and view elements.\n *\n *\t\tdowncastDispatcher.on(\n *\t\t\t'insert:myElem',\n *\t\t\tinsertElement( ( modelItem, viewWriter ) => {\n *\t\t\t\tconst text = viewWriter.createText( 'myText' );\n *\t\t\t\tconst myElem = viewWriter.createElement( 'myElem', { myAttr: 'my-' + modelItem.getAttribute( 'myAttr' ) }, text );\n *\n *\t\t\t\t// Do something fancy with `myElem` using `modelItem` or other parameters.\n *\n *\t\t\t\treturn myElem;\n *\t\t\t}\n *\t\t) );\n *\n * @protected\n * @param {Function} elementCreator Function returning a view element, which will be inserted.\n * @returns {Function} Insert element event converter.\n */\nexport function insertElement( elementCreator ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst viewElement = elementCreator( data.item, conversionApi.writer );\n\n\t\tif ( !viewElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( data.item, 'insert' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n\n\t\tconversionApi.mapper.bindElements( data.item, viewElement );\n\t\tconversionApi.writer.insert( viewPosition, viewElement );\n\t};\n}\n\n/**\n * Function factory that creates a converter which converts marker adding change to the\n * {@link module:engine/view/uielement~UIElement view UI element}.\n *\n * The view UI element that will be added to the view depends on the passed parameter. See {@link ~insertElement}.\n * In case of a non-collapsed range, the UI element will not wrap nodes but separate elements will be placed at the beginning\n * and at the end of the range.\n *\n * This converter binds created UI elements with the marker name using {@link module:engine/conversion/mapper~Mapper#bindElementToMarker}.\n *\n * @protected\n * @param {module:engine/view/uielement~UIElement|Function} elementCreator A view UI element or a function returning the view element\n * that will be inserted.\n * @returns {Function} Insert element event converter.\n */\nexport function insertUIElement( elementCreator ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\t// Create two view elements. One will be inserted at the beginning of marker, one at the end.\n\t\t// If marker is collapsed, only \"opening\" element will be inserted.\n\t\tdata.isOpening = true;\n\t\tconst viewStartElement = elementCreator( data, conversionApi.writer );\n\n\t\tdata.isOpening = false;\n\t\tconst viewEndElement = elementCreator( data, conversionApi.writer );\n\n\t\tif ( !viewStartElement || !viewEndElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst markerRange = data.markerRange;\n\n\t\t// Marker that is collapsed has consumable build differently that non-collapsed one.\n\t\t// For more information see `addMarker` event description.\n\t\t// If marker's range is collapsed - check if it can be consumed.\n\t\tif ( markerRange.isCollapsed && !conversionApi.consumable.consume( markerRange, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If marker's range is not collapsed - consume all items inside.\n\t\tfor ( const value of markerRange ) {\n\t\t\tif ( !conversionApi.consumable.consume( value.item, evt.name ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst mapper = conversionApi.mapper;\n\t\tconst viewWriter = conversionApi.writer;\n\n\t\t// Add \"opening\" element.\n\t\tviewWriter.insert( mapper.toViewPosition( markerRange.start ), viewStartElement );\n\t\tconversionApi.mapper.bindElementToMarker( viewStartElement, data.markerName );\n\n\t\t// Add \"closing\" element only if range is not collapsed.\n\t\tif ( !markerRange.isCollapsed ) {\n\t\t\tviewWriter.insert( mapper.toViewPosition( markerRange.end ), viewEndElement );\n\t\t\tconversionApi.mapper.bindElementToMarker( viewEndElement, data.markerName );\n\t\t}\n\n\t\tevt.stop();\n\t};\n}\n\n// Function factory that returns a default downcast converter for removing a {@link module:engine/view/uielement~UIElement UI element}\n// basing on marker remove change.\n//\n// This converter unbinds elements from the marker name.\n//\n// @returns {Function} Removed UI element converter.\nfunction removeUIElement() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst elements = conversionApi.mapper.markerNameToElements( data.markerName );\n\n\t\tif ( !elements ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const element of elements ) {\n\t\t\tconversionApi.mapper.unbindElementFromMarkerName( element, data.markerName );\n\t\t\tconversionApi.writer.clear( conversionApi.writer.createRangeOn( element ), element );\n\t\t}\n\n\t\tconversionApi.writer.clearClonedElementsGroup( data.markerName );\n\n\t\tevt.stop();\n\t};\n}\n\n// Function factory that creates a converter which converts set/change/remove attribute changes from the model to the view.\n//\n// Attributes from the model are converted to the view element attributes in the view. You may provide a custom function to generate\n// a key-value attribute pair to add/change/remove. If not provided, model attributes will be converted to view element\n// attributes on a one-to-one basis.\n//\n// *Note:** The provided attribute creator should always return the same `key` for a given attribute from the model.\n//\n// The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n// {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n//\n//\t\tmodelDispatcher.on( 'attribute:customAttr:myElem', changeAttribute( ( value, data ) => {\n//\t\t\t// Change attribute key from `customAttr` to `class` in the view.\n//\t\t\tconst key = 'class';\n//\t\t\tlet value = data.attributeNewValue;\n//\n//\t\t\t// Force attribute value to 'empty' if the model element is empty.\n//\t\t\tif ( data.item.childCount === 0 ) {\n//\t\t\t\tvalue = 'empty';\n//\t\t\t}\n//\n//\t\t\t// Return the key-value pair.\n//\t\t\treturn { key, value };\n//\t\t} ) );\n//\n// @param {Function} [attributeCreator] Function returning an object with two properties: `key` and `value`, which\n// represent the attribute key and attribute value to be set on a {@link module:engine/view/element~Element view element}.\n// The function is passed the model attribute value as the first parameter and additional data about the change as the second parameter.\n// @returns {Function} Set/change attribute converter.\nfunction changeAttribute( attributeCreator ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst oldAttribute = attributeCreator( data.attributeOldValue, data );\n\t\tconst newAttribute = attributeCreator( data.attributeNewValue, data );\n\n\t\tif ( !oldAttribute && !newAttribute ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewElement = conversionApi.mapper.toViewElement( data.item );\n\t\tconst viewWriter = conversionApi.writer;\n\n\t\t// If model item cannot be mapped to a view element, it means item is not an `Element` instance but a `TextProxy` node.\n\t\t// Only elements can have attributes in a view so do not proceed for anything else (#1587).\n\t\tif ( !viewElement ) {\n\t\t\t/**\n\t\t\t * This error occurs when a {@link module:engine/model/textproxy~TextProxy text node's} attribute is to be downcasted\n\t\t\t * by {@link module:engine/conversion/conversion~Conversion#attributeToAttribute `Attribute to Attribute converter`}.\n\t\t\t * In most cases it is caused by converters misconfiguration when only \"generic\" converter is defined:\n\t\t\t *\n\t\t\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t\t\t *\t\t\tmodel: 'attribute-name',\n\t\t\t *\t\t\tview: 'attribute-name'\n\t\t\t *\t\t} ) );\n\t\t\t *\n\t\t\t * and given attribute is used on text node, for example:\n\t\t\t *\n\t\t\t *\t\tmodel.change( writer => {\n\t\t\t *\t\t\twriter.insertText( 'Foo', { 'attribute-name': 'bar' }, parent, 0 );\n\t\t\t *\t\t} );\n\t\t\t *\n\t\t\t * In such cases, to convert the same attribute for both {@link module:engine/model/element~Element}\n\t\t\t * and {@link module:engine/model/textproxy~TextProxy `Text`} nodes, text specific\n\t\t\t * {@link module:engine/conversion/conversion~Conversion#attributeToElement `Attribute to Element converter`}\n\t\t\t * with higher {@link module:utils/priorities~PriorityString priority} must also be defined:\n\t\t\t *\n\t\t\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t\t\t *\t\t\tmodel: {\n\t\t\t *\t\t\t\tkey: 'attribute-name',\n\t\t\t *\t\t\t\tname: '$text'\n\t\t\t *\t\t\t},\n\t\t\t *\t\t\tview: ( value, writer ) => {\n\t\t\t *\t\t\t\treturn writer.createAttributeElement( 'span', { 'attribute-name': value } );\n\t\t\t *\t\t\t},\n\t\t\t *\t\t\tconverterPriority: 'high'\n\t\t\t *\t\t} ) );\n\t\t\t *\n\t\t\t * @error conversion-attribute-to-attribute-on-text\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'conversion-attribute-to-attribute-on-text: ' +\n\t\t\t\t'Trying to convert text node\\'s attribute with attribute-to-attribute converter.',\n\t\t\t\t[ data, conversionApi ]\n\t\t\t);\n\t\t}\n\n\t\t// First remove the old attribute if there was one.\n\t\tif ( data.attributeOldValue !== null && oldAttribute ) {\n\t\t\tif ( oldAttribute.key == 'class' ) {\n\t\t\t\tconst classes = Array.isArray( oldAttribute.value ) ? oldAttribute.value : [ oldAttribute.value ];\n\n\t\t\t\tfor ( const className of classes ) {\n\t\t\t\t\tviewWriter.removeClass( className, viewElement );\n\t\t\t\t}\n\t\t\t} else if ( oldAttribute.key == 'style' ) {\n\t\t\t\tconst keys = Object.keys( oldAttribute.value );\n\n\t\t\t\tfor ( const key of keys ) {\n\t\t\t\t\tviewWriter.removeStyle( key, viewElement );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tviewWriter.removeAttribute( oldAttribute.key, viewElement );\n\t\t\t}\n\t\t}\n\n\t\t// Then set the new attribute.\n\t\tif ( data.attributeNewValue !== null && newAttribute ) {\n\t\t\tif ( newAttribute.key == 'class' ) {\n\t\t\t\tconst classes = Array.isArray( newAttribute.value ) ? newAttribute.value : [ newAttribute.value ];\n\n\t\t\t\tfor ( const className of classes ) {\n\t\t\t\t\tviewWriter.addClass( className, viewElement );\n\t\t\t\t}\n\t\t\t} else if ( newAttribute.key == 'style' ) {\n\t\t\t\tconst keys = Object.keys( newAttribute.value );\n\n\t\t\t\tfor ( const key of keys ) {\n\t\t\t\t\tviewWriter.setStyle( key, newAttribute.value[ key ], viewElement );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tviewWriter.setAttribute( newAttribute.key, newAttribute.value, viewElement );\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Function factory that creates a converter which converts the text inside marker's range. The converter wraps the text with\n// {@link module:engine/view/attributeelement~AttributeElement} created from the provided descriptor.\n// See {link module:engine/conversion/downcasthelpers~createViewElementFromHighlightDescriptor}.\n//\n// It can also be used to convert the selection that is inside a marker. In that case, an empty attribute element will be\n// created and the selection will be put inside it.\n//\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\n//\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n//\n// This converter binds the created {@link module:engine/view/attributeelement~AttributeElement attribute elemens} with the marker name\n// using the {@link module:engine/conversion/mapper~Mapper#bindElementToMarker} method.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\n// @returns {Function}\nfunction highlightText( highlightDescriptor ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( !data.item ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !( data.item instanceof ModelSelection || data.item instanceof DocumentSelection ) && !data.item.is( 'textProxy' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst descriptor = prepareDescriptor( highlightDescriptor, data, conversionApi );\n\n\t\tif ( !descriptor ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst viewElement = createViewElementFromHighlightDescriptor( viewWriter, descriptor );\n\t\tconst viewSelection = viewWriter.document.selection;\n\n\t\tif ( data.item instanceof ModelSelection || data.item instanceof DocumentSelection ) {\n\t\t\tviewWriter.wrap( viewSelection.getFirstRange(), viewElement, viewSelection );\n\t\t} else {\n\t\t\tconst viewRange = conversionApi.mapper.toViewRange( data.range );\n\t\t\tconst rangeAfterWrap = viewWriter.wrap( viewRange, viewElement );\n\n\t\t\tfor ( const element of rangeAfterWrap.getItems() ) {\n\t\t\t\tif ( element.is( 'attributeElement' ) && element.isSimilar( viewElement ) ) {\n\t\t\t\t\tconversionApi.mapper.bindElementToMarker( element, data.markerName );\n\n\t\t\t\t\t// One attribute element is enough, because all of them are bound together by the view writer.\n\t\t\t\t\t// Mapper uses this binding to get all the elements no matter how many of them are registered in the mapper.\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Converter function factory. It creates a function which applies the marker's highlight to an element inside the marker's range.\n//\n// The converter checks if an element has the `addHighlight` function stored as a\n// {@link module:engine/view/element~Element#_setCustomProperty custom property} and, if so, uses it to apply the highlight.\n// In such case the converter will consume all element's children, assuming that they were handled by the element itself.\n//\n// When the `addHighlight` custom property is not present, the element is not converted in any special way.\n// This means that converters will proceed to convert the element's child nodes.\n//\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\n//\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n//\n// This converter binds altered {@link module:engine/view/containerelement~ContainerElement container elements} with the marker name using\n// the {@link module:engine/conversion/mapper~Mapper#bindElementToMarker} method.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\n// @returns {Function}\nfunction highlightElement( highlightDescriptor ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( !data.item ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !( data.item instanceof ModelElement ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst descriptor = prepareDescriptor( highlightDescriptor, data, conversionApi );\n\n\t\tif ( !descriptor ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.test( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewElement = conversionApi.mapper.toViewElement( data.item );\n\n\t\tif ( viewElement && viewElement.getCustomProperty( 'addHighlight' ) ) {\n\t\t\t// Consume element itself.\n\t\t\tconversionApi.consumable.consume( data.item, evt.name );\n\n\t\t\t// Consume all children nodes.\n\t\t\tfor ( const value of ModelRange._createIn( data.item ) ) {\n\t\t\t\tconversionApi.consumable.consume( value.item, evt.name );\n\t\t\t}\n\n\t\t\tviewElement.getCustomProperty( 'addHighlight' )( viewElement, descriptor, conversionApi.writer );\n\n\t\t\tconversionApi.mapper.bindElementToMarker( viewElement, data.markerName );\n\t\t}\n\t};\n}\n\n// Function factory that creates a converter which converts the removing model marker to the view.\n//\n// Both text nodes and elements are handled by this converter but they are handled a bit differently.\n//\n// Text nodes are unwrapped using the {@link module:engine/view/attributeelement~AttributeElement attribute element} created from the\n// provided highlight descriptor. See {link module:engine/conversion/downcasthelpers~HighlightDescriptor}.\n//\n// For elements, the converter checks if an element has the `removeHighlight` function stored as a\n// {@link module:engine/view/element~Element#_setCustomProperty custom property}. If so, it uses it to remove the highlight.\n// In such case, the children of that element will not be converted.\n//\n// When `removeHighlight` is not present, the element is not converted in any special way.\n// The converter will proceed to convert the element's child nodes instead.\n//\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\n//\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n//\n// This converter unbinds elements from the marker name.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\n// @returns {Function}\nfunction removeHighlight( highlightDescriptor ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\t// This conversion makes sense only for non-collapsed range.\n\t\tif ( data.markerRange.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst descriptor = prepareDescriptor( highlightDescriptor, data, conversionApi );\n\n\t\tif ( !descriptor ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// View element that will be used to unwrap `AttributeElement`s.\n\t\tconst viewHighlightElement = createViewElementFromHighlightDescriptor( conversionApi.writer, descriptor );\n\n\t\t// Get all elements bound with given marker name.\n\t\tconst elements = conversionApi.mapper.markerNameToElements( data.markerName );\n\n\t\tif ( !elements ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const element of elements ) {\n\t\t\tconversionApi.mapper.unbindElementFromMarkerName( element, data.markerName );\n\n\t\t\tif ( element.is( 'attributeElement' ) ) {\n\t\t\t\tconversionApi.writer.unwrap( conversionApi.writer.createRangeOn( element ), viewHighlightElement );\n\t\t\t} else {\n\t\t\t\t// if element.is( 'containerElement' ).\n\t\t\t\telement.getCustomProperty( 'removeHighlight' )( element, descriptor.id, conversionApi.writer );\n\t\t\t}\n\t\t}\n\n\t\tconversionApi.writer.clearClonedElementsGroup( data.markerName );\n\n\t\tevt.stop();\n\t};\n}\n\n// Model element to view element conversion helper.\n//\n// See {@link ~DowncastHelpers#elementToElement `.elementToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String} config.model The name of the model element to convert.\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n// that takes the model element and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n// as parameters and returns a view container element.\n// @returns {Function} Conversion helper.\nfunction downcastElementToElement( config ) {\n\tconfig = cloneDeep( config );\n\n\tconfig.view = normalizeToElementConfig( config.view, 'container' );\n\n\treturn dispatcher => {\n\t\tdispatcher.on( 'insert:' + config.model, insertElement( config.view ), { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// Model attribute to view element conversion helper.\n//\n// See {@link ~DowncastHelpers#attributeToElement `.attributeToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values }` object. `values` is an array\n// of `String`s with possible values if the model attribute is an enumerable.\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function|Object} config.view A view element definition or a function\n// that takes the model attribute value and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n// as parameters and returns a view attribute element. If `config.model.values` is\n// given, `config.view` should be an object assigning values from `config.model.values` to view element definitions or functions.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction downcastAttributeToElement( config ) {\n\tconfig = cloneDeep( config );\n\n\tconst modelKey = config.model.key ? config.model.key : config.model;\n\tlet eventName = 'attribute:' + modelKey;\n\n\tif ( config.model.name ) {\n\t\teventName += ':' + config.model.name;\n\t}\n\n\tif ( config.model.values ) {\n\t\tfor ( const modelValue of config.model.values ) {\n\t\t\tconfig.view[ modelValue ] = normalizeToElementConfig( config.view[ modelValue ], 'attribute' );\n\t\t}\n\t} else {\n\t\tconfig.view = normalizeToElementConfig( config.view, 'attribute' );\n\t}\n\n\tconst elementCreator = getFromAttributeCreator( config );\n\n\treturn dispatcher => {\n\t\tdispatcher.on( eventName, wrap( elementCreator ), { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// Model attribute to view attribute conversion helper.\n//\n// See {@link ~DowncastHelpers#attributeToAttribute `.attributeToAttribute()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values, [ name ] }` object describing\n// the attribute key, possible values and, optionally, an element name to convert from.\n// @param {String|Object|Function} config.view A view attribute key, or a `{ key, value }` object or a function that takes\n// the model attribute value and returns a `{ key, value }` object. If `key` is `'class'`, `value` can be a `String` or an\n// array of `String`s. If `key` is `'style'`, `value` is an object with key-value pairs. In other cases, `value` is a `String`.\n// If `config.model.values` is set, `config.view` should be an object assigning values from `config.model.values` to\n// `{ key, value }` objects or a functions.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction downcastAttributeToAttribute( config ) {\n\tconfig = cloneDeep( config );\n\n\tconst modelKey = config.model.key ? config.model.key : config.model;\n\tlet eventName = 'attribute:' + modelKey;\n\n\tif ( config.model.name ) {\n\t\teventName += ':' + config.model.name;\n\t}\n\n\tif ( config.model.values ) {\n\t\tfor ( const modelValue of config.model.values ) {\n\t\t\tconfig.view[ modelValue ] = normalizeToAttributeConfig( config.view[ modelValue ] );\n\t\t}\n\t} else {\n\t\tconfig.view = normalizeToAttributeConfig( config.view );\n\t}\n\n\tconst elementCreator = getFromAttributeCreator( config );\n\n\treturn dispatcher => {\n\t\tdispatcher.on( eventName, changeAttribute( elementCreator ), { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// Model marker to view element conversion helper.\n//\n// See {@link ~DowncastHelpers#markerToElement `.markerToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String} config.model The name of the model marker (or model marker group) to convert.\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n// that takes the model marker data as a parameter and returns a view UI element.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction downcastMarkerToElement( config ) {\n\tconfig = cloneDeep( config );\n\n\tconfig.view = normalizeToElementConfig( config.view, 'ui' );\n\n\treturn dispatcher => {\n\t\tdispatcher.on( 'addMarker:' + config.model, insertUIElement( config.view ), { priority: config.converterPriority || 'normal' } );\n\t\tdispatcher.on( 'removeMarker:' + config.model, removeUIElement( config.view ), { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// Model marker to highlight conversion helper.\n//\n// See {@link ~DowncastHelpers#markerToElement `.markerToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String} config.model The name of the model marker (or model marker group) to convert.\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} config.view A highlight descriptor\n// that will be used for highlighting or a function that takes the model marker data as a parameter and returns a highlight descriptor.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction downcastMarkerToHighlight( config ) {\n\treturn dispatcher => {\n\t\tdispatcher.on( 'addMarker:' + config.model, highlightText( config.view ), { priority: config.converterPriority || 'normal' } );\n\t\tdispatcher.on( 'addMarker:' + config.model, highlightElement( config.view ), { priority: config.converterPriority || 'normal' } );\n\t\tdispatcher.on( 'removeMarker:' + config.model, removeHighlight( config.view ), { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// Takes `config.view`, and if it is an {@link module:engine/view/elementdefinition~ElementDefinition}, converts it\n// to a function (because lower level converters accept only element creator functions).\n//\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} view View configuration.\n// @param {'container'|'attribute'|'ui'} viewElementType View element type to create.\n// @returns {Function} Element creator function to use in lower level converters.\nfunction normalizeToElementConfig( view, viewElementType ) {\n\tif ( typeof view == 'function' ) {\n\t\t// If `view` is already a function, don't do anything.\n\t\treturn view;\n\t}\n\n\treturn ( modelData, viewWriter ) => createViewElementFromDefinition( view, viewWriter, viewElementType );\n}\n\n// Creates a view element instance from the provided {@link module:engine/view/elementdefinition~ElementDefinition} and class.\n//\n// @param {module:engine/view/elementdefinition~ElementDefinition} viewElementDefinition\n// @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter\n// @param {'container'|'attribute'|'ui'} viewElementType\n// @returns {module:engine/view/element~Element}\nfunction createViewElementFromDefinition( viewElementDefinition, viewWriter, viewElementType ) {\n\tif ( typeof viewElementDefinition == 'string' ) {\n\t\t// If `viewElementDefinition` is given as a `String`, normalize it to an object with `name` property.\n\t\tviewElementDefinition = { name: viewElementDefinition };\n\t}\n\n\tlet element;\n\tconst attributes = Object.assign( {}, viewElementDefinition.attributes );\n\n\tif ( viewElementType == 'container' ) {\n\t\telement = viewWriter.createContainerElement( viewElementDefinition.name, attributes );\n\t} else if ( viewElementType == 'attribute' ) {\n\t\tconst options = {\n\t\t\tpriority: viewElementDefinition.priority || ViewAttributeElement.DEFAULT_PRIORITY\n\t\t};\n\n\t\telement = viewWriter.createAttributeElement( viewElementDefinition.name, attributes, options );\n\t} else {\n\t\t// 'ui'.\n\t\telement = viewWriter.createUIElement( viewElementDefinition.name, attributes );\n\t}\n\n\tif ( viewElementDefinition.styles ) {\n\t\tconst keys = Object.keys( viewElementDefinition.styles );\n\n\t\tfor ( const key of keys ) {\n\t\t\tviewWriter.setStyle( key, viewElementDefinition.styles[ key ], element );\n\t\t}\n\t}\n\n\tif ( viewElementDefinition.classes ) {\n\t\tconst classes = viewElementDefinition.classes;\n\n\t\tif ( typeof classes == 'string' ) {\n\t\t\tviewWriter.addClass( classes, element );\n\t\t} else {\n\t\t\tfor ( const className of classes ) {\n\t\t\t\tviewWriter.addClass( className, element );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction getFromAttributeCreator( config ) {\n\tif ( config.model.values ) {\n\t\treturn ( modelAttributeValue, viewWriter ) => {\n\t\t\tconst view = config.view[ modelAttributeValue ];\n\n\t\t\tif ( view ) {\n\t\t\t\treturn view( modelAttributeValue, viewWriter );\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\t} else {\n\t\treturn config.view;\n\t}\n}\n\n// Takes the configuration, adds default parameters if they do not exist and normalizes other parameters to be used in downcast converters\n// for generating a view attribute.\n//\n// @param {Object} view View configuration.\nfunction normalizeToAttributeConfig( view ) {\n\tif ( typeof view == 'string' ) {\n\t\treturn modelAttributeValue => ( { key: view, value: modelAttributeValue } );\n\t} else if ( typeof view == 'object' ) {\n\t\t// { key, value, ... }\n\t\tif ( view.value ) {\n\t\t\treturn () => view;\n\t\t}\n\t\t// { key, ... }\n\t\telse {\n\t\t\treturn modelAttributeValue => ( { key: view.key, value: modelAttributeValue } );\n\t\t}\n\t} else {\n\t\t// function.\n\t\treturn view;\n\t}\n}\n\n// Helper function for `highlight`. Prepares the actual descriptor object using value passed to the converter.\nfunction prepareDescriptor( highlightDescriptor, data, conversionApi ) {\n\t// If passed descriptor is a creator function, call it. If not, just use passed value.\n\tconst descriptor = typeof highlightDescriptor == 'function' ?\n\t\thighlightDescriptor( data, conversionApi ) :\n\t\thighlightDescriptor;\n\n\tif ( !descriptor ) {\n\t\treturn null;\n\t}\n\n\t// Apply default descriptor priority.\n\tif ( !descriptor.priority ) {\n\t\tdescriptor.priority = 10;\n\t}\n\n\t// Default descriptor id is marker name.\n\tif ( !descriptor.id ) {\n\t\tdescriptor.id = data.markerName;\n\t}\n\n\treturn descriptor;\n}\n\n/**\n * An object describing how the marker highlight should be represented in the view.\n *\n * Each text node contained in a highlighted range will be wrapped in a `<span>`\n * {@link module:engine/view/attributeelement~AttributeElement view attribute element} with CSS class(es), attributes and a priority\n * described by this object.\n *\n * Additionally, each {@link module:engine/view/containerelement~ContainerElement container element} can handle displaying the highlight\n * separately by providing the `addHighlight` and `removeHighlight` custom properties. In this case:\n *\n *  * The `HighlightDescriptor` object is passed to the `addHighlight` function upon conversion and should be used to apply the highlight to\n *  the element.\n *  * The descriptor `id` is passed to the `removeHighlight` function upon conversion and should be used to remove the highlight with the\n *  given ID from the element.\n *\n * @typedef {Object} module:engine/conversion/downcasthelpers~HighlightDescriptor\n *\n * @property {String|Array.<String>} classes A CSS class or an array of classes to set. If the descriptor is used to\n * create an {@link module:engine/view/attributeelement~AttributeElement attribute element} over text nodes, these classes will be set\n * on that attribute element. If the descriptor is applied to an element, usually these classes will be set on that element, however,\n * this depends on how the element converts the descriptor.\n *\n * @property {String} [id] Descriptor identifier. If not provided, it defaults to the converted marker's name.\n *\n * @property {Number} [priority] Descriptor priority. If not provided, it defaults to `10`. If the descriptor is used to create\n * an {@link module:engine/view/attributeelement~AttributeElement attribute element}, it will be that element's\n * {@link module:engine/view/attributeelement~AttributeElement#priority priority}. If the descriptor is applied to an element,\n * the priority will be used to determine which descriptor is more important.\n *\n * @property {Object} [attributes] Attributes to set. If the descriptor is used to create\n * an {@link module:engine/view/attributeelement~AttributeElement attribute element} over text nodes, these attributes will be set on that\n * attribute element. If the descriptor is applied to an element, usually these attributes will be set on that element, however,\n * this depends on how the element converts the descriptor.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport Matcher from '../view/matcher';\nimport ModelRange from '../model/range';\nimport ConversionHelpers from './conversionhelpers';\n\nimport { cloneDeep } from 'lodash-es';\nimport ModelSelection from '../model/selection';\n\n/**\n * Contains {@link module:engine/view/view view} to {@link module:engine/model/model model} converters for\n * {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}.\n *\n * @module engine/conversion/upcasthelpers\n */\n\n/**\n * Upcast conversion helper functions.\n *\n * @extends module:engine/conversion/conversionhelpers~ConversionHelpers\n */\nexport default class UpcastHelpers extends ConversionHelpers {\n\t/**\n\t * View element to model element conversion helper.\n\t *\n\t * This conversion results in creating a model element. For example,\n\t * view `<p>Foo</p>` becomes `<paragraph>Foo</paragraph>` in the model.\n\t *\n\t * Keep in mind that the element will be inserted only if it is allowed\n\t * by {@link module:engine/model/schema~Schema schema} configuration.\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t *\t\t\tview: 'p',\n\t *\t\t\tmodel: 'paragraph'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t *\t\t\tview: 'p',\n\t *\t\t\tmodel: 'paragraph',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'p',\n\t *\t\t\t\tclasses: 'fancy'\n\t *\t\t\t},\n\t *\t\t\tmodel: 'fancyParagraph'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t * \t\t\tview: {\n\t *\t\t\t\tname: 'p',\n\t *\t\t\t\tclasses: 'heading'\n\t * \t\t\t},\n\t * \t\t\tmodel: ( viewElement, modelWriter ) => {\n\t * \t\t\t\treturn modelWriter.createElement( 'heading', { level: viewElement.getAttribute( 'data-level' ) } );\n\t * \t\t\t}\n\t * \t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #elementToElement\n\t * @param {Object} config Conversion configuration.\n\t * @param {module:engine/view/matcher~MatcherPattern} [config.view] Pattern matching all view elements which should be converted. If not\n\t * set, the converter will fire for every view element.\n\t * @param {String|module:engine/model/element~Element|Function} config.model Name of the model element, a model element\n\t * instance or a function that takes a view element and returns a model element. The model element will be inserted in the model.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\telementToElement( config ) {\n\t\treturn this.add( upcastElementToElement( config ) );\n\t}\n\n\t/**\n\t * View element to model attribute conversion helper.\n\t *\n\t * This conversion results in setting an attribute on a model node. For example, view `<strong>Foo</strong>` becomes\n\t * `Foo` {@link module:engine/model/text~Text model text node} with `bold` attribute set to `true`.\n\t *\n\t * This helper is meant to set a model attribute on all the elements that are inside the converted element:\n\t *\n\t *\t\t<strong>Foo</strong>   -->   <strong><p>Foo</p></strong>   -->   <paragraph><$text bold=\"true\">Foo</$text></paragraph>\n\t *\n\t * Above is a sample of HTML code, that goes through autoparagraphing (first step) and then is converted (second step).\n\t * Even though `<strong>` is over `<p>` element, `bold=\"true\"` was added to the text. See\n\t * {@link module:engine/conversion/upcasthelpers~UpcastHelpers#attributeToAttribute} for comparison.\n\t *\n\t * Keep in mind that the attribute will be set only if it is allowed by {@link module:engine/model/schema~Schema schema} configuration.\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t *\t\t\tview: 'strong',\n\t *\t\t\tmodel: 'bold'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t *\t\t\tview: 'strong',\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tclasses: 'bold'\n\t *\t\t\t},\n\t *\t\t\tmodel: 'bold'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tclasses: [ 'styled', 'styled-dark' ]\n\t *\t\t\t},\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'styled',\n\t *\t\t\t\tvalue: 'dark'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * \t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tstyles: {\n\t *\t\t\t\t\t'font-size': /[\\s\\S]+/\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'fontSize',\n\t *\t\t\t\tvalue: viewElement => {\n\t *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n\t *\t\t\t\t\tconst value = fontSize.substr( 0, fontSize.length - 2 );\n\t *\n\t *\t\t\t\t\tif ( value <= 10 ) {\n\t *\t\t\t\t\t\treturn 'small';\n\t *\t\t\t\t\t} else if ( value > 12 ) {\n\t *\t\t\t\t\t\treturn 'big';\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\treturn null;\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #elementToAttribute\n\t * @param {Object} config Conversion configuration.\n\t * @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n\t * @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n\t * the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n\t * If `String` is given, the model attribute value will be set to `true`.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\telementToAttribute( config ) {\n\t\treturn this.add( upcastElementToAttribute( config ) );\n\t}\n\n\t/**\n\t * View attribute to model attribute conversion helper.\n\t *\n\t * This conversion results in setting an attribute on a model node. For example, view `<img src=\"foo.jpg\"></img>` becomes\n\t * `<image source=\"foo.jpg\"></image>` in the model.\n\t *\n\t * This helper is meant to convert view attributes from view elements which got converted to the model, so the view attribute\n\t * is set only on the corresponding model node:\n\t *\n\t *\t\t<div class=\"dark\"><div>foo</div></div>    -->    <div dark=\"true\"><div>foo</div></div>\n\t *\n\t * Above, `class=\"dark\"` attribute is added only to the `<div>` elements that has it. This is in contrary to\n\t * {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToAttribute} which sets attributes for\n\t * all the children in the model:\n\t *\n\t *\t\t<strong>Foo</strong>   -->   <strong><p>Foo</p></strong>   -->   <paragraph><$text bold=\"true\">Foo</$text></paragraph>\n\t *\n\t * Above is a sample of HTML code, that goes through autoparagraphing (first step) and then is converted (second step).\n\t * Even though `<strong>` is over `<p>` element, `bold=\"true\"` was added to the text.\n\t *\n\t * Keep in mind that the attribute will be set only if it is allowed by {@link module:engine/model/schema~Schema schema} configuration.\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: 'src',\n\t *\t\t\tmodel: 'source'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: { key: 'src' },\n\t *\t\t\tmodel: 'source'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: { key: 'src' },\n\t *\t\t\tmodel: 'source',\n\t *\t\t\tconverterPriority: 'normal'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tkey: 'data-style',\n\t *\t\t\t\tvalue: /[\\s\\S]+/\n\t *\t\t\t},\n\t *\t\t\tmodel: 'styled'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'img',\n\t *\t\t\t\tkey: 'class',\n\t *\t\t\t\tvalue: 'styled-dark'\n\t *\t\t\t},\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'styled',\n\t *\t\t\t\tvalue: 'dark'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tkey: 'class',\n\t *\t\t\t\tvalue: /styled-[\\S]+/\n\t *\t\t\t},\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'styled'\n\t *\t\t\t\tvalue: viewElement => {\n\t *\t\t\t\t\tconst regexp = /styled-([\\S]+)/;\n\t *\t\t\t\t\tconst match = viewElement.getAttribute( 'class' ).match( regexp );\n\t *\n\t *\t\t\t\t\treturn match[ 1 ];\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Converting styles works a bit differently as it requires `view.styles` to be an object and by default\n\t * a model attribute will be set to `true` by such a converter. You can set the model attribute to any value by providing the `value`\n\t * callback that returns the desired value.\n\t *\n\t *\t\t// Default conversion of font-weight style will result in setting bold attribute to true.\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tstyles: {\n\t *\t\t\t\t\t'font-weight': 'bold'\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tmodel: 'bold'\n\t *\t\t} );\n\t *\n\t *\t\t// This converter will pass any style value to the `lineHeight` model attribute.\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tstyles: {\n\t *\t\t\t\t\t'line-height': /[\\s\\S]+/\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'lineHeight',\n\t *\t\t\t\tvalue: viewElement => viewElement.getStyle( 'line-height' )\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #attributeToAttribute\n\t * @param {Object} config Conversion configuration.\n\t * @param {String|Object} config.view Specifies which view attribute will be converted. If a `String` is passed,\n\t * attributes with given key will be converted. If an `Object` is passed, it must have a required `key` property,\n\t * specifying view attribute key, and may have an optional `value` property, specifying view attribute value and optional `name`\n\t * property specifying a view element name from/on which the attribute should be converted. `value` can be given as a `String`,\n\t * a `RegExp` or a function callback, that takes view attribute value as the only parameter and returns `Boolean`.\n\t * @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n\t * the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n\t * If `String` is given, the model attribute value will be same as view attribute value.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\tattributeToAttribute( config ) {\n\t\treturn this.add( upcastAttributeToAttribute( config ) );\n\t}\n\n\t/**\n\t * View element to model marker conversion helper.\n\t *\n\t * This conversion results in creating a model marker. For example, if the marker was stored in a view as an element:\n\t * `<p>Fo<span data-marker=\"comment\" data-comment-id=\"7\"></span>o</p><p>B<span data-marker=\"comment\" data-comment-id=\"7\"></span>ar</p>`,\n\t * after the conversion is done, the marker will be available in\n\t * {@link module:engine/model/model~Model#markers model document markers}.\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n\t *\t\t\tview: 'marker-search',\n\t *\t\t\tmodel: 'search'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n\t *\t\t\tview: 'marker-search',\n\t *\t\t\tmodel: 'search',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n\t *\t\t\tview: 'marker-search',\n\t *\t\t\tmodel: viewElement => 'comment:' + viewElement.getAttribute( 'data-comment-id' )\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tattributes: {\n\t *\t\t\t\t\t'data-marker': 'search'\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tmodel: 'search'\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #elementToMarker\n\t * @param {Object} config Conversion configuration.\n\t * @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n\t * @param {String|Function} config.model Name of the model marker, or a function that takes a view element and returns\n\t * a model marker name.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\telementToMarker( config ) {\n\t\treturn this.add( upcastElementToMarker( config ) );\n\t}\n}\n\n/**\n * Function factory, creates a converter that converts {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\n * or all children of {@link module:engine/view/element~Element} into\n * {@link module:engine/model/documentfragment~DocumentFragment model document fragment}.\n * This is the \"entry-point\" converter for upcast (view to model conversion). This converter starts the conversion of all children\n * of passed view document fragment. Those children {@link module:engine/view/node~Node view nodes} are then handled by other converters.\n *\n * This also a \"default\", last resort converter for all view elements that has not been converted by other converters.\n * When a view element is being converted to the model but it does not have converter specified, that view element\n * will be converted to {@link module:engine/model/documentfragment~DocumentFragment model document fragment} and returned.\n *\n * @returns {Function} Universal converter for view {@link module:engine/view/documentfragment~DocumentFragment fragments} and\n * {@link module:engine/view/element~Element elements} that returns\n * {@link module:engine/model/documentfragment~DocumentFragment model fragment} with children of converted view item.\n */\nexport function convertToModelFragment() {\n\treturn ( evt, data, conversionApi ) => {\n\t\t// Second argument in `consumable.consume` is discarded for ViewDocumentFragment but is needed for ViewElement.\n\t\tif ( !data.modelRange && conversionApi.consumable.consume( data.viewItem, { name: true } ) ) {\n\t\t\tconst { modelRange, modelCursor } = conversionApi.convertChildren( data.viewItem, data.modelCursor );\n\n\t\t\tdata.modelRange = modelRange;\n\t\t\tdata.modelCursor = modelCursor;\n\t\t}\n\t};\n}\n\n/**\n * Function factory, creates a converter that converts {@link module:engine/view/text~Text} to {@link module:engine/model/text~Text}.\n *\n * @returns {Function} {@link module:engine/view/text~Text View text} converter.\n */\nexport function convertText() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( conversionApi.schema.checkChild( data.modelCursor, '$text' ) ) {\n\t\t\tif ( conversionApi.consumable.consume( data.viewItem ) ) {\n\t\t\t\tconst text = conversionApi.writer.createText( data.viewItem.data );\n\n\t\t\t\tconversionApi.writer.insert( text, data.modelCursor );\n\n\t\t\t\tdata.modelRange = ModelRange._createFromPositionAndShift( data.modelCursor, text.offsetSize );\n\t\t\t\tdata.modelCursor = data.modelRange.end;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * Function factory, creates a callback function which converts a {@link module:engine/view/selection~Selection\n * view selection} taken from the {@link module:engine/view/document~Document#event:selectionChange} event\n * and sets in on the {@link module:engine/model/document~Document#selection model}.\n *\n * **Note**: because there is no view selection change dispatcher nor any other advanced view selection to model\n * conversion mechanism, the callback should be set directly on view document.\n *\n *\t\tview.document.on( 'selectionChange', convertSelectionChange( modelDocument, mapper ) );\n *\n * @param {module:engine/model/model~Model} model Data model.\n * @param {module:engine/conversion/mapper~Mapper} mapper Conversion mapper.\n * @returns {Function} {@link module:engine/view/document~Document#event:selectionChange} callback function.\n */\nexport function convertSelectionChange( model, mapper ) {\n\treturn ( evt, data ) => {\n\t\tconst viewSelection = data.newSelection;\n\t\tconst modelSelection = new ModelSelection();\n\n\t\tconst ranges = [];\n\n\t\tfor ( const viewRange of viewSelection.getRanges() ) {\n\t\t\tranges.push( mapper.toModelRange( viewRange ) );\n\t\t}\n\n\t\tmodelSelection.setTo( ranges, { backward: viewSelection.isBackward } );\n\n\t\tif ( !modelSelection.isEqual( model.document.selection ) ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.setSelection( modelSelection );\n\t\t\t} );\n\t\t}\n\t};\n}\n\n// View element to model element conversion helper.\n//\n// See {@link ~UpcastHelpers#elementToElement `.elementToElement()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {module:engine/view/matcher~MatcherPattern} [config.view] Pattern matching all view elements which should be converted. If not\n// set, the converter will fire for every view element.\n// @param {String|module:engine/model/element~Element|Function} config.model Name of the model element, a model element\n// instance or a function that takes a view element and returns a model element. The model element will be inserted in the model.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction upcastElementToElement( config ) {\n\tconfig = cloneDeep( config );\n\n\tconst converter = prepareToElementConverter( config );\n\n\tconst elementName = getViewElementNameFromConfig( config.view );\n\tconst eventName = elementName ? 'element:' + elementName : 'element';\n\n\treturn dispatcher => {\n\t\tdispatcher.on( eventName, converter, { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// View element to model attribute conversion helper.\n//\n// See {@link ~UpcastHelpers#elementToAttribute `.elementToAttribute()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n// @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n// the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n// If `String` is given, the model attribute value will be set to `true`.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction upcastElementToAttribute( config ) {\n\tconfig = cloneDeep( config );\n\n\tnormalizeModelAttributeConfig( config );\n\n\tconst converter = prepareToAttributeConverter( config, false );\n\n\tconst elementName = getViewElementNameFromConfig( config.view );\n\tconst eventName = elementName ? 'element:' + elementName : 'element';\n\n\treturn dispatcher => {\n\t\tdispatcher.on( eventName, converter, { priority: config.converterPriority || 'low' } );\n\t};\n}\n\n// View attribute to model attribute conversion helper.\n//\n// See {@link ~UpcastHelpers#attributeToAttribute `.attributeToAttribute()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String|Object} config.view Specifies which view attribute will be converted. If a `String` is passed,\n// attributes with given key will be converted. If an `Object` is passed, it must have a required `key` property,\n// specifying view attribute key, and may have an optional `value` property, specifying view attribute value and optional `name`\n// property specifying a view element name from/on which the attribute should be converted. `value` can be given as a `String`,\n// a `RegExp` or a function callback, that takes view attribute value as the only parameter and returns `Boolean`.\n// @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n// the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n// If `String` is given, the model attribute value will be same as view attribute value.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction upcastAttributeToAttribute( config ) {\n\tconfig = cloneDeep( config );\n\n\tlet viewKey = null;\n\n\tif ( typeof config.view == 'string' || config.view.key ) {\n\t\tviewKey = normalizeViewAttributeKeyValueConfig( config );\n\t}\n\n\tnormalizeModelAttributeConfig( config, viewKey );\n\n\tconst converter = prepareToAttributeConverter( config, true );\n\n\treturn dispatcher => {\n\t\tdispatcher.on( 'element', converter, { priority: config.converterPriority || 'low' } );\n\t};\n}\n\n// View element to model marker conversion helper.\n//\n// See {@link ~UpcastHelpers#elementToMarker `.elementToMarker()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n// @param {String|Function} config.model Name of the model marker, or a function that takes a view element and returns\n// a model marker name.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction upcastElementToMarker( config ) {\n\tconfig = cloneDeep( config );\n\n\tnormalizeToMarkerConfig( config );\n\n\treturn upcastElementToElement( config );\n}\n\n// Helper function for from-view-element conversion. Checks if `config.view` directly specifies converted view element's name\n// and if so, returns it.\n//\n// @param {Object} config Conversion view config.\n// @returns {String|null} View element name or `null` if name is not directly set.\nfunction getViewElementNameFromConfig( viewConfig ) {\n\tif ( typeof viewConfig == 'string' ) {\n\t\treturn viewConfig;\n\t}\n\n\tif ( typeof viewConfig == 'object' && typeof viewConfig.name == 'string' ) {\n\t\treturn viewConfig.name;\n\t}\n\n\treturn null;\n}\n\n// Helper for to-model-element conversion. Takes a config object and returns a proper converter function.\n//\n// @param {Object} config Conversion configuration.\n// @returns {Function} View to model converter.\nfunction prepareToElementConverter( config ) {\n\tconst matcher = config.view ? new Matcher( config.view ) : null;\n\n\treturn ( evt, data, conversionApi ) => {\n\t\tlet match = {};\n\n\t\t// If `config.view` has not been passed do not try matching. In this case, the converter should fire for all elements.\n\t\tif ( matcher ) {\n\t\t\t// This will be usually just one pattern but we support matchers with many patterns too.\n\t\t\tconst matcherResult = matcher.match( data.viewItem );\n\n\t\t\t// If there is no match, this callback should not do anything.\n\t\t\tif ( !matcherResult ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmatch = matcherResult.match;\n\t\t}\n\n\t\t// Force consuming element's name.\n\t\tmatch.name = true;\n\n\t\t// Create model element basing on config.\n\t\tconst modelElement = getModelElement( config.model, data.viewItem, conversionApi.writer );\n\n\t\t// Do not convert if element building function returned falsy value.\n\t\tif ( !modelElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// When element was already consumed then skip it.\n\t\tif ( !conversionApi.consumable.test( data.viewItem, match ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Find allowed parent for element that we are going to insert.\n\t\t// If current parent does not allow to insert element but one of the ancestors does\n\t\t// then split nodes to allowed parent.\n\t\tconst splitResult = conversionApi.splitToAllowedParent( modelElement, data.modelCursor );\n\n\t\t// When there is no split result it means that we can't insert element to model tree, so let's skip it.\n\t\tif ( !splitResult ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Insert element on allowed position.\n\t\tconversionApi.writer.insert( modelElement, splitResult.position );\n\n\t\t// Convert children and insert to element.\n\t\tconversionApi.convertChildren( data.viewItem, conversionApi.writer.createPositionAt( modelElement, 0 ) );\n\n\t\t// Consume appropriate value from consumable values list.\n\t\tconversionApi.consumable.consume( data.viewItem, match );\n\n\t\tconst parts = conversionApi.getSplitParts( modelElement );\n\n\t\t// Set conversion result range.\n\t\tdata.modelRange = new ModelRange(\n\t\t\tconversionApi.writer.createPositionBefore( modelElement ),\n\t\t\tconversionApi.writer.createPositionAfter( parts[ parts.length - 1 ] )\n\t\t);\n\n\t\t// Now we need to check where the `modelCursor` should be.\n\t\tif ( splitResult.cursorParent ) {\n\t\t\t// If we split parent to insert our element then we want to continue conversion in the new part of the split parent.\n\t\t\t//\n\t\t\t// before: <allowed><notAllowed>foo[]</notAllowed></allowed>\n\t\t\t// after:  <allowed><notAllowed>foo</notAllowed><converted></converted><notAllowed>[]</notAllowed></allowed>\n\n\t\t\tdata.modelCursor = conversionApi.writer.createPositionAt( splitResult.cursorParent, 0 );\n\t\t} else {\n\t\t\t// Otherwise just continue after inserted element.\n\n\t\t\tdata.modelCursor = data.modelRange.end;\n\t\t}\n\t};\n}\n\n// Helper function for upcasting-to-element converter. Takes the model configuration, the converted view element\n// and a writer instance and returns a model element instance to be inserted in the model.\n//\n// @param {String|Function|module:engine/model/element~Element} model Model conversion configuration.\n// @param {module:engine/view/node~Node} input The converted view node.\n// @param {module:engine/model/writer~Writer} writer A writer instance to use to create the model element.\nfunction getModelElement( model, input, writer ) {\n\tif ( model instanceof Function ) {\n\t\treturn model( input, writer );\n\t} else {\n\t\treturn writer.createElement( model );\n\t}\n}\n\n// Helper function view-attribute-to-model-attribute helper. Normalizes `config.view` which was set as `String` or\n// as an `Object` with `key`, `value` and `name` properties. Normalized `config.view` has is compatible with\n// {@link module:engine/view/matcher~MatcherPattern}.\n//\n// @param {Object} config Conversion config.\n// @returns {String} Key of the converted view attribute.\nfunction normalizeViewAttributeKeyValueConfig( config ) {\n\tif ( typeof config.view == 'string' ) {\n\t\tconfig.view = { key: config.view };\n\t}\n\n\tconst key = config.view.key;\n\tlet normalized;\n\n\tif ( key == 'class' || key == 'style' ) {\n\t\tconst keyName = key == 'class' ? 'classes' : 'styles';\n\n\t\tnormalized = {\n\t\t\t[ keyName ]: config.view.value\n\t\t};\n\t} else {\n\t\tconst value = typeof config.view.value == 'undefined' ? /[\\s\\S]*/ : config.view.value;\n\n\t\tnormalized = {\n\t\t\tattributes: {\n\t\t\t\t[ key ]: value\n\t\t\t}\n\t\t};\n\t}\n\n\tif ( config.view.name ) {\n\t\tnormalized.name = config.view.name;\n\t}\n\n\tconfig.view = normalized;\n\n\treturn key;\n}\n\n// Helper function that normalizes `config.model` in from-model-attribute conversion. `config.model` can be set\n// as a `String`, an `Object` with only `key` property or an `Object` with `key` and `value` properties. Normalized\n// `config.model` is an `Object` with `key` and `value` properties.\n//\n// @param {Object} config Conversion config.\n// @param {String} viewAttributeKeyToCopy Key of the converted view attribute. If it is set, model attribute value\n// will be equal to view attribute value.\nfunction normalizeModelAttributeConfig( config, viewAttributeKeyToCopy = null ) {\n\tconst defaultModelValue = viewAttributeKeyToCopy === null ? true : viewElement => viewElement.getAttribute( viewAttributeKeyToCopy );\n\n\tconst key = typeof config.model != 'object' ? config.model : config.model.key;\n\tconst value = typeof config.model != 'object' || typeof config.model.value == 'undefined' ? defaultModelValue : config.model.value;\n\n\tconfig.model = { key, value };\n}\n\n// Helper for to-model-attribute conversion. Takes the model attribute name and conversion configuration and returns\n// a proper converter function.\n//\n// @param {String} modelAttributeKey The key of the model attribute to set on a model node.\n// @param {Object|Array.<Object>} config Conversion configuration. It is possible to provide multiple configurations in an array.\n// @param {Boolean} shallow If set to `true` the attribute will be set only on top-level nodes. Otherwise, it will be set\n// on all elements in the range.\nfunction prepareToAttributeConverter( config, shallow ) {\n\tconst matcher = new Matcher( config.view );\n\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst match = matcher.match( data.viewItem );\n\n\t\t// If there is no match, this callback should not do anything.\n\t\tif ( !match ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelKey = config.model.key;\n\t\tconst modelValue = typeof config.model.value == 'function' ? config.model.value( data.viewItem ) : config.model.value;\n\n\t\t// Do not convert if attribute building function returned falsy value.\n\t\tif ( modelValue === null ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( onlyViewNameIsDefined( config.view, data.viewItem ) ) {\n\t\t\tmatch.match.name = true;\n\t\t} else {\n\t\t\t// Do not test or consume `name` consumable.\n\t\t\tdelete match.match.name;\n\t\t}\n\n\t\t// Try to consume appropriate values from consumable values list.\n\t\tif ( !conversionApi.consumable.test( data.viewItem, match.match ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Since we are converting to attribute we need an range on which we will set the attribute.\n\t\t// If the range is not created yet, we will create it.\n\t\tif ( !data.modelRange ) {\n\t\t\t// Convert children and set conversion result as a current data.\n\t\t\tdata = Object.assign( data, conversionApi.convertChildren( data.viewItem, data.modelCursor ) );\n\t\t}\n\n\t\t// Set attribute on current `output`. `Schema` is checked inside this helper function.\n\t\tconst attributeWasSet = setAttributeOn( data.modelRange, { key: modelKey, value: modelValue }, shallow, conversionApi );\n\n\t\tif ( attributeWasSet ) {\n\t\t\tconversionApi.consumable.consume( data.viewItem, match.match );\n\t\t}\n\t};\n}\n\n// Helper function that checks if element name should be consumed in attribute converters.\n//\n// @param {Object} config Conversion view config.\n// @returns {Boolean}\nfunction onlyViewNameIsDefined( viewConfig, viewItem ) {\n\t// https://github.com/ckeditor/ckeditor5-engine/issues/1786\n\tconst configToTest = typeof viewConfig == 'function' ? viewConfig( viewItem ) : viewConfig;\n\n\tif ( typeof configToTest == 'object' && !getViewElementNameFromConfig( configToTest ) ) {\n\t\treturn false;\n\t}\n\n\treturn !configToTest.classes && !configToTest.attributes && !configToTest.styles;\n}\n\n// Helper function for to-model-attribute converter. Sets model attribute on given range. Checks {@link module:engine/model/schema~Schema}\n// to ensure proper model structure.\n//\n// @param {module:engine/model/range~Range} modelRange Model range on which attribute should be set.\n// @param {Object} modelAttribute Model attribute to set.\n// @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion API.\n// @param {Boolean} shallow If set to `true` the attribute will be set only on top-level nodes. Otherwise, it will be set\n// on all elements in the range.\n// @returns {Boolean} `true` if attribute was set on at least one node from given `modelRange`.\nfunction setAttributeOn( modelRange, modelAttribute, shallow, conversionApi ) {\n\tlet result = false;\n\n\t// Set attribute on each item in range according to Schema.\n\tfor ( const node of Array.from( modelRange.getItems( { shallow } ) ) ) {\n\t\tif ( conversionApi.schema.checkAttribute( node, modelAttribute.key ) ) {\n\t\t\tconversionApi.writer.setAttribute( modelAttribute.key, modelAttribute.value, node );\n\n\t\t\tresult = true;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n// Helper function for upcasting-to-marker conversion. Takes the config in a format requested by `upcastElementToMarker()`\n// function and converts it to a format that is supported by `_upcastElementToElement()` function.\n//\n// @param {Object} config Conversion configuration.\nfunction normalizeToMarkerConfig( config ) {\n\tconst oldModel = config.model;\n\n\tconfig.model = ( viewElement, modelWriter ) => {\n\t\tconst markerName = typeof oldModel == 'string' ? oldModel : oldModel( viewElement );\n\n\t\treturn modelWriter.createElement( '$marker', { 'data-name': markerName } );\n\t};\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/controller/editingcontroller\n */\n\nimport RootEditableElement from '../view/rooteditableelement';\nimport View from '../view/view';\nimport Mapper from '../conversion/mapper';\nimport DowncastDispatcher from '../conversion/downcastdispatcher';\nimport { clearAttributes, convertCollapsedSelection, convertRangeSelection, insertText, remove } from '../conversion/downcasthelpers';\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { convertSelectionChange } from '../conversion/upcasthelpers';\n\n// @if CK_DEBUG_ENGINE // const { dumpTrees, initDocumentDumping } = require( '../dev-utils/utils' );\n\n/**\n * Controller for the editing pipeline. The editing pipeline controls {@link ~EditingController#model model} rendering,\n * including selection handling. It also creates the {@link ~EditingController#view view} which builds a\n * browser-independent virtualization over the DOM elements. The editing controller also attaches default converters.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class EditingController {\n\t/**\n\t * Creates an editing controller instance.\n\t *\n\t * @param {module:engine/model/model~Model} model Editing model.\n\t * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor The styles processor instance.\n\t */\n\tconstructor( model, stylesProcessor ) {\n\t\t/**\n\t\t * Editor model.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * Editing view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/view~View}\n\t\t */\n\t\tthis.view = new View( stylesProcessor );\n\n\t\t/**\n\t\t * Mapper which describes the model-view binding.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/mapper~Mapper}\n\t\t */\n\t\tthis.mapper = new Mapper();\n\n\t\t/**\n\t\t * Downcast dispatcher that converts changes from the model to {@link #view the editing view}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher} #downcastDispatcher\n\t\t */\n\t\tthis.downcastDispatcher = new DowncastDispatcher( {\n\t\t\tmapper: this.mapper\n\t\t} );\n\n\t\tconst doc = this.model.document;\n\t\tconst selection = doc.selection;\n\t\tconst markers = this.model.markers;\n\n\t\t// When plugins listen on model changes (on selection change, post fixers, etc) and change the view as a result of\n\t\t// model's change, they might trigger view rendering before the conversion is completed (e.g. before the selection\n\t\t// is converted). We disable rendering for the length of the outermost model change() block to prevent that.\n\t\t//\n\t\t// See https://github.com/ckeditor/ckeditor5-engine/issues/1528\n\t\tthis.listenTo( this.model, '_beforeChanges', () => {\n\t\t\tthis.view._disableRendering( true );\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.listenTo( this.model, '_afterChanges', () => {\n\t\t\tthis.view._disableRendering( false );\n\t\t}, { priority: 'lowest' } );\n\n\t\t// Whenever model document is changed, convert those changes to the view (using model.Document#differ).\n\t\t// Do it on 'low' priority, so changes are converted after other listeners did their job.\n\t\t// Also convert model selection.\n\t\tthis.listenTo( doc, 'change', () => {\n\t\t\tthis.view.change( writer => {\n\t\t\t\tthis.downcastDispatcher.convertChanges( doc.differ, markers, writer );\n\t\t\t\tthis.downcastDispatcher.convertSelection( selection, markers, writer );\n\t\t\t} );\n\t\t}, { priority: 'low' } );\n\n\t\t// Convert selection from the view to the model when it changes in the view.\n\t\tthis.listenTo( this.view.document, 'selectionChange', convertSelectionChange( this.model, this.mapper ) );\n\n\t\t// Attach default model converters.\n\t\tthis.downcastDispatcher.on( 'insert:$text', insertText(), { priority: 'lowest' } );\n\t\tthis.downcastDispatcher.on( 'remove', remove(), { priority: 'low' } );\n\n\t\t// Attach default model selection converters.\n\t\tthis.downcastDispatcher.on( 'selection', clearAttributes(), { priority: 'low' } );\n\t\tthis.downcastDispatcher.on( 'selection', convertRangeSelection(), { priority: 'low' } );\n\t\tthis.downcastDispatcher.on( 'selection', convertCollapsedSelection(), { priority: 'low' } );\n\n\t\t// Binds {@link module:engine/view/document~Document#roots view roots collection} to\n\t\t// {@link module:engine/model/document~Document#roots model roots collection} so creating\n\t\t// model root automatically creates corresponding view root.\n\t\tthis.view.document.roots.bindTo( this.model.document.roots ).using( root => {\n\t\t\t// $graveyard is a special root that has no reflection in the view.\n\t\t\tif ( root.rootName == '$graveyard' ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst viewRoot = new RootEditableElement( this.view.document, root.name );\n\n\t\t\tviewRoot.rootName = root.rootName;\n\t\t\tthis.mapper.bindElements( root, viewRoot );\n\n\t\t\treturn viewRoot;\n\t\t} );\n\n\t\t// @if CK_DEBUG_ENGINE // initDocumentDumping( this.model.document );\n\t\t// @if CK_DEBUG_ENGINE // initDocumentDumping( this.view.document );\n\n\t\t// @if CK_DEBUG_ENGINE // dumpTrees( this.model.document, this.model.document.version );\n\t\t// @if CK_DEBUG_ENGINE // dumpTrees( this.view.document, this.model.document.version );\n\n\t\t// @if CK_DEBUG_ENGINE // this.model.document.on( 'change', () => {\n\t\t// @if CK_DEBUG_ENGINE //\tdumpTrees( this.view.document, this.model.document.version );\n\t\t// @if CK_DEBUG_ENGINE // }, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * Removes all event listeners attached to the `EditingController`. Destroys all objects created\n\t * by `EditingController` that need to be destroyed.\n\t */\n\tdestroy() {\n\t\tthis.view.destroy();\n\t\tthis.stopListening();\n\t}\n}\n\nmix( EditingController, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/commandcollection\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Collection of commands. Its instance is available in {@link module:core/editor/editor~Editor#commands `editor.commands`}.\n */\nexport default class CommandCollection {\n\t/**\n\t * Creates collection instance.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Command map.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._commands = new Map();\n\t}\n\n\t/**\n\t * Registers a new command.\n\t *\n\t * @param {String} commandName The name of the command.\n\t * @param {module:core/command~Command} command\n\t */\n\tadd( commandName, command ) {\n\t\tthis._commands.set( commandName, command );\n\t}\n\n\t/**\n\t * Retrieves a command from the collection.\n\t *\n\t * @param {String} commandName The name of the command.\n\t * @returns {module:core/command~Command}\n\t */\n\tget( commandName ) {\n\t\treturn this._commands.get( commandName );\n\t}\n\n\t/**\n\t * Executes a command.\n\t *\n\t * @param {String} commandName The name of the command.\n\t * @param {*} [...commandParams] Command parameters.\n\t */\n\texecute( commandName, ...args ) {\n\t\tconst command = this.get( commandName );\n\n\t\tif ( !command ) {\n\t\t\t/**\n\t\t\t * Command does not exist.\n\t\t\t *\n\t\t\t * @error commandcollection-command-not-found\n\t\t\t * @param {String} commandName Name of the command.\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'commandcollection-command-not-found: Command does not exist.', this, { commandName } );\n\t\t}\n\n\t\tcommand.execute( ...args );\n\t}\n\n\t/**\n\t * Returns iterator of command names.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\t* names() {\n\t\tyield* this._commands.keys();\n\t}\n\n\t/**\n\t * Returns iterator of command instances.\n\t *\n\t * @returns {Iterable.<module:core/command~Command>}\n\t */\n\t* commands() {\n\t\tyield* this._commands.values();\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Returns `[ commandName, commandInstance ]` pairs.\n\t *\n\t * @returns {Iterable.<Array>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._commands[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Destroys all collection commands.\n\t */\n\tdestroy() {\n\t\tfor ( const command of this.commands() ) {\n\t\t\tcommand.destroy();\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/viewconsumable\n */\n\nimport { isArray } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Class used for handling consumption of view {@link module:engine/view/element~Element elements},\n * {@link module:engine/view/text~Text text nodes} and {@link module:engine/view/documentfragment~DocumentFragment document fragments}.\n * Element's name and its parts (attributes, classes and styles) can be consumed separately. Consuming an element's name\n * does not consume its attributes, classes and styles.\n * To add items for consumption use {@link module:engine/conversion/viewconsumable~ViewConsumable#add add method}.\n * To test items use {@link module:engine/conversion/viewconsumable~ViewConsumable#test test method}.\n * To consume items use {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consume method}.\n * To revert already consumed items use {@link module:engine/conversion/viewconsumable~ViewConsumable#revert revert method}.\n *\n *\t\tviewConsumable.add( element, { name: true } ); // Adds element's name as ready to be consumed.\n *\t\tviewConsumable.add( textNode ); // Adds text node for consumption.\n *\t\tviewConsumable.add( docFragment ); // Adds document fragment for consumption.\n *\t\tviewConsumable.test( element, { name: true }  ); // Tests if element's name can be consumed.\n *\t\tviewConsumable.test( textNode ); // Tests if text node can be consumed.\n *\t\tviewConsumable.test( docFragment ); // Tests if document fragment can be consumed.\n *\t\tviewConsumable.consume( element, { name: true }  ); // Consume element's name.\n *\t\tviewConsumable.consume( textNode ); // Consume text node.\n *\t\tviewConsumable.consume( docFragment ); // Consume document fragment.\n *\t\tviewConsumable.revert( element, { name: true }  ); // Revert already consumed element's name.\n *\t\tviewConsumable.revert( textNode ); // Revert already consumed text node.\n *\t\tviewConsumable.revert( docFragment ); // Revert already consumed document fragment.\n */\nexport default class ViewConsumable {\n\t/**\n\t * Creates new ViewConsumable.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Map of consumable elements. If {@link module:engine/view/element~Element element} is used as a key,\n\t\t * {@link module:engine/conversion/viewconsumable~ViewElementConsumables ViewElementConsumables} instance is stored as value.\n\t\t * For {@link module:engine/view/text~Text text nodes} and\n\t\t * {@link module:engine/view/documentfragment~DocumentFragment document fragments} boolean value is stored as value.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map.<module:engine/conversion/viewconsumable~ViewElementConsumables|Boolean>}\n\t\t*/\n\t\tthis._consumables = new Map();\n\t}\n\n\t/**\n\t * Adds {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment} as ready to be consumed.\n\t *\n\t *\t\tviewConsumable.add( p, { name: true } ); // Adds element's name to consume.\n\t *\t\tviewConsumable.add( p, { attributes: 'name' } ); // Adds element's attribute.\n\t *\t\tviewConsumable.add( p, { classes: 'foobar' } ); // Adds element's class.\n\t *\t\tviewConsumable.add( p, { styles: 'color' } ); // Adds element's style\n\t *\t\tviewConsumable.add( p, { attributes: 'name', styles: 'color' } ); // Adds attribute and style.\n\t *\t\tviewConsumable.add( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be provided.\n\t *\t\tviewConsumable.add( textNode ); // Adds text node to consume.\n\t *\t\tviewConsumable.add( docFragment ); // Adds document fragment to consume.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n\t * attribute is provided - it should be handled separately by providing actual style/class.\n\t *\n\t *\t\tviewConsumable.add( p, { attributes: 'style' } ); // This call will throw an exception.\n\t *\t\tviewConsumable.add( p, { styles: 'color' } ); // This is properly handled style.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n\t */\n\tadd( element, consumables ) {\n\t\tlet elementConsumables;\n\n\t\t// For text nodes and document fragments just mark them as consumable.\n\t\tif ( element.is( 'text' ) || element.is( 'documentFragment' ) ) {\n\t\t\tthis._consumables.set( element, true );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// For elements create new ViewElementConsumables or update already existing one.\n\t\tif ( !this._consumables.has( element ) ) {\n\t\t\telementConsumables = new ViewElementConsumables( element );\n\t\t\tthis._consumables.set( element, elementConsumables );\n\t\t} else {\n\t\t\telementConsumables = this._consumables.get( element );\n\t\t}\n\n\t\telementConsumables.add( consumables );\n\t}\n\n\t/**\n\t * Tests if {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment} can be consumed.\n\t * It returns `true` when all items included in method's call can be consumed. Returns `false` when\n\t * first already consumed item is found and `null` when first non-consumable item is found.\n\t *\n\t *\t\tviewConsumable.test( p, { name: true } ); // Tests element's name.\n\t *\t\tviewConsumable.test( p, { attributes: 'name' } ); // Tests attribute.\n\t *\t\tviewConsumable.test( p, { classes: 'foobar' } ); // Tests class.\n\t *\t\tviewConsumable.test( p, { styles: 'color' } ); // Tests style.\n\t *\t\tviewConsumable.test( p, { attributes: 'name', styles: 'color' } ); // Tests attribute and style.\n\t *\t\tviewConsumable.test( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be tested.\n\t *\t\tviewConsumable.test( textNode ); // Tests text node.\n\t *\t\tviewConsumable.test( docFragment ); // Tests document fragment.\n\t *\n\t * Testing classes and styles as attribute will test if all added classes/styles can be consumed.\n\t *\n\t *\t\tviewConsumable.test( p, { attributes: 'class' } ); // Tests if all added classes can be consumed.\n\t *\t\tviewConsumable.test( p, { attributes: 'style' } ); // Tests if all added styles can be consumed.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n\t * @returns {Boolean|null} Returns `true` when all items included in method's call can be consumed. Returns `false`\n\t * when first already consumed item is found and `null` when first non-consumable item is found.\n\t */\n\ttest( element, consumables ) {\n\t\tconst elementConsumables = this._consumables.get( element );\n\n\t\tif ( elementConsumables === undefined ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// For text nodes and document fragments return stored boolean value.\n\t\tif ( element.is( 'text' ) || element.is( 'documentFragment' ) ) {\n\t\t\treturn elementConsumables;\n\t\t}\n\n\t\t// For elements test consumables object.\n\t\treturn elementConsumables.test( consumables );\n\t}\n\n\t/**\n\t * Consumes {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n\t * It returns `true` when all items included in method's call can be consumed, otherwise returns `false`.\n\t *\n\t *\t\tviewConsumable.consume( p, { name: true } ); // Consumes element's name.\n\t *\t\tviewConsumable.consume( p, { attributes: 'name' } ); // Consumes element's attribute.\n\t *\t\tviewConsumable.consume( p, { classes: 'foobar' } ); // Consumes element's class.\n\t *\t\tviewConsumable.consume( p, { styles: 'color' } ); // Consumes element's style.\n\t *\t\tviewConsumable.consume( p, { attributes: 'name', styles: 'color' } ); // Consumes attribute and style.\n\t *\t\tviewConsumable.consume( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be consumed.\n\t *\t\tviewConsumable.consume( textNode ); // Consumes text node.\n\t *\t\tviewConsumable.consume( docFragment ); // Consumes document fragment.\n\t *\n\t * Consuming classes and styles as attribute will test if all added classes/styles can be consumed.\n\t *\n\t *\t\tviewConsumable.consume( p, { attributes: 'class' } ); // Consume only if all added classes can be consumed.\n\t *\t\tviewConsumable.consume( p, { attributes: 'style' } ); // Consume only if all added styles can be consumed.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n\t * @returns {Boolean} Returns `true` when all items included in method's call can be consumed,\n\t * otherwise returns `false`.\n\t */\n\tconsume( element, consumables ) {\n\t\tif ( this.test( element, consumables ) ) {\n\t\t\tif ( element.is( 'text' ) || element.is( 'documentFragment' ) ) {\n\t\t\t\t// For text nodes and document fragments set value to false.\n\t\t\t\tthis._consumables.set( element, false );\n\t\t\t} else {\n\t\t\t\t// For elements - consume consumables object.\n\t\t\t\tthis._consumables.get( element ).consume( consumables );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Reverts {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment} so they can be consumed once again.\n\t * Method does not revert items that were never previously added for consumption, even if they are included in\n\t * method's call.\n\t *\n\t *\t\tviewConsumable.revert( p, { name: true } ); // Reverts element's name.\n\t *\t\tviewConsumable.revert( p, { attributes: 'name' } ); // Reverts element's attribute.\n\t *\t\tviewConsumable.revert( p, { classes: 'foobar' } ); // Reverts element's class.\n\t *\t\tviewConsumable.revert( p, { styles: 'color' } ); // Reverts element's style.\n\t *\t\tviewConsumable.revert( p, { attributes: 'name', styles: 'color' } ); // Reverts attribute and style.\n\t *\t\tviewConsumable.revert( p, { classes: [ 'baz', 'bar' ] } ); // Multiple names can be reverted.\n\t *\t\tviewConsumable.revert( textNode ); // Reverts text node.\n\t *\t\tviewConsumable.revert( docFragment ); // Reverts document fragment.\n\t *\n\t * Reverting classes and styles as attribute will revert all classes/styles that were previously added for\n\t * consumption.\n\t *\n\t *\t\tviewConsumable.revert( p, { attributes: 'class' } ); // Reverts all classes added for consumption.\n\t *\t\tviewConsumable.revert( p, { attributes: 'style' } ); // Reverts all styles added for consumption.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n\t */\n\trevert( element, consumables ) {\n\t\tconst elementConsumables = this._consumables.get( element );\n\n\t\tif ( elementConsumables !== undefined ) {\n\t\t\tif ( element.is( 'text' ) || element.is( 'documentFragment' ) ) {\n\t\t\t\t// For text nodes and document fragments - set consumable to true.\n\t\t\t\tthis._consumables.set( element, true );\n\t\t\t} else {\n\t\t\t\t// For elements - revert items from consumables object.\n\t\t\t\telementConsumables.revert( consumables );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates consumable object from {@link module:engine/view/element~Element view element}. Consumable object will include\n\t * element's name and all its attributes, classes and styles.\n\t *\n\t * @static\n\t * @param {module:engine/view/element~Element} element\n\t * @returns {Object} consumables\n\t */\n\tstatic consumablesFromElement( element ) {\n\t\tconst consumables = {\n\t\t\telement,\n\t\t\tname: true,\n\t\t\tattributes: [],\n\t\t\tclasses: [],\n\t\t\tstyles: []\n\t\t};\n\n\t\tconst attributes = element.getAttributeKeys();\n\n\t\tfor ( const attribute of attributes ) {\n\t\t\t// Skip classes and styles - will be added separately.\n\t\t\tif ( attribute == 'style' || attribute == 'class' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconsumables.attributes.push( attribute );\n\t\t}\n\n\t\tconst classes = element.getClassNames();\n\n\t\tfor ( const className of classes ) {\n\t\t\tconsumables.classes.push( className );\n\t\t}\n\n\t\tconst styles = element.getStyleNames();\n\n\t\tfor ( const style of styles ) {\n\t\t\tconsumables.styles.push( style );\n\t\t}\n\n\t\treturn consumables;\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/viewconsumable~ViewConsumable ViewConsumable} instance from\n\t * {@link module:engine/view/node~Node node} or {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n\t * Instance will contain all elements, child nodes, attributes, styles and classes added for consumption.\n\t *\n\t * @static\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} from View node or document fragment\n\t * from which `ViewConsumable` will be created.\n\t * @param {module:engine/conversion/viewconsumable~ViewConsumable} [instance] If provided, given `ViewConsumable` instance will be used\n\t * to add all consumables. It will be returned instead of a new instance.\n\t */\n\tstatic createFrom( from, instance ) {\n\t\tif ( !instance ) {\n\t\t\tinstance = new ViewConsumable( from );\n\t\t}\n\n\t\tif ( from.is( 'text' ) ) {\n\t\t\tinstance.add( from );\n\n\t\t\treturn instance;\n\t\t}\n\n\t\t// Add `from` itself, if it is an element.\n\t\tif ( from.is( 'element' ) ) {\n\t\t\tinstance.add( from, ViewConsumable.consumablesFromElement( from ) );\n\t\t}\n\n\t\tif ( from.is( 'documentFragment' ) ) {\n\t\t\tinstance.add( from );\n\t\t}\n\n\t\tfor ( const child of from.getChildren() ) {\n\t\t\tinstance = ViewConsumable.createFrom( child, instance );\n\t\t}\n\n\t\treturn instance;\n\t}\n}\n\n/**\n * This is a private helper-class for {@link module:engine/conversion/viewconsumable~ViewConsumable}.\n * It represents and manipulates consumable parts of a single {@link module:engine/view/element~Element}.\n *\n * @private\n */\nclass ViewElementConsumables {\n\t/**\n\t * Creates ViewElementConsumables instance.\n\t *\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} from View node or document fragment\n\t * from which `ViewElementConsumables` is being created.\n\t */\n\tconstructor( from ) {\n\t\t/**\n\t\t * @readonly\n\t\t * @member {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t\t */\n\t\tthis.element = from;\n\n\t\t/**\n\t\t * Flag indicating if name of the element can be consumed.\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._canConsumeName = null;\n\n\t\t/**\n\t\t * Contains maps of element's consumables: attributes, classes and styles.\n\t\t *\n\t\t * @private\n\t\t * @member {Object}\n\t\t */\n\t\tthis._consumables = {\n\t\t\tattributes: new Map(),\n\t\t\tstyles: new Map(),\n\t\t\tclasses: new Map()\n\t\t};\n\t}\n\n\t/**\n\t * Adds consumable parts of the {@link module:engine/view/element~Element view element}.\n\t * Element's name itself can be marked to be consumed (when element's name is consumed its attributes, classes and\n\t * styles still could be consumed):\n\t *\n\t *\t\tconsumables.add( { name: true } );\n\t *\n\t * Attributes classes and styles:\n\t *\n\t *\t\tconsumables.add( { attributes: 'title', classes: 'foo', styles: 'color' } );\n\t *\t\tconsumables.add( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n\t * attribute is provided - it should be handled separately by providing `style` and `class` in consumables object.\n\t *\n\t * @param {Object} consumables Object describing which parts of the element can be consumed.\n\t * @param {Boolean} consumables.name If set to `true` element's name will be added as consumable.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to add as consumable.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names to add as consumable.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names to add as consumable.\n\t */\n\tadd( consumables ) {\n\t\tif ( consumables.name ) {\n\t\t\tthis._canConsumeName = true;\n\t\t}\n\n\t\tfor ( const type in this._consumables ) {\n\t\t\tif ( type in consumables ) {\n\t\t\t\tthis._add( type, consumables[ type ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Tests if parts of the {@link module:engine/view/node~Node view node} can be consumed.\n\t *\n\t * Element's name can be tested:\n\t *\n\t *\t\tconsumables.test( { name: true } );\n\t *\n\t * Attributes classes and styles:\n\t *\n\t *\t\tconsumables.test( { attributes: 'title', classes: 'foo', styles: 'color' } );\n\t *\t\tconsumables.test( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n\t *\n\t * @param {Object} consumables Object describing which parts of the element should be tested.\n\t * @param {Boolean} consumables.name If set to `true` element's name will be tested.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to test.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names to test.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names to test.\n\t * @returns {Boolean|null} `true` when all tested items can be consumed, `null` when even one of the items\n\t * was never marked for consumption and `false` when even one of the items was already consumed.\n\t */\n\ttest( consumables ) {\n\t\t// Check if name can be consumed.\n\t\tif ( consumables.name && !this._canConsumeName ) {\n\t\t\treturn this._canConsumeName;\n\t\t}\n\n\t\tfor ( const type in this._consumables ) {\n\t\t\tif ( type in consumables ) {\n\t\t\t\tconst value = this._test( type, consumables[ type ] );\n\n\t\t\t\tif ( value !== true ) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Return true only if all can be consumed.\n\t\treturn true;\n\t}\n\n\t/**\n\t * Consumes parts of {@link module:engine/view/element~Element view element}. This function does not check if consumable item\n\t * is already consumed - it consumes all consumable items provided.\n\t * Element's name can be consumed:\n\t *\n\t *\t\tconsumables.consume( { name: true } );\n\t *\n\t * Attributes classes and styles:\n\t *\n\t *\t\tconsumables.consume( { attributes: 'title', classes: 'foo', styles: 'color' } );\n\t *\t\tconsumables.consume( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n\t *\n\t * @param {Object} consumables Object describing which parts of the element should be consumed.\n\t * @param {Boolean} consumables.name If set to `true` element's name will be consumed.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to consume.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names to consume.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names to consume.\n\t */\n\tconsume( consumables ) {\n\t\tif ( consumables.name ) {\n\t\t\tthis._canConsumeName = false;\n\t\t}\n\n\t\tfor ( const type in this._consumables ) {\n\t\t\tif ( type in consumables ) {\n\t\t\t\tthis._consume( type, consumables[ type ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Revert already consumed parts of {@link module:engine/view/element~Element view Element}, so they can be consumed once again.\n\t * Element's name can be reverted:\n\t *\n\t *\t\tconsumables.revert( { name: true } );\n\t *\n\t * Attributes classes and styles:\n\t *\n\t *\t\tconsumables.revert( { attributes: 'title', classes: 'foo', styles: 'color' } );\n\t *\t\tconsumables.revert( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n\t *\n\t * @param {Object} consumables Object describing which parts of the element should be reverted.\n\t * @param {Boolean} consumables.name If set to `true` element's name will be reverted.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to revert.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names to revert.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names to revert.\n\t */\n\trevert( consumables ) {\n\t\tif ( consumables.name ) {\n\t\t\tthis._canConsumeName = true;\n\t\t}\n\n\t\tfor ( const type in this._consumables ) {\n\t\t\tif ( type in consumables ) {\n\t\t\t\tthis._revert( type, consumables[ type ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Helper method that adds consumables of a given type: attribute, class or style.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n\t * type is provided - it should be handled separately by providing actual style/class type.\n\t *\n\t * @private\n\t * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n\t * @param {String|Array.<String>} item Consumable item or array of items.\n\t */\n\t_add( type, item ) {\n\t\tconst items = isArray( item ) ? item : [ item ];\n\t\tconst consumables = this._consumables[ type ];\n\n\t\tfor ( const name of items ) {\n\t\t\tif ( type === 'attributes' && ( name === 'class' || name === 'style' ) ) {\n\t\t\t\t/**\n\t\t\t\t * Class and style attributes should be handled separately in\n\t\t\t\t * {@link module:engine/conversion/viewconsumable~ViewConsumable#add `ViewConsumable#add()`}.\n\t\t\t\t *\n\t\t\t\t * What you have done is trying to use:\n\t\t\t\t *\n\t\t\t\t *\t\tconsumables.add( { attributes: [ 'class', 'style' ] } );\n\t\t\t\t *\n\t\t\t\t * While each class and style should be registered separately:\n\t\t\t\t *\n\t\t\t\t *\t\tconsumables.add( { classes: 'some-class', styles: 'font-weight' } );\n\t\t\t\t *\n\t\t\t\t * @error viewconsumable-invalid-attribute\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'viewconsumable-invalid-attribute: Classes and styles should be handled separately.', this );\n\t\t\t}\n\n\t\t\tconsumables.set( name, true );\n\n\t\t\tif ( type === 'styles' ) {\n\t\t\t\tfor ( const alsoName of this.element.document.stylesProcessor.getRelatedStyles( name ) ) {\n\t\t\t\t\tconsumables.set( alsoName, true );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Helper method that tests consumables of a given type: attribute, class or style.\n\t *\n\t * @private\n\t * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n\t * @param {String|Array.<String>} item Consumable item or array of items.\n\t * @returns {Boolean|null} Returns `true` if all items can be consumed, `null` when one of the items cannot be\n\t * consumed and `false` when one of the items is already consumed.\n\t */\n\t_test( type, item ) {\n\t\tconst items = isArray( item ) ? item : [ item ];\n\t\tconst consumables = this._consumables[ type ];\n\n\t\tfor ( const name of items ) {\n\t\t\tif ( type === 'attributes' && ( name === 'class' || name === 'style' ) ) {\n\t\t\t\tconst consumableName = name == 'class' ? 'classes' : 'styles';\n\n\t\t\t\t// Check all classes/styles if class/style attribute is tested.\n\t\t\t\tconst value = this._test( consumableName, [ ...this._consumables[ consumableName ].keys() ] );\n\n\t\t\t\tif ( value !== true ) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst value = consumables.get( name );\n\t\t\t\t// Return null if attribute is not found.\n\t\t\t\tif ( value === undefined ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif ( !value ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Helper method that consumes items of a given type: attribute, class or style.\n\t *\n\t * @private\n\t * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n\t * @param {String|Array.<String>} item Consumable item or array of items.\n\t */\n\t_consume( type, item ) {\n\t\tconst items = isArray( item ) ? item : [ item ];\n\t\tconst consumables = this._consumables[ type ];\n\n\t\tfor ( const name of items ) {\n\t\t\tif ( type === 'attributes' && ( name === 'class' || name === 'style' ) ) {\n\t\t\t\tconst consumableName = name == 'class' ? 'classes' : 'styles';\n\n\t\t\t\t// If class or style is provided for consumption - consume them all.\n\t\t\t\tthis._consume( consumableName, [ ...this._consumables[ consumableName ].keys() ] );\n\t\t\t} else {\n\t\t\t\tconsumables.set( name, false );\n\n\t\t\t\tif ( type == 'styles' ) {\n\t\t\t\t\tfor ( const toConsume of this.element.document.stylesProcessor.getRelatedStyles( name ) ) {\n\t\t\t\t\t\tconsumables.set( toConsume, false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Helper method that reverts items of a given type: attribute, class or style.\n\t *\n\t * @private\n\t * @param {String} type Type of the consumable item: `attributes`, `classes` or , `styles`.\n\t * @param {String|Array.<String>} item Consumable item or array of items.\n\t */\n\t_revert( type, item ) {\n\t\tconst items = isArray( item ) ? item : [ item ];\n\t\tconst consumables = this._consumables[ type ];\n\n\t\tfor ( const name of items ) {\n\t\t\tif ( type === 'attributes' && ( name === 'class' || name === 'style' ) ) {\n\t\t\t\tconst consumableName = name == 'class' ? 'classes' : 'styles';\n\n\t\t\t\t// If class or style is provided for reverting - revert them all.\n\t\t\t\tthis._revert( consumableName, [ ...this._consumables[ consumableName ].keys() ] );\n\t\t\t} else {\n\t\t\t\tconst value = consumables.get( name );\n\n\t\t\t\tif ( value === false ) {\n\t\t\t\t\tconsumables.set( name, true );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/schema\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\nimport Range from './range';\nimport Position from './position';\nimport Element from './element';\nimport Text from './text';\nimport TreeWalker from './treewalker';\n\n/**\n * The model's schema. It defines allowed and disallowed structures of nodes as well as nodes' attributes.\n * The schema is usually defined by features and based on them the editing framework and features\n * make decisions how to change and process the model.\n *\n * The instance of schema is available in {@link module:engine/model/model~Model#schema `editor.model.schema`}.\n *\n * Read more about the schema in:\n *\n * * {@glink framework/guides/architecture/editing-engine#schema \"Schema\"} section of the\n * {@glink framework/guides/architecture/editing-engine Introduction to the \"Editing engine architecture\"}.\n * * {@glink framework/guides/deep-dive/schema \"Schema\" deep dive} guide.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Schema {\n\t/**\n\t * Creates schema instance.\n\t */\n\tconstructor() {\n\t\tthis._sourceDefinitions = {};\n\n\t\t/**\n\t\t * A dictionary containing attribute properties.\n\t\t *\n\t\t * @private\n\t\t * @member {Object.<String,String>}\n\t\t */\n\t\tthis._attributeProperties = {};\n\n\t\tthis.decorate( 'checkChild' );\n\t\tthis.decorate( 'checkAttribute' );\n\n\t\tthis.on( 'checkAttribute', ( evt, args ) => {\n\t\t\targs[ 0 ] = new SchemaContext( args[ 0 ] );\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.on( 'checkChild', ( evt, args ) => {\n\t\t\targs[ 0 ] = new SchemaContext( args[ 0 ] );\n\t\t\targs[ 1 ] = this.getDefinition( args[ 1 ] );\n\t\t}, { priority: 'highest' } );\n\t}\n\n\t/**\n\t * Registers schema item. Can only be called once for every item name.\n\t *\n\t *\t\tschema.register( 'paragraph', {\n\t *\t\t\tinheritAllFrom: '$block'\n\t *\t\t} );\n\t *\n\t * @param {String} itemName\n\t * @param {module:engine/model/schema~SchemaItemDefinition} definition\n\t */\n\tregister( itemName, definition ) {\n\t\tif ( this._sourceDefinitions[ itemName ] ) {\n\t\t\t/**\n\t\t\t * A single item cannot be registered twice in the schema.\n\t\t\t *\n\t\t\t * This situation may happen when:\n\t\t\t *\n\t\t\t * * Two or more plugins called {@link #register `register()`} with the same name. This will usually mean that\n\t\t\t * there is a collision between plugins which try to use the same element in the model. Unfortunately,\n\t\t\t * the only way to solve this is by modifying one of these plugins to use a unique model element name.\n\t\t\t * * A single plugin was loaded twice. This happens when it is installed by npm/yarn in two versions\n\t\t\t * and usually means one or more of the following issues:\n\t\t\t *     * a version mismatch (two of your dependencies require two different versions of this plugin),\n\t\t\t *     * incorrect imports (this plugin is somehow imported twice in a way which confuses webpack),\n\t\t\t *     * mess in `node_modules/` (`rm -rf node_modules/` may help).\n\t\t\t *\n\t\t\t * **Note:** Check the logged `itemName` to better understand which plugin was duplicated/conflicting.\n\t\t\t *\n\t\t\t * @param itemName The name of the model element that is being registered twice.\n\t\t\t * @error schema-cannot-register-item-twice\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'schema-cannot-register-item-twice: A single item cannot be registered twice in the schema.',\n\t\t\t\tthis,\n\t\t\t\t{\n\t\t\t\t\titemName\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tthis._sourceDefinitions[ itemName ] = [\n\t\t\tObject.assign( {}, definition )\n\t\t];\n\n\t\tthis._clearCache();\n\t}\n\n\t/**\n\t * Extends a {@link #register registered} item's definition.\n\t *\n\t * Extending properties such as `allowIn` will add more items to the existing properties,\n\t * while redefining properties such as `isBlock` will override the previously defined ones.\n\t *\n\t *\t\tschema.register( 'foo', {\n\t *\t\t\tallowIn: '$root',\n\t *\t\t\tisBlock: true;\n\t *\t\t} );\n\t *\t\tschema.extend( 'foo', {\n\t *\t\t\tallowIn: 'blockQuote',\n\t *\t\t\tisBlock: false\n\t *\t\t} );\n\t *\n\t *\t\tschema.getDefinition( 'foo' );\n\t *\t\t//\t{\n\t *\t\t//\t\tallowIn: [ '$root', 'blockQuote' ],\n\t *\t\t// \t\tisBlock: false\n\t *\t\t//\t}\n\t *\n\t * @param {String} itemName\n\t * @param {module:engine/model/schema~SchemaItemDefinition} definition\n\t */\n\textend( itemName, definition ) {\n\t\tif ( !this._sourceDefinitions[ itemName ] ) {\n\t\t\t/**\n\t\t\t * Cannot extend an item which was not registered yet.\n\t\t\t *\n\t\t\t * This error happens when a plugin tries to extend the schema definition of an item which was not\n\t\t\t * {@link #register registered} yet.\n\t\t\t *\n\t\t\t * @param itemName The name of the model element which is being extended.\n\t\t\t * @error schema-cannot-extend-missing-item\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'schema-cannot-extend-missing-item: Cannot extend an item which was not registered yet.', this, {\n\t\t\t\titemName\n\t\t\t} );\n\t\t}\n\n\t\tthis._sourceDefinitions[ itemName ].push( Object.assign( {}, definition ) );\n\n\t\tthis._clearCache();\n\t}\n\n\t/**\n\t * Returns data of all registered items.\n\t *\n\t * This method should normally be used for reflection purposes (e.g. defining a clone of a certain element,\n\t * checking a list of all block elements, etc).\n\t * Use specific methods (such as {@link #checkChild `checkChild()`} or {@link #isLimit `isLimit()`})\n\t * in other cases.\n\t *\n\t * @returns {Object.<String,module:engine/model/schema~SchemaCompiledItemDefinition>}\n\t */\n\tgetDefinitions() {\n\t\tif ( !this._compiledDefinitions ) {\n\t\t\tthis._compile();\n\t\t}\n\n\t\treturn this._compiledDefinitions;\n\t}\n\n\t/**\n\t * Returns a definition of the given item or `undefined` if item is not registered.\n\t *\n\t * This method should normally be used for reflection purposes (e.g. defining a clone of a certain element,\n\t * checking a list of all block elements, etc).\n\t * Use specific methods (such as {@link #checkChild `checkChild()`} or {@link #isLimit `isLimit()`})\n\t * in other cases.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t * @returns {module:engine/model/schema~SchemaCompiledItemDefinition}\n\t */\n\tgetDefinition( item ) {\n\t\tlet itemName;\n\n\t\tif ( typeof item == 'string' ) {\n\t\t\titemName = item;\n\t\t} else if ( item.is && ( item.is( 'text' ) || item.is( 'textProxy' ) ) ) {\n\t\t\titemName = '$text';\n\t\t}\n\t\t// Element or module:engine/model/schema~SchemaContextItem.\n\t\telse {\n\t\t\titemName = item.name;\n\t\t}\n\n\t\treturn this.getDefinitions()[ itemName ];\n\t}\n\n\t/**\n\t * Returns `true` if the given item is registered in the schema.\n\t *\n\t *\t\tschema.isRegistered( 'paragraph' ); // -> true\n\t *\t\tschema.isRegistered( editor.model.document.getRoot() ); // -> true\n\t *\t\tschema.isRegistered( 'foo' ); // -> false\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisRegistered( item ) {\n\t\treturn !!this.getDefinition( item );\n\t}\n\n\t/**\n\t * Returns `true` if the given item is defined to be\n\t * a block by {@link module:engine/model/schema~SchemaItemDefinition}'s `isBlock` property.\n\t *\n\t *\t\tschema.isBlock( 'paragraph' ); // -> true\n\t *\t\tschema.isBlock( '$root' ); // -> false\n\t *\n\t *\t\tconst paragraphElement = writer.createElement( 'paragraph' );\n\t *\t\tschema.isBlock( paragraphElement ); // -> true\n\t *\n\t * See the {@glink framework/guides/deep-dive/schema#block-elements Block elements} section of the \"Schema\" deep dive}\n\t * guide for more details.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisBlock( item ) {\n\t\tconst def = this.getDefinition( item );\n\n\t\treturn !!( def && def.isBlock );\n\t}\n\n\t/**\n\t * Returns `true` if the given item should be treated as a limit element.\n\t *\n\t * It considers the item to be a limit element if its\n\t * {@link module:engine/model/schema~SchemaItemDefinition}'s\n\t * {@link module:engine/model/schema~SchemaItemDefinition#isLimit `isLimit`} or\n\t * {@link module:engine/model/schema~SchemaItemDefinition#isObject `isObject`} property\n\t * were set to `true`.\n\t *\n\t *\t\tschema.isLimit( 'paragraph' ); // -> false\n\t *\t\tschema.isLimit( '$root' ); // -> true\n\t *\t\tschema.isLimit( editor.model.document.getRoot() ); // -> true\n\t *\t\tschema.isLimit( 'image' ); // -> true\n\t *\n\t * See the {@glink framework/guides/deep-dive/schema#limit-elements Limit elements} section of the \"Schema\" deep dive}\n\t * guide for more details.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisLimit( item ) {\n\t\tconst def = this.getDefinition( item );\n\n\t\tif ( !def ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!( def.isLimit || def.isObject );\n\t}\n\n\t/**\n\t * Returns `true` if the given item is should be treated as an object element.\n\t *\n\t * It considers the item to be an object element if its\n\t * {@link module:engine/model/schema~SchemaItemDefinition}'s\n\t * {@link module:engine/model/schema~SchemaItemDefinition#isObject `isObject`} property\n\t * were set to `true`.\n\t *\n\t *\t\tschema.isObject( 'paragraph' ); // -> false\n\t *\t\tschema.isObject( 'image' ); // -> true\n\t *\n\t *\t\tconst imageElement = writer.createElement( 'image' );\n\t *\t\tschema.isObject( imageElement ); // -> true\n\t *\n\t * See the {@glink framework/guides/deep-dive/schema#object-elements Object elements} section of the \"Schema\" deep dive}\n\t * guide for more details.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisObject( item ) {\n\t\tconst def = this.getDefinition( item );\n\n\t\treturn !!( def && def.isObject );\n\t}\n\n\t/**\n\t * Returns `true` if the given item is defined to be\n\t * an inline element by {@link module:engine/model/schema~SchemaItemDefinition}'s `isInline` property.\n\t *\n\t *\t\tschema.isInline( 'paragraph' ); // -> false\n\t *\t\tschema.isInline( 'softBreak' ); // -> true\n\t *\n\t *\t\tconst text = writer.createText('foo' );\n\t *\t\tschema.isInline( text ); // -> true\n\t *\n\t * See the {@glink framework/guides/deep-dive/schema#inline-elements Inline elements} section of the \"Schema\" deep dive}\n\t * guide for more details.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisInline( item ) {\n\t\tconst def = this.getDefinition( item );\n\n\t\treturn !!( def && def.isInline );\n\t}\n\n\t/**\n\t * Checks whether the given node (`child`) can be a child of the given context.\n\t *\n\t *\t\tschema.checkChild( model.document.getRoot(), paragraph ); // -> false\n\t *\n\t *\t\tschema.register( 'paragraph', {\n\t *\t\t\tallowIn: '$root'\n\t *\t\t} );\n\t *\t\tschema.checkChild( model.document.getRoot(), paragraph ); // -> true\n\t *\n\t * Note: When verifying whether the given node can be a child of the given context, the\n\t * schema also verifies the entire context &mdash; from its root to its last element. Therefore, it is possible\n\t * for `checkChild()` to return `false` even though the context's last element can contain the checked child.\n\t * It happens if one of the context's elements does not allow its child.\n\t *\n\t * @fires checkChild\n\t * @param {module:engine/model/schema~SchemaContextDefinition} context The context in which the child will be checked.\n\t * @param {module:engine/model/node~Node|String} def The child to check.\n\t */\n\tcheckChild( context, def ) {\n\t\t// Note: context and child are already normalized here to a SchemaContext and SchemaCompiledItemDefinition.\n\t\tif ( !def ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._checkContextMatch( def, context );\n\t}\n\n\t/**\n\t * Checks whether the given attribute can be applied in the given context (on the last\n\t * item of the context).\n\t *\n\t *\t\tschema.checkAttribute( textNode, 'bold' ); // -> false\n\t *\n\t *\t\tschema.extend( '$text', {\n\t *\t\t\tallowAttributes: 'bold'\n\t *\t\t} );\n\t *\t\tschema.checkAttribute( textNode, 'bold' ); // -> true\n\t *\n\t * @fires checkAttribute\n\t * @param {module:engine/model/schema~SchemaContextDefinition} context The context in which the attribute will be checked.\n\t * @param {String} attributeName\n\t */\n\tcheckAttribute( context, attributeName ) {\n\t\tconst def = this.getDefinition( context.last );\n\n\t\tif ( !def ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn def.allowAttributes.includes( attributeName );\n\t}\n\n\t/**\n\t * Checks whether the given element (`elementToMerge`) can be merged with the specified base element (`positionOrBaseElement`).\n\t *\n\t * In other words &mdash; whether `elementToMerge`'s children {@link #checkChild are allowed} in the `positionOrBaseElement`.\n\t *\n\t * This check ensures that elements merged with {@link module:engine/model/writer~Writer#merge `Writer#merge()`}\n\t * will be valid.\n\t *\n\t * Instead of elements, you can pass the instance of the {@link module:engine/model/position~Position} class as the\n\t * `positionOrBaseElement`. It means that the elements before and after the position will be checked whether they can be merged.\n\t *\n\t * @param {module:engine/model/position~Position|module:engine/model/element~Element} positionOrBaseElement The position or base\n\t * element to which the `elementToMerge` will be merged.\n\t * @param {module:engine/model/element~Element} elementToMerge The element to merge. Required if `positionOrBaseElement` is an element.\n\t * @returns {Boolean}\n\t */\n\tcheckMerge( positionOrBaseElement, elementToMerge = null ) {\n\t\tif ( positionOrBaseElement instanceof Position ) {\n\t\t\tconst nodeBefore = positionOrBaseElement.nodeBefore;\n\t\t\tconst nodeAfter = positionOrBaseElement.nodeAfter;\n\n\t\t\tif ( !( nodeBefore instanceof Element ) ) {\n\t\t\t\t/**\n\t\t\t\t * The node before the merge position must be an element.\n\t\t\t\t *\n\t\t\t\t * @error schema-check-merge-no-element-before\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'schema-check-merge-no-element-before: The node before the merge position must be an element.',\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( !( nodeAfter instanceof Element ) ) {\n\t\t\t\t/**\n\t\t\t\t * The node after the merge position must be an element.\n\t\t\t\t *\n\t\t\t\t * @error schema-check-merge-no-element-after\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'schema-check-merge-no-element-after: The node after the merge position must be an element.',\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn this.checkMerge( nodeBefore, nodeAfter );\n\t\t}\n\n\t\tfor ( const child of elementToMerge.getChildren() ) {\n\t\t\tif ( !this.checkChild( positionOrBaseElement, child ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Allows registering a callback to the {@link #checkChild} method calls.\n\t *\n\t * Callbacks allow you to implement rules which are not otherwise possible to achieve\n\t * by using the declarative API of {@link module:engine/model/schema~SchemaItemDefinition}.\n\t * For example, by using this method you can disallow elements in specific contexts.\n\t *\n\t * This method is a shorthand for using the {@link #event:checkChild} event. For even better control,\n\t * you can use that event instead.\n\t *\n\t * Example:\n\t *\n\t *\t\t// Disallow heading1 directly inside a blockQuote.\n\t *\t\tschema.addChildCheck( ( context, childDefinition ) => {\n\t *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition.name == 'heading1' ) {\n\t *\t\t\t\treturn false;\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Which translates to:\n\t *\n\t *\t\tschema.on( 'checkChild', ( evt, args ) => {\n\t *\t\t\tconst context = args[ 0 ];\n\t *\t\t\tconst childDefinition = args[ 1 ];\n\t *\n\t *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition && childDefinition.name == 'heading1' ) {\n\t *\t\t\t\t// Prevent next listeners from being called.\n\t *\t\t\t\tevt.stop();\n\t *\t\t\t\t// Set the checkChild()'s return value.\n\t *\t\t\t\tevt.return = false;\n\t *\t\t\t}\n\t *\t\t}, { priority: 'high' } );\n\t *\n\t * @param {Function} callback The callback to be called. It is called with two parameters:\n\t * {@link module:engine/model/schema~SchemaContext} (context) instance and\n\t * {@link module:engine/model/schema~SchemaCompiledItemDefinition} (child-to-check definition).\n\t * The callback may return `true/false` to override `checkChild()`'s return value. If it does not return\n\t * a boolean value, the default algorithm (or other callbacks) will define `checkChild()`'s return value.\n\t */\n\taddChildCheck( callback ) {\n\t\tthis.on( 'checkChild', ( evt, [ ctx, childDef ] ) => {\n\t\t\t// checkChild() was called with a non-registered child.\n\t\t\t// In 99% cases such check should return false, so not to overcomplicate all callbacks\n\t\t\t// don't even execute them.\n\t\t\tif ( !childDef ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst retValue = callback( ctx, childDef );\n\n\t\t\tif ( typeof retValue == 'boolean' ) {\n\t\t\t\tevt.stop();\n\t\t\t\tevt.return = retValue;\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * Allows registering a callback to the {@link #checkAttribute} method calls.\n\t *\n\t * Callbacks allow you to implement rules which are not otherwise possible to achieve\n\t * by using the declarative API of {@link module:engine/model/schema~SchemaItemDefinition}.\n\t * For example, by using this method you can disallow attribute if node to which it is applied\n\t * is contained within some other element (e.g. you want to disallow `bold` on `$text` within `heading1`).\n\t *\n\t * This method is a shorthand for using the {@link #event:checkAttribute} event. For even better control,\n\t * you can use that event instead.\n\t *\n\t * Example:\n\t *\n\t *\t\t// Disallow bold on $text inside heading1.\n\t *\t\tschema.addAttributeCheck( ( context, attributeName ) => {\n\t *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n\t *\t\t\t\treturn false;\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Which translates to:\n\t *\n\t *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n\t *\t\t\tconst context = args[ 0 ];\n\t *\t\t\tconst attributeName = args[ 1 ];\n\t *\n\t *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n\t *\t\t\t\t// Prevent next listeners from being called.\n\t *\t\t\t\tevt.stop();\n\t *\t\t\t\t// Set the checkAttribute()'s return value.\n\t *\t\t\t\tevt.return = false;\n\t *\t\t\t}\n\t *\t\t}, { priority: 'high' } );\n\t *\n\t * @param {Function} callback The callback to be called. It is called with two parameters:\n\t * {@link module:engine/model/schema~SchemaContext} (context) instance and attribute name.\n\t * The callback may return `true/false` to override `checkAttribute()`'s return value. If it does not return\n\t * a boolean value, the default algorithm (or other callbacks) will define `checkAttribute()`'s return value.\n\t */\n\taddAttributeCheck( callback ) {\n\t\tthis.on( 'checkAttribute', ( evt, [ ctx, attributeName ] ) => {\n\t\t\tconst retValue = callback( ctx, attributeName );\n\n\t\t\tif ( typeof retValue == 'boolean' ) {\n\t\t\t\tevt.stop();\n\t\t\t\tevt.return = retValue;\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * This method allows assigning additional metadata to the model attributes. For example,\n\t * {@link module:engine/model/schema~AttributeProperties `AttributeProperties#isFormatting` property} is\n\t * used to mark formatting attributes (like `bold` or `italic`).\n\t *\n\t *\t\t// Mark bold as a formatting attribute.\n\t *\t\tschema.setAttributeProperties( 'bold', {\n\t *\t\t\tisFormatting: true\n\t *\t\t} );\n\t *\n\t *\t\t// Override code not to be considered a formatting markup.\n\t *\t\tschema.setAttributeProperties( 'code', {\n\t *\t\t\tisFormatting: false\n\t *\t\t} );\n\t *\n\t * Properties are not limited to members defined in the\n\t * {@link module:engine/model/schema~AttributeProperties `AttributeProperties` type} and you can also use custom properties:\n\t *\n\t *\t\tschema.setAttributeProperties( 'blockQuote', {\n\t *\t\t\tcustomProperty: 'value'\n\t *\t\t} );\n\t *\n\t * Subsequent calls with the same attribute will extend its custom properties:\n\t *\n\t *\t\tschema.setAttributeProperties( 'blockQuote', {\n\t *\t\t\tone: 1\n\t *\t\t} );\n\t *\n\t *\t\tschema.setAttributeProperties( 'blockQuote', {\n\t *\t\t\ttwo: 2\n\t *\t\t} );\n\t *\n\t *\t\tconsole.log( schema.getAttributeProperties( 'blockQuote' ) );\n\t *\t\t// Logs: { one: 1, two: 2 }\n\t *\n\t * @param {String} attributeName A name of the attribute to receive the properties.\n\t * @param {module:engine/model/schema~AttributeProperties} properties A dictionary of properties.\n\t */\n\tsetAttributeProperties( attributeName, properties ) {\n\t\tthis._attributeProperties[ attributeName ] = Object.assign( this.getAttributeProperties( attributeName ), properties );\n\t}\n\n\t/**\n\t * Returns properties associated with a given model attribute. See {@link #setAttributeProperties `setAttributeProperties()`}.\n\t *\n\t * @param {String} attributeName A name of the attribute.\n\t * @returns {module:engine/model/schema~AttributeProperties}\n\t */\n\tgetAttributeProperties( attributeName ) {\n\t\treturn this._attributeProperties[ attributeName ] || {};\n\t}\n\n\t/**\n\t * Returns the lowest {@link module:engine/model/schema~Schema#isLimit limit element} containing the entire\n\t * selection/range/position or the root otherwise.\n\t *\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection|\n\t * module:engine/model/range~Range|module:engine/model/position~Position} selectionOrRangeOrPosition\n\t * The selection/range/position to check.\n\t * @returns {module:engine/model/element~Element} The lowest limit element containing\n\t * the entire `selectionOrRangeOrPosition`.\n\t */\n\tgetLimitElement( selectionOrRangeOrPosition ) {\n\t\tlet element;\n\n\t\tif ( selectionOrRangeOrPosition instanceof Position ) {\n\t\t\telement = selectionOrRangeOrPosition.parent;\n\t\t} else {\n\t\t\tconst ranges = selectionOrRangeOrPosition instanceof Range ?\n\t\t\t\t[ selectionOrRangeOrPosition ] :\n\t\t\t\tArray.from( selectionOrRangeOrPosition.getRanges() );\n\n\t\t\t// Find the common ancestor for all selection's ranges.\n\t\t\telement = ranges\n\t\t\t\t.reduce( ( element, range ) => {\n\t\t\t\t\tconst rangeCommonAncestor = range.getCommonAncestor();\n\n\t\t\t\t\tif ( !element ) {\n\t\t\t\t\t\treturn rangeCommonAncestor;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn element.getCommonAncestor( rangeCommonAncestor, { includeSelf: true } );\n\t\t\t\t}, null );\n\t\t}\n\n\t\twhile ( !this.isLimit( element ) ) {\n\t\t\tif ( element.parent ) {\n\t\t\t\telement = element.parent;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn element;\n\t}\n\n\t/**\n\t * Checks whether the attribute is allowed in selection:\n\t *\n\t * * if the selection is not collapsed, then checks if the attribute is allowed on any of nodes in that range,\n\t * * if the selection is collapsed, then checks if on the selection position there's a text with the\n\t * specified attribute allowed.\n\t *\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n\t * Selection which will be checked.\n\t * @param {String} attribute The name of the attribute to check.\n\t * @returns {Boolean}\n\t */\n\tcheckAttributeInSelection( selection, attribute ) {\n\t\tif ( selection.isCollapsed ) {\n\t\t\tconst firstPosition = selection.getFirstPosition();\n\t\t\tconst context = [\n\t\t\t\t...firstPosition.getAncestors(),\n\t\t\t\tnew Text( '', selection.getAttributes() )\n\t\t\t];\n\n\t\t\t// Check whether schema allows for a text with the attribute in the selection.\n\t\t\treturn this.checkAttribute( context, attribute );\n\t\t} else {\n\t\t\tconst ranges = selection.getRanges();\n\n\t\t\t// For all ranges, check nodes in them until you find a node that is allowed to have the attribute.\n\t\t\tfor ( const range of ranges ) {\n\t\t\t\tfor ( const value of range ) {\n\t\t\t\t\tif ( this.checkAttribute( value.item, attribute ) ) {\n\t\t\t\t\t\t// If we found a node that is allowed to have the attribute, return true.\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we haven't found such node, return false.\n\t\treturn false;\n\t}\n\n\t/**\n\t * Transforms the given set of ranges into a set of ranges where the given attribute is allowed (and can be applied).\n\t *\n\t * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be validated.\n\t * @param {String} attribute The name of the attribute to check.\n\t * @returns {Iterable.<module:engine/model/range~Range>} Ranges in which the attribute is allowed.\n\t */\n\t* getValidRanges( ranges, attribute ) {\n\t\tranges = convertToMinimalFlatRanges( ranges );\n\n\t\tfor ( const range of ranges ) {\n\t\t\tyield* this._getValidRangesForRange( range, attribute );\n\t\t}\n\t}\n\n\t/**\n\t * Basing on given `position`, finds and returns a {@link module:engine/model/range~Range range} which is\n\t * nearest to that `position` and is a correct range for selection.\n\t *\n\t * The correct selection range might be collapsed when it is located in a position where the text node can be placed.\n\t * Non-collapsed range is returned when selection can be placed around element marked as an \"object\" in\n\t * the {@link module:engine/model/schema~Schema schema}.\n\t *\n\t * Direction of searching for the nearest correct selection range can be specified as:\n\t *\n\t * * `both` - searching will be performed in both ways,\n\t * * `forward` - searching will be performed only forward,\n\t * * `backward` - searching will be performed only backward.\n\t *\n\t * When valid selection range cannot be found, `null` is returned.\n\t *\n\t * @param {module:engine/model/position~Position} position Reference position where new selection range should be looked for.\n\t * @param {'both'|'forward'|'backward'} [direction='both'] Search direction.\n\t * @returns {module:engine/model/range~Range|null} Nearest selection range or `null` if one cannot be found.\n\t */\n\tgetNearestSelectionRange( position, direction = 'both' ) {\n\t\t// Return collapsed range if provided position is valid.\n\t\tif ( this.checkChild( position, '$text' ) ) {\n\t\t\treturn new Range( position );\n\t\t}\n\n\t\tlet backwardWalker, forwardWalker;\n\n\t\t// Never leave a limit element.\n\t\tconst limitElement = position.getAncestors().reverse().find( item => this.isLimit( item ) ) || position.root;\n\n\t\tif ( direction == 'both' || direction == 'backward' ) {\n\t\t\tbackwardWalker = new TreeWalker( {\n\t\t\t\tboundaries: Range._createIn( limitElement ),\n\t\t\t\tstartPosition: position,\n\t\t\t\tdirection: 'backward'\n\t\t\t} );\n\t\t}\n\n\t\tif ( direction == 'both' || direction == 'forward' ) {\n\t\t\tforwardWalker = new TreeWalker( {\n\t\t\t\tboundaries: Range._createIn( limitElement ),\n\t\t\t\tstartPosition: position\n\t\t\t} );\n\t\t}\n\n\t\tfor ( const data of combineWalkers( backwardWalker, forwardWalker ) ) {\n\t\t\tconst type = ( data.walker == backwardWalker ? 'elementEnd' : 'elementStart' );\n\t\t\tconst value = data.value;\n\n\t\t\tif ( value.type == type && this.isObject( value.item ) ) {\n\t\t\t\treturn Range._createOn( value.item );\n\t\t\t}\n\n\t\t\tif ( this.checkChild( value.nextPosition, '$text' ) ) {\n\t\t\t\treturn new Range( value.nextPosition );\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Tries to find position ancestors that allows to insert given node.\n\t * It starts searching from the given position and goes node by node to the top of the model tree\n\t * as long as {@link module:engine/model/schema~Schema#isLimit limit element},\n\t * {@link module:engine/model/schema~Schema#isObject object element} or top-most ancestor won't be reached.\n\t *\n\t * @param {module:engine/model/position~Position} position Position from searching will start.\n\t * @param {module:engine/model/node~Node|String} node Node for which allowed parent should be found or its name.\n\t * @returns {module:engine/model/element~Element|null} element Allowed parent or null if nothing was found.\n\t */\n\tfindAllowedParent( position, node ) {\n\t\tlet parent = position.parent;\n\n\t\twhile ( parent ) {\n\t\t\tif ( this.checkChild( parent, node ) ) {\n\t\t\t\treturn parent;\n\t\t\t}\n\n\t\t\t// Do not split limit elements.\n\t\t\tif ( this.isLimit( parent ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Removes attributes disallowed by the schema.\n\t *\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes that will be filtered.\n\t * @param {module:engine/model/writer~Writer} writer\n\t */\n\tremoveDisallowedAttributes( nodes, writer ) {\n\t\tfor ( const node of nodes ) {\n\t\t\t// When node is a `Text` it has no children, so just filter it out.\n\t\t\tif ( node.is( 'text' ) ) {\n\t\t\t\tremoveDisallowedAttributeFromNode( this, node, writer );\n\t\t\t}\n\t\t\t// In a case of `Element` iterates through positions between nodes inside this element\n\t\t\t// and filter out node before the current position, or position parent when position\n\t\t\t// is at start of an element. Using positions prevent from omitting merged nodes\n\t\t\t// see https://github.com/ckeditor/ckeditor5-engine/issues/1789.\n\t\t\telse {\n\t\t\t\tconst rangeInNode = Range._createIn( node );\n\t\t\t\tconst positionsInRange = rangeInNode.getPositions();\n\n\t\t\t\tfor ( const position of positionsInRange ) {\n\t\t\t\t\tconst item = position.nodeBefore || position.parent;\n\n\t\t\t\t\tremoveDisallowedAttributeFromNode( this, item, writer );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates an instance of the schema context.\n\t *\n\t * @param {module:engine/model/schema~SchemaContextDefinition} context\n\t * @returns {module:engine/model/schema~SchemaContext}\n\t */\n\tcreateContext( context ) {\n\t\treturn new SchemaContext( context );\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_clearCache() {\n\t\tthis._compiledDefinitions = null;\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_compile() {\n\t\tconst compiledDefinitions = {};\n\t\tconst sourceRules = this._sourceDefinitions;\n\t\tconst itemNames = Object.keys( sourceRules );\n\n\t\tfor ( const itemName of itemNames ) {\n\t\t\tcompiledDefinitions[ itemName ] = compileBaseItemRule( sourceRules[ itemName ], itemName );\n\t\t}\n\n\t\tfor ( const itemName of itemNames ) {\n\t\t\tcompileAllowContentOf( compiledDefinitions, itemName );\n\t\t}\n\n\t\tfor ( const itemName of itemNames ) {\n\t\t\tcompileAllowWhere( compiledDefinitions, itemName );\n\t\t}\n\n\t\tfor ( const itemName of itemNames ) {\n\t\t\tcompileAllowAttributesOf( compiledDefinitions, itemName );\n\t\t\tcompileInheritPropertiesFrom( compiledDefinitions, itemName );\n\t\t}\n\n\t\tfor ( const itemName of itemNames ) {\n\t\t\tcleanUpAllowIn( compiledDefinitions, itemName );\n\t\t\tcleanUpAllowAttributes( compiledDefinitions, itemName );\n\t\t}\n\n\t\tthis._compiledDefinitions = compiledDefinitions;\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/schema~SchemaCompiledItemDefinition} def\n\t * @param {module:engine/model/schema~SchemaContext} context\n\t * @param {Number} contextItemIndex\n\t */\n\t_checkContextMatch( def, context, contextItemIndex = context.length - 1 ) {\n\t\tconst contextItem = context.getItem( contextItemIndex );\n\n\t\tif ( def.allowIn.includes( contextItem.name ) ) {\n\t\t\tif ( contextItemIndex == 0 ) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tconst parentRule = this.getDefinition( contextItem );\n\n\t\t\t\treturn this._checkContextMatch( parentRule, context, contextItemIndex - 1 );\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Takes a flat range and an attribute name. Traverses the range recursively and deeply to find and return all ranges\n\t * inside the given range on which the attribute can be applied.\n\t *\n\t * This is a helper function for {@link ~Schema#getValidRanges}.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range Range to process.\n\t * @param {String} attribute The name of the attribute to check.\n\t * @returns {Iterable.<module:engine/model/range~Range>} Ranges in which the attribute is allowed.\n\t */\n\t* _getValidRangesForRange( range, attribute ) {\n\t\tlet start = range.start;\n\t\tlet end = range.start;\n\n\t\tfor ( const item of range.getItems( { shallow: true } ) ) {\n\t\t\tif ( item.is( 'element' ) ) {\n\t\t\t\tyield* this._getValidRangesForRange( Range._createIn( item ), attribute );\n\t\t\t}\n\n\t\t\tif ( !this.checkAttribute( item, attribute ) ) {\n\t\t\t\tif ( !start.isEqual( end ) ) {\n\t\t\t\t\tyield new Range( start, end );\n\t\t\t\t}\n\n\t\t\t\tstart = Position._createAfter( item );\n\t\t\t}\n\n\t\t\tend = Position._createAfter( item );\n\t\t}\n\n\t\tif ( !start.isEqual( end ) ) {\n\t\t\tyield new Range( start, end );\n\t\t}\n\t}\n}\n\nmix( Schema, ObservableMixin );\n\n/**\n * Event fired when the {@link #checkChild} method is called. It allows plugging in\n * additional behavior – e.g. implementing rules which cannot be defined using the declarative\n * {@link module:engine/model/schema~SchemaItemDefinition} interface.\n *\n * **Note:** The {@link #addChildCheck} method is a more handy way to register callbacks. Internally,\n * it registers a listener to this event but comes with a simpler API and it is the recommended choice\n * in most of the cases.\n *\n * The {@link #checkChild} method fires an event because it is\n * {@link module:utils/observablemixin~ObservableMixin#decorate decorated} with it. Thanks to that you can\n * use this event in a various way, but the most important use case is overriding standard behaviour of the\n * `checkChild()` method. Let's see a typical listener template:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\t\t}, { priority: 'high' } );\n *\n * The listener is added with a `high` priority to be executed before the default method is really called. The `args` callback\n * parameter contains arguments passed to `checkChild( context, child )`. However, the `context` parameter is already\n * normalized to a {@link module:engine/model/schema~SchemaContext} instance and `child` to a\n * {@link module:engine/model/schema~SchemaCompiledItemDefinition} instance, so you don't have to worry about\n * the various ways how `context` and `child` may be passed to `checkChild()`.\n *\n * **Note:** `childDefinition` may be `undefined` if `checkChild()` was called with a non-registered element.\n *\n * So, in order to implement a rule \"disallow `heading1` in `blockQuote`\" you can add such a listener:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition && childDefinition.name == 'heading1' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkChild()'s return value.\n *\t\t\t\tevt.return = false;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * Allowing elements in specific contexts will be a far less common use case, because it's normally handled by\n * `allowIn` rule from {@link module:engine/model/schema~SchemaItemDefinition} but if you have a complex scenario\n * where `listItem` should be allowed only in element `foo` which must be in element `bar`, then this would be the way:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'bar foo' ) && childDefinition.name == 'listItem' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkChild()'s return value.\n *\t\t\t\tevt.return = true;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * @event checkChild\n * @param {Array} args The `checkChild()`'s arguments.\n */\n\n/**\n * Event fired when the {@link #checkAttribute} method is called. It allows plugging in\n * additional behavior – e.g. implementing rules which cannot be defined using the declarative\n * {@link module:engine/model/schema~SchemaItemDefinition} interface.\n *\n * **Note:** The {@link #addAttributeCheck} method is a more handy way to register callbacks. Internally,\n * it registers a listener to this event but comes with a simpler API and it is the recommended choice\n * in most of the cases.\n *\n * The {@link #checkAttribute} method fires an event because it's\n * {@link module:utils/observablemixin~ObservableMixin#decorate decorated} with it. Thanks to that you can\n * use this event in a various way, but the most important use case is overriding standard behaviour of the\n * `checkAttribute()` method. Let's see a typical listener template:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst attributeName = args[ 1 ];\n *\t\t}, { priority: 'high' } );\n *\n * The listener is added with a `high` priority to be executed before the default method is really called. The `args` callback\n * parameter contains arguments passed to `checkAttribute( context, attributeName )`. However, the `context` parameter is already\n * normalized to a {@link module:engine/model/schema~SchemaContext} instance, so you don't have to worry about\n * the various ways how `context` may be passed to `checkAttribute()`.\n *\n * So, in order to implement a rule \"disallow `bold` in a text which is in a `heading1` you can add such a listener:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst attributeName = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkAttribute()'s return value.\n *\t\t\t\tevt.return = false;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * Allowing attributes in specific contexts will be a far less common use case, because it's normally handled by\n * `allowAttributes` rule from {@link module:engine/model/schema~SchemaItemDefinition} but if you have a complex scenario\n * where `bold` should be allowed only in element `foo` which must be in element `bar`, then this would be the way:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst attributeName = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'bar foo $text' ) && attributeName == 'bold' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkAttribute()'s return value.\n *\t\t\t\tevt.return = true;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * @event checkAttribute\n * @param {Array} args The `checkAttribute()`'s arguments.\n */\n\n/**\n * A definition of a {@link module:engine/model/schema~Schema schema} item.\n *\n * You can define the following rules:\n *\n * * {@link ~SchemaItemDefinition#allowIn `allowIn`} &ndash; Defines in which other items this item will be allowed.\n * * {@link ~SchemaItemDefinition#allowAttributes `allowAttributes`} &ndash; Defines allowed attributes of the given item.\n * * {@link ~SchemaItemDefinition#allowContentOf `allowContentOf`} &ndash; Inherits \"allowed children\" from other items.\n * * {@link ~SchemaItemDefinition#allowWhere `allowWhere`} &ndash; Inherits \"allowed in\" from other items.\n * * {@link ~SchemaItemDefinition#allowAttributesOf `allowAttributesOf`} &ndash; Inherits attributes from other items.\n * * {@link ~SchemaItemDefinition#inheritTypesFrom `inheritTypesFrom`} &ndash; Inherits `is*` properties of other items.\n * * {@link ~SchemaItemDefinition#inheritAllFrom `inheritAllFrom`} &ndash;\n * A shorthand for `allowContentOf`, `allowWhere`, `allowAttributesOf`, `inheritTypesFrom`.\n *\n * # The `is*` properties\n *\n * There are a couple commonly used `is*` properties. Their role is to assign additional semantics to schema items.\n * You can define more properties but you will also need to implement support for them in the existing editor features.\n *\n * * {@link ~SchemaItemDefinition#isBlock `isBlock`} &ndash; Whether this item is paragraph-like.\n * Generally speaking, content is usually made out of blocks like paragraphs, list items, images, headings, etc.\n * * {@link ~SchemaItemDefinition#isInline `isInline`} &ndash; Whether an item is \"text-like\" and should be treated as an inline node.\n * Examples of inline elements: `$text`, `softBreak` (`<br>`), etc.\n * * {@link ~SchemaItemDefinition#isLimit `isLimit`} &ndash; It can be understood as whether this element\n * should not be split by <kbd>Enter</kbd>. Examples of limit elements: `$root`, table cell, image caption, etc.\n * In other words, all actions that happen inside a limit element are limited to its content.\n * All objects are treated as limit elements, too.\n * * {@link ~SchemaItemDefinition#isObject `isObject`} &ndash; Whether an item is \"self-contained\" and should be treated as a whole.\n * Examples of object elements: `image`, `table`, `video`, etc. An object is also a limit, so\n * {@link module:engine/model/schema~Schema#isLimit `isLimit()`} returns `true` for object elements automatically.\n *\n * Read more about the meaning of these types in the\n * {@glink framework/guides/deep-dive/schema#defining-additional-semantics Dedicated section of the \"Schema\" deep dive} guide.\n *\n * # Generic items\n *\n * There are three basic generic items: `$root`, `$block` and `$text`.\n * They are defined as follows:\n *\n *\t\tthis.schema.register( '$root', {\n *\t\t\tisLimit: true\n *\t\t} );\n *\t\tthis.schema.register( '$block', {\n *\t\t\tallowIn: '$root',\n *\t\t\tisBlock: true\n *\t\t} );\n *\t\tthis.schema.register( '$text', {\n *\t\t\tallowIn: '$block',\n *\t\t\tisInline: true\n *\t\t} );\n *\n * They reflect typical editor content that is contained within one root, consists of several blocks\n * (paragraphs, lists items, headings, images) which, in turn, may contain text inside.\n *\n * By inheriting from the generic items you can define new items which will get extended by other editor features.\n * Read more about generic types in the {@glink framework/guides/deep-dive/schema Schema deep dive} guide.\n *\n * # Example definitions\n *\n * Allow `paragraph` in roots and block quotes:\n *\n *\t\tschema.register( 'paragraph', {\n *\t\t\tallowIn: [ '$root', 'blockQuote' ],\n *\t\t\tisBlock: true\n *\t\t} );\n *\n * Allow `paragraph` everywhere where `$block` is allowed (i.e. in `$root`):\n *\n *\t\tschema.register( 'paragraph', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tisBlock: true\n *\t\t} );\n *\n * Make `image` a block object, which is allowed everywhere where `$block` is.\n * Also, allow `src` and `alt` attributes in it:\n *\n *\t\tschema.register( 'image', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tallowAttributes: [ 'src', 'alt' ],\n *\t\t\tisBlock: true,\n *\t\t\tisObject: true\n *\t\t} );\n *\n * Make `caption` allowed in `image` and make it allow all the content of `$block`s (usually, `$text`).\n * Also, mark it as a limit element so it cannot be split:\n *\n *\t\tschema.register( 'caption', {\n *\t\t\tallowIn: 'image',\n *\t\t\tallowContentOf: '$block',\n *\t\t\tisLimit: true\n *\t\t} );\n *\n * Make `listItem` inherit all from `$block` but also allow additional attributes:\n *\n *\t\tschema.register( 'listItem', {\n *\t\t\tinheritAllFrom: '$block',\n *\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\n *\t\t} );\n *\n * Which translates to:\n *\n *\t\tschema.register( 'listItem', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tallowContentOf: '$block',\n *\t\t\tallowAttributesOf: '$block',\n *\t\t\tinheritTypesFrom: '$block',\n *\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\n *\t\t} );\n *\n * # Tips\n *\n * * Check schema definitions of existing features to see how they are defined.\n * * If you want to publish your feature so other developers can use it, try to use\n * generic items as much as possible.\n * * Keep your model clean. Limit it to the actual data and store information in a normalized way.\n * * Remember about defining the `is*` properties. They do not affect the allowed structures, but they can\n * affect how the editor features treat your elements.\n *\n * @typedef {Object} module:engine/model/schema~SchemaItemDefinition\n *\n * @property {String|Array.<String>} allowIn Defines in which other items this item will be allowed.\n * @property {String|Array.<String>} allowAttributes Defines allowed attributes of the given item.\n * @property {String|Array.<String>} allowContentOf Inherits \"allowed children\" from other items.\n * @property {String|Array.<String>} allowWhere Inherits \"allowed in\" from other items.\n * @property {String|Array.<String>} allowAttributesOf Inherits attributes from other items.\n * @property {String|Array.<String>} inheritTypesFrom Inherits `is*` properties of other items.\n * @property {String} inheritAllFrom A shorthand for `allowContentOf`, `allowWhere`, `allowAttributesOf`, `inheritTypesFrom`.\n *\n * @property {Boolean} isBlock\n * Whether this item is paragraph-like. Generally speaking, content is usually made out of blocks\n * like paragraphs, list items, images, headings, etc. All these elements are marked as blocks. A block\n * should not allow another block inside. Note: There is also the `$block` generic item which has `isBlock` set to `true`.\n * Most block type items will inherit from `$block` (through `inheritAllFrom`).\n *\n * Read more about the block elements in the\n * {@glink framework/guides/deep-dive/schema#block-elements Block elements} section of the \"Schema\" deep dive} guide.\n *\n * @property {Boolean} isInline\n * Whether an item is \"text-like\" and should be treated as an inline node. Examples of inline elements:\n * `$text`, `softBreak` (`<br>`), etc.\n *\n * Read more about the inline elements in the\n * {@glink framework/guides/deep-dive/schema#inline-elements Inline elements} section of the \"Schema\" deep dive} guide.\n *\n * @property {Boolean} isLimit\n * It can be understood as whether this element should not be split by <kbd>Enter</kbd>.\n * Examples of limit elements: `$root`, table cell, image caption, etc. In other words, all actions that happen inside\n * a limit element are limited to its content.\n *\n * Read more about the limit elements in the\n * {@glink framework/guides/deep-dive/schema#limit-elements Limit elements} section of the \"Schema\" deep dive} guide.\n *\n * @property {Boolean} isObject\n * Whether an item is \"self-contained\" and should be treated as a whole. Examples of object elements:\n * `image`, `table`, `video`, etc.\n *\n * **Note:** An object is also a limit, so\n * {@link module:engine/model/schema~Schema#isLimit `isLimit()`} returns `true` for object elements automatically.\n *\n * Read more about the object elements in the\n * {@glink framework/guides/deep-dive/schema#object-elements Object elements} section of the \"Schema\" deep dive} guide.\n */\n\n/**\n * A simplified version of {@link module:engine/model/schema~SchemaItemDefinition} after\n * compilation by the {@link module:engine/model/schema~Schema schema}.\n * Rules fed to the schema by {@link module:engine/model/schema~Schema#register}\n * and {@link module:engine/model/schema~Schema#extend} methods are defined in the\n * {@link module:engine/model/schema~SchemaItemDefinition} format.\n * Later on, they are compiled to `SchemaCompiledItemDefinition` so when you use e.g.\n * the {@link module:engine/model/schema~Schema#getDefinition} method you get the compiled version.\n *\n * The compiled version contains only the following properties:\n *\n * * The `name` property,\n * * The `is*` properties,\n * * The `allowIn` array,\n * * The `allowAttributes` array.\n *\n * @typedef {Object} module:engine/model/schema~SchemaCompiledItemDefinition\n */\n\n/**\n * A schema context &mdash; a list of ancestors of a given position in the document.\n *\n * Considering such position:\n *\n *\t\t<$root>\n *\t\t\t<blockQuote>\n *\t\t\t\t<paragraph>\n *\t\t\t\t\t^\n *\t\t\t\t</paragraph>\n *\t\t\t</blockQuote>\n *\t\t</$root>\n *\n * The context of this position is its {@link module:engine/model/position~Position#getAncestors lists of ancestors}:\n *\n *\t\t[ rootElement, blockQuoteElement, paragraphElement ]\n *\n * Contexts are used in the {@link module:engine/model/schema~Schema#event:checkChild `Schema#checkChild`} and\n * {@link module:engine/model/schema~Schema#event:checkAttribute `Schema#checkAttribute`} events as a definition\n * of a place in the document where the check occurs. The context instances are created based on the first arguments\n * of the {@link module:engine/model/schema~Schema#checkChild `Schema#checkChild()`} and\n * {@link module:engine/model/schema~Schema#checkAttribute `Schema#checkAttribute()`} methods so when\n * using these methods you need to use {@link module:engine/model/schema~SchemaContextDefinition}s.\n */\nexport class SchemaContext {\n\t/**\n\t * Creates an instance of the context.\n\t *\n\t * @param {module:engine/model/schema~SchemaContextDefinition} context\n\t */\n\tconstructor( context ) {\n\t\tif ( context instanceof SchemaContext ) {\n\t\t\treturn context;\n\t\t}\n\n\t\tif ( typeof context == 'string' ) {\n\t\t\tcontext = [ context ];\n\t\t} else if ( !Array.isArray( context ) ) {\n\t\t\t// `context` is item or position.\n\t\t\t// Position#getAncestors() doesn't accept any parameters but it works just fine here.\n\t\t\tcontext = context.getAncestors( { includeSelf: true } );\n\t\t}\n\n\t\tif ( context[ 0 ] && typeof context[ 0 ] != 'string' && context[ 0 ].is( 'documentFragment' ) ) {\n\t\t\tcontext.shift();\n\t\t}\n\n\t\tthis._items = context.map( mapContextItem );\n\t}\n\n\t/**\n\t * The number of items.\n\t *\n\t * @type {Number}\n\t */\n\tget length() {\n\t\treturn this._items.length;\n\t}\n\n\t/**\n\t * The last item (the lowest node).\n\t *\n\t * @type {module:engine/model/schema~SchemaContextItem}\n\t */\n\tget last() {\n\t\treturn this._items[ this._items.length - 1 ];\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over all context items.\n\t *\n\t * @returns {Iterable.<module:engine/model/schema~SchemaContextItem>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._items[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Returns a new schema context instance with an additional item.\n\t *\n\t * Item can be added as:\n\t *\n\t * \t\tconst context = new SchemaContext( [ '$root' ] );\n\t *\n\t * \t\t// An element.\n\t * \t\tconst fooElement = writer.createElement( 'fooElement' );\n\t * \t\tconst newContext = context.push( fooElement ); // [ '$root', 'fooElement' ]\n\t *\n\t * \t\t// A text node.\n\t * \t\tconst text = writer.createText( 'foobar' );\n\t * \t\tconst newContext = context.push( text ); // [ '$root', '$text' ]\n\t *\n\t * \t\t// A string (element name).\n\t * \t\tconst newContext = context.push( 'barElement' ); // [ '$root', 'barElement' ]\n\t *\n\t * **Note** {@link module:engine/model/node~Node} that is already in the model tree will be added as the only item\n\t * (without ancestors).\n\t *\n\t * @param {String|module:engine/model/node~Node|Array<String|module:engine/model/node~Node>} item An item that will be added\n\t * to the current context.\n\t * @returns {module:engine/model/schema~SchemaContext} A new schema context instance with an additional item.\n\t */\n\tpush( item ) {\n\t\tconst ctx = new SchemaContext( [ item ] );\n\n\t\tctx._items = [ ...this._items, ...ctx._items ];\n\n\t\treturn ctx;\n\t}\n\n\t/**\n\t * Gets an item on the given index.\n\t *\n\t * @returns {module:engine/model/schema~SchemaContextItem}\n\t */\n\tgetItem( index ) {\n\t\treturn this._items[ index ];\n\t}\n\n\t/**\n\t * Returns the names of items.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\t* getNames() {\n\t\tyield* this._items.map( item => item.name );\n\t}\n\n\t/**\n\t * Checks whether the context ends with the given nodes.\n\t *\n\t *\t\tconst ctx = new SchemaContext( [ rootElement, paragraphElement, textNode ] );\n\t *\n\t *\t\tctx.endsWith( '$text' ); // -> true\n\t *\t\tctx.endsWith( 'paragraph $text' ); // -> true\n\t *\t\tctx.endsWith( '$root' ); // -> false\n\t *\t\tctx.endsWith( 'paragraph' ); // -> false\n\t *\n\t * @param {String} query\n\t * @returns {Boolean}\n\t */\n\tendsWith( query ) {\n\t\treturn Array.from( this.getNames() ).join( ' ' ).endsWith( query );\n\t}\n\n\t/**\n\t * Checks whether the context starts with the given nodes.\n\t *\n\t *\t\tconst ctx = new SchemaContext( [ rootElement, paragraphElement, textNode ] );\n\t *\n\t *\t\tctx.endsWith( '$root' ); // -> true\n\t *\t\tctx.endsWith( '$root paragraph' ); // -> true\n\t *\t\tctx.endsWith( '$text' ); // -> false\n\t *\t\tctx.endsWith( 'paragraph' ); // -> false\n\t *\n\t * @param {String} query\n\t * @returns {Boolean}\n\t */\n\tstartsWith( query ) {\n\t\treturn Array.from( this.getNames() ).join( ' ' ).startsWith( query );\n\t}\n}\n\n/**\n * The definition of a {@link module:engine/model/schema~SchemaContext schema context}.\n *\n * Contexts can be created in multiple ways:\n *\n * * By defining a **node** – in this cases this node and all its ancestors will be used.\n * * By defining a **position** in the document – in this case all its ancestors will be used.\n * * By defining an **array of nodes** – in this case this array defines the entire context.\n * * By defining a **name of node** - in this case node will be \"mocked\". It is not recommended because context\n * will be unrealistic (e.g. attributes of these nodes are not specified). However, at times this may be the only\n * way to define the context (e.g. when checking some hypothetical situation).\n * * By defining an **array of node names** (potentially, mixed with real nodes) – The same as **name of node**\n * but it is possible to create a path.\n * * By defining a {@link module:engine/model/schema~SchemaContext} instance - in this case the same instance as provided\n * will be return.\n *\n * Examples of context definitions passed to the {@link module:engine/model/schema~Schema#checkChild `Schema#checkChild()`}\n * method:\n *\n *\t\t// Assuming that we have a $root > blockQuote > paragraph structure, the following code\n *\t\t// will check node 'foo' in the following context:\n *\t\t// [ rootElement, blockQuoteElement, paragraphElement ]\n *\t\tconst contextDefinition = paragraphElement;\n * \t\tconst childToCheck = 'foo';\n *\t\tschema.checkChild( contextDefinition, childToCheck );\n *\n *\t\t// Also check in [ rootElement, blockQuoteElement, paragraphElement ].\n *\t\tschema.checkChild( model.createPositionAt( paragraphElement, 0 ), 'foo' );\n *\n *\t\t// Check in [ rootElement, paragraphElement ].\n *\t\tschema.checkChild( [ rootElement, paragraphElement ], 'foo' );\n *\n *\t\t// Check only fakeParagraphElement.\n *\t\tschema.checkChild( 'paragraph', 'foo' );\n *\n *\t\t// Check in [ fakeRootElement, fakeBarElement, paragraphElement ].\n *\t\tschema.checkChild( [ '$root', 'bar', paragraphElement ], 'foo' );\n *\n * All these `checkChild()` calls will fire {@link module:engine/model/schema~Schema#event:checkChild `Schema#checkChild`}\n * events in which `args[ 0 ]` is an instance of the context. Therefore, you can write a listener like this:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst ctx = args[ 0 ];\n *\n *\t\t\tconsole.log( Array.from( ctx.getNames() ) );\n *\t\t} );\n *\n * Which will log the following:\n *\n *\t\t[ '$root', 'blockQuote', 'paragraph' ]\n *\t\t[ '$root', 'paragraph' ]\n *\t\t[ '$root', 'bar', 'paragraph' ]\n *\n * Note: When using the {@link module:engine/model/schema~Schema#checkAttribute `Schema#checkAttribute()`} method\n * you may want to check whether a text node may have an attribute. A {@link module:engine/model/text~Text} is a\n * correct way to define a context so you can do this:\n *\n *\t\tschema.checkAttribute( textNode, 'bold' );\n *\n * But sometimes you want to check whether a text at a given position might've had some attribute,\n * in which case you can create a context by missing an array of elements with a `'$text'` string:\n *\n *\t\t// Check in [ rootElement, paragraphElement, textNode ].\n *\t\tschema.checkChild( [ ...positionInParagraph.getAncestors(), '$text' ], 'bold' );\n *\n * @typedef {module:engine/model/node~Node|module:engine/model/position~Position|module:engine/model/schema~SchemaContext|\n * String|Array.<String|module:engine/model/node~Node>} module:engine/model/schema~SchemaContextDefinition\n */\n\n/**\n * An item of the {@link module:engine/model/schema~SchemaContext schema context}.\n *\n * It contains 3 properties:\n *\n * * `name` – the name of this item,\n * * `* getAttributeKeys()` – a generator of keys of item attributes,\n * * `getAttribute( keyName )` – a method to get attribute values.\n *\n * The context item interface is a highly simplified version of {@link module:engine/model/node~Node} and its role\n * is to expose only the information which schema checks are able to provide (which is the name of the node and\n * node's attributes).\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst ctx = args[ 0 ];\n *\t\t\tconst firstItem = ctx.getItem( 0 );\n *\n *\t\t\tconsole.log( firstItem.name ); // -> '$root'\n *\t\t\tconsole.log( firstItem.getAttribute( 'foo' ) ); // -> 'bar'\n *\t\t\tconsole.log( Array.from( firstItem.getAttributeKeys() ) ); // -> [ 'foo', 'faa' ]\n *\t\t} );\n *\n * @typedef {Object} module:engine/model/schema~SchemaContextItem\n */\n\n/**\n * A structure containing additional metadata describing the attribute.\n *\n * See {@link module:engine/model/schema~Schema#setAttributeProperties `Schema#setAttributeProperties()`} for usage examples.\n *\n * @typedef {Object} module:engine/model/schema~AttributeProperties\n * @property {Boolean} [isFormatting] Indicates that the attribute should be considered as a visual formatting, like `bold`, `italic` or\n * `fontSize` rather than semantic attribute (such as `src`, `listType`, etc.). For example, it is used by the \"Remove format\" feature.\n * @property {Boolean} [copyOnEnter] Indicates that given text attribute should be copied to the next block when enter is pressed.\n */\n\nfunction compileBaseItemRule( sourceItemRules, itemName ) {\n\tconst itemRule = {\n\t\tname: itemName,\n\n\t\tallowIn: [],\n\t\tallowContentOf: [],\n\t\tallowWhere: [],\n\n\t\tallowAttributes: [],\n\t\tallowAttributesOf: [],\n\n\t\tinheritTypesFrom: []\n\t};\n\n\tcopyTypes( sourceItemRules, itemRule );\n\n\tcopyProperty( sourceItemRules, itemRule, 'allowIn' );\n\tcopyProperty( sourceItemRules, itemRule, 'allowContentOf' );\n\tcopyProperty( sourceItemRules, itemRule, 'allowWhere' );\n\n\tcopyProperty( sourceItemRules, itemRule, 'allowAttributes' );\n\tcopyProperty( sourceItemRules, itemRule, 'allowAttributesOf' );\n\n\tcopyProperty( sourceItemRules, itemRule, 'inheritTypesFrom' );\n\n\tmakeInheritAllWork( sourceItemRules, itemRule );\n\n\treturn itemRule;\n}\n\nfunction compileAllowContentOf( compiledDefinitions, itemName ) {\n\tfor ( const allowContentOfItemName of compiledDefinitions[ itemName ].allowContentOf ) {\n\t\t// The allowContentOf property may point to an unregistered element.\n\t\tif ( compiledDefinitions[ allowContentOfItemName ] ) {\n\t\t\tconst allowedChildren = getAllowedChildren( compiledDefinitions, allowContentOfItemName );\n\n\t\t\tallowedChildren.forEach( allowedItem => {\n\t\t\t\tallowedItem.allowIn.push( itemName );\n\t\t\t} );\n\t\t}\n\t}\n\n\tdelete compiledDefinitions[ itemName ].allowContentOf;\n}\n\nfunction compileAllowWhere( compiledDefinitions, itemName ) {\n\tfor ( const allowWhereItemName of compiledDefinitions[ itemName ].allowWhere ) {\n\t\tconst inheritFrom = compiledDefinitions[ allowWhereItemName ];\n\n\t\t// The allowWhere property may point to an unregistered element.\n\t\tif ( inheritFrom ) {\n\t\t\tconst allowedIn = inheritFrom.allowIn;\n\n\t\t\tcompiledDefinitions[ itemName ].allowIn.push( ...allowedIn );\n\t\t}\n\t}\n\n\tdelete compiledDefinitions[ itemName ].allowWhere;\n}\n\nfunction compileAllowAttributesOf( compiledDefinitions, itemName ) {\n\tfor ( const allowAttributeOfItem of compiledDefinitions[ itemName ].allowAttributesOf ) {\n\t\tconst inheritFrom = compiledDefinitions[ allowAttributeOfItem ];\n\n\t\tif ( inheritFrom ) {\n\t\t\tconst inheritAttributes = inheritFrom.allowAttributes;\n\n\t\t\tcompiledDefinitions[ itemName ].allowAttributes.push( ...inheritAttributes );\n\t\t}\n\t}\n\n\tdelete compiledDefinitions[ itemName ].allowAttributesOf;\n}\n\nfunction compileInheritPropertiesFrom( compiledDefinitions, itemName ) {\n\tconst item = compiledDefinitions[ itemName ];\n\n\tfor ( const inheritPropertiesOfItem of item.inheritTypesFrom ) {\n\t\tconst inheritFrom = compiledDefinitions[ inheritPropertiesOfItem ];\n\n\t\tif ( inheritFrom ) {\n\t\t\tconst typeNames = Object.keys( inheritFrom ).filter( name => name.startsWith( 'is' ) );\n\n\t\t\tfor ( const name of typeNames ) {\n\t\t\t\tif ( !( name in item ) ) {\n\t\t\t\t\titem[ name ] = inheritFrom[ name ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdelete item.inheritTypesFrom;\n}\n\n// Remove items which weren't registered (because it may break some checks or we'd need to complicate them).\n// Make sure allowIn doesn't contain repeated values.\nfunction cleanUpAllowIn( compiledDefinitions, itemName ) {\n\tconst itemRule = compiledDefinitions[ itemName ];\n\tconst existingItems = itemRule.allowIn.filter( itemToCheck => compiledDefinitions[ itemToCheck ] );\n\n\titemRule.allowIn = Array.from( new Set( existingItems ) );\n}\n\nfunction cleanUpAllowAttributes( compiledDefinitions, itemName ) {\n\tconst itemRule = compiledDefinitions[ itemName ];\n\n\titemRule.allowAttributes = Array.from( new Set( itemRule.allowAttributes ) );\n}\n\nfunction copyTypes( sourceItemRules, itemRule ) {\n\tfor ( const sourceItemRule of sourceItemRules ) {\n\t\tconst typeNames = Object.keys( sourceItemRule ).filter( name => name.startsWith( 'is' ) );\n\n\t\tfor ( const name of typeNames ) {\n\t\t\titemRule[ name ] = sourceItemRule[ name ];\n\t\t}\n\t}\n}\n\nfunction copyProperty( sourceItemRules, itemRule, propertyName ) {\n\tfor ( const sourceItemRule of sourceItemRules ) {\n\t\tif ( typeof sourceItemRule[ propertyName ] == 'string' ) {\n\t\t\titemRule[ propertyName ].push( sourceItemRule[ propertyName ] );\n\t\t} else if ( Array.isArray( sourceItemRule[ propertyName ] ) ) {\n\t\t\titemRule[ propertyName ].push( ...sourceItemRule[ propertyName ] );\n\t\t}\n\t}\n}\n\nfunction makeInheritAllWork( sourceItemRules, itemRule ) {\n\tfor ( const sourceItemRule of sourceItemRules ) {\n\t\tconst inheritFrom = sourceItemRule.inheritAllFrom;\n\n\t\tif ( inheritFrom ) {\n\t\t\titemRule.allowContentOf.push( inheritFrom );\n\t\t\titemRule.allowWhere.push( inheritFrom );\n\t\t\titemRule.allowAttributesOf.push( inheritFrom );\n\t\t\titemRule.inheritTypesFrom.push( inheritFrom );\n\t\t}\n\t}\n}\n\nfunction getAllowedChildren( compiledDefinitions, itemName ) {\n\tconst itemRule = compiledDefinitions[ itemName ];\n\n\treturn getValues( compiledDefinitions ).filter( def => def.allowIn.includes( itemRule.name ) );\n}\n\nfunction getValues( obj ) {\n\treturn Object.keys( obj ).map( key => obj[ key ] );\n}\n\nfunction mapContextItem( ctxItem ) {\n\tif ( typeof ctxItem == 'string' ) {\n\t\treturn {\n\t\t\tname: ctxItem,\n\n\t\t\t* getAttributeKeys() {},\n\n\t\t\tgetAttribute() {}\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\t// '$text' means text nodes and text proxies.\n\t\t\tname: ctxItem.is( 'element' ) ? ctxItem.name : '$text',\n\n\t\t\t* getAttributeKeys() {\n\t\t\t\tyield* ctxItem.getAttributeKeys();\n\t\t\t},\n\n\t\t\tgetAttribute( key ) {\n\t\t\t\treturn ctxItem.getAttribute( key );\n\t\t\t}\n\t\t};\n\t}\n}\n\n// Generator function returning values from provided walkers, switching between them at each iteration. If only one walker\n// is provided it will return data only from that walker.\n//\n// @param {module:engine/module/treewalker~TreeWalker} [backward] Walker iterating in backward direction.\n// @param {module:engine/module/treewalker~TreeWalker} [forward] Walker iterating in forward direction.\n// @returns {Iterable.<Object>} Object returned at each iteration contains `value` and `walker` (informing which walker returned\n// given value) fields.\nfunction* combineWalkers( backward, forward ) {\n\tlet done = false;\n\n\twhile ( !done ) {\n\t\tdone = true;\n\n\t\tif ( backward ) {\n\t\t\tconst step = backward.next();\n\n\t\t\tif ( !step.done ) {\n\t\t\t\tdone = false;\n\t\t\t\tyield {\n\t\t\t\t\twalker: backward,\n\t\t\t\t\tvalue: step.value\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( forward ) {\n\t\t\tconst step = forward.next();\n\n\t\t\tif ( !step.done ) {\n\t\t\t\tdone = false;\n\t\t\t\tyield {\n\t\t\t\t\twalker: forward,\n\t\t\t\t\tvalue: step.value\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Takes an array of non-intersecting ranges. For each of them gets minimal flat ranges covering that range and returns\n// all those minimal flat ranges.\n//\n// @param {Array.<module:engine/model/range~Range>} ranges Ranges to process.\n// @returns {Iterable.<module:engine/model/range~Range>} Minimal flat ranges of given `ranges`.\nfunction* convertToMinimalFlatRanges( ranges ) {\n\tfor ( const range of ranges ) {\n\t\tyield* range.getMinimalFlatRanges();\n\t}\n}\n\nfunction removeDisallowedAttributeFromNode( schema, node, writer ) {\n\tfor ( const attribute of node.getAttributeKeys() ) {\n\t\tif ( !schema.checkAttribute( node, attribute ) ) {\n\t\t\twriter.removeAttribute( attribute, node );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/upcastdispatcher\n */\n\nimport ViewConsumable from './viewconsumable';\nimport ModelRange from '../model/range';\nimport ModelPosition from '../model/position';\nimport { SchemaContext } from '../model/schema';\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * `UpcastDispatcher` is a central point of {@link module:engine/view/view view} conversion, which is a process of\n * converting given {@link module:engine/view/documentfragment~DocumentFragment view document fragment} or\n * {@link module:engine/view/element~Element} into another structure.\n * In default application, {@link module:engine/view/view view} is converted to {@link module:engine/model/model}.\n *\n * During conversion process, for all {@link module:engine/view/node~Node view nodes} from the converted view document fragment,\n * `UpcastDispatcher` fires corresponding events. Special callbacks called \"converters\" should listen to\n * `UpcastDispatcher` for those events.\n *\n * Each callback, as the second argument, is passed a special object `data` that has `viewItem`, `modelCursor` and\n * `modelRange` properties. `viewItem` property contains {@link module:engine/view/node~Node view node} or\n * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\n * that is converted at the moment and might be handled by the callback. `modelRange` property should be used to save the result\n * of conversion and is always a {@link module:engine/model/range~Range} when conversion result is correct.\n * `modelCursor` property is a {@link module:engine/model/position~Position position} on which conversion result will be inserted\n * and is a context according to {@link module:engine/model/schema~Schema schema} will be checked before the conversion.\n * See also {@link ~UpcastDispatcher#convert}. It is also shared by reference by all callbacks listening to given event.\n *\n * The third parameter passed to a callback is an instance of {@link ~UpcastDispatcher}\n * which provides additional tools for converters.\n *\n * Examples of providing callbacks for `UpcastDispatcher`:\n *\n *\t\t// Converter for links (<a>).\n *\t\teditor.data.upcastDispatcher.on( 'element:a', ( evt, data, conversionApi ) => {\n *\t\t\tif ( conversionApi.consumable.consume( data.viewItem, { name: true, attributes: [ 'href' ] } ) ) {\n *\t\t\t\t// <a> element is inline and is represented by an attribute in the model.\n *\t\t\t\t// This is why we need to convert only children.\n *\t\t\t\tconst { modelRange } = conversionApi.convertChildren( data.viewItem, data.modelCursor );\n *\n *\t\t\t\tfor ( let item of modelRange.getItems() ) {\n *\t\t\t\t\tif ( conversionApi.schema.checkAttribute( item, 'linkHref' ) ) {\n *\t\t\t\t\t\tconversionApi.writer.setAttribute( 'linkHref', data.viewItem.getAttribute( 'href' ), item );\n *\t\t\t\t\t}\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// Convert <p>'s font-size style.\n *\t\t// Note: You should use a low-priority observer in order to ensure that\n *\t\t// it's executed after the element-to-element converter.\n *\t\teditor.data.upcastDispatcher.on( 'element:p', ( evt, data, conversionApi ) => {\n *\t\t\tconst { consumable, schema, writer } = conversionApi;\n *\n *\t\t\tif ( !consumable.consume( data.viewItem, { style: 'font-size' } ) ) {\n *\t\t\t\treturn;\n *\t\t\t}\n *\n *\t\t\tconst fontSize = data.viewItem.getStyle( 'font-size' );\n *\n *\t\t\t// Don't go for the model element after data.modelCursor because it might happen\n *\t\t\t// that a single view element was converted to multiple model elements. Get all of them.\n *\t\t\tfor ( const item of data.modelRange.getItems( { shallow: true } ) ) {\n *\t\t\t\tif ( schema.checkAttribute( item, 'fontSize' ) ) {\n *\t\t\t\t\twriter.setAttribute( 'fontSize', fontSize, item );\n *\t\t\t\t}\n *\t\t\t}\n *\t\t}, { priority: 'low' } );\n *\n *\t\t// Convert all elements which have no custom converter into paragraph (autoparagraphing).\n *  \teditor.data.upcastDispatcher.on( 'element', ( evt, data, conversionApi ) => {\n *  \t \t// When element is already consumed by higher priority converters then do nothing.\n *  \t \tif ( conversionApi.consumable.test( data.viewItem, { name: data.viewItem.name } ) ) {\n *  \t \t\t\tconst paragraph = conversionApi.writer.createElement( 'paragraph' );\n *\n *  \t \t\t\t// Find allowed parent for paragraph that we are going to insert. If current parent does not allow\n *  \t \t\t\t// to insert paragraph but one of the ancestors does then split nodes to allowed parent.\n *  \t \t\t\tconst splitResult = conversionApi.splitToAllowedParent( paragraph, data.modelCursor );\n *\n *  \t \t\t\t// When there is no split result it means that we can't insert paragraph in this position.\n *  \t \t\t\tif ( splitResult ) {\n *  \t \t\t\t\t// Insert paragraph in allowed position.\n *  \t \t\t\t\tconversionApi.writer.insert( paragraph, splitResult.position );\n *\n *  \t \t\t\t\t// Convert children to paragraph.\n *  \t \t\t\t\tconst { modelRange } = conversionApi.convertChildren(\n *  \t \t\t\t\t\tdata.viewItem,\n *  \t \t\t\t\t\tconversionApi.writer.createPositionAt( paragraph, 0 )\n *  \t \t\t\t\t);\n *\n * \t\t\t\t\t\t// Set as conversion result, attribute converters may use this property.\n *  \t \t\t\t\tdata.modelRange = conversionApi.writer.createRange(\n *  \t \t\t\t\t\tconversionApi.writer.createPositionBefore( paragraph ),\n *  \t \t\t\t\t\tmodelRange.end\n *  \t \t\t\t\t);\n *\n *  \t \t\t\t\t// Continue conversion inside paragraph.\n *  \t \t\t\t\tdata.modelCursor = data.modelRange.end;\n *  \t \t\t\t}\n *  \t \t\t}\n *  \t \t}\n *  \t }, { priority: 'low' } );\n *\n * Before each conversion process, `UpcastDispatcher` fires {@link ~UpcastDispatcher#event:viewCleanup}\n * event which can be used to prepare tree view for conversion.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @fires viewCleanup\n * @fires element\n * @fires text\n * @fires documentFragment\n */\nexport default class UpcastDispatcher {\n\t/**\n\t * Creates a `UpcastDispatcher` that operates using passed API.\n\t *\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi\n\t * @param {Object} [conversionApi] Additional properties for interface that will be passed to events fired\n\t * by `UpcastDispatcher`.\n\t */\n\tconstructor( conversionApi = {} ) {\n\t\t/**\n\t\t * List of the elements that were created during splitting.\n\t\t *\n\t\t * After conversion process the list is cleared.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<module:engine/model/element~Element,Array.<module:engine/model/element~Element>>}\n\t\t */\n\t\tthis._splitParts = new Map();\n\n\t\t/**\n\t\t * Position in the temporary structure where the converted content is inserted. The structure reflect the context of\n\t\t * the target position where the content will be inserted. This property is build based on the context parameter of the\n\t\t * convert method.\n\t\t *\n\t\t * @private\n\t\t * @type {module:engine/model/position~Position|null}\n\t\t */\n\t\tthis._modelCursor = null;\n\n\t\t/**\n\t\t * Interface passed by dispatcher to the events callbacks.\n\t\t *\n\t\t * @member {module:engine/conversion/upcastdispatcher~UpcastConversionApi}\n\t\t */\n\t\tthis.conversionApi = Object.assign( {}, conversionApi );\n\n\t\t// `convertItem`, `convertChildren` and `splitToAllowedParent` are bound to this `UpcastDispatcher`\n\t\t// instance and set on `conversionApi`. This way only a part of `UpcastDispatcher` API is exposed.\n\t\tthis.conversionApi.convertItem = this._convertItem.bind( this );\n\t\tthis.conversionApi.convertChildren = this._convertChildren.bind( this );\n\t\tthis.conversionApi.splitToAllowedParent = this._splitToAllowedParent.bind( this );\n\t\tthis.conversionApi.getSplitParts = this._getSplitParts.bind( this );\n\t}\n\n\t/**\n\t * Starts the conversion process. The entry point for the conversion.\n\t *\n\t * @fires element\n\t * @fires text\n\t * @fires documentFragment\n\t * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element} viewItem\n\t * Part of the view to be converted.\n\t * @param {module:engine/model/writer~Writer} writer Instance of model writer.\n\t * @param {module:engine/model/schema~SchemaContextDefinition} [context=['$root']] Elements will be converted according to this context.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Model data that is a result of the conversion process\n\t * wrapped in `DocumentFragment`. Converted marker elements will be set as that document fragment's\n\t * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\n\t */\n\tconvert( viewItem, writer, context = [ '$root' ] ) {\n\t\tthis.fire( 'viewCleanup', viewItem );\n\n\t\t// Create context tree and set position in the top element.\n\t\t// Items will be converted according to this position.\n\t\tthis._modelCursor = createContextTree( context, writer );\n\n\t\t// Store writer in conversion as a conversion API\n\t\t// to be sure that conversion process will use the same batch.\n\t\tthis.conversionApi.writer = writer;\n\n\t\t// Create consumable values list for conversion process.\n\t\tthis.conversionApi.consumable = ViewConsumable.createFrom( viewItem );\n\n\t\t// Custom data stored by converter for conversion process.\n\t\tthis.conversionApi.store = {};\n\n\t\t// Do the conversion.\n\t\tconst { modelRange } = this._convertItem( viewItem, this._modelCursor );\n\n\t\t// Conversion result is always a document fragment so let's create it.\n\t\tconst documentFragment = writer.createDocumentFragment();\n\n\t\t// When there is a conversion result.\n\t\tif ( modelRange ) {\n\t\t\t// Remove all empty elements that were create while splitting.\n\t\t\tthis._removeEmptyElements();\n\n\t\t\t// Move all items that were converted in context tree to the document fragment.\n\t\t\tfor ( const item of Array.from( this._modelCursor.parent.getChildren() ) ) {\n\t\t\t\twriter.append( item, documentFragment );\n\t\t\t}\n\n\t\t\t// Extract temporary markers elements from model and set as static markers collection.\n\t\t\tdocumentFragment.markers = extractMarkersFromModelFragment( documentFragment, writer );\n\t\t}\n\n\t\t// Clear context position.\n\t\tthis._modelCursor = null;\n\n\t\t// Clear split elements lists.\n\t\tthis._splitParts.clear();\n\n\t\t// Clear conversion API.\n\t\tthis.conversionApi.writer = null;\n\t\tthis.conversionApi.store = null;\n\n\t\t// Return fragment as conversion result.\n\t\treturn documentFragment;\n\t}\n\n\t/**\n\t * @private\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#convertItem\n\t */\n\t_convertItem( viewItem, modelCursor ) {\n\t\tconst data = Object.assign( { viewItem, modelCursor, modelRange: null } );\n\n\t\tif ( viewItem.is( 'element' ) ) {\n\t\t\tthis.fire( 'element:' + viewItem.name, data, this.conversionApi );\n\t\t} else if ( viewItem.is( 'text' ) ) {\n\t\t\tthis.fire( 'text', data, this.conversionApi );\n\t\t} else {\n\t\t\tthis.fire( 'documentFragment', data, this.conversionApi );\n\t\t}\n\n\t\t// Handle incorrect conversion result.\n\t\tif ( data.modelRange && !( data.modelRange instanceof ModelRange ) ) {\n\t\t\t/**\n\t\t\t * Incorrect conversion result was dropped.\n\t\t\t *\n\t\t\t * {@link module:engine/model/range~Range Model range} should be a conversion result.\n\t\t\t *\n\t\t\t * @error view-conversion-dispatcher-incorrect-result\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-conversion-dispatcher-incorrect-result: Incorrect conversion result was dropped.', this );\n\t\t}\n\n\t\treturn { modelRange: data.modelRange, modelCursor: data.modelCursor };\n\t}\n\n\t/**\n\t * @private\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#convertChildren\n\t */\n\t_convertChildren( viewItem, modelCursor ) {\n\t\tconst modelRange = new ModelRange( modelCursor );\n\t\tlet nextModelCursor = modelCursor;\n\n\t\tfor ( const viewChild of Array.from( viewItem.getChildren() ) ) {\n\t\t\tconst result = this._convertItem( viewChild, nextModelCursor );\n\n\t\t\tif ( result.modelRange instanceof ModelRange ) {\n\t\t\t\tmodelRange.end = result.modelRange.end;\n\t\t\t\tnextModelCursor = result.modelCursor;\n\t\t\t}\n\t\t}\n\n\t\treturn { modelRange, modelCursor: nextModelCursor };\n\t}\n\n\t/**\n\t * @private\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#splitToAllowedParent\n\t */\n\t_splitToAllowedParent( node, modelCursor ) {\n\t\t// Try to find allowed parent.\n\t\tconst allowedParent = this.conversionApi.schema.findAllowedParent( modelCursor, node );\n\n\t\t// When there is no parent that allows to insert node then return `null`.\n\t\tif ( !allowedParent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// When current position parent allows to insert node then return this position.\n\t\tif ( allowedParent === modelCursor.parent ) {\n\t\t\treturn { position: modelCursor };\n\t\t}\n\n\t\t// When allowed parent is in context tree.\n\t\tif ( this._modelCursor.parent.getAncestors().includes( allowedParent ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Split element to allowed parent.\n\t\tconst splitResult = this.conversionApi.writer.split( modelCursor, allowedParent );\n\n\t\t// Using the range returned by `model.Writer#split`, we will pair original elements with their split parts.\n\t\t//\n\t\t// The range returned from the writer spans \"over the split\" or, precisely saying, from the end of the original element (the one\n\t\t// that got split) to the beginning of the other part of that element:\n\t\t//\n\t\t// <limit><a><b><c>X[]Y</c></b><a></limit> ->\n\t\t// <limit><a><b><c>X[</c></b></a><a><b><c>]Y</c></b></a>\n\t\t//\n\t\t// After the split there cannot be any full node between the positions in `splitRange`. The positions are touching.\n\t\t// Also, because of how splitting works, it is easy to notice, that \"closing tags\" are in the reverse order than \"opening tags\".\n\t\t// Also, since we split all those elements, each of them has to have the other part.\n\t\t//\n\t\t// With those observations in mind, we will pair the original elements with their split parts by saving \"closing tags\" and matching\n\t\t// them with \"opening tags\" in the reverse order. For that we can use a stack.\n\t\tconst stack = [];\n\n\t\tfor ( const treeWalkerValue of splitResult.range.getWalker() ) {\n\t\t\tif ( treeWalkerValue.type == 'elementEnd' ) {\n\t\t\t\tstack.push( treeWalkerValue.item );\n\t\t\t} else {\n\t\t\t\t// There should not be any text nodes after the element is split, so the only other value is `elementStart`.\n\t\t\t\tconst originalPart = stack.pop();\n\t\t\t\tconst splitPart = treeWalkerValue.item;\n\n\t\t\t\tthis._registerSplitPair( originalPart, splitPart );\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tposition: splitResult.position,\n\t\t\tcursorParent: splitResult.range.end.parent\n\t\t};\n\t}\n\n\t/**\n\t * Registers that `splitPart` element is a split part of the `originalPart` element.\n\t *\n\t * Data set by this method is used by {@link #_getSplitParts} and {@link #_removeEmptyElements}.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} originalPart\n\t * @param {module:engine/model/element~Element} splitPart\n\t */\n\t_registerSplitPair( originalPart, splitPart ) {\n\t\tif ( !this._splitParts.has( originalPart ) ) {\n\t\t\tthis._splitParts.set( originalPart, [ originalPart ] );\n\t\t}\n\n\t\tconst list = this._splitParts.get( originalPart );\n\n\t\tthis._splitParts.set( splitPart, list );\n\t\tlist.push( splitPart );\n\t}\n\n\t/**\n\t * @private\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#getSplitParts\n\t */\n\t_getSplitParts( element ) {\n\t\tlet parts;\n\n\t\tif ( !this._splitParts.has( element ) ) {\n\t\t\tparts = [ element ];\n\t\t} else {\n\t\t\tparts = this._splitParts.get( element );\n\t\t}\n\n\t\treturn parts;\n\t}\n\n\t/**\n\t * Checks if there are any empty elements created while splitting and removes them.\n\t *\n\t * This method works recursively to re-check empty elements again after at least one element was removed in the initial call,\n\t * as some elements might have become empty after other empty elements were removed from them.\n\t *\n\t * @private\n\t */\n\t_removeEmptyElements() {\n\t\tlet anyRemoved = false;\n\n\t\tfor ( const element of this._splitParts.keys() ) {\n\t\t\tif ( element.isEmpty ) {\n\t\t\t\tthis.conversionApi.writer.remove( element );\n\t\t\t\tthis._splitParts.delete( element );\n\n\t\t\t\tanyRemoved = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( anyRemoved ) {\n\t\t\tthis._removeEmptyElements();\n\t\t}\n\t}\n\n\t/**\n\t * Fired before the first conversion event, at the beginning of upcast (view to model conversion) process.\n\t *\n\t * @event viewCleanup\n\t * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element}\n\t * viewItem Part of the view to be converted.\n\t */\n\n\t/**\n\t * Fired when {@link module:engine/view/element~Element} is converted.\n\t *\n\t * `element` is a namespace event for a class of events. Names of actually called events follow this pattern:\n\t * `element:<elementName>` where `elementName` is the name of converted element. This way listeners may listen to\n\t * all elements conversion or to conversion of specific elements.\n\t *\n\t * @event element\n\t * @param {Object} data Conversion data. Keep in mind that this object is shared by reference between all\n\t * callbacks that will be called. This means that callbacks can override values if needed, and those values will\n\t * be available in other callbacks.\n\t * @param {module:engine/view/item~Item} data.viewItem Converted item.\n\t * @param {module:engine/model/position~Position} data.modelCursor Position where a converter should start changes.\n\t * Change this value for the next converter to tell where the conversion should continue.\n\t * @param {module:engine/model/range~Range} data.modelRange The current state of conversion result. Every change to\n\t * converted element should be reflected by setting or modifying this property.\n\t * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion utilities to be used by callback.\n\t */\n\n\t/**\n\t * Fired when {@link module:engine/view/text~Text} is converted.\n\t *\n\t * @event text\n\t * @see #event:element\n\t */\n\n\t/**\n\t * Fired when {@link module:engine/view/documentfragment~DocumentFragment} is converted.\n\t *\n\t * @event documentFragment\n\t * @see #event:element\n\t */\n}\n\nmix( UpcastDispatcher, EmitterMixin );\n\n// Traverses given model item and searches elements which marks marker range. Found element is removed from\n// DocumentFragment but path of this element is stored in a Map which is then returned.\n//\n// @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/node~Node} modelItem Fragment of model.\n// @returns {Map<String, module:engine/model/range~Range>} List of static markers.\nfunction extractMarkersFromModelFragment( modelItem, writer ) {\n\tconst markerElements = new Set();\n\tconst markers = new Map();\n\n\t// Create ModelTreeWalker.\n\tconst range = ModelRange._createIn( modelItem ).getItems();\n\n\t// Walk through DocumentFragment and collect marker elements.\n\tfor ( const item of range ) {\n\t\t// Check if current element is a marker.\n\t\tif ( item.name == '$marker' ) {\n\t\t\tmarkerElements.add( item );\n\t\t}\n\t}\n\n\t// Walk through collected marker elements store its path and remove its from the DocumentFragment.\n\tfor ( const markerElement of markerElements ) {\n\t\tconst markerName = markerElement.getAttribute( 'data-name' );\n\t\tconst currentPosition = writer.createPositionBefore( markerElement );\n\n\t\t// When marker of given name is not stored it means that we have found the beginning of the range.\n\t\tif ( !markers.has( markerName ) ) {\n\t\t\tmarkers.set( markerName, new ModelRange( currentPosition.clone() ) );\n\t\t// Otherwise is means that we have found end of the marker range.\n\t\t} else {\n\t\t\tmarkers.get( markerName ).end = currentPosition.clone();\n\t\t}\n\n\t\t// Remove marker element from DocumentFragment.\n\t\twriter.remove( markerElement );\n\t}\n\n\treturn markers;\n}\n\n// Creates model fragment according to given context and returns position in the bottom (the deepest) element.\nfunction createContextTree( contextDefinition, writer ) {\n\tlet position;\n\n\tfor ( const item of new SchemaContext( contextDefinition ) ) {\n\t\tconst attributes = {};\n\n\t\tfor ( const key of item.getAttributeKeys() ) {\n\t\t\tattributes[ key ] = item.getAttribute( key );\n\t\t}\n\n\t\tconst current = writer.createElement( item.name, attributes );\n\n\t\tif ( position ) {\n\t\t\twriter.append( current, position );\n\t\t}\n\n\t\tposition = ModelPosition._createAt( current, 0 );\n\t}\n\n\treturn position;\n}\n\n/**\n * Conversion interface that is registered for given {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}\n * and is passed as one of parameters when {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher dispatcher}\n * fires it's events.\n *\n * @interface module:engine/conversion/upcastdispatcher~UpcastConversionApi\n */\n\n/**\n * Starts conversion of given item by firing an appropriate event.\n *\n * Every fired event is passed (as first parameter) an object with `modelRange` property. Every event may set and/or\n * modify that property. When all callbacks are done, the final value of `modelRange` property is returned by this method.\n * The `modelRange` must be {@link module:engine/model/range~Range model range} or `null` (as set by default).\n *\n * @method #convertItem\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:text\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:documentFragment\n * @param {module:engine/view/item~Item} viewItem Item to convert.\n * @param {module:engine/model/position~Position} modelCursor Position of conversion.\n * @returns {Object} result Conversion result.\n * @returns {module:engine/model/range~Range|null} result.modelRange Model range containing result of item conversion,\n * created and modified by callbacks attached to fired event, or `null` if the conversion result was incorrect.\n * @returns {module:engine/model/position~Position} result.modelCursor Position where conversion should be continued.\n */\n\n/**\n * Starts conversion of all children of given item by firing appropriate events for all those children.\n *\n * @method #convertChildren\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:text\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:documentFragment\n * @param {module:engine/view/item~Item} viewItem Element which children should be converted.\n * @param {module:engine/model/position~Position} modelCursor Position of conversion.\n * @returns {Object} result Conversion result.\n * @returns {module:engine/model/range~Range} result.modelRange Model range containing results of conversion of all children of given item.\n * When no children was converted then range is collapsed.\n * @returns {module:engine/model/position~Position} result.modelCursor Position where conversion should be continued.\n */\n\n/**\n * Checks {@link module:engine/model/schema~Schema schema} to find allowed parent for element that we are going to insert\n * starting from given position. If current parent does not allow to insert element but one of the ancestors does then\n * split nodes to allowed parent.\n *\n * If schema allows to insert node in given position, nothing is split and object with that position is returned.\n *\n * If it was not possible to find allowed parent, `null` is returned, nothing is split.\n *\n * Otherwise, ancestors are split and object with position and the copy of the split element is returned.\n *\n * For instance, if `<image>` is not allowed in `<paragraph>` but is allowed in `$root`:\n *\n *\t\t<paragraph>foo[]bar</paragraph>\n *\n *  \t-> split for `<image>` ->\n *\n *  \t<paragraph>foo</paragraph>[]<paragraph>bar</paragraph>\n *\n * In the sample above position between `<paragraph>` elements will be returned as `position` and the second `paragraph`\n * as `cursorParent`.\n *\n * @method #splitToAllowedParent\n * @param {module:engine/model/position~Position} position Position on which element is going to be inserted.\n * @param {module:engine/model/node~Node} node Node to insert.\n * @returns {Object|null} Split result. If it was not possible to find allowed position `null` is returned.\n * @returns {module:engine/model/position~Position} position between split elements.\n * @returns {module:engine/model/element~Element} [cursorParent] Element inside which cursor should be placed to\n * continue conversion. When element is not defined it means that there was no split.\n */\n\n/**\n * Returns all the split parts of given `element` that were created during upcasting through using {@link #splitToAllowedParent}.\n * It enables you to easily track those elements and continue processing them after they are split during their children conversion.\n *\n *\t\t<paragraph>Foo<image />bar<image />baz</paragraph> ->\n *\t\t<paragraph>Foo</paragraph><image /><paragraph>bar</paragraph><image /><paragraph>baz</paragraph>\n *\n * For a reference to any of above paragraphs, the function will return all three paragraphs (the original element included),\n * sorted in the order of their creation (the original element is the first one).\n *\n * If given `element` was not split, an array with single element is returned.\n *\n * Example of a usage in a converter code:\n *\n *\t\tconst myElement = conversionApi.writer.createElement( 'myElement' );\n *\n *\t\t// Children conversion may split `myElement`.\n *\t\tconversionApi.convertChildren( myElement, modelCursor );\n *\n *\t\tconst splitParts = conversionApi.getSplitParts( myElement );\n *\t\tconst lastSplitPart = splitParts[ splitParts.length - 1 ];\n *\n *\t\t// Setting `data.modelRange` basing on split parts:\n *\t\tdata.modelRange = conversionApi.writer.createRange(\n *\t\t\tconversionApi.writer.createPositionBefore( myElement ),\n *\t\t\tconversionApi.writer.createPositionAfter( lastSplitPart )\n *\t\t);\n *\n *\t\t// Setting `data.modelCursor` to continue after the last split element:\n *\t\tdata.modelCursor = conversionApi.writer.createPositionAfter( lastSplitPart );\n *\n * **Tip:** if you are unable to get a reference to the original element (for example because the code is split into multiple converters\n * or even classes) but it was already converted, you might want to check first element in `data.modelRange`. This is a common situation\n * if an attribute converter is separated from an element converter.\n *\n * @method #getSplitParts\n * @param {module:engine/model/element~Element} element\n * @returns {Array.<module:engine/model/element~Element>}\n */\n\n/**\n * Stores information about what parts of processed view item are still waiting to be handled. After a piece of view item\n * was converted, appropriate consumable value should be {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consumed}.\n *\n * @member {module:engine/conversion/viewconsumable~ViewConsumable} #consumable\n */\n\n/**\n * Custom data stored by converters for conversion process. Custom properties of this object can be defined and use to\n * pass parameters between converters.\n *\n * The difference between this property and `data` parameter of\n * {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element} is that `data` parameters allows you\n * to pass parameters within a single event and `store` within the whole conversion.\n *\n * @member {Object} #store\n */\n\n/**\n * The model's schema instance.\n *\n * @member {module:engine/model/schema~Schema} #schema\n */\n\n/**\n * The {@link module:engine/model/writer~Writer} instance used to manipulate data during conversion.\n *\n * @member {module:engine/model/writer~Writer} #writer\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/controller/datacontroller\n */\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nimport Mapper from '../conversion/mapper';\n\nimport DowncastDispatcher from '../conversion/downcastdispatcher';\nimport { insertText } from '../conversion/downcasthelpers';\n\nimport UpcastDispatcher from '../conversion/upcastdispatcher';\nimport { convertText, convertToModelFragment } from '../conversion/upcasthelpers';\n\nimport ViewDocumentFragment from '../view/documentfragment';\nimport ViewDocument from '../view/document';\nimport ViewDowncastWriter from '../view/downcastwriter';\n\nimport ModelRange from '../model/range';\n\n/**\n * Controller for the data pipeline. The data pipeline controls how data is retrieved from the document\n * and set inside it. Hence, the controller features two methods which allow to {@link ~DataController#get get}\n * and {@link ~DataController#set set} data of the {@link ~DataController#model model}\n * using given:\n *\n * * {@link module:engine/dataprocessor/dataprocessor~DataProcessor data processor},\n * * downcast converters,\n * * upcast converters.\n *\n * An instance of the data controller is always available in the {@link module:core/editor/editor~Editor#data `editor.data`}\n * property:\n *\n *\t\teditor.data.get( { rootName: 'customRoot' } ); // -> '<p>Hello!</p>'\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class DataController {\n\t/**\n\t * Creates a data controller instance.\n\t *\n\t * @param {module:engine/model/model~Model} model Data model.\n\t * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor The styles processor instance.\n\t */\n\tconstructor( model, stylesProcessor ) {\n\t\t/**\n\t\t * Data model.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * Styles processor used during the conversion.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/stylesmap~StylesProcessor}\n\t\t */\n\t\tthis.stylesProcessor = stylesProcessor;\n\n\t\t/**\n\t\t * Data processor used during the conversion.\n\t\t *\n\t\t * @member {module:engine/dataprocessor/dataprocessor~DataProcessor} #processor\n\t\t */\n\t\tthis.processor;\n\n\t\t/**\n\t\t * Mapper used for the conversion. It has no permanent bindings, because they are created when getting data and\n\t\t * cleared directly after the data are converted. However, the mapper is defined as a class property, because\n\t\t * it needs to be passed to the `DowncastDispatcher` as a conversion API.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/mapper~Mapper}\n\t\t */\n\t\tthis.mapper = new Mapper();\n\n\t\t/**\n\t\t * Downcast dispatcher used by the {@link #get get method}. Downcast converters should be attached to it.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n\t\t */\n\t\tthis.downcastDispatcher = new DowncastDispatcher( {\n\t\t\tmapper: this.mapper\n\t\t} );\n\t\tthis.downcastDispatcher.on( 'insert:$text', insertText(), { priority: 'lowest' } );\n\n\t\t/**\n\t\t * Upcast dispatcher used by the {@link #set set method}. Upcast converters should be attached to it.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/upcastdispatcher~UpcastDispatcher}\n\t\t */\n\t\tthis.upcastDispatcher = new UpcastDispatcher( {\n\t\t\tschema: model.schema\n\t\t} );\n\n\t\t/**\n\t\t * The view document used by the data controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document}\n\t\t */\n\t\tthis.viewDocument = new ViewDocument( stylesProcessor );\n\n\t\t/**\n\t\t * The view downcast writer just for data conversion purposes, i.e. to modify\n\t\t * the {@link #viewDocument}.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @member {module:engine/view/downcastwriter~DowncastWriter}\n\t\t */\n\t\tthis._viewWriter = new ViewDowncastWriter( this.viewDocument );\n\n\t\t// Define default converters for text and elements.\n\t\t//\n\t\t// Note that if there is no default converter for the element it will be skipped, for instance `<b>foo</b>` will be\n\t\t// converted to nothing. We add `convertToModelFragment` as a last converter so it converts children of that\n\t\t// element to the document fragment so `<b>foo</b>` will be converted to `foo` if there is no converter for `<b>`.\n\t\tthis.upcastDispatcher.on( 'text', convertText(), { priority: 'lowest' } );\n\t\tthis.upcastDispatcher.on( 'element', convertToModelFragment(), { priority: 'lowest' } );\n\t\tthis.upcastDispatcher.on( 'documentFragment', convertToModelFragment(), { priority: 'lowest' } );\n\n\t\tthis.decorate( 'init' );\n\n\t\t// Fire `ready` event when initialisation has completed. Such low level listener gives possibility\n\t\t// to plug into initialisation pipeline without interrupting the initialisation flow.\n\t\tthis.on( 'init', () => {\n\t\t\tthis.fire( 'ready' );\n\t\t}, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * Returns the model's data converted by downcast dispatchers attached to {@link #downcastDispatcher} and\n\t * formatted by the {@link #processor data processor}.\n\t *\n\t * @param {Object} [options]\n\t * @param {String} [options.rootName='main'] Root name.\n\t * @param {String} [options.trim='empty'] Whether returned data should be trimmed. This option is set to `empty` by default,\n\t * which means whenever editor content is considered empty, an empty string will be returned. To turn off trimming completely\n\t * use `'none'`. In such cases exact content will be returned (for example `<p>&nbsp;</p>` for an empty editor).\n\t * @returns {String} Output data.\n\t */\n\tget( options ) {\n\t\tconst { rootName = 'main', trim = 'empty' } = options || {};\n\n\t\tif ( !this._checkIfRootsExists( [ rootName ] ) ) {\n\t\t\t/**\n\t\t\t * Cannot get data from a non-existing root. This error is thrown when {@link #get DataController#get() method}\n\t\t\t * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\n\t\t\t * calling {@link #get} like:\n\t\t\t *\n\t\t\t *\t\tdata.get( { rootName: 'root2' } );\n\t\t\t *\n\t\t\t * will throw this error.\n\t\t\t *\n\t\t\t * @error datacontroller-get-non-existent-root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'datacontroller-get-non-existent-root: Attempting to get data from a non-existing root.', this );\n\t\t}\n\n\t\tconst root = this.model.document.getRoot( rootName );\n\n\t\tif ( trim === 'empty' && !this.model.hasContent( root, { ignoreWhitespaces: true } ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.stringify( root );\n\t}\n\n\t/**\n\t * Returns the content of the given {@link module:engine/model/element~Element model's element} or\n\t * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the downcast converters\n\t * attached to {@link #downcastDispatcher} and formatted by the {@link #processor data processor}.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\n\t * Element whose content will be stringified.\n\t * @returns {String} Output data.\n\t */\n\tstringify( modelElementOrFragment ) {\n\t\t// Model -> view.\n\t\tconst viewDocumentFragment = this.toView( modelElementOrFragment );\n\n\t\t// View -> data.\n\t\treturn this.processor.toData( viewDocumentFragment );\n\t}\n\n\t/**\n\t * Returns the content of the given {@link module:engine/model/element~Element model element} or\n\t * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the downcast\n\t * converters attached to {@link #downcastDispatcher} to a\n\t * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\n\t * Element or document fragment whose content will be converted.\n\t * @returns {module:engine/view/documentfragment~DocumentFragment} Output view DocumentFragment.\n\t */\n\ttoView( modelElementOrFragment ) {\n\t\tconst viewDocument = this.viewDocument;\n\t\tconst viewWriter = this._viewWriter;\n\n\t\t// Clear bindings so the call to this method gives correct results.\n\t\tthis.mapper.clearBindings();\n\n\t\t// First, convert elements.\n\t\tconst modelRange = ModelRange._createIn( modelElementOrFragment );\n\t\tconst viewDocumentFragment = new ViewDocumentFragment( viewDocument );\n\n\t\tthis.mapper.bindElements( modelElementOrFragment, viewDocumentFragment );\n\n\t\t// We have no view controller and rendering do DOM in DataController so view.change() block is not used here.\n\t\tthis.downcastDispatcher.convertInsert( modelRange, viewWriter );\n\n\t\tif ( !modelElementOrFragment.is( 'documentFragment' ) ) {\n\t\t\t// Then, if a document element is converted, convert markers.\n\t\t\t// From all document markers, get those, which \"intersect\" with the converter element.\n\t\t\tconst markers = _getMarkersRelativeToElement( modelElementOrFragment );\n\n\t\t\tfor ( const [ name, range ] of markers ) {\n\t\t\t\tthis.downcastDispatcher.convertMarkerAdd( name, range, viewWriter );\n\t\t\t}\n\t\t}\n\n\t\treturn viewDocumentFragment;\n\t}\n\n\t/**\n\t * Sets initial input data parsed by the {@link #processor data processor} and\n\t * converted by the {@link #upcastDispatcher view-to-model converters}.\n\t * Initial data can be set only to document that {@link module:engine/model/document~Document#version} is equal 0.\n\t *\n\t * **Note** This method is {@link module:utils/observablemixin~ObservableMixin#decorate decorated} which is\n\t * used by e.g. collaborative editing plugin that syncs remote data on init.\n\t *\n\t * When data is passed as a string it is initialized on a default `main` root:\n\t *\n\t *\t\tdataController.init( '<p>Foo</p>' ); // Initializes data on the `main` root.\n\t *\n\t * To initialize data on a different root or multiple roots at once, object containing `rootName` - `data` pairs should be passed:\n\t *\n\t *\t\tdataController.init( { main: '<p>Foo</p>', title: '<h1>Bar</h1>' } ); // Initializes data on the `main` and `title` roots.\n\t *\n\t * @fires init\n\t * @param {String|Object.<String,String>} data Input data as a string or an object containing `rootName` - `data`\n\t * pairs to initialize data on multiple roots at once.\n\t * @returns {Promise} Promise that is resolved after the data is set on the editor.\n\t */\n\tinit( data ) {\n\t\tif ( this.model.document.version ) {\n\t\t\t/**\n\t\t\t * Cannot set initial data to not empty {@link module:engine/model/document~Document}.\n\t\t\t * Initial data should be set once, during {@link module:core/editor/editor~Editor} initialization,\n\t\t\t * when the {@link module:engine/model/document~Document#version} is equal 0.\n\t\t\t *\n\t\t\t * @error datacontroller-init-document-not-empty\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'datacontroller-init-document-not-empty: Trying to set initial data to not empty document.', this );\n\t\t}\n\n\t\tlet initialData = {};\n\t\tif ( typeof data === 'string' ) {\n\t\t\tinitialData.main = data; // Default root is 'main'. To initiate data on a different root, object should be passed.\n\t\t} else {\n\t\t\tinitialData = data;\n\t\t}\n\n\t\tif ( !this._checkIfRootsExists( Object.keys( initialData ) ) ) {\n\t\t\t/**\n\t\t\t * Cannot init data on a non-existing root. This error is thrown when {@link #init DataController#init() method}\n\t\t\t * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\n\t\t\t * calling {@link #init} like:\n\t\t\t *\n\t\t\t * \t\tdata.init( { main: '<p>Foo</p>', root2: '<p>Bar</p>' } );\n\t\t\t *\n\t\t\t * will throw this error.\n\t\t\t *\n\t\t\t * @error datacontroller-init-non-existent-root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'datacontroller-init-non-existent-root: Attempting to init data on a non-existing root.', this );\n\t\t}\n\n\t\tthis.model.enqueueChange( 'transparent', writer => {\n\t\t\tfor ( const rootName of Object.keys( initialData ) ) {\n\t\t\t\tconst modelRoot = this.model.document.getRoot( rootName );\n\t\t\t\twriter.insert( this.parse( initialData[ rootName ], modelRoot ), modelRoot, 0 );\n\t\t\t}\n\t\t} );\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Sets input data parsed by the {@link #processor data processor} and\n\t * converted by the {@link #upcastDispatcher view-to-model converters}.\n\t * This method can be used any time to replace existing editor data by the new one without clearing the\n\t * {@link module:engine/model/document~Document#history document history}.\n\t *\n\t * This method also creates a batch with all the changes applied. If all you need is to parse data, use\n\t * the {@link #parse} method.\n\t *\n\t * When data is passed as a string it is set on a default `main` root:\n\t *\n\t *\t\tdataController.set( '<p>Foo</p>' ); // Sets data on the `main` root.\n\t *\n\t * To set data on a different root or multiple roots at once, object containing `rootName` - `data` pairs should be passed:\n\t *\n\t *\t\tdataController.set( { main: '<p>Foo</p>', title: '<h1>Bar</h1>' } ); // Sets data on the `main` and `title` roots.\n\t *\n\t * @param {String|Object.<String,String>} data Input data as a string or an object containing `rootName` - `data`\n\t * pairs to set data on multiple roots at once.\n\t */\n\tset( data ) {\n\t\tlet newData = {};\n\n\t\tif ( typeof data === 'string' ) {\n\t\t\tnewData.main = data; // Default root is 'main'. To set data on a different root, object should be passed.\n\t\t} else {\n\t\t\tnewData = data;\n\t\t}\n\n\t\tif ( !this._checkIfRootsExists( Object.keys( newData ) ) ) {\n\t\t\t/**\n\t\t\t * Cannot set data on a non-existing root. This error is thrown when {@link #set DataController#set() method}\n\t\t\t * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\n\t\t\t * calling {@link #set} like:\n\t\t\t *\n\t\t\t * \t\tdata.set( { main: '<p>Foo</p>', root2: '<p>Bar</p>' } );\n\t\t\t *\n\t\t\t * will throw this error.\n\t\t\t *\n\t\t\t * @error datacontroller-set-non-existent-root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'datacontroller-set-non-existent-root: Attempting to set data on a non-existing root.', this );\n\t\t}\n\n\t\tthis.model.enqueueChange( 'transparent', writer => {\n\t\t\twriter.setSelection( null );\n\t\t\twriter.removeSelectionAttribute( this.model.document.selection.getAttributeKeys() );\n\n\t\t\tfor ( const rootName of Object.keys( newData ) ) {\n\t\t\t\t// Save to model.\n\t\t\t\tconst modelRoot = this.model.document.getRoot( rootName );\n\n\t\t\t\twriter.remove( writer.createRangeIn( modelRoot ) );\n\t\t\t\twriter.insert( this.parse( newData[ rootName ], modelRoot ), modelRoot, 0 );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Returns the data parsed by the {@link #processor data processor} and then converted by upcast converters\n\t * attached to the {@link #upcastDispatcher}.\n\t *\n\t * @see #set\n\t * @param {String} data Data to parse.\n\t * @param {module:engine/model/schema~SchemaContextDefinition} [context='$root'] Base context in which the view will\n\t * be converted to the model. See: {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#convert}.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Parsed data.\n\t */\n\tparse( data, context = '$root' ) {\n\t\t// data -> view\n\t\tconst viewDocumentFragment = this.processor.toView( data );\n\n\t\t// view -> model\n\t\treturn this.toModel( viewDocumentFragment, context );\n\t}\n\n\t/**\n\t * Returns the result of the given {@link module:engine/view/element~Element view element} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment view document fragment} converted by the\n\t * {@link #upcastDispatcher view-to-model converters}, wrapped by {@link module:engine/model/documentfragment~DocumentFragment}.\n\t *\n\t * When marker elements were converted during the conversion process, it will be set as a document fragment's\n\t * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElementOrFragment\n\t * Element or document fragment whose content will be converted.\n\t * @param {module:engine/model/schema~SchemaContextDefinition} [context='$root'] Base context in which the view will\n\t * be converted to the model. See: {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#convert}.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Output document fragment.\n\t */\n\ttoModel( viewElementOrFragment, context = '$root' ) {\n\t\treturn this.model.change( writer => {\n\t\t\treturn this.upcastDispatcher.convert( viewElementOrFragment, writer, context );\n\t\t} );\n\t}\n\n\t/**\n\t * Adds a style processor normalization rules.\n\t *\n\t * You can implement your own rules as well as use one of the available processor rules:\n\t *\n\t * * background: {@link module:engine/view/styles/background~addBackgroundRules}\n\t * * border: {@link module:engine/view/styles/border~addBorderRules}\n\t * * margin: {@link module:engine/view/styles/margin~addMarginRules}\n\t * * padding: {@link module:engine/view/styles/padding~addPaddingRules}\n\t *\n\t * @param {Function} callback\n\t */\n\taddStyleProcessorRules( callback ) {\n\t\tcallback( this.stylesProcessor );\n\t}\n\n\t/**\n\t * Removes all event listeners set by the DataController.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Checks if all provided root names are existing editor roots.\n\t *\n\t * @private\n\t * @param {Array.<String>} rootNames Root names to check.\n\t * @returns {Boolean} Whether all provided root names are existing editor roots.\n\t */\n\t_checkIfRootsExists( rootNames ) {\n\t\tfor ( const rootName of rootNames ) {\n\t\t\tif ( !this.model.document.getRootNames().includes( rootName ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Event fired once data initialisation has finished.\n\t *\n\t * @event ready\n\t */\n\n\t/**\n\t * Event fired after {@link #init init() method} has been run. It can be {@link #listenTo listened to} to adjust/modify\n\t * the initialisation flow. However, if the `init` event is stopped or prevented, the {@link #event:ready ready event}\n\t * should be fired manually.\n\t *\n\t * The `init` event is fired by decorated {@link #init} method.\n\t * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\n\t *\n\t * @event init\n\t */\n}\n\nmix( DataController, ObservableMixin );\n\n// Helper function for downcast conversion.\n//\n// Takes a document element (element that is added to a model document) and checks which markers are inside it\n// and which markers are containing it. If the marker is intersecting with element, the intersection is returned.\nfunction _getMarkersRelativeToElement( element ) {\n\tconst result = [];\n\tconst doc = element.root.document;\n\n\tif ( !doc ) {\n\t\treturn [];\n\t}\n\n\tconst elementRange = ModelRange._createIn( element );\n\n\tfor ( const marker of doc.model.markers ) {\n\t\tconst intersection = elementRange.getIntersection( marker.getRange() );\n\n\t\tif ( intersection ) {\n\t\t\tresult.push( [ marker.name, intersection ] );\n\t\t}\n\t}\n\n\treturn result;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/conversion\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport UpcastHelpers from './upcasthelpers';\nimport DowncastHelpers from './downcasthelpers';\n\n/**\n * A utility class that helps add converters to upcast and downcast dispatchers.\n *\n * We recommend reading the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide first to\n * understand the core concepts of the conversion mechanisms.\n *\n * An instance of the conversion manager is available in the\n * {@link module:core/editor/editor~Editor#conversion `editor.conversion`} property\n * and by default has the following groups of dispatchers (i.e. directions of conversion):\n *\n * * `downcast` (editing and data downcasts)\n * * `editingDowncast`\n * * `dataDowncast`\n * * `upcast`\n *\n * # One-way converters\n *\n * To add a converter to a specific group, use the {@link module:engine/conversion/conversion~Conversion#for `for()`}\n * method:\n *\n *\t\t// Add a converter to editing downcast and data downcast.\n *\t\teditor.conversion.for( 'downcast' ).elementToElement( config ) );\n *\n *\t\t// Add a converter to the data pipepline only:\n *\t\teditor.conversion.for( 'dataDowncast' ).elementToElement( dataConversionConfig ) );\n *\n *\t\t// And a slightly different one for the editing pipeline:\n *\t\teditor.conversion.for( 'editingDowncast' ).elementToElement( editingConversionConfig ) );\n *\n * See {@link module:engine/conversion/conversion~Conversion#for `for()`} method documentation to learn more about\n * available conversion helpers and how to use your custom ones.\n *\n * # Two-way converters\n *\n * Besides using one-way converters via the `for()` method, you can also use other methods available in this\n * class to add two-way converters (upcast and downcast):\n *\n * * {@link module:engine/conversion/conversion~Conversion#elementToElement `elementToElement()`} &ndash;\n * Model element to view element and vice versa.\n * * {@link module:engine/conversion/conversion~Conversion#attributeToElement `attributeToElement()`} &ndash;\n * Model attribute to view element and vice versa.\n * * {@link module:engine/conversion/conversion~Conversion#attributeToAttribute `attributeToAttribute()`} &ndash;\n * Model attribute to view element and vice versa.\n */\nexport default class Conversion {\n\t/**\n\t * Creates a new conversion instance.\n\t *\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n\t * Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher>} downcastDispatchers\n\t * @param {module:engine/conversion/upcastdispatcher~UpcastDispatcher|\n\t * Array.<module:engine/conversion/upcastdispatcher~UpcastDispatcher>} upcastDispatchers\n\t */\n\tconstructor( downcastDispatchers, upcastDispatchers ) {\n\t\t/**\n\t\t * Maps dispatchers group name to ConversionHelpers instances.\n\t\t *\n\t\t * @private\n\t\t * @member {Map.<String,module:engine/conversion/conversionhelpers~ConversionHelpers>}\n\t\t */\n\t\tthis._helpers = new Map();\n\n\t\t// Define default 'downcast' & 'upcast' dispatchers groups. Those groups are always available as two-way converters needs them.\n\t\tthis._downcast = Array.isArray( downcastDispatchers ) ? downcastDispatchers : [ downcastDispatchers ];\n\t\tthis._createConversionHelpers( { name: 'downcast', dispatchers: this._downcast, isDowncast: true } );\n\n\t\tthis._upcast = Array.isArray( upcastDispatchers ) ? upcastDispatchers : [ upcastDispatchers ];\n\t\tthis._createConversionHelpers( { name: 'upcast', dispatchers: this._upcast, isDowncast: false } );\n\t}\n\n\t/**\n\t * Define an alias for registered dispatcher.\n\t *\n\t *\t\tconst conversion = new Conversion(\n\t *\t\t\t[ dataDowncastDispatcher, editingDowncastDispatcher ],\n\t *\t\t\tupcastDispatcher\n\t *\t\t);\n\t *\n\t *\t\tconversion.addAlias( 'dataDowncast', dataDowncastDispatcher );\n\t *\n\t * @param {String} alias An alias of a dispatcher.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n\t * module:engine/conversion/upcastdispatcher~UpcastDispatcher} dispatcher Dispatcher which should have an alias.\n\t */\n\taddAlias( alias, dispatcher ) {\n\t\tconst isDowncast = this._downcast.includes( dispatcher );\n\t\tconst isUpcast = this._upcast.includes( dispatcher );\n\n\t\tif ( !isUpcast && !isDowncast ) {\n\t\t\t/**\n\t\t\t * Trying to register and alias for a dispatcher that nas not been registered.\n\t\t\t *\n\t\t\t * @error conversion-add-alias-dispatcher-not-registered\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'conversion-add-alias-dispatcher-not-registered: ' +\n\t\t\t\t'Trying to register and alias for a dispatcher that nas not been registered.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tthis._createConversionHelpers( { name: alias, dispatchers: [ dispatcher ], isDowncast } );\n\t}\n\n\t/**\n\t * Provides a chainable API to assign converters to conversion dispatchers group.\n\t *\n\t * If the given group name has not been registered, the\n\t * {@link module:utils/ckeditorerror~CKEditorError `conversion-for-unknown-group` error} is thrown.\n\t *\n\t * You can use conversion helpers available directly in the `for()` chain or your custom ones via\n\t * the {@link module:engine/conversion/conversionhelpers~ConversionHelpers#add `add()`} method.\n\t *\n\t * # Using bulit-in conversion helpers\n\t *\n\t * The `for()` chain comes with a set of conversion helpers which you can use like this:\n\t *\n\t *\t\teditor.conversion.for( 'downcast' )\n\t *\t\t\t.elementToElement( config1 )        // Adds an element-to-element downcast converter.\n\t *\t\t\t.attributeToElement( config2 );     // Adds an attribute-to-element downcast converter.\n\t *\n\t *\t\teditor.conversion.for( 'upcast' )\n\t *\t\t\t.elementToAttribute( config3 );     // Adds an element-to-attribute upcast converter.\n\t *\n\t * Refer to the documentation of built-in conversion helpers to learn about their configuration options.\n\t *\n\t * * downcast (model-to-view) conversion helpers:\n\t *\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#elementToElement `elementToElement()`},\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement `attributeToElement()`},\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToAttribute `attributeToAttribute()`}.\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#markerToElement `markerToElement()`}.\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#markerToHighlight `markerToHighlight()`}.\n\t *\n\t * * upcast (view-to-model) conversion helpers:\n\t *\n\t *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToElement `elementToElement()`},\n\t *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToAttribute `elementToAttribute()`},\n\t *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#attributeToAttribute `attributeToAttribute()`}.\n\t *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToMarker `elementToMarker()`}.\n\t *\n\t * # Using custom conversion helpers\n\t *\n\t * If you need to implement a nontypical converter, you can do so by calling:\n\t *\n\t *\t\teditor.conversion.for( direction ).add( customHelper );\n\t *\n\t * The `.add()` method takes exactly one parameter, which is a function. This function should accept one parameter that\n\t * is a dispatcher instance. The function should add an actual converter to the passed dispatcher instance.\n\t *\n\t * Example:\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).add( dispatcher => {\n\t *\t\t\tdispatcher.on( 'element:a',  ( evt, data, conversionApi ) => {\n\t *\t\t\t\t// Do something with a view <a> element.\n\t *\t\t\t} );\n\t *\t\t} );\n\t *\n\t * Refer to the documentation of {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}\n\t * and {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} to learn how to write\n\t * custom converters.\n\t *\n\t * @param {String} groupName The name of dispatchers group to add the converters to.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers|module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\tfor( groupName ) {\n\t\tif ( !this._helpers.has( groupName ) ) {\n\t\t\t/**\n\t\t\t * Trying to add a converter to an unknown dispatchers group.\n\t\t\t *\n\t\t\t * @error conversion-for-unknown-group\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'conversion-for-unknown-group: Trying to add a converter to an unknown dispatchers group.', this );\n\t\t}\n\n\t\treturn this._helpers.get( groupName );\n\t}\n\n\t/**\n\t * Sets up converters between the model and the view that convert a model element to a view element (and vice versa).\n\t * For example, the model `<paragraph>Foo</paragraph>` is `<p>Foo</p>` in the view.\n\t *\n\t *\t\t// A simple conversion from the `paragraph` model element to the `<p>` view element (and vice versa).\n\t *\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'p' } );\n\t *\n\t *\t\t// Override other converters by specifying a converter definition with a higher priority.\n\t *\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'div', converterPriority: 'high' } );\n\t *\n\t *\t\t// View specified as an object instead of a string.\n\t *\t\teditor.conversion.elementToElement( {\n\t *\t\t\tmodel: 'fancyParagraph',\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'p',\n\t *\t\t\t\tclasses: 'fancy'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Use `upcastAlso` to define other view elements that should also be converted to a `paragraph` element.\n\t *\t\teditor.conversion.elementToElement( {\n\t *\t\t\tmodel: 'paragraph',\n\t *\t\t\tview: 'p',\n\t *\t\t\tupcastAlso: [\n\t *\t\t\t\t'div',\n\t *\t\t\t\t{\n\t *\t\t\t\t\t// Any element with the `display: block` style.\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\tdisplay: 'block'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t *\t\t// `upcastAlso` set as callback enables a conversion of a wide range of different view elements.\n\t *\t\teditor.conversion.elementToElement( {\n\t *\t\t\tmodel: 'heading',\n\t *\t\t\tview: 'h2',\n\t *\t\t\t// Convert \"headling-like\" paragraphs to headings.\n\t *\t\t\tupcastAlso: viewElement => {\n\t *\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n\t *\n\t *\t\t\t\tif ( !fontSize ) {\n\t *\t\t\t\t\treturn null;\n\t *\t\t\t\t}\n\t *\n\t *\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n\t *\n\t *\t\t\t\tif ( !match ) {\n\t *\t\t\t\t\treturn null;\n\t *\t\t\t\t}\n\t *\n\t *\t\t\t\tconst size = Number( match[ 1 ] );\n\t *\n\t *\t\t\t\tif ( size > 26 ) {\n\t *\t\t\t\t\t// Returned value can be an object with the matched properties.\n\t *\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n\t *\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n\t *\n\t *\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n\t *\t\t\t\t}\n\t *\n\t *\t\t\t\treturn null;\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * `definition.model` is a `String` with a model element name to convert from or to.\n\t * See {@link module:engine/conversion/conversion~ConverterDefinition} to learn about other parameters.\n\t *\n\t * @param {module:engine/conversion/conversion~ConverterDefinition} definition The converter definition.\n\t */\n\telementToElement( definition ) {\n\t\t// Set up downcast converter.\n\t\tthis.for( 'downcast' ).elementToElement( definition );\n\n\t\t// Set up upcast converter.\n\t\tfor ( const { model, view } of _getAllUpcastDefinitions( definition ) ) {\n\t\t\tthis.for( 'upcast' )\n\t\t\t\t.elementToElement( {\n\t\t\t\t\tmodel,\n\t\t\t\t\tview,\n\t\t\t\t\tconverterPriority: definition.converterPriority\n\t\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Sets up converters between the model and the view that convert a model attribute to a view element (and vice versa).\n\t * For example, a model text node with `\"Foo\"` as data and the `bold` attribute is `<strong>Foo</strong>` in the view.\n\t *\n\t *\t\t// A simple conversion from the `bold=true` attribute to the `<strong>` view element (and vice versa).\n\t *\t\teditor.conversion.attributeToElement( { model: 'bold', view: 'strong' } );\n\t *\n\t *\t\t// Override other converters by specifying a converter definition with a higher priority.\n\t *\t\teditor.conversion.attributeToElement( { model: 'bold', view: 'b', converterPriority: 'high' } );\n\t *\n\t *\t\t// View specified as an object instead of a string.\n\t *\t\teditor.conversion.attributeToElement( {\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tclasses: 'bold'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Use `config.model.name` to define the conversion only from a given node type, `$text` in this case.\n\t *\t\t// The same attribute on different elements may then be handled by a different converter.\n\t *\t\teditor.conversion.attributeToElement( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'textDecoration',\n\t *\t\t\t\tvalues: [ 'underline', 'lineThrough' ],\n\t *\t\t\t\tname: '$text'\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\tunderline: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'text-decoration': 'underline'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t},\n\t *\t\t\t\tlineThrough: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'text-decoration': 'line-through'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Use `upcastAlso` to define other view elements that should also be converted to the `bold` attribute.\n\t *\t\teditor.conversion.attributeToElement( {\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tview: 'strong',\n\t *\t\t\tupcastAlso: [\n\t *\t\t\t\t'b',\n\t *\t\t\t\t{\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tclasses: 'bold'\n\t *\t\t\t\t},\n\t *\t\t\t\t{\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'font-weight': 'bold'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t},\n\t *\t\t\t\tviewElement => {\n\t *\t\t\t\t\tconst fontWeight = viewElement.getStyle( 'font-weight' );\n\t *\n\t *\t\t\t\t\tif ( viewElement.is( 'span' ) && fontWeight && /\\d+/.test() && Number( fontWeight ) > 500 ) {\n\t *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n\t *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n\t *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n\t *\n\t *\t\t\t\t\t\treturn {\n\t *\t\t\t\t\t\t\tname: true,\n\t *\t\t\t\t\t\t\tstyles: [ 'font-weight' ]\n\t *\t\t\t\t\t\t};\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t *\t\t// Conversion from and to a model attribute key whose value is an enum (`fontSize=big|small`).\n\t *\t\t// `upcastAlso` set as callback enables a conversion of a wide range of different view elements.\n\t *\t\teditor.conversion.attributeToElement( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'fontSize',\n\t *\t\t\t\tvalues: [ 'big', 'small' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\tbig: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'font-size': '1.2em'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t},\n\t *\t\t\t\tsmall: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'font-size': '0.8em'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tupcastAlso: {\n\t *\t\t\t\tbig: viewElement => {\n\t *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n\t *\n\t *\t\t\t\t\tif ( !fontSize ) {\n\t *\t\t\t\t\t\treturn null;\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n\t *\n\t *\t\t\t\t\tif ( !match ) {\n\t *\t\t\t\t\t\treturn null;\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\tconst size = Number( match[ 1 ] );\n\t *\n\t *\t\t\t\t\tif ( viewElement.is( 'span' ) && size > 10 ) {\n\t *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n\t *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n\t *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n\t *\n\t *\t\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\treturn null;\n\t *\t\t\t\t},\n\t *\t\t\t\tsmall: viewElement => {\n\t *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n\t *\n\t *\t\t\t\t\tif ( !fontSize ) {\n\t *\t\t\t\t\t\treturn null;\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n\t *\n\t *\t\t\t\t\tif ( !match ) {\n\t *\t\t\t\t\t\treturn null;\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\tconst size = Number( match[ 1 ] );\n\t *\n\t *\t\t\t\t\tif ( viewElement.is( 'span' ) && size < 10 ) {\n\t *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n\t *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n\t *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n\t *\n\t *\t\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\treturn null;\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * The `definition.model` parameter specifies which model attribute should be converted from or to. It can be a `{ key, value }` object\n\t * describing the attribute key and value to convert or a `String` specifying just the attribute key (then `value` is set to `true`).\n\t * See {@link module:engine/conversion/conversion~ConverterDefinition} to learn about other parameters.\n\t *\n\t * @param {module:engine/conversion/conversion~ConverterDefinition} definition The converter definition.\n\t */\n\tattributeToElement( definition ) {\n\t\t// Set up downcast converter.\n\t\tthis.for( 'downcast' ).attributeToElement( definition );\n\n\t\t// Set up upcast converter.\n\t\tfor ( const { model, view } of _getAllUpcastDefinitions( definition ) ) {\n\t\t\tthis.for( 'upcast' )\n\t\t\t\t.elementToAttribute( {\n\t\t\t\t\tview,\n\t\t\t\t\tmodel,\n\t\t\t\t\tconverterPriority: definition.converterPriority\n\t\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Sets up converters between the model and the view that convert a model attribute to a view attribute (and vice versa).\n\t * For example, `<image src='foo.jpg'></image>` is converted to `<img src='foo.jpg'></img>` (the same attribute key and value).\n\t * This type of converters is intended to be used with {@link module:engine/model/element~Element model element} nodes.\n\t * To convert text attributes {@link module:engine/conversion/conversion~Conversion#attributeToElement `attributeToElement converter`}\n\t * should be set up.\n\t *\n\t *\t\t// A simple conversion from the `source` model attribute to the `src` view attribute (and vice versa).\n\t *\t\teditor.conversion.attributeToAttribute( { model: 'source', view: 'src' } );\n\t *\n\t *\t\t// Attribute values are strictly specified.\n\t *\t\teditor.conversion.attributeToAttribute( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tname: 'image',\n\t *\t\t\t\tkey: 'aside',\n\t *\t\t\t\tvalues: [ 'aside' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\taside: {\n\t *\t\t\t\t\tname: 'img',\n\t *\t\t\t\t\tkey: 'class',\n\t *\t\t\t\t\tvalue: [ 'aside', 'half-size' ]\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Set the style attribute.\n\t *\t\teditor.conversion.attributeToAttribute( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tname: 'image',\n\t *\t\t\t\tkey: 'aside',\n\t *\t\t\t\tvalues: [ 'aside' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\taside: {\n\t *\t\t\t\t\tname: 'img',\n\t *\t\t\t\t\tkey: 'style',\n\t *\t\t\t\t\tvalue: {\n\t *\t\t\t\t\t\tfloat: 'right',\n\t *\t\t\t\t\t\twidth: '50%',\n\t *\t\t\t\t\t\tmargin: '5px'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Conversion from and to a model attribute key whose value is an enum (`align=right|center`).\n\t *\t\t// Use `upcastAlso` to define other view elements that should also be converted to the `align=right` attribute.\n\t *\t\teditor.conversion.attributeToAttribute( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'align',\n\t *\t\t\t\tvalues: [ 'right', 'center' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\tright: {\n\t *\t\t\t\t\tkey: 'class',\n\t *\t\t\t\t\tvalue: 'align-right'\n\t *\t\t\t\t},\n\t *\t\t\t\tcenter: {\n\t *\t\t\t\t\tkey: 'class',\n\t *\t\t\t\t\tvalue: 'align-center'\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tupcastAlso: {\n\t *\t\t\t\tright: {\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'text-align': 'right'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t},\n\t *\t\t\t\tcenter: {\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'text-align': 'center'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * The `definition.model` parameter specifies which model attribute should be converted from and to.\n\t * It can be a `{ key, [ values ], [ name ] }` object or a `String`, which will be treated like `{ key: definition.model }`.\n\t * The `key` property is the model attribute key to convert from and to.\n\t * The `values` are the possible model attribute values. If `values` is not set, the model attribute value will be the same as the\n\t * view attribute value.\n\t * If `name` is set, the conversion will be set up only for model elements with the given name.\n\t *\n\t * The `definition.view` parameter specifies which view attribute should be converted from and to.\n\t * It can be a `{ key, value, [ name ] }` object or a `String`, which will be treated like `{ key: definition.view }`.\n\t * The `key` property is the view attribute key to convert from and to.\n\t * The `value` is the view attribute value to convert from and to. If `definition.value` is not set, the view attribute value will be\n\t * the same as the model attribute value.\n\t * If `key` is `'class'`, `value` can be a `String` or an array of `String`s.\n\t * If `key` is `'style'`, `value` is an object with key-value pairs.\n\t * In other cases, `value` is a `String`.\n\t * If `name` is set, the conversion will be set up only for model elements with the given name.\n\t * If `definition.model.values` is set, `definition.view` is an object that assigns values from `definition.model.values`\n\t * to `{ key, value, [ name ] }` objects.\n\t *\n\t * `definition.upcastAlso` specifies which other matching view elements should also be upcast to the given model configuration.\n\t * If `definition.model.values` is set, `definition.upcastAlso` should be an object assigning values from `definition.model.values`\n\t * to {@link module:engine/view/matcher~MatcherPattern}s or arrays of {@link module:engine/view/matcher~MatcherPattern}s.\n\t *\n\t * **Note:** `definition.model` and `definition.view` form should be mirrored, so the same types of parameters should\n\t * be given in both parameters.\n\t *\n\t * @param {Object} definition The converter definition.\n\t * @param {String|Object} definition.model The model attribute to convert from and to.\n\t * @param {String|Object} definition.view The view attribute to convert from and to.\n\t * @param {module:engine/view/matcher~MatcherPattern|Array.<module:engine/view/matcher~MatcherPattern>} [definition.upcastAlso]\n\t * Any view element matching `definition.upcastAlso` will also be converted to the given model attribute. `definition.upcastAlso`\n\t * is used only if `config.model.values` is specified.\n\t */\n\tattributeToAttribute( definition ) {\n\t\t// Set up downcast converter.\n\t\tthis.for( 'downcast' ).attributeToAttribute( definition );\n\n\t\t// Set up upcast converter.\n\t\tfor ( const { model, view } of _getAllUpcastDefinitions( definition ) ) {\n\t\t\tthis.for( 'upcast' )\n\t\t\t\t.attributeToAttribute( {\n\t\t\t\t\tview,\n\t\t\t\t\tmodel\n\t\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Creates and caches conversion helpers for given dispatchers group.\n\t *\n\t * @private\n\t * @param {Object} options\n\t * @param {String} options.name Group name.\n\t * @param {Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n\t * module:engine/conversion/upcastdispatcher~UpcastDispatcher>} options.dispatchers\n\t * @param {Boolean} options.isDowncast\n\t */\n\t_createConversionHelpers( { name, dispatchers, isDowncast } ) {\n\t\tif ( this._helpers.has( name ) ) {\n\t\t\t/**\n\t\t\t * Trying to register a group name that has already been registered.\n\t\t\t *\n\t\t\t * @error conversion-group-exists\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'conversion-group-exists: Trying to register a group name that has already been registered.', this );\n\t\t}\n\n\t\tconst helpers = isDowncast ? new DowncastHelpers( dispatchers ) : new UpcastHelpers( dispatchers );\n\n\t\tthis._helpers.set( name, helpers );\n\t}\n}\n\n/**\n * Defines how the model should be converted from and to the view.\n *\n * @typedef {Object} module:engine/conversion/conversion~ConverterDefinition\n *\n * @property {*} [model] The model conversion definition. Describes the model element or model attribute to convert. This parameter differs\n * for different functions that accept `ConverterDefinition`. See the description of the function to learn how to set it.\n * @property {module:engine/view/elementdefinition~ElementDefinition|Object} view The definition of the view element to convert from and\n * to. If `model` describes multiple values, `view` is an object that assigns these values (`view` object keys) to view element definitions\n * (`view` object values).\n * @property {module:engine/view/matcher~MatcherPattern|Array.<module:engine/view/matcher~MatcherPattern>} [upcastAlso]\n * Any view element matching `upcastAlso` will also be converted to the model. If `model` describes multiple values, `upcastAlso`\n * is an object that assigns these values (`upcastAlso` object keys) to {@link module:engine/view/matcher~MatcherPattern}s\n * (`upcastAlso` object values).\n * @property {module:utils/priorities~PriorityString} [converterPriority] The converter priority.\n */\n\n// Helper function that creates a joint array out of an item passed in `definition.view` and items passed in\n// `definition.upcastAlso`.\n//\n// @param {module:engine/conversion/conversion~ConverterDefinition} definition\n// @returns {Array} Array containing view definitions.\nfunction* _getAllUpcastDefinitions( definition ) {\n\tif ( definition.model.values ) {\n\t\tfor ( const value of definition.model.values ) {\n\t\t\tconst model = { key: definition.model.key, value };\n\t\t\tconst view = definition.view[ value ];\n\t\t\tconst upcastAlso = definition.upcastAlso ? definition.upcastAlso[ value ] : undefined;\n\n\t\t\tyield* _getUpcastDefinition( model, view, upcastAlso );\n\t\t}\n\t} else {\n\t\tyield* _getUpcastDefinition( definition.model, definition.view, definition.upcastAlso );\n\t}\n}\n\nfunction* _getUpcastDefinition( model, view, upcastAlso ) {\n\tyield { model, view };\n\n\tif ( upcastAlso ) {\n\t\tupcastAlso = Array.isArray( upcastAlso ) ? upcastAlso : [ upcastAlso ];\n\n\t\tfor ( const upcastAlsoItem of upcastAlso ) {\n\t\t\tyield { model, view: upcastAlsoItem };\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/batch\n */\n\n/**\n * A batch instance groups model changes ({@link module:engine/model/operation/operation~Operation operations}). All operations\n * grouped in a single batch can be reverted together, so you can also think about a batch as of a single undo step. If you want\n * to extend a given undo step, you can add more changes to the batch using {@link module:engine/model/model~Model#enqueueChange}:\n *\n *\t\tmodel.enqueueChange( batch, writer => {\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n *\t\t} );\n *\n * @see module:engine/model/model~Model#enqueueChange\n * @see module:engine/model/model~Model#change\n */\nexport default class Batch {\n\t/**\n\t * Creates a batch instance.\n\t *\n\t * @see module:engine/model/model~Model#enqueueChange\n\t * @see module:engine/model/model~Model#change\n\t * @param {'transparent'|'default'} [type='default'] The type of the batch.\n\t */\n\tconstructor( type = 'default' ) {\n\t\t/**\n\t\t * An array of operations that compose this batch.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Array.<module:engine/model/operation/operation~Operation>}\n\t\t */\n\t\tthis.operations = [];\n\n\t\t/**\n\t\t * The type of the batch.\n\t\t *\n\t\t * It can be one of the following values:\n\t\t * * `'default'` &ndash; All \"normal\" batches. This is the most commonly used type.\n\t\t * * `'transparent'` &ndash; A batch that should be ignored by other features, i.e. an initial batch or collaborative editing\n\t\t * changes.\n\t\t *\n\t\t * @readonly\n\t\t * @type {'transparent'|'default'}\n\t\t */\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Returns the base version of this batch, which is equal to the base version of the first operation in the batch.\n\t * If there are no operations in the batch or neither operation has the base version set, it returns `null`.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget baseVersion() {\n\t\tfor ( const op of this.operations ) {\n\t\t\tif ( op.baseVersion !== null ) {\n\t\t\t\treturn op.baseVersion;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Adds an operation to the batch instance.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation An operation to add.\n\t * @returns {module:engine/model/operation/operation~Operation} The added operation.\n\t */\n\taddOperation( operation ) {\n\t\toperation.batch = this;\n\t\tthis.operations.push( operation );\n\n\t\treturn operation;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/operation\n */\n\n/**\n * Abstract base operation class.\n *\n * @abstract\n */\nexport default class Operation {\n\t/**\n\t * Base operation constructor.\n\t *\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( baseVersion ) {\n\t\t/**\n\t\t * {@link module:engine/model/document~Document#version} on which operation can be applied. If you try to\n\t\t * {@link module:engine/model/model~Model#applyOperation apply} operation with different base version than the\n\t\t * {@link module:engine/model/document~Document#version document version} the\n\t\t * {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\n\t\t *\n\t\t * @member {Number}\n\t\t */\n\t\tthis.baseVersion = baseVersion;\n\n\t\t/**\n\t\t * Defines whether operation is executed on attached or detached {@link module:engine/model/item~Item items}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isDocumentOperation\n\t\t */\n\t\tthis.isDocumentOperation = this.baseVersion !== null;\n\n\t\t/**\n\t\t * {@link module:engine/model/batch~Batch Batch} to which the operation is added or `null` if the operation is not\n\t\t * added to any batch yet.\n\t\t *\n\t\t * @member {module:engine/model/batch~Batch|null} #batch\n\t\t */\n\t\tthis.batch = null;\n\n\t\t/**\n\t\t * Operation type.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} #type\n\t\t */\n\n\t\t/**\n\t\t * Creates and returns an operation that has the same parameters as this operation.\n\t\t *\n\t\t * @method #clone\n\t\t * @returns {module:engine/model/operation/operation~Operation} Clone of this operation.\n\t\t */\n\n\t\t/**\n\t\t * Creates and returns a reverse operation. Reverse operation when executed right after\n\t\t * the original operation will bring back tree model state to the point before the original\n\t\t * operation execution. In other words, it reverses changes done by the original operation.\n\t\t *\n\t\t * Keep in mind that tree model state may change since executing the original operation,\n\t\t * so reverse operation will be \"outdated\". In that case you will need to transform it by\n\t\t * all operations that were executed after the original operation.\n\t\t *\n\t\t * @method #getReversed\n\t\t * @returns {module:engine/model/operation/operation~Operation} Reversed operation.\n\t\t */\n\n\t\t/**\n\t\t * Executes the operation - modifications described by the operation properties will be applied to the model tree.\n\t\t *\n\t\t * @protected\n\t\t * @method #_execute\n\t\t */\n\t}\n\n\t/**\n\t * Checks whether the operation's parameters are correct and the operation can be correctly executed. Throws\n\t * an error if operation is not valid.\n\t *\n\t * @protected\n\t * @method #_validate\n\t */\n\t_validate() {\n\t}\n\n\t/**\n\t * Custom toJSON method to solve child-parent circular dependencies.\n\t *\n\t * @method #toJSON\n\t * @returns {Object} Clone of this object with the operation property replaced with string.\n\t */\n\ttoJSON() {\n\t\t// This method creates only a shallow copy, all nested objects should be defined separately.\n\t\t// See https://github.com/ckeditor/ckeditor5-engine/issues/1477.\n\t\tconst json = Object.assign( {}, this );\n\n\t\tjson.__className = this.constructor.className;\n\n\t\t// Remove reference to the parent `Batch` to avoid circular dependencies.\n\t\tdelete json.batch;\n\n\t\t// Only document operations are shared with other clients so it is not necessary to keep this information.\n\t\tdelete json.isDocumentOperation;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Name of the operation class used for serialization.\n\t *\n\t * @type {String}\n\t */\n\tstatic get className() {\n\t\treturn 'Operation';\n\t}\n\n\t/**\n\t * Creates Operation object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} doc Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/operation~Operation}\n\t */\n\tstatic fromJSON( json ) {\n\t\treturn new this( json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.toString() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module module:engine/model/documentfragment\n */\n\nimport NodeList from './nodelist';\nimport Element from './element';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\n// @if CK_DEBUG_ENGINE // const { stringifyMap } = require( '../dev-utils/utils' );\n\n/**\n * DocumentFragment represents a part of model which does not have a common root but it's top-level nodes\n * can be seen as siblings. In other words, it is a detached part of model tree, without a root.\n *\n * DocumentFragment has own {@link module:engine/model/markercollection~MarkerCollection}. Markers from this collection\n * will be set to the {@link module:engine/model/model~Model#markers model markers} by a\n * {@link module:engine/model/writer~Writer#insert} function.\n */\nexport default class DocumentFragment {\n\t/**\n\t * Creates an empty `DocumentFragment`.\n\t *\n\t * **Note:** Constructor of this class shouldn't be used directly in the code.\n\t * Use the {@link module:engine/model/writer~Writer#createDocumentFragment} method instead.\n\t *\n\t * @protected\n\t * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\n\t * Nodes to be contained inside the `DocumentFragment`.\n\t */\n\tconstructor( children ) {\n\t\t/**\n\t\t * DocumentFragment static markers map. This is a list of names and {@link module:engine/model/range~Range ranges}\n\t\t * which will be set as Markers to {@link module:engine/model/model~Model#markers model markers collection}\n\t\t * when DocumentFragment will be inserted to the document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Map<String,module:engine/model/range~Range>} module:engine/model/documentfragment~DocumentFragment#markers\n\t\t */\n\t\tthis.markers = new Map();\n\n\t\t/**\n\t\t * List of nodes contained inside the document fragment.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/nodelist~NodeList} module:engine/model/documentfragment~DocumentFragment#_children\n\t\t */\n\t\tthis._children = new NodeList();\n\n\t\tif ( children ) {\n\t\t\tthis._insertChild( 0, children );\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all nodes contained inside this document fragment.\n\t *\n\t * @returns {Iterable.<module:engine/model/node~Node>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this.getChildren();\n\t}\n\n\t/**\n\t * Number of this document fragment's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget childCount() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all of this document fragment's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget maxOffset() {\n\t\treturn this._children.maxOffset;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this.childCount === 0;\n\t}\n\n\t/**\n\t * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {null}\n\t */\n\tget parent() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tdocFrag.is( 'documentFragment' ); // -> true\n\t *\t\tdocFrag.is( 'model:documentFragment' ); // -> true\n\t *\n\t *\t\tdocFrag.is( 'view:documentFragment' ); // -> false\n\t *\t\tdocFrag.is( 'element' ); // -> false\n\t *\t\tdocFrag.is( 'node' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'documentFragment' || type === 'model:documentFragment';\n\t}\n\n\t/**\n\t * Gets the child at the given index. Returns `null` if incorrect index was passed.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/model/node~Node|null} Child node.\n\t */\n\tgetChild( index ) {\n\t\treturn this._children.getNode( index );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all of this document fragment's children.\n\t *\n\t * @returns {Iterable.<module:engine/model/node~Node>}\n\t */\n\tgetChildren() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Returns an index of the given child node. Returns `null` if given node is not a child of this document fragment.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number|null} Child node's index.\n\t */\n\tgetChildIndex( node ) {\n\t\treturn this._children.getNodeIndex( node );\n\t}\n\n\t/**\n\t * Returns the starting offset of given child. Starting offset is equal to the sum of\n\t * {@link module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\n\t * given node is not a child of this document fragment.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number|null} Child node's starting offset.\n\t */\n\tgetChildStartOffset( node ) {\n\t\treturn this._children.getNodeStartOffset( node );\n\t}\n\n\t/**\n\t * Returns path to a `DocumentFragment`, which is an empty array. Added for compatibility reasons.\n\t *\n\t * @returns {Array}\n\t */\n\tgetPath() {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Returns a descendant node by its path relative to this element.\n\t *\n\t *\t\t// <this>a<b>c</b></this>\n\t *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\n\t *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\n\t *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\n\t *\n\t * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\n\t * @returns {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tgetNodeByPath( relativePath ) {\n\t\tlet node = this; // eslint-disable-line consistent-this\n\n\t\tfor ( const index of relativePath ) {\n\t\t\tnode = node.getChild( node.offsetToIndex( index ) );\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Converts offset \"position\" to index \"position\".\n\t *\n\t * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\n\t * too high, returns index after last child}.\n\t *\n\t *\t\tconst textNode = new Text( 'foo' );\n\t *\t\tconst pElement = new Element( 'p' );\n\t *\t\tconst docFrag = new DocumentFragment( [ textNode, pElement ] );\n\t *\t\tdocFrag.offsetToIndex( -1 ); // Returns 0, because offset is too low.\n\t *\t\tdocFrag.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\n\t *\t\tdocFrag.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\n\t *\t\tdocFrag.offsetToIndex( 2 ); // Returns 0.\n\t *\t\tdocFrag.offsetToIndex( 3 ); // Returns 1.\n\t *\t\tdocFrag.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\n\t *\n\t * @param {Number} offset Offset to look for.\n\t * @returns {Number} Index of a node that occupies given offset.\n\t */\n\toffsetToIndex( offset ) {\n\t\treturn this._children.offsetToIndex( offset );\n\t}\n\n\t/**\n\t * Converts `DocumentFragment` instance to plain object and returns it.\n\t * Takes care of converting all of this document fragment's children.\n\t *\n\t * @returns {Object} `DocumentFragment` instance converted to plain object.\n\t */\n\ttoJSON() {\n\t\tconst json = [];\n\n\t\tfor ( const node of this._children ) {\n\t\t\tjson.push( node.toJSON() );\n\t\t}\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Creates a `DocumentFragment` instance from given plain object (i.e. parsed JSON string).\n\t * Converts `DocumentFragment` children to proper nodes.\n\t *\n\t * @param {Object} json Plain object to be converted to `DocumentFragment`.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} `DocumentFragment` instance created using given plain object.\n\t */\n\tstatic fromJSON( json ) {\n\t\tconst children = [];\n\n\t\tfor ( const child of json ) {\n\t\t\tif ( child.name ) {\n\t\t\t\t// If child has name property, it is an Element.\n\t\t\t\tchildren.push( Element.fromJSON( child ) );\n\t\t\t} else {\n\t\t\t\t// Otherwise, it is a Text node.\n\t\t\t\tchildren.push( Text.fromJSON( child ) );\n\t\t\t}\n\t\t}\n\n\t\treturn new DocumentFragment( children );\n\t}\n\n\t/**\n\t * {@link #_insertChild Inserts} one or more nodes at the end of this document fragment.\n\t *\n\t * @protected\n\t * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n\t */\n\t_appendChild( items ) {\n\t\tthis._insertChild( this.childCount, items );\n\t}\n\n\t/**\n\t * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\n\t * to this document fragment.\n\t *\n\t * @protected\n\t * @param {Number} index Index at which nodes should be inserted.\n\t * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n\t */\n\t_insertChild( index, items ) {\n\t\tconst nodes = normalize( items );\n\n\t\tfor ( const node of nodes ) {\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\n\t\t\tif ( node.parent !== null ) {\n\t\t\t\tnode._remove();\n\t\t\t}\n\n\t\t\tnode.parent = this;\n\t\t}\n\n\t\tthis._children._insertNodes( index, nodes );\n\t}\n\n\t/**\n\t * Removes one or more nodes starting at the given index\n\t * and sets {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\n\t *\n\t * @protected\n\t * @param {Number} index Index of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n\t */\n\t_removeChildren( index, howMany = 1 ) {\n\t\tconst nodes = this._children._removeNodes( index, howMany );\n\n\t\tfor ( const node of nodes ) {\n\t\t\tnode.parent = null;\n\t\t}\n\n\t\treturn nodes;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn 'documentFragment';\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelDocumentFragment: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // printTree() {\n\t// @if CK_DEBUG_ENGINE //\tlet string = 'ModelDocumentFragment: [';\n\n\t// @if CK_DEBUG_ENGINE //\tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE //\t\tstring += '\\n';\n\n\t// @if CK_DEBUG_ENGINE //\t\tif ( child.is( 'text' ) ) {\n\t// @if CK_DEBUG_ENGINE //\t\t\tconst textAttrs = stringifyMap( child._attrs );\n\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\t'.repeat( 1 );\n\n\t// @if CK_DEBUG_ENGINE //\t\t\tif ( textAttrs !== '' ) {\n\t// @if CK_DEBUG_ENGINE //\t\t\t\tstring += `<$text${ textAttrs }>` + child.data + '</$text>';\n\t// @if CK_DEBUG_ENGINE //\t\t\t} else {\n\t// @if CK_DEBUG_ENGINE //\t\t\t\tstring += child.data;\n\t// @if CK_DEBUG_ENGINE //\t\t\t}\n\t// @if CK_DEBUG_ENGINE //\t\t} else {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += child.printTree( 1 );\n\t// @if CK_DEBUG_ENGINE //\t\t}\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\tstring += '\\n]';\n\n\t// @if CK_DEBUG_ENGINE //\treturn string;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logTree() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>}\n// @returns {Iterable.<module:engine/model/node~Node>}\nfunction normalize( nodes ) {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\tif ( typeof node == 'string' ) {\n\t\t\t\treturn new Text( node );\n\t\t\t}\n\n\t\t\tif ( node instanceof TextProxy ) {\n\t\t\t\treturn new Text( node.data, node.getAttributes() );\n\t\t\t}\n\n\t\t\treturn node;\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/utils\n */\n\nimport Node from '../node';\nimport Text from '../text';\nimport TextProxy from '../textproxy';\nimport Range from '../range';\nimport DocumentFragment from '../documentfragment';\nimport NodeList from '../nodelist';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Contains functions used for composing model tree by {@link module:engine/model/operation/operation~Operation operations}.\n * Those functions are built on top of {@link module:engine/model/node~Node node}, and it's child classes', APIs.\n *\n * @protected\n * @namespace utils\n */\n\n/**\n * Inserts given nodes at given position.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.insert\n * @param {module:engine/model/position~Position} position Position at which nodes should be inserted.\n * @param {module:engine/model/node~NodeSet} nodes Nodes to insert.\n * @returns {module:engine/model/range~Range} Range spanning over inserted elements.\n */\nexport function _insert( position, nodes ) {\n\tnodes = _normalizeNodes( nodes );\n\n\t// We have to count offset before inserting nodes because they can get merged and we would get wrong offsets.\n\tconst offset = nodes.reduce( ( sum, node ) => sum + node.offsetSize, 0 );\n\tconst parent = position.parent;\n\n\t// Insertion might be in a text node, we should split it if that's the case.\n\t_splitNodeAtPosition( position );\n\tconst index = position.index;\n\n\t// Insert nodes at given index. After splitting we have a proper index and insertion is between nodes,\n\t// using basic `Element` API.\n\tparent._insertChild( index, nodes );\n\n\t// Merge text nodes, if possible. Merging is needed only at points where inserted nodes \"touch\" \"old\" nodes.\n\t_mergeNodesAtIndex( parent, index + nodes.length );\n\t_mergeNodesAtIndex( parent, index );\n\n\treturn new Range( position, position.getShiftedBy( offset ) );\n}\n\n/**\n * Removed nodes in given range. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils._remove\n * @param {module:engine/model/range~Range} range Range containing nodes to remove.\n * @returns {Array.<module:engine/model/node~Node>}\n */\nexport function _remove( range ) {\n\tif ( !range.isFlat ) {\n\t\t/**\n\t\t * Trying to remove a range which starts and ends in different element.\n\t\t *\n\t\t * @error operation-utils-remove-range-not-flat\n\t\t */\n\t\tthrow new CKEditorError(\n\t\t\t'operation-utils-remove-range-not-flat: ' +\n\t\t\t'Trying to remove a range which starts and ends in different element.',\n\t\t\tthis\n\t\t);\n\t}\n\n\tconst parent = range.start.parent;\n\n\t// Range may be inside text nodes, we have to split them if that's the case.\n\t_splitNodeAtPosition( range.start );\n\t_splitNodeAtPosition( range.end );\n\n\t// Remove the text nodes using basic `Element` API.\n\tconst removed = parent._removeChildren( range.start.index, range.end.index - range.start.index );\n\n\t// Merge text nodes, if possible. After some nodes were removed, node before and after removed range will be\n\t// touching at the position equal to the removed range beginning. We check merging possibility there.\n\t_mergeNodesAtIndex( parent, range.start.index );\n\n\treturn removed;\n}\n\n/**\n * Moves nodes in given range to given target position. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.move\n * @param {module:engine/model/range~Range} sourceRange Range containing nodes to move.\n * @param {module:engine/model/position~Position} targetPosition Position to which nodes should be moved.\n * @returns {module:engine/model/range~Range} Range containing moved nodes.\n */\nexport function _move( sourceRange, targetPosition ) {\n\tif ( !sourceRange.isFlat ) {\n\t\t/**\n\t\t * Trying to move a range which starts and ends in different element.\n\t\t *\n\t\t * @error operation-utils-move-range-not-flat\n\t\t */\n\t\tthrow new CKEditorError(\n\t\t\t'operation-utils-move-range-not-flat: ' +\n\t\t\t'Trying to move a range which starts and ends in different element.',\n\t\t\tthis\n\t\t);\n\t}\n\n\tconst nodes = _remove( sourceRange );\n\n\t// We have to fix `targetPosition` because model changed after nodes from `sourceRange` got removed and\n\t// that change might have an impact on `targetPosition`.\n\ttargetPosition = targetPosition._getTransformedByDeletion( sourceRange.start, sourceRange.end.offset - sourceRange.start.offset );\n\n\treturn _insert( targetPosition, nodes );\n}\n\n/**\n * Sets given attribute on nodes in given range. The attributes are only set on top-level nodes of the range, not on its children.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils._setAttribute\n * @param {module:engine/model/range~Range} range Range containing nodes that should have the attribute set. Must be a flat range.\n * @param {String} key Key of attribute to set.\n * @param {*} value Attribute value.\n */\nexport function _setAttribute( range, key, value ) {\n\t// Range might start or end in text nodes, so we have to split them.\n\t_splitNodeAtPosition( range.start );\n\t_splitNodeAtPosition( range.end );\n\n\t// Iterate over all items in the range.\n\tfor ( const item of range.getItems( { shallow: true } ) ) {\n\t\t// Iterator will return `TextProxy` instances but we know that those text proxies will\n\t\t// always represent full text nodes (this is guaranteed thanks to splitting we did before).\n\t\t// So, we can operate on those text proxies' text nodes.\n\t\tconst node = item.is( 'textProxy' ) ? item.textNode : item;\n\n\t\tif ( value !== null ) {\n\t\t\tnode._setAttribute( key, value );\n\t\t} else {\n\t\t\tnode._removeAttribute( key );\n\t\t}\n\n\t\t// After attributes changing it may happen that some text nodes can be merged. Try to merge with previous node.\n\t\t_mergeNodesAtIndex( node.parent, node.index );\n\t}\n\n\t// Try to merge last changed node with it's previous sibling (not covered by the loop above).\n\t_mergeNodesAtIndex( range.end.parent, range.end.index );\n}\n\n/**\n * Normalizes given object or an array of objects to an array of {@link module:engine/model/node~Node nodes}. See\n * {@link module:engine/model/node~NodeSet NodeSet} for details on how normalization is performed.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.normalizeNodes\n * @param {module:engine/model/node~NodeSet} nodes Objects to normalize.\n * @returns {Array.<module:engine/model/node~Node>} Normalized nodes.\n */\nexport function _normalizeNodes( nodes ) {\n\tconst normalized = [];\n\n\tif ( !( nodes instanceof Array ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Convert instances of classes other than Node.\n\tfor ( let i = 0; i < nodes.length; i++ ) {\n\t\tif ( typeof nodes[ i ] == 'string' ) {\n\t\t\tnormalized.push( new Text( nodes[ i ] ) );\n\t\t} else if ( nodes[ i ] instanceof TextProxy ) {\n\t\t\tnormalized.push( new Text( nodes[ i ].data, nodes[ i ].getAttributes() ) );\n\t\t} else if ( nodes[ i ] instanceof DocumentFragment || nodes[ i ] instanceof NodeList ) {\n\t\t\tfor ( const child of nodes[ i ] ) {\n\t\t\t\tnormalized.push( child );\n\t\t\t}\n\t\t} else if ( nodes[ i ] instanceof Node ) {\n\t\t\tnormalized.push( nodes[ i ] );\n\t\t}\n\t\t// Skip unrecognized type.\n\t}\n\n\t// Merge text nodes.\n\tfor ( let i = 1; i < normalized.length; i++ ) {\n\t\tconst node = normalized[ i ];\n\t\tconst prev = normalized[ i - 1 ];\n\n\t\tif ( node instanceof Text && prev instanceof Text && _haveSameAttributes( node, prev ) ) {\n\t\t\t// Doing this instead changing `prev.data` because `data` is readonly.\n\t\t\tnormalized.splice( i - 1, 2, new Text( prev.data + node.data, prev.getAttributes() ) );\n\t\t\ti--;\n\t\t}\n\t}\n\n\treturn normalized;\n}\n\n// Checks if nodes before and after given index in given element are {@link module:engine/model/text~Text text nodes} and\n// merges them into one node if they have same attributes.\n//\n// Merging is done by removing two text nodes and inserting a new text node containing data from both merged text nodes.\n//\n// @private\n// @param {module:engine/model/element~Element} element Parent element of nodes to merge.\n// @param {Number} index Index between nodes to merge.\nfunction _mergeNodesAtIndex( element, index ) {\n\tconst nodeBefore = element.getChild( index - 1 );\n\tconst nodeAfter = element.getChild( index );\n\n\t// Check if both of those nodes are text objects with same attributes.\n\tif ( nodeBefore && nodeAfter && nodeBefore.is( 'text' ) && nodeAfter.is( 'text' ) && _haveSameAttributes( nodeBefore, nodeAfter ) ) {\n\t\t// Append text of text node after index to the before one.\n\t\tconst mergedNode = new Text( nodeBefore.data + nodeAfter.data, nodeBefore.getAttributes() );\n\n\t\t// Remove separate text nodes.\n\t\telement._removeChildren( index - 1, 2 );\n\n\t\t// Insert merged text node.\n\t\telement._insertChild( index - 1, mergedNode );\n\t}\n}\n\n// Checks if given position is in a text node, and if so, splits the text node in two text nodes, each of them\n// containing a part of original text node.\n//\n// @private\n// @param {module:engine/model/position~Position} position Position at which node should be split.\nfunction _splitNodeAtPosition( position ) {\n\tconst textNode = position.textNode;\n\tconst element = position.parent;\n\n\tif ( textNode ) {\n\t\tconst offsetDiff = position.offset - textNode.startOffset;\n\t\tconst index = textNode.index;\n\n\t\telement._removeChildren( index, 1 );\n\n\t\tconst firstPart = new Text( textNode.data.substr( 0, offsetDiff ), textNode.getAttributes() );\n\t\tconst secondPart = new Text( textNode.data.substr( offsetDiff ), textNode.getAttributes() );\n\n\t\telement._insertChild( index, [ firstPart, secondPart ] );\n\t}\n}\n\n// Checks whether two given nodes have same attributes.\n//\n// @private\n// @param {module:engine/model/node~Node} nodeA Node to check.\n// @param {module:engine/model/node~Node} nodeB Node to check.\n// @returns {Boolean} `true` if nodes have same attributes, `false` otherwise.\nfunction _haveSameAttributes( nodeA, nodeB ) {\n\tconst iteratorA = nodeA.getAttributes();\n\tconst iteratorB = nodeB.getAttributes();\n\n\tfor ( const attr of iteratorA ) {\n\t\tif ( attr[ 1 ] !== nodeB.getAttribute( attr[ 0 ] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\titeratorB.next();\n\t}\n\n\treturn iteratorB.next().done;\n}\n\n/**\n * Value that can be normalized to an array of {@link module:engine/model/node~Node nodes}.\n *\n * Non-arrays are normalized as follows:\n * * {@link module:engine/model/node~Node Node} is left as is,\n * * {@link module:engine/model/textproxy~TextProxy TextProxy} and `String` are normalized to {@link module:engine/model/text~Text Text},\n * * {@link module:engine/model/nodelist~NodeList NodeList} is normalized to an array containing all nodes that are in that node list,\n * * {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment} is normalized to an array containing all of it's\n * * children.\n *\n * Arrays are processed item by item like non-array values and flattened to one array. Normalization always results in\n * a flat array of {@link module:engine/model/node~Node nodes}. Consecutive text nodes (or items normalized to text nodes) will be\n * merged if they have same attributes.\n *\n * @typedef {module:engine/model/node~Node|module:engine/model/textproxy~TextProxy|String|\n * module:engine/model/nodelist~NodeList|module:engine/model/documentfragment~DocumentFragment|Iterable}\n * module:engine/model/node~NodeSet\n */\n","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/attributeoperation\n */\n\nimport Operation from './operation';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport { _setAttribute } from './utils';\nimport { isEqual } from 'lodash-es';\n\n/**\n * Operation to change nodes' attribute.\n *\n * Using this class you can add, remove or change value of the attribute.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class AttributeOperation extends Operation {\n\t/**\n\t * Creates an operation that changes, removes or adds attributes.\n\t *\n\t * If only `newValue` is set, attribute will be added on a node. Note that all nodes in operation's range must not\n\t * have an attribute with the same key as the added attribute.\n\t *\n\t * If only `oldValue` is set, then attribute with given key will be removed. Note that all nodes in operation's range\n\t * must have an attribute with that key added.\n\t *\n\t * If both `newValue` and `oldValue` are set, then the operation will change the attribute value. Note that all nodes in\n\t * operation's ranges must already have an attribute with given key and `oldValue` as value\n\t *\n\t * @param {module:engine/model/range~Range} range Range on which the operation should be applied. Must be a flat range.\n\t * @param {String} key Key of an attribute to change or remove.\n\t * @param {*} oldValue Old value of the attribute with given key or `null`, if attribute was not set before.\n\t * @param {*} newValue New value of the attribute with given key or `null`, if operation should remove attribute.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( range, key, oldValue, newValue, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Range on which operation should be applied.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/range~Range}\n\t\t */\n\t\tthis.range = range.clone();\n\n\t\t/**\n\t\t * Key of an attribute to change or remove.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.key = key;\n\n\t\t/**\n\t\t * Old value of the attribute with given key or `null`, if attribute was not set before.\n\t\t *\n\t\t * @readonly\n\t\t * @member {*}\n\t\t */\n\t\tthis.oldValue = oldValue === undefined ? null : oldValue;\n\n\t\t/**\n\t\t * New value of the attribute with given key or `null`, if operation should remove attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @member {*}\n\t\t */\n\t\tthis.newValue = newValue === undefined ? null : newValue;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\tif ( this.oldValue === null ) {\n\t\t\treturn 'addAttribute';\n\t\t} else if ( this.newValue === null ) {\n\t\t\treturn 'removeAttribute';\n\t\t} else {\n\t\t\treturn 'changeAttribute';\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new AttributeOperation( this.range, this.key, this.oldValue, this.newValue, this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n\t */\n\tgetReversed() {\n\t\treturn new AttributeOperation( this.range, this.key, this.newValue, this.oldValue, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.range = this.range.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tif ( !this.range.isFlat ) {\n\t\t\t/**\n\t\t\t * The range to change is not flat.\n\t\t\t *\n\t\t\t * @error attribute-operation-range-not-flat\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'attribute-operation-range-not-flat: The range to change is not flat.', this );\n\t\t}\n\n\t\tfor ( const item of this.range.getItems( { shallow: true } ) ) {\n\t\t\tif ( this.oldValue !== null && !isEqual( item.getAttribute( this.key ), this.oldValue ) ) {\n\t\t\t\t/**\n\t\t\t\t * Changed node has different attribute value than operation's old attribute value.\n\t\t\t\t *\n\t\t\t\t * @error attribute-operation-wrong-old-value\n\t\t\t\t * @param {module:engine/model/item~Item} item\n\t\t\t\t * @param {String} key\n\t\t\t\t * @param {*} value\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'attribute-operation-wrong-old-value: Changed node has different attribute value than operation\\'s ' +\n\t\t\t\t\t'old attribute value.',\n\t\t\t\t\tthis,\n\t\t\t\t\t{ item, key: this.key, value: this.oldValue }\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( this.oldValue === null && this.newValue !== null && item.hasAttribute( this.key ) ) {\n\t\t\t\t/**\n\t\t\t\t * The attribute with given key already exists for the given node.\n\t\t\t\t *\n\t\t\t\t * @error attribute-operation-attribute-exists\n\t\t\t\t * @param {module:engine/model/node~Node} node\n\t\t\t\t * @param {String} key\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'attribute-operation-attribute-exists: The attribute with given key already exists.',\n\t\t\t\t\tthis,\n\t\t\t\t\t{ node: item, key: this.key }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t// If value to set is same as old value, don't do anything.\n\t\tif ( !isEqual( this.oldValue, this.newValue ) ) {\n\t\t\t// Execution.\n\t\t\t_setAttribute( this.range, this.key, this.newValue );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'AttributeOperation';\n\t}\n\n\t/**\n\t * Creates `AttributeOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn new AttributeOperation( Range.fromJSON( json.range, document ), json.key, json.oldValue, json.newValue, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `AttributeOperation( ${ this.baseVersion } ): ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`\"${ this.key }\": ${ JSON.stringify( this.oldValue ) }` +\n\t// @if CK_DEBUG_ENGINE //\t\t` -> ${ JSON.stringify( this.newValue ) }, ${ this.range }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/detachoperation\n */\n\nimport Operation from './operation';\nimport Range from '../range';\nimport { _remove } from './utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n// @if CK_DEBUG_ENGINE // const ModelRange = require( '../range' ).default;\n\n/**\n * Operation to permanently remove node from detached root.\n * Note this operation is only a local operation and won't be send to the other clients.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class DetachOperation extends Operation {\n\t/**\n\t * Creates an insert operation.\n\t *\n\t * @param {module:engine/model/position~Position} sourcePosition\n\t * Position before the first {@link module:engine/model/item~Item model item} to move.\n\t * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n\t * `sourcePosition` with offset shifted by `howMany`.\n\t */\n\tconstructor( sourcePosition, howMany ) {\n\t\tsuper( null );\n\n\t\t/**\n\t\t * Position before the first {@link module:engine/model/item~Item model item} to detach.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} #sourcePosition\n\t\t */\n\t\tthis.sourcePosition = sourcePosition.clone();\n\n\t\t/**\n\t\t * Offset size of moved range.\n\t\t *\n\t\t * @member {Number} #howMany\n\t\t */\n\t\tthis.howMany = howMany;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'detach';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.sourcePosition = this.sourcePosition.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tif ( this.sourcePosition.root.document ) {\n\t\t\t/**\n\t\t\t * Cannot detach document node.\n\t\t\t *\n\t\t\t * @error detach-operation-on-document-node\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'detach-operation-on-document-node: Cannot detach document node.', this );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t_remove( Range._createFromPositionAndShift( this.sourcePosition, this.howMany ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'DetachOperation';\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // const range = ModelRange._createFromPositionAndShift( this.sourcePosition, this.howMany );\n\t// @if CK_DEBUG_ENGINE //\tconst nodes = Array.from( range.getItems() );\n\t// @if CK_DEBUG_ENGINE //\tconst nodeString = nodes.length > 1 ? `[ ${ nodes.length } ]` : nodes[ 0 ];\n\n\t// @if CK_DEBUG_ENGINE //\treturn `DetachOperation( ${ this.baseVersion } ): ${ nodeString } -> ${ range }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/moveoperation\n */\n\nimport Operation from './operation';\nimport Position from '../position';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport { _move } from './utils';\n\n// @if CK_DEBUG_ENGINE // const ModelRange = require( '../range' ).default;\n\n/**\n * Operation to move a range of {@link module:engine/model/item~Item model items}\n * to given {@link module:engine/model/position~Position target position}.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class MoveOperation extends Operation {\n\t/**\n\t * Creates a move operation.\n\t *\n\t * @param {module:engine/model/position~Position} sourcePosition\n\t * Position before the first {@link module:engine/model/item~Item model item} to move.\n\t * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n\t * `sourcePosition` with offset shifted by `howMany`.\n\t * @param {module:engine/model/position~Position} targetPosition Position at which moved nodes will be inserted.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( sourcePosition, howMany, targetPosition, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position before the first {@link module:engine/model/item~Item model item} to move.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#sourcePosition\n\t\t */\n\t\tthis.sourcePosition = sourcePosition.clone();\n\t\t// `'toNext'` because `sourcePosition` is a bit like a start of the moved range.\n\t\tthis.sourcePosition.stickiness = 'toNext';\n\n\t\t/**\n\t\t * Offset size of moved range.\n\t\t *\n\t\t * @member {Number} module:engine/model/operation/moveoperation~MoveOperation#howMany\n\t\t */\n\t\tthis.howMany = howMany;\n\n\t\t/**\n\t\t * Position at which moved nodes will be inserted.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#targetPosition\n\t\t */\n\t\tthis.targetPosition = targetPosition.clone();\n\t\tthis.targetPosition.stickiness = 'toNone';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\tif ( this.targetPosition.root.rootName == '$graveyard' ) {\n\t\t\treturn 'remove';\n\t\t} else if ( this.sourcePosition.root.rootName == '$graveyard' ) {\n\t\t\treturn 'reinsert';\n\t\t}\n\n\t\treturn 'move';\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new this.constructor( this.sourcePosition, this.howMany, this.targetPosition, this.baseVersion );\n\t}\n\n\t/**\n\t * Returns the start position of the moved range after it got moved. This may be different than\n\t * {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition} in some cases, i.e. when a range is moved\n\t * inside the same parent but {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition targetPosition}\n\t * is after {@link module:engine/model/operation/moveoperation~MoveOperation#sourcePosition sourcePosition}.\n\t *\n\t *\t\t vv              vv\n\t *\t\tabcdefg ===> adefbcg\n\t *\t\t     ^          ^\n\t *\t\t     targetPos\tmovedRangeStart\n\t *\t\t     offset 6\toffset 4\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tgetMovedRangeStart() {\n\t\treturn this.targetPosition._getTransformedByDeletion( this.sourcePosition, this.howMany );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n\t */\n\tgetReversed() {\n\t\tconst newTargetPosition = this.sourcePosition._getTransformedByInsertion( this.targetPosition, this.howMany );\n\n\t\treturn new this.constructor( this.getMovedRangeStart(), this.howMany, newTargetPosition, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst sourceElement = this.sourcePosition.parent;\n\t\tconst targetElement = this.targetPosition.parent;\n\t\tconst sourceOffset = this.sourcePosition.offset;\n\t\tconst targetOffset = this.targetPosition.offset;\n\n\t\t// Validate whether move operation has correct parameters.\n\t\t// Validation is pretty complex but move operation is one of the core ways to manipulate the document state.\n\t\t// We expect that many errors might be connected with one of scenarios described below.\n\t\tif ( sourceOffset + this.howMany > sourceElement.maxOffset ) {\n\t\t\t/**\n\t\t\t * The nodes which should be moved do not exist.\n\t\t\t *\n\t\t\t * @error move-operation-nodes-do-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'move-operation-nodes-do-not-exist: The nodes which should be moved do not exist.', this\n\t\t\t);\n\t\t} else if ( sourceElement === targetElement && sourceOffset < targetOffset && targetOffset < sourceOffset + this.howMany ) {\n\t\t\t/**\n\t\t\t * Trying to move a range of nodes into the middle of that range.\n\t\t\t *\n\t\t\t * @error move-operation-range-into-itself\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'move-operation-range-into-itself: Trying to move a range of nodes to the inside of that range.', this\n\t\t\t);\n\t\t} else if ( this.sourcePosition.root == this.targetPosition.root ) {\n\t\t\tif ( compareArrays( this.sourcePosition.getParentPath(), this.targetPosition.getParentPath() ) == 'prefix' ) {\n\t\t\t\tconst i = this.sourcePosition.path.length - 1;\n\n\t\t\t\tif ( this.targetPosition.path[ i ] >= sourceOffset && this.targetPosition.path[ i ] < sourceOffset + this.howMany ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Trying to move a range of nodes into one of nodes from that range.\n\t\t\t\t\t *\n\t\t\t\t\t * @error move-operation-node-into-itself\n\t\t\t\t\t */\n\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t'move-operation-node-into-itself: Trying to move a range of nodes into one of nodes from that range.', this\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t_move( Range._createFromPositionAndShift( this.sourcePosition, this.howMany ), this.targetPosition );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.sourcePosition = this.sourcePosition.toJSON();\n\t\tjson.targetPosition = this.targetPosition.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'MoveOperation';\n\t}\n\n\t/**\n\t * Creates `MoveOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst sourcePosition = Position.fromJSON( json.sourcePosition, document );\n\t\tconst targetPosition = Position.fromJSON( json.targetPosition, document );\n\n\t\treturn new this( sourcePosition, json.howMany, targetPosition, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \tconst range = ModelRange._createFromPositionAndShift( this.sourcePosition, this.howMany );\n\n\t// @if CK_DEBUG_ENGINE //\treturn `MoveOperation( ${ this.baseVersion } ): ${ range } -> ${ this.targetPosition }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/insertoperation\n */\n\nimport Operation from './operation';\nimport Position from '../position';\nimport NodeList from '../nodelist';\nimport MoveOperation from './moveoperation';\nimport { _insert, _normalizeNodes } from './utils';\nimport Text from '../text';\nimport Element from '../element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Operation to insert one or more nodes at given position in the model.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class InsertOperation extends Operation {\n\t/**\n\t * Creates an insert operation.\n\t *\n\t * @param {module:engine/model/position~Position} position Position of insertion.\n\t * @param {module:engine/model/node~NodeSet} nodes The list of nodes to be inserted.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( position, nodes, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position of insertion.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/insertoperation~InsertOperation#position\n\t\t */\n\t\tthis.position = position.clone();\n\t\tthis.position.stickiness = 'toNone';\n\n\t\t/**\n\t\t * List of nodes to insert.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/nodelist~NodeList} module:engine/model/operation/insertoperation~InsertOperation#nodeList\n\t\t */\n\t\tthis.nodes = new NodeList( _normalizeNodes( nodes ) );\n\n\t\t/**\n\t\t * Flag deciding how the operation should be transformed. If set to `true`, nodes might get additional attributes\n\t\t * during operational transformation. This happens when the operation insertion position is inside of a range\n\t\t * where attributes have changed.\n\t\t *\n\t\t * @member {Boolean} module:engine/model/operation/insertoperation~InsertOperation#shouldReceiveAttributes\n\t\t */\n\t\tthis.shouldReceiveAttributes = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'insert';\n\t}\n\n\t/**\n\t * Total offset size of inserted nodes.\n\t *\n\t * @returns {Number}\n\t */\n\tget howMany() {\n\t\treturn this.nodes.maxOffset;\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/insertoperation~InsertOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\tconst nodes = new NodeList( [ ...this.nodes ].map( node => node._clone( true ) ) );\n\t\tconst insert = new InsertOperation( this.position, nodes, this.baseVersion );\n\n\t\tinsert.shouldReceiveAttributes = this.shouldReceiveAttributes;\n\n\t\treturn insert;\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n\t */\n\tgetReversed() {\n\t\tconst graveyard = this.position.root.document.graveyard;\n\t\tconst gyPosition = new Position( graveyard, [ 0 ] );\n\n\t\treturn new MoveOperation( this.position, this.nodes.maxOffset, gyPosition, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst targetElement = this.position.parent;\n\n\t\tif ( !targetElement || targetElement.maxOffset < this.position.offset ) {\n\t\t\t/**\n\t\t\t * Insertion position is invalid.\n\t\t\t *\n\t\t\t * @error insert-operation-position-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'insert-operation-position-invalid: Insertion position is invalid.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t// What happens here is that we want original nodes be passed to writer because we want original nodes\n\t\t// to be inserted to the model. But in InsertOperation, we want to keep those nodes as they were added\n\t\t// to the operation, not modified. For example, text nodes can get merged or cropped while Elements can\n\t\t// get children. It is important that InsertOperation has the copy of original nodes in intact state.\n\t\tconst originalNodes = this.nodes;\n\t\tthis.nodes = new NodeList( [ ...originalNodes ].map( node => node._clone( true ) ) );\n\n\t\t_insert( this.position, originalNodes );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.position = this.position.toJSON();\n\t\tjson.nodes = this.nodes.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'InsertOperation';\n\t}\n\n\t/**\n\t * Creates `InsertOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/insertoperation~InsertOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst children = [];\n\n\t\tfor ( const child of json.nodes ) {\n\t\t\tif ( child.name ) {\n\t\t\t\t// If child has name property, it is an Element.\n\t\t\t\tchildren.push( Element.fromJSON( child ) );\n\t\t\t} else {\n\t\t\t\t// Otherwise, it is a Text node.\n\t\t\t\tchildren.push( Text.fromJSON( child ) );\n\t\t\t}\n\t\t}\n\n\t\tconst insert = new InsertOperation( Position.fromJSON( json.position, document ), children, json.baseVersion );\n\t\tinsert.shouldReceiveAttributes = json.shouldReceiveAttributes;\n\n\t\treturn insert;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \tconst nodeString = this.nodes.length > 1 ? `[ ${ this.nodes.length } ]` : this.nodes.getNode( 0 );\n\n\t// @if CK_DEBUG_ENGINE //\treturn `InsertOperation( ${ this.baseVersion } ): ${ nodeString } -> ${ this.position }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/markeroperation\n */\n\nimport Operation from './operation';\nimport Range from '../range';\n\n/**\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class MarkerOperation extends Operation {\n\t/**\n\t * @param {String} name Marker name.\n\t * @param {module:engine/model/range~Range} oldRange Marker range before the change.\n\t * @param {module:engine/model/range~Range} newRange Marker range after the change.\n\t * @param {module:engine/model/markercollection~MarkerCollection} markers Marker collection on which change should be executed.\n\t * @param {Boolean} affectsData Specifies whether the marker operation affects the data produced by the data pipeline\n\t * (is persisted in the editor's data).\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( name, oldRange, newRange, markers, affectsData, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Marker name.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Marker range before the change.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/range~Range}\n\t\t */\n\t\tthis.oldRange = oldRange ? oldRange.clone() : null;\n\n\t\t/**\n\t\t * Marker range after the change.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/range~Range}\n\t\t */\n\t\tthis.newRange = newRange ? newRange.clone() : null;\n\n\t\t/**\n\t\t * Specifies whether the marker operation affects the data produced by the data pipeline\n\t\t * (is persisted in the editor's data).\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.affectsData = affectsData;\n\n\t\t/**\n\t\t * Marker collection on which change should be executed.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/markercollection~MarkerCollection}\n\t\t */\n\t\tthis._markers = markers;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'marker';\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/markeroperation~MarkerOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new MarkerOperation( this.name, this.oldRange, this.newRange, this._markers, this.affectsData, this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n\t */\n\tgetReversed() {\n\t\treturn new MarkerOperation( this.name, this.newRange, this.oldRange, this._markers, this.affectsData, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tconst type = this.newRange ? '_set' : '_remove';\n\n\t\tthis._markers[ type ]( this.name, this.newRange, true, this.affectsData );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tif ( this.oldRange ) {\n\t\t\tjson.oldRange = this.oldRange.toJSON();\n\t\t}\n\n\t\tif ( this.newRange ) {\n\t\t\tjson.newRange = this.newRange.toJSON();\n\t\t}\n\n\t\tdelete json._markers;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'MarkerOperation';\n\t}\n\n\t/**\n\t * Creates `MarkerOperation` object from deserialized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn new MarkerOperation(\n\t\t\tjson.name,\n\t\t\tjson.oldRange ? Range.fromJSON( json.oldRange, document ) : null,\n\t\t\tjson.newRange ? Range.fromJSON( json.newRange, document ) : null,\n\t\t\tdocument.model.markers,\n\t\t\tjson.affectsData,\n\t\t\tjson.baseVersion\n\t\t);\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `MarkerOperation( ${ this.baseVersion } ): ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`\"${ this.name }\": ${ this.oldRange } -> ${ this.newRange }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/renameoperation\n */\n\nimport Operation from './operation';\nimport Element from '../element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Position from '../position';\n\n/**\n * Operation to change element's name.\n *\n * Using this class you can change element's name.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class RenameOperation extends Operation {\n\t/**\n\t * Creates an operation that changes element's name.\n\t *\n\t * @param {module:engine/model/position~Position} position Position before an element to change.\n\t * @param {String} oldName Current name of the element.\n\t * @param {String} newName New name for the element.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( position, oldName, newName, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position before an element to change.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/renameoperation~RenameOperation#position\n\t\t */\n\t\tthis.position = position;\n\t\t// This position sticks to the next node because it is a position before the node that we want to change.\n\t\tthis.position.stickiness = 'toNext';\n\n\t\t/**\n\t\t * Current name of the element.\n\t\t *\n\t\t * @member {String} module:engine/model/operation/renameoperation~RenameOperation#oldName\n\t\t */\n\t\tthis.oldName = oldName;\n\n\t\t/**\n\t\t * New name for the element.\n\t\t *\n\t\t * @member {String} module:engine/model/operation/renameoperation~RenameOperation#newName\n\t\t */\n\t\tthis.newName = newName;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'rename';\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/renameoperation~RenameOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new RenameOperation( this.position.clone(), this.oldName, this.newName, this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/renameoperation~RenameOperation}\n\t */\n\tgetReversed() {\n\t\treturn new RenameOperation( this.position.clone(), this.newName, this.oldName, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst element = this.position.nodeAfter;\n\n\t\tif ( !( element instanceof Element ) ) {\n\t\t\t/**\n\t\t\t * Given position is invalid or node after it is not instance of Element.\n\t\t\t *\n\t\t\t * @error rename-operation-wrong-position\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rename-operation-wrong-position: Given position is invalid or node after it is not an instance of Element.',\n\t\t\t\tthis\n\t\t\t);\n\t\t} else if ( element.name !== this.oldName ) {\n\t\t\t/**\n\t\t\t * Element to change has different name than operation's old name.\n\t\t\t *\n\t\t\t * @error rename-operation-wrong-name\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rename-operation-wrong-name: Element to change has different name than operation\\'s old name.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tconst element = this.position.nodeAfter;\n\n\t\telement.name = this.newName;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.position = this.position.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'RenameOperation';\n\t}\n\n\t/**\n\t * Creates `RenameOperation` object from deserialized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn new RenameOperation( Position.fromJSON( json.position, document ), json.oldName, json.newName, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `RenameOperation( ${ this.baseVersion } ): ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`${ this.position }: \"${ this.oldName }\" -> \"${ this.newName }\"`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/rootattributeoperation\n */\n\nimport Operation from './operation';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Operation to change root element's attribute. Using this class you can add, remove or change value of the attribute.\n *\n * This operation is needed, because root elements can't be changed through\n * @link module:engine/model/operation/attributeoperation~AttributeOperation}.\n * It is because {@link module:engine/model/operation/attributeoperation~AttributeOperation}\n * requires a range to change and root element can't\n * be a part of range because every {@link module:engine/model/position~Position} has to be inside a root.\n * {@link module:engine/model/position~Position} can't be created before a root element.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class RootAttributeOperation extends Operation {\n\t/**\n\t * Creates an operation that changes, removes or adds attributes on root element.\n\t *\n\t * @see module:engine/model/operation/attributeoperation~AttributeOperation\n\t * @param {module:engine/model/rootelement~RootElement} root Root element to change.\n\t * @param {String} key Key of an attribute to change or remove.\n\t * @param {*} oldValue Old value of the attribute with given key or `null` if adding a new attribute.\n\t * @param {*} newValue New value to set for the attribute. If `null`, then the operation just removes the attribute.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( root, key, oldValue, newValue, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Root element to change.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/rootelement~RootElement}\n\t\t */\n\t\tthis.root = root;\n\n\t\t/**\n\t\t * Key of an attribute to change or remove.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.key = key;\n\n\t\t/**\n\t\t * Old value of the attribute with given key or `null` if adding a new attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @member {*}\n\t\t */\n\t\tthis.oldValue = oldValue;\n\n\t\t/**\n\t\t * New value to set for the attribute. If `null`, then the operation just removes the attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @member {*}\n\t\t */\n\t\tthis.newValue = newValue;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\tif ( this.oldValue === null ) {\n\t\t\treturn 'addRootAttribute';\n\t\t} else if ( this.newValue === null ) {\n\t\t\treturn 'removeRootAttribute';\n\t\t} else {\n\t\t\treturn 'changeRootAttribute';\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new RootAttributeOperation( this.root, this.key, this.oldValue, this.newValue, this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n\t */\n\tgetReversed() {\n\t\treturn new RootAttributeOperation( this.root, this.key, this.newValue, this.oldValue, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tif ( this.root != this.root.root || this.root.is( 'documentFragment' ) ) {\n\t\t\t/**\n\t\t\t * The element to change is not a root element.\n\t\t\t *\n\t\t\t * @error rootattribute-operation-not-a-root\n\t\t\t * @param {module:engine/model/rootelement~RootElement} root\n\t\t\t * @param {String} key\n\t\t\t * @param {*} value\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rootattribute-operation-not-a-root: The element to change is not a root element.',\n\t\t\t\tthis,\n\t\t\t\t{ root: this.root, key: this.key }\n\t\t\t);\n\t\t}\n\n\t\tif ( this.oldValue !== null && this.root.getAttribute( this.key ) !== this.oldValue ) {\n\t\t\t/**\n\t\t\t * The attribute which should be removed does not exists for the given node.\n\t\t\t *\n\t\t\t * @error rootattribute-operation-wrong-old-value\n\t\t\t * @param {module:engine/model/rootelement~RootElement} root\n\t\t\t * @param {String} key\n\t\t\t * @param {*} value\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rootattribute-operation-wrong-old-value: Changed node has different attribute value than operation\\'s ' +\n\t\t\t\t'old attribute value.',\n\t\t\t\tthis,\n\t\t\t\t{ root: this.root, key: this.key }\n\t\t\t);\n\t\t}\n\n\t\tif ( this.oldValue === null && this.newValue !== null && this.root.hasAttribute( this.key ) ) {\n\t\t\t/**\n\t\t\t * The attribute with given key already exists for the given node.\n\t\t\t *\n\t\t\t * @error rootattribute-operation-attribute-exists\n\t\t\t * @param {module:engine/model/rootelement~RootElement} root\n\t\t\t * @param {String} key\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rootattribute-operation-attribute-exists: The attribute with given key already exists.',\n\t\t\t\tthis,\n\t\t\t\t{ root: this.root, key: this.key }\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tif ( this.newValue !== null ) {\n\t\t\tthis.root._setAttribute( this.key, this.newValue );\n\t\t} else {\n\t\t\tthis.root._removeAttribute( this.key );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.root = this.root.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'RootAttributeOperation';\n\t}\n\n\t/**\n\t * Creates RootAttributeOperation object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tif ( !document.getRoot( json.root ) ) {\n\t\t\t/**\n\t\t\t * Cannot create RootAttributeOperation for document. Root with specified name does not exist.\n\t\t\t *\n\t\t\t * @error rootattributeoperation-fromjson-no-root\n\t\t\t * @param {String} rootName\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rootattribute-operation-fromjson-no-root: Cannot create RootAttributeOperation. Root with specified name does not exist.',\n\t\t\t\tthis,\n\t\t\t\t{ rootName: json.root }\n\t\t\t);\n\t\t}\n\n\t\treturn new RootAttributeOperation( document.getRoot( json.root ), json.key, json.oldValue, json.newValue, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `RootAttributeOperation( ${ this.baseVersion } ): ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`\"${ this.key }\": ${ JSON.stringify( this.oldValue ) }` +\n\t// @if CK_DEBUG_ENGINE //\t\t` -> ${ JSON.stringify( this.newValue ) }, ${ this.root.rootName }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/mergeoperation\n */\n\nimport Operation from './operation';\nimport SplitOperation from './splitoperation';\nimport Position from '../position';\nimport Range from '../range';\nimport { _move } from './utils';\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Operation to merge two {@link module:engine/model/element~Element elements}.\n *\n * The merged element is the parent of {@link ~MergeOperation#sourcePosition} and it is merged into the parent of\n * {@link ~MergeOperation#targetPosition}. All nodes from the merged element are moved to {@link ~MergeOperation#targetPosition}.\n *\n * The merged element is moved to the graveyard at {@link ~MergeOperation#graveyardPosition}.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class MergeOperation extends Operation {\n\t/**\n\t * Creates a merge operation.\n\t *\n\t * @param {module:engine/model/position~Position} sourcePosition Position inside the merged element. All nodes from that\n\t * element after that position will be moved to {@link ~#targetPosition}.\n\t * @param {Number} howMany Summary offset size of nodes which will be moved from the merged element to the new parent.\n\t * @param {module:engine/model/position~Position} targetPosition Position which the nodes from the merged elements will be moved to.\n\t * @param {module:engine/model/position~Position} graveyardPosition Position in graveyard to which the merged element will be moved.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( sourcePosition, howMany, targetPosition, graveyardPosition, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position inside the merged element. All nodes from that element after that position will be moved to {@link ~#targetPosition}.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#sourcePosition\n\t\t */\n\t\tthis.sourcePosition = sourcePosition.clone();\n\t\t// This is, and should always remain, the first position in its parent.\n\t\tthis.sourcePosition.stickiness = 'toPrevious';\n\n\t\t/**\n\t\t * Summary offset size of nodes which will be moved from the merged element to the new parent.\n\t\t *\n\t\t * @member {Number} module:engine/model/operation/mergeoperation~MergeOperation#howMany\n\t\t */\n\t\tthis.howMany = howMany;\n\n\t\t/**\n\t\t * Position which the nodes from the merged elements will be moved to.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#targetPosition\n\t\t */\n\t\tthis.targetPosition = targetPosition.clone();\n\t\t// Except of a rare scenario in `MergeOperation` x `MergeOperation` transformation,\n\t\t// this is, and should always remain, the last position in its parent.\n\t\tthis.targetPosition.stickiness = 'toNext';\n\n\t\t/**\n\t\t * Position in graveyard to which the merged element will be moved.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#graveyardPosition\n\t\t */\n\t\tthis.graveyardPosition = graveyardPosition.clone();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'merge';\n\t}\n\n\t/**\n\t * Position before the merged element (which will be deleted).\n\t *\n\t * @readonly\n\t * @type {module:engine/model/position~Position}\n\t */\n\tget deletionPosition() {\n\t\treturn new Position( this.sourcePosition.root, this.sourcePosition.path.slice( 0, -1 ) );\n\t}\n\n\t/**\n\t * Artificial range that contains all the nodes from the merged element that will be moved to {@link ~MergeOperation#sourcePosition}.\n\t * The range starts at {@link ~MergeOperation#sourcePosition} and ends in the same parent, at `POSITIVE_INFINITY` offset.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/range~Range}\n\t */\n\tget movedRange() {\n\t\tconst end = this.sourcePosition.getShiftedBy( Number.POSITIVE_INFINITY );\n\n\t\treturn new Range( this.sourcePosition, end );\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/mergeoperation~MergeOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new this.constructor( this.sourcePosition, this.howMany, this.targetPosition, this.graveyardPosition, this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/splitoperation~SplitOperation}\n\t */\n\tgetReversed() {\n\t\t// Positions in this method are transformed by this merge operation because the split operation bases on\n\t\t// the context after this merge operation happened (because split operation reverses it).\n\t\t// So we need to acknowledge that the merge operation happened and those positions changed a little.\n\t\tconst targetPosition = this.targetPosition._getTransformedByMergeOperation( this );\n\n\t\tconst path = this.sourcePosition.path.slice( 0, -1 );\n\t\tconst insertionPosition = new Position( this.sourcePosition.root, path )._getTransformedByMergeOperation( this );\n\n\t\tconst split = new SplitOperation( targetPosition, this.howMany, this.graveyardPosition, this.baseVersion + 1 );\n\t\tsplit.insertionPosition = insertionPosition;\n\n\t\treturn split;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst sourceElement = this.sourcePosition.parent;\n\t\tconst targetElement = this.targetPosition.parent;\n\n\t\t// Validate whether merge operation has correct parameters.\n\t\tif ( !sourceElement.parent ) {\n\t\t\t/**\n\t\t\t * Merge source position is invalid. The element to be merged must have a parent node.\n\t\t\t *\n\t\t\t * @error merge-operation-source-position-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'merge-operation-source-position-invalid: Merge source position is invalid.', this );\n\t\t} else if ( !targetElement.parent ) {\n\t\t\t/**\n\t\t\t * Merge target position is invalid. The element to be merged must have a parent node.\n\t\t\t *\n\t\t\t * @error merge-operation-target-position-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'merge-operation-target-position-invalid: Merge target position is invalid.', this );\n\t\t} else if ( this.howMany != sourceElement.maxOffset ) {\n\t\t\t/**\n\t\t\t * Merge operation specifies wrong number of nodes to move.\n\t\t\t *\n\t\t\t * @error merge-operation-how-many-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'merge-operation-how-many-invalid: Merge operation specifies wrong number of nodes to move.', this );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tconst mergedElement = this.sourcePosition.parent;\n\t\tconst sourceRange = Range._createIn( mergedElement );\n\n\t\t_move( sourceRange, this.targetPosition );\n\t\t_move( Range._createOn( mergedElement ), this.graveyardPosition );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.sourcePosition = json.sourcePosition.toJSON();\n\t\tjson.targetPosition = json.targetPosition.toJSON();\n\t\tjson.graveyardPosition = json.graveyardPosition.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'MergeOperation';\n\t}\n\n\t/**\n\t * Creates `MergeOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/mergeoperation~MergeOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst sourcePosition = Position.fromJSON( json.sourcePosition, document );\n\t\tconst targetPosition = Position.fromJSON( json.targetPosition, document );\n\t\tconst graveyardPosition = Position.fromJSON( json.graveyardPosition, document );\n\n\t\treturn new this( sourcePosition, json.howMany, targetPosition, graveyardPosition, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `MergeOperation( ${ this.baseVersion } ): ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`${ this.sourcePosition } -> ${ this.targetPosition }` +\n\t// @if CK_DEBUG_ENGINE //\t\t` ( ${ this.howMany } ), ${ this.graveyardPosition }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/splitoperation\n */\n\nimport Operation from './operation';\nimport MergeOperation from './mergeoperation';\nimport Position from '../position';\nimport Range from '../range';\nimport { _insert, _move } from './utils';\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Operation to split {@link module:engine/model/element~Element an element} at given\n * {@link module:engine/model/operation/splitoperation~SplitOperation#splitPosition split position} into two elements,\n * both containing a part of the element's original content.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class SplitOperation extends Operation {\n\t/**\n\t * Creates a split operation.\n\t *\n\t * @param {module:engine/model/position~Position} splitPosition Position at which an element should be split.\n\t * @param {Number} howMany Total offset size of elements that are in the split element after `position`.\n\t * @param {module:engine/model/position~Position|null} graveyardPosition Position in the graveyard root before the element which\n\t * should be used as a parent of the nodes after `position`. If it is not set, a copy of the the `position` parent will be used.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( splitPosition, howMany, graveyardPosition, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position at which an element should be split.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/splitoperation~SplitOperation#splitPosition\n\t\t */\n\t\tthis.splitPosition = splitPosition.clone();\n\t\t// Keep position sticking to the next node. This way any new content added at the place where the element is split\n\t\t// will be left in the original element.\n\t\tthis.splitPosition.stickiness = 'toNext';\n\n\t\t/**\n\t\t * Total offset size of elements that are in the split element after `position`.\n\t\t *\n\t\t * @member {Number} module:engine/model/operation/splitoperation~SplitOperation#howMany\n\t\t */\n\t\tthis.howMany = howMany;\n\n\t\t/**\n\t\t * Position at which the clone of split element (or element from graveyard) will be inserted.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/splitoperation~SplitOperation#insertionPosition\n\t\t */\n\t\tthis.insertionPosition = SplitOperation.getInsertionPosition( splitPosition );\n\t\tthis.insertionPosition.stickiness = 'toNone';\n\n\t\t/**\n\t\t * Position in the graveyard root before the element which should be used as a parent of the nodes after `position`.\n\t\t * If it is not set, a copy of the the `position` parent will be used.\n\t\t *\n\t\t * The default behavior is to clone the split element. Element from graveyard is used during undo.\n\t\t *\n\t\t * @member {module:engine/model/position~Position|null} #graveyardPosition\n\t\t */\n\t\tthis.graveyardPosition = graveyardPosition ? graveyardPosition.clone() : null;\n\n\t\tif ( this.graveyardPosition ) {\n\t\t\tthis.graveyardPosition.stickiness = 'toNext';\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'split';\n\t}\n\n\t/**\n\t * Position inside the new clone of a split element.\n\t *\n\t * This is a position where nodes that are after the split position will be moved to.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/position~Position}\n\t */\n\tget moveTargetPosition() {\n\t\tconst path = this.insertionPosition.path.slice();\n\t\tpath.push( 0 );\n\n\t\treturn new Position( this.insertionPosition.root, path );\n\t}\n\n\t/**\n\t * Artificial range that contains all the nodes from the split element that will be moved to the new element.\n\t * The range starts at {@link ~#splitPosition} and ends in the same parent, at `POSITIVE_INFINITY` offset.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/range~Range}\n\t */\n\tget movedRange() {\n\t\tconst end = this.splitPosition.getShiftedBy( Number.POSITIVE_INFINITY );\n\n\t\treturn new Range( this.splitPosition, end );\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/splitoperation~SplitOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\tconst split = new this.constructor( this.splitPosition, this.howMany, this.graveyardPosition, this.baseVersion );\n\t\tsplit.insertionPosition = this.insertionPosition;\n\n\t\treturn split;\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/mergeoperation~MergeOperation}\n\t */\n\tgetReversed() {\n\t\tconst graveyard = this.splitPosition.root.document.graveyard;\n\t\tconst graveyardPosition = new Position( graveyard, [ 0 ] );\n\n\t\treturn new MergeOperation( this.moveTargetPosition, this.howMany, this.splitPosition, graveyardPosition, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst element = this.splitPosition.parent;\n\t\tconst offset = this.splitPosition.offset;\n\n\t\t// Validate whether split operation has correct parameters.\n\t\tif ( !element || element.maxOffset < offset ) {\n\t\t\t/**\n\t\t\t * Split position is invalid.\n\t\t\t *\n\t\t\t * @error split-operation-position-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'split-operation-position-invalid: Split position is invalid.', this );\n\t\t} else if ( !element.parent ) {\n\t\t\t/**\n\t\t\t * Cannot split root element.\n\t\t\t *\n\t\t\t * @error split-operation-split-in-root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'split-operation-split-in-root: Cannot split root element.', this );\n\t\t} else if ( this.howMany != element.maxOffset - this.splitPosition.offset ) {\n\t\t\t/**\n\t\t\t * Split operation specifies wrong number of nodes to move.\n\t\t\t *\n\t\t\t * @error split-operation-how-many-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'split-operation-how-many-invalid: Split operation specifies wrong number of nodes to move.', this );\n\t\t} else if ( this.graveyardPosition && !this.graveyardPosition.nodeAfter ) {\n\t\t\t/**\n\t\t\t * Graveyard position invalid.\n\t\t\t *\n\t\t\t * @error split-operation-graveyard-position-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'split-operation-graveyard-position-invalid: Graveyard position invalid.', this );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tconst splitElement = this.splitPosition.parent;\n\n\t\tif ( this.graveyardPosition ) {\n\t\t\t_move( Range._createFromPositionAndShift( this.graveyardPosition, 1 ), this.insertionPosition );\n\t\t} else {\n\t\t\tconst newElement = splitElement._clone();\n\n\t\t\t_insert( this.insertionPosition, newElement );\n\t\t}\n\n\t\tconst sourceRange = new Range(\n\t\t\tPosition._createAt( splitElement, this.splitPosition.offset ),\n\t\t\tPosition._createAt( splitElement, splitElement.maxOffset )\n\t\t);\n\n\t\t_move( sourceRange, this.moveTargetPosition );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.splitPosition = this.splitPosition.toJSON();\n\t\tjson.insertionPosition = this.insertionPosition.toJSON();\n\n\t\tif ( this.graveyardPosition ) {\n\t\t\tjson.graveyardPosition = this.graveyardPosition.toJSON();\n\t\t}\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'SplitOperation';\n\t}\n\n\t/**\n\t * Helper function that returns a default insertion position basing on given `splitPosition`. The default insertion\n\t * position is after the split element.\n\t *\n\t * @param {module:engine/model/position~Position} splitPosition\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tstatic getInsertionPosition( splitPosition ) {\n\t\tconst path = splitPosition.path.slice( 0, -1 );\n\t\tpath[ path.length - 1 ]++;\n\n\t\treturn new Position( splitPosition.root, path );\n\t}\n\n\t/**\n\t * Creates `SplitOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/splitoperation~SplitOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst splitPosition = Position.fromJSON( json.splitPosition, document );\n\t\tconst insertionPosition = Position.fromJSON( json.insertionPosition, document );\n\t\tconst graveyardPosition = json.graveyardPosition ? Position.fromJSON( json.graveyardPosition, document ) : null;\n\n\t\tconst split = new this( splitPosition, json.howMany, graveyardPosition, json.baseVersion );\n\t\tsplit.insertionPosition = insertionPosition;\n\n\t\treturn split;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `SplitOperation( ${ this.baseVersion } ): ${ this.splitPosition } ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`( ${ this.howMany } ) -> ${ this.insertionPosition }` +\n\t// @if CK_DEBUG_ENGINE //\t\t`${ this.graveyardPosition ? ' with ' + this.graveyardPosition : '' }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/rootelement\n */\n\nimport Element from './element';\n\n/**\n * Type of {@link module:engine/model/element~Element} that is a root of a model tree.\n * @extends module:engine/model/element~Element\n */\nexport default class RootElement extends Element {\n\t/**\n\t * Creates root element.\n\t *\n\t * @param {module:engine/model/document~Document} document Document that is an owner of this root.\n\t * @param {String} name Node name.\n\t * @param {String} [rootName='main'] Unique root name used to identify this root\n\t * element by {@link module:engine/model/document~Document}.\n\t */\n\tconstructor( document, name, rootName = 'main' ) {\n\t\tsuper( name );\n\n\t\t/**\n\t\t * Document that is an owner of this root.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/document~Document}\n\t\t */\n\t\tthis._document = document;\n\n\t\t/**\n\t\t * Unique root name used to identify this root element by {@link module:engine/model/document~Document}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.rootName = rootName;\n\t}\n\n\t/**\n\t * {@link module:engine/model/document~Document Document} that owns this root element.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/document~Document|null}\n\t */\n\tget document() {\n\t\treturn this._document;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\trootElement.is( 'rootElement' ); // -> true\n\t *\t\trootElement.is( 'element' ); // -> true\n\t *\t\trootElement.is( 'node' ); // -> true\n\t *\t\trootElement.is( 'model:rootElement' ); // -> true\n\t *\t\trootElement.is( 'model:element' ); // -> true\n\t *\t\trootElement.is( 'model:node' ); // -> true\n\t *\n\t *\t\trootElement.is( 'view:element' ); // -> false\n\t *\t\trootElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an element, you can also check its\n\t * {@link module:engine/model/element~Element#name name}:\n\t *\n\t *\t\trootElement.is( '$root' ); // -> true if this is a $root element\n\t *\t\trootElement.is( 'rootElement', '$root' ); // -> same as above\n\t *\t\ttext.is( '$root' ); -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name ) {\n\t\tif ( !name ) {\n\t\t\treturn type === 'rootElement' || type === 'model:rootElement' ||\n\t\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\t\ttype === 'element' || type === 'model:element' ||\n\t\t\t\ttype === this.name || type === 'model:' + this.name ||\n\t\t\t\ttype === 'node' || type === 'model:node';\n\t\t}\n\n\t\treturn name === this.name && (\n\t\t\ttype === 'rootElement' || type === 'model:rootElement' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype === 'element' || type === 'model:element'\n\t\t);\n\t}\n\n\t/**\n\t * Converts `RootElement` instance to `String` containing it's name.\n\t *\n\t * @returns {String} `RootElement` instance converted to `String`.\n\t */\n\ttoJSON() {\n\t\treturn this.rootName;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn this.rootName;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelRootElement: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/writer\n */\n\nimport AttributeOperation from './operation/attributeoperation';\nimport DetachOperation from './operation/detachoperation';\nimport InsertOperation from './operation/insertoperation';\nimport MarkerOperation from './operation/markeroperation';\nimport MoveOperation from './operation/moveoperation';\nimport RenameOperation from './operation/renameoperation';\nimport RootAttributeOperation from './operation/rootattributeoperation';\nimport SplitOperation from './operation/splitoperation';\nimport MergeOperation from './operation/mergeoperation';\n\nimport DocumentFragment from './documentfragment';\nimport Text from './text';\nimport Element from './element';\nimport RootElement from './rootelement';\nimport Position from './position';\nimport Range from './range.js';\nimport DocumentSelection from './documentselection';\n\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * The model can only be modified by using the writer. It should be used whenever you want to create a node, modify\n * child nodes, attributes or text, set the selection's position and its attributes.\n *\n * The instance of the writer is only available in the {@link module:engine/model/model~Model#change `change()`} or\n * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()`}.\n *\n *\t\tmodel.change( writer => {\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n *\t\t} );\n *\n * Note that the writer should never be stored and used outside of the `change()` and\n * `enqueueChange()` blocks.\n *\n * Note that writer's methods do not check the {@link module:engine/model/schema~Schema}. It is possible\n * to create incorrect model structures by using the writer. Read more about in\n * {@glink framework/guides/deep-dive/schema#who-checks-the-schema \"Who checks the schema?\"}.\n *\n * @see module:engine/model/model~Model#change\n * @see module:engine/model/model~Model#enqueueChange\n */\nexport default class Writer {\n\t/**\n\t * Creates a writer instance.\n\t *\n\t * **Note:** It is not recommended to use it directly. Use {@link module:engine/model/model~Model#change `Model#change()`} or\n\t * {@link module:engine/model/model~Model#enqueueChange `Model#enqueueChange()`} instead.\n\t *\n\t * @protected\n\t * @param {module:engine/model/model~Model} model\n\t * @param {module:engine/model/batch~Batch} batch\n\t */\n\tconstructor( model, batch ) {\n\t\t/**\n\t\t * Instance of the model on which this writer operates.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * The batch to which this writer will add changes.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/batch~Batch}\n\t\t */\n\t\tthis.batch = batch;\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/model/text~Text text node}.\n\t *\n\t *\t\twriter.createText( 'foo' );\n\t *\t\twriter.createText( 'foo', { bold: true } );\n\t *\n\t * @param {String} data Text data.\n\t * @param {Object} [attributes] Text attributes.\n\t * @returns {module:engine/model/text~Text} Created text node.\n\t */\n\tcreateText( data, attributes ) {\n\t\treturn new Text( data, attributes );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/model/element~Element element}.\n\t *\n\t *\t\twriter.createElement( 'paragraph' );\n\t *\t\twriter.createElement( 'paragraph', { alignment: 'center' } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @returns {module:engine/model/element~Element} Created element.\n\t */\n\tcreateElement( name, attributes ) {\n\t\treturn new Element( name, attributes );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/model/documentfragment~DocumentFragment document fragment}.\n\t *\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Created document fragment.\n\t */\n\tcreateDocumentFragment() {\n\t\treturn new DocumentFragment();\n\t}\n\n\t/**\n\t * Inserts item on given position.\n\t *\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\t\twriter.insert( paragraph, position );\n\t *\n\t * Instead of using position you can use parent and offset:\n\t *\n\t *\t\tconst text = writer.createText( 'foo' );\n\t *\t\twriter.insert( text, paragraph, 5 );\n\t *\n\t * You can also use `end` instead of the offset to insert at the end:\n\t *\n\t *\t\tconst text = writer.createText( 'foo' );\n\t *\t\twriter.insert( text, paragraph, 'end' );\n\t *\n\t * Or insert before or after another element:\n\t *\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\t\twriter.insert( paragraph, anotherParagraph, 'after' );\n\t *\n\t * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n\t *\n\t * Note that if the item already has parent it will be removed from the previous parent.\n\t *\n\t * Note that you cannot re-insert a node from a document to a different document or a document fragment. In this case,\n\t * `model-writer-insert-forbidden-move` is thrown.\n\t *\n\t * If you want to move {@link module:engine/model/range~Range range} instead of an\n\t * {@link module:engine/model/item~Item item} use {@link module:engine/model/writer~Writer#move `Writer#move()`}.\n\t *\n\t * **Note:** For a paste-like content insertion mechanism see\n\t * {@link module:engine/model/model~Model#insertContent `model.insertContent()`}.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/documentfragment~DocumentFragment} item Item or document\n\t * fragment to insert.\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * second parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tinsert( item, itemOrPosition, offset = 0 ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( item instanceof Text && item.data == '' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst position = Position._createAt( itemOrPosition, offset );\n\n\t\t// If item has a parent already.\n\t\tif ( item.parent ) {\n\t\t\t// We need to check if item is going to be inserted within the same document.\n\t\t\tif ( isSameTree( item.root, position.root ) ) {\n\t\t\t\t// If it's we just need to move it.\n\t\t\t\tthis.move( Range._createOn( item ), position );\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// If it isn't the same root.\n\t\t\telse {\n\t\t\t\tif ( item.root.document ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Cannot move a node from a document to a different tree.\n\t\t\t\t\t * It is forbidden to move a node that was already in a document outside of it.\n\t\t\t\t\t *\n\t\t\t\t\t * @error model-writer-insert-forbidden-move\n\t\t\t\t\t */\n\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t'model-writer-insert-forbidden-move: ' +\n\t\t\t\t\t\t'Cannot move a node from a document to a different tree. ' +\n\t\t\t\t\t\t'It is forbidden to move a node that was already in a document outside of it.',\n\t\t\t\t\t\tthis\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// Move between two different document fragments or from document fragment to a document is possible.\n\t\t\t\t\t// In that case, remove the item from it's original parent.\n\t\t\t\t\tthis.remove( item );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst version = position.root.document ? position.root.document.version : null;\n\n\t\tconst insert = new InsertOperation( position, item, version );\n\n\t\tif ( item instanceof Text ) {\n\t\t\tinsert.shouldReceiveAttributes = true;\n\t\t}\n\n\t\tthis.batch.addOperation( insert );\n\t\tthis.model.applyOperation( insert );\n\n\t\t// When element is a DocumentFragment we need to move its markers to Document#markers.\n\t\tif ( item instanceof DocumentFragment ) {\n\t\t\tfor ( const [ markerName, markerRange ] of item.markers ) {\n\t\t\t\t// We need to migrate marker range from DocumentFragment to Document.\n\t\t\t\tconst rangeRootPosition = Position._createAt( markerRange.root, 0 );\n\t\t\t\tconst range = new Range(\n\t\t\t\t\tmarkerRange.start._getCombined( rangeRootPosition, position ),\n\t\t\t\t\tmarkerRange.end._getCombined( rangeRootPosition, position )\n\t\t\t\t);\n\n\t\t\t\tconst options = { range, usingOperation: true, affectsData: true };\n\n\t\t\t\tif ( this.model.markers.has( markerName ) ) {\n\t\t\t\t\tthis.updateMarker( markerName, options );\n\t\t\t\t} else {\n\t\t\t\t\tthis.addMarker( markerName, options );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates and inserts text on given position. You can optionally set text attributes:\n\t *\n\t *\t\twriter.insertText( 'foo', position );\n\t *\t\twriter.insertText( 'foo', { bold: true }, position );\n\t *\n\t * Instead of using position you can use parent and offset or define that text should be inserted at the end\n\t * or before or after other node:\n\t *\n\t *\t\t// Inserts 'foo' in paragraph, at offset 5:\n\t *\t\twriter.insertText( 'foo', paragraph, 5 );\n\t *\t\t// Inserts 'foo' at the end of a paragraph:\n\t *\t\twriter.insertText( 'foo', paragraph, 'end' );\n\t *\t\t// Inserts 'foo' after an image:\n\t *\t\twriter.insertText( 'foo', image, 'after' );\n\t *\n\t * These parameters work in the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n\t *\n\t * @param {String} data Text data.\n\t * @param {Object} [attributes] Text attributes.\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * third parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tinsertText( text, attributes, itemOrPosition, offset ) {\n\t\tif ( attributes instanceof DocumentFragment || attributes instanceof Element || attributes instanceof Position ) {\n\t\t\tthis.insert( this.createText( text ), attributes, itemOrPosition );\n\t\t} else {\n\t\t\tthis.insert( this.createText( text, attributes ), itemOrPosition, offset );\n\t\t}\n\t}\n\n\t/**\n\t * Creates and inserts element on given position. You can optionally set attributes:\n\t *\n\t *\t\twriter.insertElement( 'paragraph', position );\n\t *\t\twriter.insertElement( 'paragraph', { alignment: 'center' }, position );\n\t *\n\t * Instead of using position you can use parent and offset or define that text should be inserted at the end\n\t * or before or after other node:\n\t *\n\t *\t\t// Inserts paragraph in the root at offset 5:\n\t *\t\twriter.insertElement( 'paragraph', root, 5 );\n\t *\t\t// Inserts paragraph at the end of a blockquote:\n\t *\t\twriter.insertElement( 'paragraph', blockquote, 'end' );\n\t *\t\t// Inserts after an image:\n\t *\t\twriter.insertElement( 'paragraph', image, 'after' );\n\t *\n\t * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * third parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tinsertElement( name, attributes, itemOrPosition, offset ) {\n\t\tif ( attributes instanceof DocumentFragment || attributes instanceof Element || attributes instanceof Position ) {\n\t\t\tthis.insert( this.createElement( name ), attributes, itemOrPosition );\n\t\t} else {\n\t\t\tthis.insert( this.createElement( name, attributes ), itemOrPosition, offset );\n\t\t}\n\t}\n\n\t/**\n\t * Inserts item at the end of the given parent.\n\t *\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\t\twriter.append( paragraph, root );\n\t *\n\t * Note that if the item already has parent it will be removed from the previous parent.\n\t *\n\t * If you want to move {@link module:engine/model/range~Range range} instead of an\n\t * {@link module:engine/model/item~Item item} use {@link module:engine/model/writer~Writer#move `Writer#move()`}.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/documentfragment~DocumentFragment}\n\t * item Item or document fragment to insert.\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n\t */\n\tappend( item, parent ) {\n\t\tthis.insert( item, parent, 'end' );\n\t}\n\n\t/**\n\t * Creates text node and inserts it at the end of the parent. You can optionally set text attributes:\n\t *\n\t *\t\twriter.appendText( 'foo', paragraph );\n\t *\t\twriter.appendText( 'foo', { bold: true }, paragraph );\n\t *\n\t * @param {String} text Text data.\n\t * @param {Object} [attributes] Text attributes.\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n\t */\n\tappendText( text, attributes, parent ) {\n\t\tif ( attributes instanceof DocumentFragment || attributes instanceof Element ) {\n\t\t\tthis.insert( this.createText( text ), attributes, 'end' );\n\t\t} else {\n\t\t\tthis.insert( this.createText( text, attributes ), parent, 'end' );\n\t\t}\n\t}\n\n\t/**\n\t * Creates element and inserts it at the end of the parent. You can optionally set attributes:\n\t *\n\t *\t\twriter.appendElement( 'paragraph', root );\n\t *\t\twriter.appendElement( 'paragraph', { alignment: 'center' }, root );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n\t */\n\tappendElement( name, attributes, parent ) {\n\t\tif ( attributes instanceof DocumentFragment || attributes instanceof Element ) {\n\t\t\tthis.insert( this.createElement( name ), attributes, 'end' );\n\t\t} else {\n\t\t\tthis.insert( this.createElement( name, attributes ), parent, 'end' );\n\t\t}\n\t}\n\n\t/**\n\t * Sets value of the attribute with given key on a {@link module:engine/model/item~Item model item}\n\t * or on a {@link module:engine/model/range~Range range}.\n\t *\n\t * @param {String} key Attribute key.\n\t * @param {*} value Attribute new value.\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n\t * Model item or range on which the attribute will be set.\n\t */\n\tsetAttribute( key, value, itemOrRange ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( itemOrRange instanceof Range ) {\n\t\t\tconst ranges = itemOrRange.getMinimalFlatRanges();\n\n\t\t\tfor ( const range of ranges ) {\n\t\t\t\tsetAttributeOnRange( this, key, value, range );\n\t\t\t}\n\t\t} else {\n\t\t\tsetAttributeOnItem( this, key, value, itemOrRange );\n\t\t}\n\t}\n\n\t/**\n\t * Sets values of attributes on a {@link module:engine/model/item~Item model item}\n\t * or on a {@link module:engine/model/range~Range range}.\n\t *\n\t *\t\twriter.setAttributes( {\n\t *\t\t\tbold: true,\n\t *\t\t\titalic: true\n\t *\t\t}, range );\n\t *\n\t * @param {Object} attributes Attributes keys and values.\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n\t * Model item or range on which the attributes will be set.\n\t */\n\tsetAttributes( attributes, itemOrRange ) {\n\t\tfor ( const [ key, val ] of toMap( attributes ) ) {\n\t\t\tthis.setAttribute( key, val, itemOrRange );\n\t\t}\n\t}\n\n\t/**\n\t * Removes an attribute with given key from a {@link module:engine/model/item~Item model item}\n\t * or from a {@link module:engine/model/range~Range range}.\n\t *\n\t * @param {String} key Attribute key.\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n\t * Model item or range from which the attribute will be removed.\n\t */\n\tremoveAttribute( key, itemOrRange ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( itemOrRange instanceof Range ) {\n\t\t\tconst ranges = itemOrRange.getMinimalFlatRanges();\n\n\t\t\tfor ( const range of ranges ) {\n\t\t\t\tsetAttributeOnRange( this, key, null, range );\n\t\t\t}\n\t\t} else {\n\t\t\tsetAttributeOnItem( this, key, null, itemOrRange );\n\t\t}\n\t}\n\n\t/**\n\t * Removes all attributes from all elements in the range or from the given item.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n\t * Model item or range from which all attributes will be removed.\n\t */\n\tclearAttributes( itemOrRange ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tconst removeAttributesFromItem = item => {\n\t\t\tfor ( const attribute of item.getAttributeKeys() ) {\n\t\t\t\tthis.removeAttribute( attribute, item );\n\t\t\t}\n\t\t};\n\n\t\tif ( !( itemOrRange instanceof Range ) ) {\n\t\t\tremoveAttributesFromItem( itemOrRange );\n\t\t} else {\n\t\t\tfor ( const item of itemOrRange.getItems() ) {\n\t\t\t\tremoveAttributesFromItem( item );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Moves all items in the source range to the target position.\n\t *\n\t *\t\twriter.move( sourceRange, targetPosition );\n\t *\n\t * Instead of the target position you can use parent and offset or define that range should be moved to the end\n\t * or before or after chosen item:\n\t *\n\t *\t\t// Moves all items in the range to the paragraph at offset 5:\n\t *\t\twriter.move( sourceRange, paragraph, 5 );\n\t *\t\t// Moves all items in the range to the end of a blockquote:\n\t *\t\twriter.move( sourceRange, blockquote, 'end' );\n\t *\t\t// Moves all items in the range to a position after an image:\n\t *\t\twriter.move( sourceRange, image, 'after' );\n\t *\n\t * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n\t *\n\t * Note that items can be moved only within the same tree. It means that you can move items within the same root\n\t * (element or document fragment) or between {@link module:engine/model/document~Document#roots documents roots},\n\t * but you can not move items from document fragment to the document or from one detached element to another. Use\n\t * {@link module:engine/model/writer~Writer#insert} in such cases.\n\t *\n\t * @param {module:engine/model/range~Range} range Source range.\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * second parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tmove( range, itemOrPosition, offset ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( !( range instanceof Range ) ) {\n\t\t\t/**\n\t\t\t * Invalid range to move.\n\t\t\t *\n\t\t\t * @error writer-move-invalid-range\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-move-invalid-range: Invalid range to move.', this );\n\t\t}\n\n\t\tif ( !range.isFlat ) {\n\t\t\t/**\n\t\t\t * Range to move is not flat.\n\t\t\t *\n\t\t\t * @error writer-move-range-not-flat\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-move-range-not-flat: Range to move is not flat.', this );\n\t\t}\n\n\t\tconst position = Position._createAt( itemOrPosition, offset );\n\n\t\t// Do not move anything if the move target is same as moved range start.\n\t\tif ( position.isEqual( range.start ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If part of the marker is removed, create additional marker operation for undo purposes.\n\t\tthis._addOperationForAffectedMarkers( 'move', range );\n\n\t\tif ( !isSameTree( range.root, position.root ) ) {\n\t\t\t/**\n\t\t\t * Range is going to be moved within not the same document. Please use\n\t\t\t * {@link module:engine/model/writer~Writer#insert insert} instead.\n\t\t\t *\n\t\t\t * @error writer-move-different-document\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-move-different-document: Range is going to be moved between different documents.', this );\n\t\t}\n\n\t\tconst version = range.root.document ? range.root.document.version : null;\n\t\tconst operation = new MoveOperation( range.start, range.end.offset - range.start.offset, position, version );\n\n\t\tthis.batch.addOperation( operation );\n\t\tthis.model.applyOperation( operation );\n\t}\n\n\t/**\n\t * Removes given model {@link module:engine/model/item~Item item} or {@link module:engine/model/range~Range range}.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange Model item or range to remove.\n\t */\n\tremove( itemOrRange ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tconst rangeToRemove = itemOrRange instanceof Range ? itemOrRange : Range._createOn( itemOrRange );\n\t\tconst ranges = rangeToRemove.getMinimalFlatRanges().reverse();\n\n\t\tfor ( const flat of ranges ) {\n\t\t\t// If part of the marker is removed, create additional marker operation for undo purposes.\n\t\t\tthis._addOperationForAffectedMarkers( 'move', flat );\n\n\t\t\tapplyRemoveOperation( flat.start, flat.end.offset - flat.start.offset, this.batch, this.model );\n\t\t}\n\t}\n\n\t/**\n\t * Merges two siblings at the given position.\n\t *\n\t * Node before and after the position have to be an element. Otherwise `writer-merge-no-element-before` or\n\t * `writer-merge-no-element-after` error will be thrown.\n\t *\n\t * @param {module:engine/model/position~Position} position Position between merged elements.\n\t */\n\tmerge( position ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tconst nodeBefore = position.nodeBefore;\n\t\tconst nodeAfter = position.nodeAfter;\n\n\t\t// If part of the marker is removed, create additional marker operation for undo purposes.\n\t\tthis._addOperationForAffectedMarkers( 'merge', position );\n\n\t\tif ( !( nodeBefore instanceof Element ) ) {\n\t\t\t/**\n\t\t\t * Node before merge position must be an element.\n\t\t\t *\n\t\t\t * @error writer-merge-no-element-before\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-merge-no-element-before: Node before merge position must be an element.', this );\n\t\t}\n\n\t\tif ( !( nodeAfter instanceof Element ) ) {\n\t\t\t/**\n\t\t\t * Node after merge position must be an element.\n\t\t\t *\n\t\t\t * @error writer-merge-no-element-after\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-merge-no-element-after: Node after merge position must be an element.', this );\n\t\t}\n\n\t\tif ( !position.root.document ) {\n\t\t\tthis._mergeDetached( position );\n\t\t} else {\n\t\t\tthis._merge( position );\n\t\t}\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createPositionFromPath `Model#createPositionFromPath()`}.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n\t * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n\t * See {@link module:engine/model/position~PositionStickiness}.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionFromPath( root, path, stickiness ) {\n\t\treturn this.model.createPositionFromPath( root, path, stickiness );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createPositionAt `Model#createPositionAt()`}.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionAt( itemOrPosition, offset ) {\n\t\treturn this.model.createPositionAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createPositionAfter `Model#createPositionAfter()`}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionAfter( item ) {\n\t\treturn this.model.createPositionAfter( item );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createPositionBefore `Model#createPositionBefore()`}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionBefore( item ) {\n\t\treturn this.model.createPositionBefore( item );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createRange `Model#createRange()`}.\n\t *\n\t * @param {module:engine/model/position~Position} start Start position.\n\t * @param {module:engine/model/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRange( start, end ) {\n\t\treturn this.model.createRange( start, end );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createRangeIn `Model#createRangeIn()`}.\n\t *\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRangeIn( element ) {\n\t\treturn this.model.createRangeIn( element );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createRangeOn `Model#createRangeOn()`}.\n\t *\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRangeOn( element ) {\n\t\treturn this.model.createRangeOn( element );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createSelection `Model#createSelection()`}.\n\t *\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @returns {module:engine/model/selection~Selection}\n\t */\n\tcreateSelection( selectable, placeOrOffset, options ) {\n\t\treturn this.model.createSelection( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Performs merge action in a detached tree.\n\t *\n\t * @private\n\t * @param {module:engine/model/position~Position} position Position between merged elements.\n\t */\n\t_mergeDetached( position ) {\n\t\tconst nodeBefore = position.nodeBefore;\n\t\tconst nodeAfter = position.nodeAfter;\n\n\t\tthis.move( Range._createIn( nodeAfter ), Position._createAt( nodeBefore, 'end' ) );\n\t\tthis.remove( nodeAfter );\n\t}\n\n\t/**\n\t * Performs merge action in a non-detached tree.\n\t *\n\t * @private\n\t * @param {module:engine/model/position~Position} position Position between merged elements.\n\t */\n\t_merge( position ) {\n\t\tconst targetPosition = Position._createAt( position.nodeBefore, 'end' );\n\t\tconst sourcePosition = Position._createAt( position.nodeAfter, 0 );\n\n\t\tconst graveyard = position.root.document.graveyard;\n\t\tconst graveyardPosition = new Position( graveyard, [ 0 ] );\n\n\t\tconst version = position.root.document.version;\n\n\t\tconst merge = new MergeOperation( sourcePosition, position.nodeAfter.maxOffset, targetPosition, graveyardPosition, version );\n\n\t\tthis.batch.addOperation( merge );\n\t\tthis.model.applyOperation( merge );\n\t}\n\n\t/**\n\t * Renames the given element.\n\t *\n\t * @param {module:engine/model/element~Element} element The element to rename.\n\t * @param {String} newName New element name.\n\t */\n\trename( element, newName ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( !( element instanceof Element ) ) {\n\t\t\t/**\n\t\t\t * Trying to rename an object which is not an instance of Element.\n\t\t\t *\n\t\t\t * @error writer-rename-not-element-instance\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'writer-rename-not-element-instance: Trying to rename an object which is not an instance of Element.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tconst version = element.root.document ? element.root.document.version : null;\n\t\tconst renameOperation = new RenameOperation( Position._createBefore( element ), element.name, newName, version );\n\n\t\tthis.batch.addOperation( renameOperation );\n\t\tthis.model.applyOperation( renameOperation );\n\t}\n\n\t/**\n\t * Splits elements starting from the given position and going to the top of the model tree as long as given\n\t * `limitElement` is reached. When `limitElement` is not defined then only the parent of the given position will be split.\n\t *\n\t * The element needs to have a parent. It cannot be a root element nor a document fragment.\n\t * The `writer-split-element-no-parent` error will be thrown if you try to split an element with no parent.\n\t *\n\t * @param {module:engine/model/position~Position} position Position of split.\n\t * @param {module:engine/model/node~Node} [limitElement] Stop splitting when this element will be reached.\n\t * @returns {Object} result Split result.\n\t * @returns {module:engine/model/position~Position} result.position Position between split elements.\n\t * @returns {module:engine/model/range~Range} result.range Range that stars from the end of the first split element and ends\n\t * at the beginning of the first copy element.\n\t */\n\tsplit( position, limitElement ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tlet splitElement = position.parent;\n\n\t\tif ( !splitElement.parent ) {\n\t\t\t/**\n\t\t\t * Element with no parent can not be split.\n\t\t\t *\n\t\t\t * @error writer-split-element-no-parent\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-split-element-no-parent: Element with no parent can not be split.', this );\n\t\t}\n\n\t\t// When limit element is not defined lets set splitElement parent as limit.\n\t\tif ( !limitElement ) {\n\t\t\tlimitElement = splitElement.parent;\n\t\t}\n\n\t\tif ( !position.parent.getAncestors( { includeSelf: true } ).includes( limitElement ) ) {\n\t\t\tthrow new CKEditorError( 'writer-split-invalid-limit-element: Limit element is not a position ancestor.', this );\n\t\t}\n\n\t\t// We need to cache elements that will be created as a result of the first split because\n\t\t// we need to create a range from the end of the first split element to the beginning of the\n\t\t// first copy element. This should be handled by LiveRange but it doesn't work on detached nodes.\n\t\tlet firstSplitElement, firstCopyElement;\n\n\t\tdo {\n\t\t\tconst version = splitElement.root.document ? splitElement.root.document.version : null;\n\t\t\tconst howMany = splitElement.maxOffset - position.offset;\n\t\t\tconst split = new SplitOperation( position, howMany, null, version );\n\n\t\t\tthis.batch.addOperation( split );\n\t\t\tthis.model.applyOperation( split );\n\n\t\t\t// Cache result of the first split.\n\t\t\tif ( !firstSplitElement && !firstCopyElement ) {\n\t\t\t\tfirstSplitElement = splitElement;\n\t\t\t\tfirstCopyElement = position.parent.nextSibling;\n\t\t\t}\n\n\t\t\tposition = this.createPositionAfter( position.parent );\n\t\t\tsplitElement = position.parent;\n\t\t} while ( splitElement !== limitElement );\n\n\t\treturn {\n\t\t\tposition,\n\t\t\trange: new Range( Position._createAt( firstSplitElement, 'end' ), Position._createAt( firstCopyElement, 0 ) )\n\t\t};\n\t}\n\n\t/**\n\t * Wraps the given range with the given element or with a new element (if a string was passed).\n\t *\n\t * **Note:** range to wrap should be a \"flat range\" (see {@link module:engine/model/range~Range#isFlat `Range#isFlat`}).\n\t * If not, an error will be thrown.\n\t *\n\t * @param {module:engine/model/range~Range} range Range to wrap.\n\t * @param {module:engine/model/element~Element|String} elementOrString Element or name of element to wrap the range with.\n\t */\n\twrap( range, elementOrString ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( !range.isFlat ) {\n\t\t\t/**\n\t\t\t * Range to wrap is not flat.\n\t\t\t *\n\t\t\t * @error writer-wrap-range-not-flat\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-wrap-range-not-flat: Range to wrap is not flat.', this );\n\t\t}\n\n\t\tconst element = elementOrString instanceof Element ? elementOrString : new Element( elementOrString );\n\n\t\tif ( element.childCount > 0 ) {\n\t\t\t/**\n\t\t\t * Element to wrap with is not empty.\n\t\t\t *\n\t\t\t * @error writer-wrap-element-not-empty\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-wrap-element-not-empty: Element to wrap with is not empty.', this );\n\t\t}\n\n\t\tif ( element.parent !== null ) {\n\t\t\t/**\n\t\t\t * Element to wrap with is already attached to a tree model.\n\t\t\t *\n\t\t\t * @error writer-wrap-element-attached\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-wrap-element-attached: Element to wrap with is already attached to tree model.', this );\n\t\t}\n\n\t\tthis.insert( element, range.start );\n\n\t\t// Shift the range-to-wrap because we just inserted an element before that range.\n\t\tconst shiftedRange = new Range( range.start.getShiftedBy( 1 ), range.end.getShiftedBy( 1 ) );\n\n\t\tthis.move( shiftedRange, Position._createAt( element, 0 ) );\n\t}\n\n\t/**\n\t * Unwraps children of the given element – all its children are moved before it and then the element is removed.\n\t * Throws error if you try to unwrap an element which does not have a parent.\n\t *\n\t * @param {module:engine/model/element~Element} element Element to unwrap.\n\t */\n\tunwrap( element ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( element.parent === null ) {\n\t\t\t/**\n\t\t\t * Trying to unwrap an element which has no parent.\n\t\t\t *\n\t\t\t * @error writer-unwrap-element-no-parent\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-unwrap-element-no-parent: Trying to unwrap an element which has no parent.', this );\n\t\t}\n\n\t\tthis.move( Range._createIn( element ), this.createPositionAfter( element ) );\n\t\tthis.remove( element );\n\t}\n\n\t/**\n\t * Adds a {@link module:engine/model/markercollection~Marker marker}. Marker is a named range, which tracks\n\t * changes in the document and updates its range automatically, when model tree changes.\n\t *\n\t * As the first parameter you can set marker name.\n\t *\n\t * The required `options.usingOperation` parameter lets you decide if the marker should be managed by operations or not. See\n\t * {@link module:engine/model/markercollection~Marker marker class description} to learn about the difference between\n\t * markers managed by operations and not-managed by operations.\n\t *\n\t * The `options.affectsData` parameter, which defaults to `false`, allows you to define if a marker affects the data. It should be\n\t * `true` when the marker change changes the data returned by the\n\t * {@link module:core/editor/utils/dataapimixin~DataApi#getData `editor.getData()`} method.\n\t * When set to `true` it fires the {@link module:engine/model/document~Document#event:change:data `change:data`} event.\n\t * When set to `false` it fires the {@link module:engine/model/document~Document#event:change `change`} event.\n\t *\n\t * Create marker directly base on marker's name:\n\t *\n\t *\t\taddMarker( markerName, { range, usingOperation: false } );\n\t *\n\t * Create marker using operation:\n\t *\n\t *\t\taddMarker( markerName, { range, usingOperation: true } );\n\t *\n\t * Create marker that affects the editor data:\n\t *\n\t *\t\taddMarker( markerName, { range, usingOperation: false, affectsData: true } );\n\t *\n\t * Note: For efficiency reasons, it's best to create and keep as little markers as possible.\n\t *\n\t * @see module:engine/model/markercollection~Marker\n\t * @param {String} name Name of a marker to create - must be unique.\n\t * @param {Object} options\n\t * @param {Boolean} options.usingOperation Flag indicating that the marker should be added by MarkerOperation.\n\t * See {@link module:engine/model/markercollection~Marker#managedUsingOperations}.\n\t * @param {module:engine/model/range~Range} options.range Marker range.\n\t * @param {Boolean} [options.affectsData=false] Flag indicating that the marker changes the editor data.\n\t * @returns {module:engine/model/markercollection~Marker} Marker that was set.\n\t */\n\taddMarker( name, options ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( !options || typeof options.usingOperation != 'boolean' ) {\n\t\t\t/**\n\t\t\t * The `options.usingOperation` parameter is required when adding a new marker.\n\t\t\t *\n\t\t\t * @error writer-addMarker-no-usingOperation\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'writer-addMarker-no-usingOperation: The options.usingOperation parameter is required when adding a new marker.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tconst usingOperation = options.usingOperation;\n\t\tconst range = options.range;\n\t\tconst affectsData = options.affectsData === undefined ? false : options.affectsData;\n\n\t\tif ( this.model.markers.has( name ) ) {\n\t\t\t/**\n\t\t\t * Marker with provided name already exists.\n\t\t\t *\n\t\t\t * @error writer-addMarker-marker-exists\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-addMarker-marker-exists: Marker with provided name already exists.', this );\n\t\t}\n\n\t\tif ( !range ) {\n\t\t\t/**\n\t\t\t * Range parameter is required when adding a new marker.\n\t\t\t *\n\t\t\t * @error writer-addMarker-no-range\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'writer-addMarker-no-range: Range parameter is required when adding a new marker.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tif ( !usingOperation ) {\n\t\t\treturn this.model.markers._set( name, range, usingOperation, affectsData );\n\t\t}\n\n\t\tapplyMarkerOperation( this, name, null, range, affectsData );\n\n\t\treturn this.model.markers.get( name );\n\t}\n\n\t/**\n\t * Adds, updates or refreshes a {@link module:engine/model/markercollection~Marker marker}. Marker is a named range, which tracks\n\t * changes in the document and updates its range automatically, when model tree changes. Still, it is possible to change the\n\t * marker's range directly using this method.\n\t *\n\t * As the first parameter you can set marker name or instance. If none of them is provided, new marker, with a unique\n\t * name is created and returned.\n\t *\n\t * As the second parameter you can set the new marker data or leave this parameter as empty which will just refresh\n\t * the marker by triggering downcast conversion for it. Refreshing the marker is useful when you want to change\n\t * the marker {@link module:engine/view/element~Element view element} without changing any marker data.\n\t *\n\t * \t\tlet isCommentActive = false;\n\t *\n\t * \t\tmodel.conversion.markerToHighlight( {\n\t * \t\t\tmodel: 'comment',\n\t *\t\t\tview: data => {\n\t *\t\t\t\tconst classes = [ 'comment-marker' ];\n\t *\n\t *\t\t\t\tif ( isCommentActive ) {\n\t *\t\t\t\t\tclasses.push( 'comment-marker--active' );\n\t *\t\t\t\t}\n\t *\n\t *\t\t\t\treturn { classes };\n\t *\t\t\t}\n\t * \t\t} );\n\t *\n\t * \t\t// Change the property that indicates if marker is displayed as active or not.\n\t * \t\tisCommentActive = true;\n\t *\n\t * \t\t// And refresh the marker to convert it with additional class.\n\t * \t\tmodel.change( writer => writer.updateMarker( 'comment' ) );\n\t *\n\t * The `options.usingOperation` parameter lets you change if the marker should be managed by operations or not. See\n\t * {@link module:engine/model/markercollection~Marker marker class description} to learn about the difference between\n\t * markers managed by operations and not-managed by operations. It is possible to change this option for an existing marker.\n\t *\n\t * The `options.affectsData` parameter, which defaults to `false`, allows you to define if a marker affects the data. It should be\n\t * `true` when the marker change changes the data returned by\n\t * the {@link module:core/editor/utils/dataapimixin~DataApi#getData `editor.getData()`} method.\n\t * When set to `true` it fires the {@link module:engine/model/document~Document#event:change:data `change:data`} event.\n\t * When set to `false` it fires the {@link module:engine/model/document~Document#event:change `change`} event.\n\t *\n\t * Update marker directly base on marker's name:\n\t *\n\t *\t\tupdateMarker( markerName, { range } );\n\t *\n\t * Update marker using operation:\n\t *\n\t *\t\tupdateMarker( marker, { range, usingOperation: true } );\n\t *\t\tupdateMarker( markerName, { range, usingOperation: true } );\n\t *\n\t * Change marker's option (start using operations to manage it):\n\t *\n\t *\t\tupdateMarker( marker, { usingOperation: true } );\n\t *\n\t * Change marker's option (inform the engine, that the marker does not affect the data anymore):\n\t *\n\t *\t\tupdateMarker( markerName, { affectsData: false } );\n\t *\n\t * @see module:engine/model/markercollection~Marker\n\t * @param {String|module:engine/model/markercollection~Marker} markerOrName Name of a marker to update, or a marker instance.\n\t * @param {Object} [options] If options object is not defined then marker will be refreshed by triggering\n\t * downcast conversion for this marker with the same data.\n\t * @param {module:engine/model/range~Range} [options.range] Marker range to update.\n\t * @param {Boolean} [options.usingOperation] Flag indicated whether the marker should be added by MarkerOperation.\n\t * See {@link module:engine/model/markercollection~Marker#managedUsingOperations}.\n\t * @param {Boolean} [options.affectsData] Flag indicating that the marker changes the editor data.\n\t */\n\tupdateMarker( markerOrName, options ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tconst markerName = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\n\t\tconst currentMarker = this.model.markers.get( markerName );\n\n\t\tif ( !currentMarker ) {\n\t\t\t/**\n\t\t\t * Marker with provided name does not exists.\n\t\t\t *\n\t\t\t * @error writer-updateMarker-marker-not-exists\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-updateMarker-marker-not-exists: Marker with provided name does not exists.', this );\n\t\t}\n\n\t\tif ( !options ) {\n\t\t\tthis.model.markers._refresh( currentMarker );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst hasUsingOperationDefined = typeof options.usingOperation == 'boolean';\n\t\tconst affectsDataDefined = typeof options.affectsData == 'boolean';\n\n\t\t// Use previously defined marker's affectsData if the property is not provided.\n\t\tconst affectsData = affectsDataDefined ? options.affectsData : currentMarker.affectsData;\n\n\t\tif ( !hasUsingOperationDefined && !options.range && !affectsDataDefined ) {\n\t\t\t/**\n\t\t\t * One of the options is required - provide range, usingOperations or affectsData.\n\t\t\t *\n\t\t\t * @error writer-updateMarker-wrong-options\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'writer-updateMarker-wrong-options: One of the options is required - provide range, usingOperations or affectsData.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tconst currentRange = currentMarker.getRange();\n\t\tconst updatedRange = options.range ? options.range : currentRange;\n\n\t\tif ( hasUsingOperationDefined && options.usingOperation !== currentMarker.managedUsingOperations ) {\n\t\t\t// The marker type is changed so it's necessary to create proper operations.\n\t\t\tif ( options.usingOperation ) {\n\t\t\t\t// If marker changes to a managed one treat this as synchronizing existing marker.\n\t\t\t\t// Create `MarkerOperation` with `oldRange` set to `null`, so reverse operation will remove the marker.\n\t\t\t\tapplyMarkerOperation( this, markerName, null, updatedRange, affectsData );\n\t\t\t} else {\n\t\t\t\t// If marker changes to a marker that do not use operations then we need to create additional operation\n\t\t\t\t// that removes that marker first.\n\t\t\t\tapplyMarkerOperation( this, markerName, currentRange, null, affectsData );\n\n\t\t\t\t// Although not managed the marker itself should stay in model and its range should be preserver or changed to passed range.\n\t\t\t\tthis.model.markers._set( markerName, updatedRange, undefined, affectsData );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Marker's type doesn't change so update it accordingly.\n\t\tif ( currentMarker.managedUsingOperations ) {\n\t\t\tapplyMarkerOperation( this, markerName, currentRange, updatedRange, affectsData );\n\t\t} else {\n\t\t\tthis.model.markers._set( markerName, updatedRange, undefined, affectsData );\n\t\t}\n\t}\n\n\t/**\n\t * Removes given {@link module:engine/model/markercollection~Marker marker} or marker with given name.\n\t * The marker is removed accordingly to how it has been created, so if the marker was created using operation,\n\t * it will be destroyed using operation.\n\t *\n\t * @param {module:engine/model/markercollection~Marker|String} markerOrName Marker or marker name to remove.\n\t */\n\tremoveMarker( markerOrName ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tconst name = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\n\n\t\tif ( !this.model.markers.has( name ) ) {\n\t\t\t/**\n\t\t\t * Trying to remove marker which does not exist.\n\t\t\t *\n\t\t\t * @error writer-removeMarker-no-marker\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-removeMarker-no-marker: Trying to remove marker which does not exist.', this );\n\t\t}\n\n\t\tconst marker = this.model.markers.get( name );\n\n\t\tif ( !marker.managedUsingOperations ) {\n\t\t\tthis.model.markers._remove( name );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldRange = marker.getRange();\n\n\t\tapplyMarkerOperation( this, name, oldRange, null, marker.affectsData );\n\t}\n\n\t/**\n\t * Sets the document's selection (ranges and direction) to the specified location based on the given\n\t * {@link module:engine/model/selection~Selectable selectable} or creates an empty selection if no arguments were passed.\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\twriter.setSelection( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\twriter.setSelection( ranges );\n\t *\n\t *\t\t// Sets selection to other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\twriter.setSelection( otherSelection );\n\t *\n\t *\t\t// Sets selection to the given document selection.\n\t *\t\tconst documentSelection = model.document.selection;\n\t *\t\twriter.setSelection( documentSelection );\n\t *\n\t *\t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPosition( root, path );\n\t *\t\twriter.setSelection( position );\n\t *\n\t *\t\t// Sets collapsed selection at the position of the given node and an offset.\n\t *\t\twriter.setSelection( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n \t * that element and ends after the last child of that element.\n\t *\n\t *\t\twriter.setSelection( paragraph, 'in' );\n\t *\n\t * Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\twriter.setSelection( paragraph, 'on' );\n\t *\n\t *\t\t// Removes all selection's ranges.\n\t *\t\twriter.setSelection( null );\n\t *\n\t * `Writer#setSelection()` allow passing additional options (`backward`) as the last argument.\n\t *\n\t *\t\t// Sets selection as backward.\n\t *\t\twriter.setSelection( range, { backward: true } );\n\t *\n\t * Throws `writer-incorrect-use` error when the writer is used outside the `change()` block.\n\t *\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t */\n\tsetSelection( selectable, placeOrOffset, options ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tthis.model.document.selection._setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Moves {@link module:engine/model/documentselection~DocumentSelection#focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as\n\t * {@link #createPositionAt `writer.createPositionAt()`} parameters.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tsetSelectionFocus( itemOrPosition, offset ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tthis.model.document.selection._setFocus( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Sets attribute(s) on the selection. If attribute with the same key already is set, it's value is overwritten.\n\t *\n\t * Using key and value pair:\n\t *\n\t * \twriter.setSelectionAttribute( 'italic', true );\n\t *\n\t * Using key-value object:\n\t *\n\t * \twriter.setSelectionAttribute( { italic: true, bold: false } );\n\t *\n\t * Using iterable object:\n\t *\n\t * \twriter.setSelectionAttribute( new Map( [ [ 'italic', true ] ] ) );\n\t *\n\t * @param {String|Object|Iterable.<*>} keyOrObjectOrIterable Key of the attribute to set\n\t * or object / iterable of key => value attribute pairs.\n\t * @param {*} [value] Attribute value.\n\t */\n\tsetSelectionAttribute( keyOrObjectOrIterable, value ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( typeof keyOrObjectOrIterable === 'string' ) {\n\t\t\tthis._setSelectionAttribute( keyOrObjectOrIterable, value );\n\t\t} else {\n\t\t\tfor ( const [ key, value ] of toMap( keyOrObjectOrIterable ) ) {\n\t\t\t\tthis._setSelectionAttribute( key, value );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes attribute(s) with given key(s) from the selection.\n\t *\n\t * Remove one attribute:\n\t *\n\t *\t\twriter.removeSelectionAttribute( 'italic' );\n\t *\n\t * Remove multiple attributes:\n\t *\n\t *\t\twriter.removeSelectionAttribute( [ 'italic', 'bold' ] );\n\t *\n\t * @param {String|Iterable.<String>} keyOrIterableOfKeys Key of the attribute to remove or an iterable of attribute keys to remove.\n\t */\n\tremoveSelectionAttribute( keyOrIterableOfKeys ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( typeof keyOrIterableOfKeys === 'string' ) {\n\t\t\tthis._removeSelectionAttribute( keyOrIterableOfKeys );\n\t\t} else {\n\t\t\tfor ( const key of keyOrIterableOfKeys ) {\n\t\t\t\tthis._removeSelectionAttribute( key );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Temporarily changes the {@link module:engine/model/documentselection~DocumentSelection#isGravityOverridden gravity}\n\t * of the selection from left to right.\n\t *\n\t * The gravity defines from which direction the selection inherits its attributes. If it's the default left gravity,\n\t * then the selection (after being moved by the user) inherits attributes from its left-hand side.\n\t * This method allows to temporarily override this behavior by forcing the gravity to the right.\n\t *\n\t * For the following model fragment:\n\t *\n\t *\t\t<$text bold=\"true\" linkHref=\"url\">bar[]</$text><$text bold=\"true\">biz</$text>\n\t *\n\t * * Default gravity: selection will have the `bold` and `linkHref` attributes.\n\t * * Overridden gravity: selection will have `bold` attribute.\n\t *\n\t * **Note**: It returns an unique identifier which is required to restore the gravity. It guarantees the symmetry\n\t * of the process.\n\t *\n\t * @returns {String} The unique id which allows restoring the gravity.\n\t */\n\toverrideSelectionGravity() {\n\t\treturn this.model.document.selection._overrideGravity();\n\t}\n\n\t/**\n\t * Restores {@link ~Writer#overrideSelectionGravity} gravity to default.\n\t *\n\t * Restoring the gravity is only possible using the unique identifier returned by\n\t * {@link ~Writer#overrideSelectionGravity}. Note that the gravity remains overridden as long as won't be restored\n\t * the same number of times it was overridden.\n\t *\n\t * @param {String} uid The unique id returned by {@link ~Writer#overrideSelectionGravity}.\n\t */\n\trestoreSelectionGravity( uid ) {\n\t\tthis.model.document.selection._restoreGravity( uid );\n\t}\n\n\t/**\n\t * @private\n\t * @param {String} key Key of the attribute to remove.\n\t * @param {*} value Attribute value.\n\t */\n\t_setSelectionAttribute( key, value ) {\n\t\tconst selection = this.model.document.selection;\n\n\t\t// Store attribute in parent element if the selection is collapsed in an empty node.\n\t\tif ( selection.isCollapsed && selection.anchor.parent.isEmpty ) {\n\t\t\tconst storeKey = DocumentSelection._getStoreAttributeKey( key );\n\n\t\t\tthis.setAttribute( storeKey, value, selection.anchor.parent );\n\t\t}\n\n\t\tselection._setAttribute( key, value );\n\t}\n\n\t/**\n\t * @private\n\t * @param {String} key Key of the attribute to remove.\n\t */\n\t_removeSelectionAttribute( key ) {\n\t\tconst selection = this.model.document.selection;\n\n\t\t// Remove stored attribute from parent element if the selection is collapsed in an empty node.\n\t\tif ( selection.isCollapsed && selection.anchor.parent.isEmpty ) {\n\t\t\tconst storeKey = DocumentSelection._getStoreAttributeKey( key );\n\n\t\t\tthis.removeAttribute( storeKey, selection.anchor.parent );\n\t\t}\n\n\t\tselection._removeAttribute( key );\n\t}\n\n\t/**\n\t * Throws `writer-detached-writer-tries-to-modify-model` error when the writer is used outside of the `change()` block.\n\t *\n\t * @private\n\t */\n\t_assertWriterUsedCorrectly() {\n\t\t/**\n\t\t * Trying to use a writer outside a {@link module:engine/model/model~Model#change `change()`} or\n\t\t * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()`} blocks.\n\t\t *\n\t\t * The writer can only be used inside these blocks which ensures that the model\n\t\t * can only be changed during such \"sessions\".\n\t\t *\n\t\t * @error writer-incorrect-use\n\t\t */\n\t\tif ( this.model._currentWriter !== this ) {\n\t\t\tthrow new CKEditorError( 'writer-incorrect-use: Trying to use a writer outside the change() block.', this );\n\t\t}\n\t}\n\n\t/**\n\t * For given action `type` and `positionOrRange` where the action happens, this function finds all affected markers\n\t * and applies a marker operation with the new marker range equal to the current range. Thanks to this, the marker range\n\t * can be later correctly processed during undo.\n\t *\n\t * @private\n\t * @param {'move'|'merge'} type Writer action type.\n\t * @param {module:engine/model/position~Position|module:engine/model/range~Range} positionOrRange Position or range\n\t * where the writer action happens.\n\t */\n\t_addOperationForAffectedMarkers( type, positionOrRange ) {\n\t\tfor ( const marker of this.model.markers ) {\n\t\t\tif ( !marker.managedUsingOperations ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst markerRange = marker.getRange();\n\t\t\tlet isAffected = false;\n\n\t\t\tif ( type === 'move' ) {\n\t\t\t\tisAffected =\n\t\t\t\t\tpositionOrRange.containsPosition( markerRange.start ) ||\n\t\t\t\t\tpositionOrRange.start.isEqual( markerRange.start ) ||\n\t\t\t\t\tpositionOrRange.containsPosition( markerRange.end ) ||\n\t\t\t\t\tpositionOrRange.end.isEqual( markerRange.end );\n\t\t\t} else {\n\t\t\t\t// if type === 'merge'.\n\t\t\t\tconst elementBefore = positionOrRange.nodeBefore;\n\t\t\t\tconst elementAfter = positionOrRange.nodeAfter;\n\n\t\t\t\t//               Start:  <p>Foo[</p><p>Bar]</p>\n\t\t\t\t//         After merge:  <p>Foo[Bar]</p>\n\t\t\t\t// After undoing split:  <p>Foo</p><p>[Bar]</p>     <-- incorrect, needs remembering for undo.\n\t\t\t\t//\n\t\t\t\tconst affectedInLeftElement = markerRange.start.parent == elementBefore && markerRange.start.isAtEnd;\n\n\t\t\t\t//               Start:  <p>[Foo</p><p>]Bar</p>\n\t\t\t\t//         After merge:  <p>[Foo]Bar</p>\n\t\t\t\t// After undoing split:  <p>[Foo]</p><p>Bar</p>     <-- incorrect, needs remembering for undo.\n\t\t\t\t//\n\t\t\t\tconst affectedInRightElement = markerRange.end.parent == elementAfter && markerRange.end.offset == 0;\n\n\t\t\t\t//               Start:  <p>[Foo</p>]<p>Bar</p>\n\t\t\t\t//         After merge:  <p>[Foo]Bar</p>\n\t\t\t\t// After undoing split:  <p>[Foo]</p><p>Bar</p>     <-- incorrect, needs remembering for undo.\n\t\t\t\t//\n\t\t\t\tconst affectedAfterLeftElement = markerRange.end.nodeAfter == elementAfter;\n\n\t\t\t\t//               Start:  <p>Foo</p>[<p>Bar]</p>\n\t\t\t\t//         After merge:  <p>Foo[Bar]</p>\n\t\t\t\t// After undoing split:  <p>Foo</p><p>[Bar]</p>     <-- incorrect, needs remembering for undo.\n\t\t\t\t//\n\t\t\t\tconst affectedBeforeRightElement = markerRange.start.nodeAfter == elementAfter;\n\n\t\t\t\tisAffected = affectedInLeftElement || affectedInRightElement || affectedAfterLeftElement || affectedBeforeRightElement;\n\t\t\t}\n\n\t\t\tif ( isAffected ) {\n\t\t\t\tthis.updateMarker( marker.name, { range: markerRange } );\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Sets given attribute to each node in given range. When attribute value is null then attribute will be removed.\n//\n// Because attribute operation needs to have the same attribute value on the whole range, this function splits\n// the range into smaller parts.\n//\n// Given `range` must be flat.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} key Attribute key.\n// @param {*} value Attribute new value.\n// @param {module:engine/model/range~Range} range Model range on which the attribute will be set.\nfunction setAttributeOnRange( writer, key, value, range ) {\n\tconst model = writer.model;\n\tconst doc = model.document;\n\n\t// Position of the last split, the beginning of the new range.\n\tlet lastSplitPosition = range.start;\n\n\t// Currently position in the scanning range. Because we need value after the position, it is not a current\n\t// position of the iterator but the previous one (we need to iterate one more time to get the value after).\n\tlet position;\n\n\t// Value before the currently position.\n\tlet valueBefore;\n\n\t// Value after the currently position.\n\tlet valueAfter;\n\n\tfor ( const val of range.getWalker( { shallow: true } ) ) {\n\t\tvalueAfter = val.item.getAttribute( key );\n\n\t\t// At the first run of the iterator the position in undefined. We also do not have a valueBefore, but\n\t\t// because valueAfter may be null, valueBefore may be equal valueAfter ( undefined == null ).\n\t\tif ( position && valueBefore != valueAfter ) {\n\t\t\t// if valueBefore == value there is nothing to change, so we add operation only if these values are different.\n\t\t\tif ( valueBefore != value ) {\n\t\t\t\taddOperation();\n\t\t\t}\n\n\t\t\tlastSplitPosition = position;\n\t\t}\n\n\t\tposition = val.nextPosition;\n\t\tvalueBefore = valueAfter;\n\t}\n\n\t// Because position in the loop is not the iterator position (see let position comment), the last position in\n\t// the while loop will be last but one position in the range. We need to check the last position manually.\n\tif ( position instanceof Position && position != lastSplitPosition && valueBefore != value ) {\n\t\taddOperation();\n\t}\n\n\tfunction addOperation() {\n\t\tconst range = new Range( lastSplitPosition, position );\n\t\tconst version = range.root.document ? doc.version : null;\n\t\tconst operation = new AttributeOperation( range, key, valueBefore, value, version );\n\n\t\twriter.batch.addOperation( operation );\n\t\tmodel.applyOperation( operation );\n\t}\n}\n\n// Sets given attribute to the given node. When attribute value is null then attribute will be removed.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} key Attribute key.\n// @param {*} value Attribute new value.\n// @param {module:engine/model/item~Item} item Model item on which the attribute will be set.\nfunction setAttributeOnItem( writer, key, value, item ) {\n\tconst model = writer.model;\n\tconst doc = model.document;\n\tconst previousValue = item.getAttribute( key );\n\tlet range, operation;\n\n\tif ( previousValue != value ) {\n\t\tconst isRootChanged = item.root === item;\n\n\t\tif ( isRootChanged ) {\n\t\t\t// If we change attributes of root element, we have to use `RootAttributeOperation`.\n\t\t\tconst version = item.document ? doc.version : null;\n\n\t\t\toperation = new RootAttributeOperation( item, key, previousValue, value, version );\n\t\t} else {\n\t\t\trange = new Range( Position._createBefore( item ), writer.createPositionAfter( item ) );\n\n\t\t\tconst version = range.root.document ? doc.version : null;\n\n\t\t\toperation = new AttributeOperation( range, key, previousValue, value, version );\n\t\t}\n\n\t\twriter.batch.addOperation( operation );\n\t\tmodel.applyOperation( operation );\n\t}\n}\n\n// Creates and applies marker operation to {@link module:engine/model/operation/operation~Operation operation}.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} name Marker name.\n// @param {module:engine/model/range~Range} oldRange Marker range before the change.\n// @param {module:engine/model/range~Range} newRange Marker range after the change.\n// @param {Boolean} affectsData\nfunction applyMarkerOperation( writer, name, oldRange, newRange, affectsData ) {\n\tconst model = writer.model;\n\tconst doc = model.document;\n\n\tconst operation = new MarkerOperation( name, oldRange, newRange, model.markers, affectsData, doc.version );\n\n\twriter.batch.addOperation( operation );\n\tmodel.applyOperation( operation );\n}\n\n// Creates `MoveOperation` or `DetachOperation` that removes `howMany` nodes starting from `position`.\n// The operation will be applied on given model instance and added to given operation instance.\n//\n// @private\n// @param {module:engine/model/position~Position} position Position from which nodes are removed.\n// @param {Number} howMany Number of nodes to remove.\n// @param {Batch} batch Batch to which the operation will be added.\n// @param {module:engine/model/model~Model} model Model instance on which operation will be applied.\nfunction applyRemoveOperation( position, howMany, batch, model ) {\n\tlet operation;\n\n\tif ( position.root.document ) {\n\t\tconst doc = model.document;\n\t\tconst graveyardPosition = new Position( doc.graveyard, [ 0 ] );\n\n\t\toperation = new MoveOperation( position, howMany, graveyardPosition, doc.version );\n\t} else {\n\t\toperation = new DetachOperation( position, howMany );\n\t}\n\n\tbatch.addOperation( operation );\n\tmodel.applyOperation( operation );\n}\n\n// Returns `true` if both root elements are the same element or both are documents root elements.\n//\n// Elements in the same tree can be moved (for instance you can move element form one documents root to another, or\n// within the same document fragment), but when element supposed to be moved from document fragment to the document, or\n// to another document it should be removed and inserted to avoid problems with OT. This is because features like undo or\n// collaboration may track changes on the document but ignore changes on detached fragments and should not get\n// unexpected `move` operation.\nfunction isSameTree( rootA, rootB ) {\n\t// If it is the same root this is the same tree.\n\tif ( rootA === rootB ) {\n\t\treturn true;\n\t}\n\n\t// If both roots are documents root it is operation within the document what we still treat as the same tree.\n\tif ( rootA instanceof RootElement && rootB instanceof RootElement ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/differ\n */\n\nimport Position from './position';\nimport Range from './range';\n\n/**\n * Calculates the difference between two model states.\n *\n * Receives operations that are to be applied on the model document. Marks parts of the model document tree which\n * are changed and saves the state of these elements before the change. Then, it compares saved elements with the\n * changed elements, after all changes are applied on the model document. Calculates the diff between saved\n * elements and new ones and returns a change set.\n */\nexport default class Differ {\n\t/**\n\t * Creates a `Differ` instance.\n\t *\n\t * @param {module:engine/model/markercollection~MarkerCollection} markerCollection Model's marker collection.\n\t */\n\tconstructor( markerCollection ) {\n\t\t/**\n\t\t * Reference to the model's marker collection.\n\t\t *\n\t\t * @private\n\t\t * @type {module:engine/model/markercollection~MarkerCollection}\n\t\t */\n\t\tthis._markerCollection = markerCollection;\n\n\t\t/**\n\t\t * A map that stores changes that happened in a given element.\n\t\t *\n\t\t * The keys of the map are references to the model elements.\n\t\t * The values of the map are arrays with changes that were done on this element.\n\t\t *\n\t\t * @private\n\t\t * @type {Map}\n\t\t */\n\t\tthis._changesInElement = new Map();\n\n\t\t/**\n\t\t * A map that stores \"element's children snapshots\". A snapshot is representing children of a given element before\n\t\t * the first change was applied on that element. Snapshot items are objects with two properties: `name`,\n\t\t * containing the element name (or `'$text'` for a text node) and `attributes` which is a map of the node's attributes.\n\t\t *\n\t\t * @private\n\t\t * @type {Map}\n\t\t */\n\t\tthis._elementSnapshots = new Map();\n\n\t\t/**\n\t\t * A map that stores all changed markers.\n\t\t *\n\t\t * The keys of the map are marker names.\n\t\t * The values of the map are objects with the `oldRange` and `newRange` properties. They store the marker range\n\t\t * state before and after the change.\n\t\t *\n\t\t * @private\n\t\t * @type {Map}\n\t\t */\n\t\tthis._changedMarkers = new Map();\n\n\t\t/**\n\t\t * Stores the number of changes that were processed. Used to order the changes chronologically. It is important\n\t\t * when changes are sorted.\n\t\t *\n\t\t * @private\n\t\t * @type {Number}\n\t\t */\n\t\tthis._changeCount = 0;\n\n\t\t/**\n\t\t * For efficiency purposes, `Differ` stores the change set returned by the differ after {@link #getChanges} call.\n\t\t * Cache is reset each time a new operation is buffered. If the cache has not been reset, {@link #getChanges} will\n\t\t * return the cached value instead of calculating it again.\n\t\t *\n\t\t * This property stores those changes that did not take place in graveyard root.\n\t\t *\n\t\t * @private\n\t\t * @type {Array.<Object>|null}\n\t\t */\n\t\tthis._cachedChanges = null;\n\n\t\t/**\n\t\t * For efficiency purposes, `Differ` stores the change set returned by the differ after the {@link #getChanges} call.\n\t\t * The cache is reset each time a new operation is buffered. If the cache has not been reset, {@link #getChanges} will\n\t\t * return the cached value instead of calculating it again.\n\t\t *\n\t\t * This property stores all changes evaluated by `Differ`, including those that took place in the graveyard.\n\t\t *\n\t\t * @private\n\t\t * @type {Array.<Object>|null}\n\t\t */\n\t\tthis._cachedChangesWithGraveyard = null;\n\t}\n\n\t/**\n\t * Informs whether there are any changes buffered in `Differ`.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this._changesInElement.size == 0 && this._changedMarkers.size == 0;\n\t}\n\n\t/**\n\t * Marks given `item` in differ to be \"refreshed\". It means that the item will be marked as removed and inserted in the differ changes\n\t * set, so it will be effectively re-converted when differ changes will be handled by a dispatcher.\n\t *\n\t * @param {module:engine/model/item~Item} item Item to refresh.\n\t */\n\trefreshItem( item ) {\n\t\tif ( this._isInInsertedElement( item.parent ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._markRemove( item.parent, item.startOffset, item.offsetSize );\n\t\tthis._markInsert( item.parent, item.startOffset, item.offsetSize );\n\n\t\tconst range = Range._createOn( item );\n\n\t\tfor ( const marker of this._markerCollection.getMarkersIntersectingRange( range ) ) {\n\t\t\tconst markerRange = marker.getRange();\n\n\t\t\tthis.bufferMarkerChange( marker.name, markerRange, markerRange, marker.affectsData );\n\t\t}\n\n\t\t// Clear cache after each buffered operation as it is no longer valid.\n\t\tthis._cachedChanges = null;\n\t}\n\n\t/**\n\t * Buffers the given operation. An operation has to be buffered before it is executed.\n\t *\n\t * Operation type is checked and it is checked which nodes it will affect. These nodes are then stored in `Differ`\n\t * in the state before the operation is executed.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation An operation to buffer.\n\t */\n\tbufferOperation( operation ) {\n\t\t// Below we take an operation, check its type, then use its parameters in marking (private) methods.\n\t\t// The general rule is to not mark elements inside inserted element. All inserted elements are re-rendered.\n\t\t// Marking changes in them would cause a \"double\" changing then.\n\t\t//\n\t\tswitch ( operation.type ) {\n\t\t\tcase 'insert': {\n\t\t\t\tif ( this._isInInsertedElement( operation.position.parent ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._markInsert( operation.position.parent, operation.position.offset, operation.nodes.maxOffset );\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'addAttribute':\n\t\t\tcase 'removeAttribute':\n\t\t\tcase 'changeAttribute': {\n\t\t\t\tfor ( const item of operation.range.getItems( { shallow: true } ) ) {\n\t\t\t\t\tif ( this._isInInsertedElement( item.parent ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._markAttribute( item );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'remove':\n\t\t\tcase 'move':\n\t\t\tcase 'reinsert': {\n\t\t\t\t// When range is moved to the same position then not mark it as a change.\n\t\t\t\t// See: https://github.com/ckeditor/ckeditor5-engine/issues/1664.\n\t\t\t\tif (\n\t\t\t\t\toperation.sourcePosition.isEqual( operation.targetPosition ) ||\n\t\t\t\t\toperation.sourcePosition.getShiftedBy( operation.howMany ).isEqual( operation.targetPosition )\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst sourceParentInserted = this._isInInsertedElement( operation.sourcePosition.parent );\n\t\t\t\tconst targetParentInserted = this._isInInsertedElement( operation.targetPosition.parent );\n\n\t\t\t\tif ( !sourceParentInserted ) {\n\t\t\t\t\tthis._markRemove( operation.sourcePosition.parent, operation.sourcePosition.offset, operation.howMany );\n\t\t\t\t}\n\n\t\t\t\tif ( !targetParentInserted ) {\n\t\t\t\t\tthis._markInsert( operation.targetPosition.parent, operation.getMovedRangeStart().offset, operation.howMany );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'rename': {\n\t\t\t\tif ( this._isInInsertedElement( operation.position.parent ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._markRemove( operation.position.parent, operation.position.offset, 1 );\n\t\t\t\tthis._markInsert( operation.position.parent, operation.position.offset, 1 );\n\n\t\t\t\tconst range = Range._createFromPositionAndShift( operation.position, 1 );\n\n\t\t\t\tfor ( const marker of this._markerCollection.getMarkersIntersectingRange( range ) ) {\n\t\t\t\t\tconst markerRange = marker.getRange();\n\n\t\t\t\t\tthis.bufferMarkerChange( marker.name, markerRange, markerRange, marker.affectsData );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'split': {\n\t\t\t\tconst splitElement = operation.splitPosition.parent;\n\n\t\t\t\t// Mark that children of the split element were removed.\n\t\t\t\tif ( !this._isInInsertedElement( splitElement ) ) {\n\t\t\t\t\tthis._markRemove( splitElement, operation.splitPosition.offset, operation.howMany );\n\t\t\t\t}\n\n\t\t\t\t// Mark that the new element (split copy) was inserted.\n\t\t\t\tif ( !this._isInInsertedElement( operation.insertionPosition.parent ) ) {\n\t\t\t\t\tthis._markInsert( operation.insertionPosition.parent, operation.insertionPosition.offset, 1 );\n\t\t\t\t}\n\n\t\t\t\t// If the split took the element from the graveyard, mark that the element from the graveyard was removed.\n\t\t\t\tif ( operation.graveyardPosition ) {\n\t\t\t\t\tthis._markRemove( operation.graveyardPosition.parent, operation.graveyardPosition.offset, 1 );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'merge': {\n\t\t\t\t// Mark that the merged element was removed.\n\t\t\t\tconst mergedElement = operation.sourcePosition.parent;\n\n\t\t\t\tif ( !this._isInInsertedElement( mergedElement.parent ) ) {\n\t\t\t\t\tthis._markRemove( mergedElement.parent, mergedElement.startOffset, 1 );\n\t\t\t\t}\n\n\t\t\t\t// Mark that the merged element was inserted into graveyard.\n\t\t\t\tconst graveyardParent = operation.graveyardPosition.parent;\n\n\t\t\t\tthis._markInsert( graveyardParent, operation.graveyardPosition.offset, 1 );\n\n\t\t\t\t// Mark that children of merged element were inserted at new parent.\n\t\t\t\tconst mergedIntoElement = operation.targetPosition.parent;\n\n\t\t\t\tif ( !this._isInInsertedElement( mergedIntoElement ) ) {\n\t\t\t\t\tthis._markInsert( mergedIntoElement, operation.targetPosition.offset, mergedElement.maxOffset );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Clear cache after each buffered operation as it is no longer valid.\n\t\tthis._cachedChanges = null;\n\t}\n\n\t/**\n\t * Buffers a marker change.\n\t *\n\t * @param {String} markerName The name of the marker that changed.\n\t * @param {module:engine/model/range~Range|null} oldRange Marker range before the change or `null` if the marker has just\n\t * been created.\n\t * @param {module:engine/model/range~Range|null} newRange Marker range after the change or `null` if the marker was removed.\n\t * @param {Boolean} affectsData Flag indicating whether marker affects the editor data.\n\t */\n\tbufferMarkerChange( markerName, oldRange, newRange, affectsData ) {\n\t\tconst buffered = this._changedMarkers.get( markerName );\n\n\t\tif ( !buffered ) {\n\t\t\tthis._changedMarkers.set( markerName, {\n\t\t\t\toldRange,\n\t\t\t\tnewRange,\n\t\t\t\taffectsData\n\t\t\t} );\n\t\t} else {\n\t\t\tbuffered.newRange = newRange;\n\t\t\tbuffered.affectsData = affectsData;\n\n\t\t\tif ( buffered.oldRange == null && buffered.newRange == null ) {\n\t\t\t\t// The marker is going to be removed (`newRange == null`) but it did not exist before the first buffered change\n\t\t\t\t// (`buffered.oldRange == null`). In this case, do not keep the marker in buffer at all.\n\t\t\t\tthis._changedMarkers.delete( markerName );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns all markers that should be removed as a result of buffered changes.\n\t *\n\t * @returns {Array.<Object>} Markers to remove. Each array item is an object containing the `name` and `range` properties.\n\t */\n\tgetMarkersToRemove() {\n\t\tconst result = [];\n\n\t\tfor ( const [ name, change ] of this._changedMarkers ) {\n\t\t\tif ( change.oldRange != null ) {\n\t\t\t\tresult.push( { name, range: change.oldRange } );\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Returns all markers which should be added as a result of buffered changes.\n\t *\n\t * @returns {Array.<Object>} Markers to add. Each array item is an object containing the `name` and `range` properties.\n\t */\n\tgetMarkersToAdd() {\n\t\tconst result = [];\n\n\t\tfor ( const [ name, change ] of this._changedMarkers ) {\n\t\t\tif ( change.newRange != null ) {\n\t\t\t\tresult.push( { name, range: change.newRange } );\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Returns all markers which changed.\n\t *\n\t * @returns {Array.<Object>}\n\t */\n\tgetChangedMarkers() {\n\t\treturn Array.from( this._changedMarkers ).map( item => (\n\t\t\t{\n\t\t\t\tname: item[ 0 ],\n\t\t\t\tdata: {\n\t\t\t\t\toldRange: item[ 1 ].oldRange,\n\t\t\t\t\tnewRange: item[ 1 ].newRange\n\t\t\t\t}\n\t\t\t}\n\t\t) );\n\t}\n\n\t/**\n\t * Checks whether some of the buffered changes affect the editor data.\n\t *\n\t * Types of changes which affect the editor data:\n\t *\n\t * * model structure changes,\n\t * * attribute changes,\n\t * * changes of markers which were defined as `affectingData`.\n\t *\n\t * @returns {Boolean}\n\t */\n\thasDataChanges() {\n\t\tfor ( const [ , change ] of this._changedMarkers ) {\n\t\t\tif ( change.affectsData ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// If markers do not affect the data, check whether there are some changes in elements.\n\t\treturn this._changesInElement.size > 0;\n\t}\n\n\t/**\n\t * Calculates the diff between the old model tree state (the state before the first buffered operations since the last {@link #reset}\n\t * call) and the new model tree state (actual one). It should be called after all buffered operations are executed.\n\t *\n\t * The diff set is returned as an array of diff items, each describing a change done on the model. The items are sorted by\n\t * the position on which the change happened. If a position {@link module:engine/model/position~Position#isBefore is before}\n\t * another one, it will be on an earlier index in the diff set.\n\t *\n\t * Because calculating the diff is a costly operation, the result is cached. If no new operation was buffered since the\n\t * previous {@link #getChanges} call, the next call will return the cached value.\n\t *\n\t * @param {Object} options Additional options.\n\t * @param {Boolean} [options.includeChangesInGraveyard=false] If set to `true`, also changes that happened\n\t * in the graveyard root will be returned. By default, changes in the graveyard root are not returned.\n\t * @returns {Array.<Object>} Diff between the old and the new model tree state.\n\t */\n\tgetChanges( options = { includeChangesInGraveyard: false } ) {\n\t\t// If there are cached changes, just return them instead of calculating changes again.\n\t\tif ( this._cachedChanges ) {\n\t\t\tif ( options.includeChangesInGraveyard ) {\n\t\t\t\treturn this._cachedChangesWithGraveyard.slice();\n\t\t\t} else {\n\t\t\t\treturn this._cachedChanges.slice();\n\t\t\t}\n\t\t}\n\n\t\t// Will contain returned results.\n\t\tconst diffSet = [];\n\n\t\t// Check all changed elements.\n\t\tfor ( const element of this._changesInElement.keys() ) {\n\t\t\t// Get changes for this element and sort them.\n\t\t\tconst changes = this._changesInElement.get( element ).sort( ( a, b ) => {\n\t\t\t\tif ( a.offset === b.offset ) {\n\t\t\t\t\tif ( a.type != b.type ) {\n\t\t\t\t\t\t// If there are multiple changes at the same position, \"remove\" change should be first.\n\t\t\t\t\t\t// If the order is different, for example, we would first add some nodes and then removed them\n\t\t\t\t\t\t// (instead of the nodes that we should remove).\n\t\t\t\t\t\treturn a.type == 'remove' ? -1 : 1;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn a.offset < b.offset ? -1 : 1;\n\t\t\t} );\n\n\t\t\t// Get children of this element before any change was applied on it.\n\t\t\tconst snapshotChildren = this._elementSnapshots.get( element );\n\t\t\t// Get snapshot of current element's children.\n\t\t\tconst elementChildren = _getChildrenSnapshot( element.getChildren() );\n\n\t\t\t// Generate actions basing on changes done on element.\n\t\t\tconst actions = _generateActionsFromChanges( snapshotChildren.length, changes );\n\n\t\t\tlet i = 0; // Iterator in `elementChildren` array -- iterates through current children of element.\n\t\t\tlet j = 0; // Iterator in `snapshotChildren` array -- iterates through old children of element.\n\n\t\t\t// Process every action.\n\t\t\tfor ( const action of actions ) {\n\t\t\t\tif ( action === 'i' ) {\n\t\t\t\t\t// Generate diff item for this element and insert it into the diff set.\n\t\t\t\t\tdiffSet.push( this._getInsertDiff( element, i, elementChildren[ i ].name ) );\n\n\t\t\t\t\ti++;\n\t\t\t\t} else if ( action === 'r' ) {\n\t\t\t\t\t// Generate diff item for this element and insert it into the diff set.\n\t\t\t\t\tdiffSet.push( this._getRemoveDiff( element, i, snapshotChildren[ j ].name ) );\n\n\t\t\t\t\tj++;\n\t\t\t\t} else if ( action === 'a' ) {\n\t\t\t\t\t// Take attributes from saved and current children.\n\t\t\t\t\tconst elementAttributes = elementChildren[ i ].attributes;\n\t\t\t\t\tconst snapshotAttributes = snapshotChildren[ j ].attributes;\n\t\t\t\t\tlet range;\n\n\t\t\t\t\tif ( elementChildren[ i ].name == '$text' ) {\n\t\t\t\t\t\trange = new Range( Position._createAt( element, i ), Position._createAt( element, i + 1 ) );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst index = element.offsetToIndex( i );\n\t\t\t\t\t\trange = new Range( Position._createAt( element, i ), Position._createAt( element.getChild( index ), 0 ) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Generate diff items for this change (there might be multiple attributes changed and\n\t\t\t\t\t// there is a single diff for each of them) and insert them into the diff set.\n\t\t\t\t\tdiffSet.push( ...this._getAttributesDiff( range, snapshotAttributes, elementAttributes ) );\n\n\t\t\t\t\ti++;\n\t\t\t\t\tj++;\n\t\t\t\t} else {\n\t\t\t\t\t// `action` is 'equal'. Child not changed.\n\t\t\t\t\ti++;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Then, sort the changes by the position (change at position before other changes is first).\n\t\tdiffSet.sort( ( a, b ) => {\n\t\t\t// If the change is in different root, we don't care much, but we'd like to have all changes in given\n\t\t\t// root \"together\" in the array. So let's just sort them by the root name. It does not matter which root\n\t\t\t// will be processed first.\n\t\t\tif ( a.position.root != b.position.root ) {\n\t\t\t\treturn a.position.root.rootName < b.position.root.rootName ? -1 : 1;\n\t\t\t}\n\n\t\t\t// If change happens at the same position...\n\t\t\tif ( a.position.isEqual( b.position ) ) {\n\t\t\t\t// Keep chronological order of operations.\n\t\t\t\treturn a.changeCount - b.changeCount;\n\t\t\t}\n\n\t\t\t// If positions differ, position \"on the left\" should be earlier in the result.\n\t\t\treturn a.position.isBefore( b.position ) ? -1 : 1;\n\t\t} );\n\n\t\t// Glue together multiple changes (mostly on text nodes).\n\t\tfor ( let i = 1; i < diffSet.length; i++ ) {\n\t\t\tconst prevDiff = diffSet[ i - 1 ];\n\t\t\tconst thisDiff = diffSet[ i ];\n\n\t\t\t// Glue remove changes if they happen on text on same position.\n\t\t\tconst isConsecutiveTextRemove =\n\t\t\t\tprevDiff.type == 'remove' && thisDiff.type == 'remove' &&\n\t\t\t\tprevDiff.name == '$text' && thisDiff.name == '$text' &&\n\t\t\t\tprevDiff.position.isEqual( thisDiff.position );\n\n\t\t\t// Glue insert changes if they happen on text on consecutive fragments.\n\t\t\tconst isConsecutiveTextAdd =\n\t\t\t\tprevDiff.type == 'insert' && thisDiff.type == 'insert' &&\n\t\t\t\tprevDiff.name == '$text' && thisDiff.name == '$text' &&\n\t\t\t\tprevDiff.position.parent == thisDiff.position.parent &&\n\t\t\t\tprevDiff.position.offset + prevDiff.length == thisDiff.position.offset;\n\n\t\t\t// Glue attribute changes if they happen on consecutive fragments and have same key, old value and new value.\n\t\t\tconst isConsecutiveAttributeChange =\n\t\t\t\tprevDiff.type == 'attribute' && thisDiff.type == 'attribute' &&\n\t\t\t\tprevDiff.position.parent == thisDiff.position.parent &&\n\t\t\t\tprevDiff.range.isFlat && thisDiff.range.isFlat &&\n\t\t\t\tprevDiff.position.offset + prevDiff.length == thisDiff.position.offset &&\n\t\t\t\tprevDiff.attributeKey == thisDiff.attributeKey &&\n\t\t\t\tprevDiff.attributeOldValue == thisDiff.attributeOldValue &&\n\t\t\t\tprevDiff.attributeNewValue == thisDiff.attributeNewValue;\n\n\t\t\tif ( isConsecutiveTextRemove || isConsecutiveTextAdd || isConsecutiveAttributeChange ) {\n\t\t\t\tdiffSet[ i - 1 ].length++;\n\n\t\t\t\tif ( isConsecutiveAttributeChange ) {\n\t\t\t\t\tdiffSet[ i - 1 ].range.end = diffSet[ i - 1 ].range.end.getShiftedBy( 1 );\n\t\t\t\t}\n\n\t\t\t\tdiffSet.splice( i, 1 );\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\t// Remove `changeCount` property from diff items. It is used only for sorting and is internal thing.\n\t\tfor ( const item of diffSet ) {\n\t\t\tdelete item.changeCount;\n\n\t\t\tif ( item.type == 'attribute' ) {\n\t\t\t\tdelete item.position;\n\t\t\t\tdelete item.length;\n\t\t\t}\n\t\t}\n\n\t\tthis._changeCount = 0;\n\n\t\t// Cache changes.\n\t\tthis._cachedChangesWithGraveyard = diffSet.slice();\n\t\tthis._cachedChanges = diffSet.slice().filter( _changesInGraveyardFilter );\n\n\t\tif ( options.includeChangesInGraveyard ) {\n\t\t\treturn this._cachedChangesWithGraveyard;\n\t\t} else {\n\t\t\treturn this._cachedChanges;\n\t\t}\n\t}\n\n\t/**\n\t * Resets `Differ`. Removes all buffered changes.\n\t */\n\treset() {\n\t\tthis._changesInElement.clear();\n\t\tthis._elementSnapshots.clear();\n\t\tthis._changedMarkers.clear();\n\t\tthis._cachedChanges = null;\n\t}\n\n\t/**\n\t * Saves and handles an insert change.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent\n\t * @param {Number} offset\n\t * @param {Number} howMany\n\t */\n\t_markInsert( parent, offset, howMany ) {\n\t\tconst changeItem = { type: 'insert', offset, howMany, count: this._changeCount++ };\n\n\t\tthis._markChange( parent, changeItem );\n\t}\n\n\t/**\n\t * Saves and handles a remove change.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent\n\t * @param {Number} offset\n\t * @param {Number} howMany\n\t */\n\t_markRemove( parent, offset, howMany ) {\n\t\tconst changeItem = { type: 'remove', offset, howMany, count: this._changeCount++ };\n\n\t\tthis._markChange( parent, changeItem );\n\n\t\tthis._removeAllNestedChanges( parent, offset, howMany );\n\t}\n\n\t/**\n\t * Saves and handles an attribute change.\n\t *\n\t * @private\n\t * @param {module:engine/model/item~Item} item\n\t */\n\t_markAttribute( item ) {\n\t\tconst changeItem = { type: 'attribute', offset: item.startOffset, howMany: item.offsetSize, count: this._changeCount++ };\n\n\t\tthis._markChange( item.parent, changeItem );\n\t}\n\n\t/**\n\t * Saves and handles a model change.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent\n\t * @param {Object} changeItem\n\t */\n\t_markChange( parent, changeItem ) {\n\t\t// First, make a snapshot of this parent's children (it will be made only if it was not made before).\n\t\tthis._makeSnapshot( parent );\n\n\t\t// Then, get all changes that already were done on the element (empty array if this is the first change).\n\t\tconst changes = this._getChangesForElement( parent );\n\n\t\t// Then, look through all the changes, and transform them or the new change.\n\t\tthis._handleChange( changeItem, changes );\n\n\t\t// Add the new change.\n\t\tchanges.push( changeItem );\n\n\t\t// Remove incorrect changes. During transformation some change might be, for example, included in another.\n\t\t// In that case, the change will have `howMany` property set to `0` or less. We need to remove those changes.\n\t\tfor ( let i = 0; i < changes.length; i++ ) {\n\t\t\tif ( changes[ i ].howMany < 1 ) {\n\t\t\t\tchanges.splice( i, 1 );\n\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets an array of changes that have already been saved for a given element.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} element\n\t * @returns {Array.<Object>}\n\t */\n\t_getChangesForElement( element ) {\n\t\tlet changes;\n\n\t\tif ( this._changesInElement.has( element ) ) {\n\t\t\tchanges = this._changesInElement.get( element );\n\t\t} else {\n\t\t\tchanges = [];\n\n\t\t\tthis._changesInElement.set( element, changes );\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\t/**\n\t * Saves a children snapshot for a given element.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} element\n\t */\n\t_makeSnapshot( element ) {\n\t\tif ( !this._elementSnapshots.has( element ) ) {\n\t\t\tthis._elementSnapshots.set( element, _getChildrenSnapshot( element.getChildren() ) );\n\t\t}\n\t}\n\n\t/**\n\t * For a given newly saved change, compares it with a change already done on the element and modifies the incoming\n\t * change and/or the old change.\n\t *\n\t * @private\n\t * @param {Object} inc Incoming (new) change.\n\t * @param {Array.<Object>} changes An array containing all the changes done on that element.\n\t */\n\t_handleChange( inc, changes ) {\n\t\t// We need a helper variable that will store how many nodes are to be still handled for this change item.\n\t\t// `nodesToHandle` (how many nodes still need to be handled) and `howMany` (how many nodes were affected)\n\t\t// needs to be differentiated.\n\t\t//\n\t\t// This comes up when there are multiple changes that are affected by `inc` change item.\n\t\t//\n\t\t// For example: assume two insert changes: `{ offset: 2, howMany: 1 }` and `{ offset: 5, howMany: 1 }`.\n\t\t// Assume that `inc` change is remove `{ offset: 2, howMany: 2, nodesToHandle: 2 }`.\n\t\t//\n\t\t// Then, we:\n\t\t// - \"forget\" about first insert change (it is \"eaten\" by remove),\n\t\t// - because of that, at the end we will want to remove only one node (`nodesToHandle = 1`),\n\t\t// - but still we have to change offset of the second insert change from `5` to `3`!\n\t\t//\n\t\t// So, `howMany` does not change throughout items transformation and keeps information about how many nodes were affected,\n\t\t// while `nodesToHandle` means how many nodes need to be handled after the change item is transformed by other changes.\n\t\tinc.nodesToHandle = inc.howMany;\n\n\t\tfor ( const old of changes ) {\n\t\t\tconst incEnd = inc.offset + inc.howMany;\n\t\t\tconst oldEnd = old.offset + old.howMany;\n\n\t\t\tif ( inc.type == 'insert' ) {\n\t\t\t\tif ( old.type == 'insert' ) {\n\t\t\t\t\tif ( inc.offset <= old.offset ) {\n\t\t\t\t\t\told.offset += inc.howMany;\n\t\t\t\t\t} else if ( inc.offset < oldEnd ) {\n\t\t\t\t\t\told.howMany += inc.nodesToHandle;\n\t\t\t\t\t\tinc.nodesToHandle = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'remove' ) {\n\t\t\t\t\tif ( inc.offset < old.offset ) {\n\t\t\t\t\t\told.offset += inc.howMany;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'attribute' ) {\n\t\t\t\t\tif ( inc.offset <= old.offset ) {\n\t\t\t\t\t\told.offset += inc.howMany;\n\t\t\t\t\t} else if ( inc.offset < oldEnd ) {\n\t\t\t\t\t\t// This case is more complicated, because attribute change has to be split into two.\n\t\t\t\t\t\t// Example (assume that uppercase and lowercase letters mean different attributes):\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// initial state:\t\tabcxyz\n\t\t\t\t\t\t// attribute change:\taBCXYz\n\t\t\t\t\t\t// incoming insert:\t\taBCfooXYz\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// Change ranges cannot intersect because each item has to be described exactly (it was either\n\t\t\t\t\t\t// not changed, inserted, removed, or its attribute was changed). That's why old attribute\n\t\t\t\t\t\t// change has to be split and both parts has to be handled separately from now on.\n\t\t\t\t\t\tconst howMany = old.howMany;\n\n\t\t\t\t\t\told.howMany = inc.offset - old.offset;\n\n\t\t\t\t\t\t// Add the second part of attribute change to the beginning of processed array so it won't\n\t\t\t\t\t\t// be processed again in this loop.\n\t\t\t\t\t\tchanges.unshift( {\n\t\t\t\t\t\t\ttype: 'attribute',\n\t\t\t\t\t\t\toffset: incEnd,\n\t\t\t\t\t\t\thowMany: howMany - old.howMany,\n\t\t\t\t\t\t\tcount: this._changeCount++\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( inc.type == 'remove' ) {\n\t\t\t\tif ( old.type == 'insert' ) {\n\t\t\t\t\tif ( incEnd <= old.offset ) {\n\t\t\t\t\t\told.offset -= inc.howMany;\n\t\t\t\t\t} else if ( incEnd <= oldEnd ) {\n\t\t\t\t\t\tif ( inc.offset < old.offset ) {\n\t\t\t\t\t\t\tconst intersectionLength = incEnd - old.offset;\n\n\t\t\t\t\t\t\told.offset = inc.offset;\n\n\t\t\t\t\t\t\told.howMany -= intersectionLength;\n\t\t\t\t\t\t\tinc.nodesToHandle -= intersectionLength;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\told.howMany -= inc.nodesToHandle;\n\t\t\t\t\t\t\tinc.nodesToHandle = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ( inc.offset <= old.offset ) {\n\t\t\t\t\t\t\tinc.nodesToHandle -= old.howMany;\n\t\t\t\t\t\t\told.howMany = 0;\n\t\t\t\t\t\t} else if ( inc.offset < oldEnd ) {\n\t\t\t\t\t\t\tconst intersectionLength = oldEnd - inc.offset;\n\n\t\t\t\t\t\t\told.howMany -= intersectionLength;\n\t\t\t\t\t\t\tinc.nodesToHandle -= intersectionLength;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'remove' ) {\n\t\t\t\t\tif ( incEnd <= old.offset ) {\n\t\t\t\t\t\told.offset -= inc.howMany;\n\t\t\t\t\t} else if ( inc.offset < old.offset ) {\n\t\t\t\t\t\tinc.nodesToHandle += old.howMany;\n\t\t\t\t\t\told.howMany = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'attribute' ) {\n\t\t\t\t\tif ( incEnd <= old.offset ) {\n\t\t\t\t\t\told.offset -= inc.howMany;\n\t\t\t\t\t} else if ( inc.offset < old.offset ) {\n\t\t\t\t\t\tconst intersectionLength = incEnd - old.offset;\n\n\t\t\t\t\t\told.offset = inc.offset;\n\t\t\t\t\t\told.howMany -= intersectionLength;\n\t\t\t\t\t} else if ( inc.offset < oldEnd ) {\n\t\t\t\t\t\tif ( incEnd <= oldEnd ) {\n\t\t\t\t\t\t\t// On first sight in this case we don't need to split attribute operation into two.\n\t\t\t\t\t\t\t// However the changes set is later converted to actions (see `_generateActionsFromChanges`).\n\t\t\t\t\t\t\t// For that reason, no two changes may intersect.\n\t\t\t\t\t\t\t// So we cannot have an attribute change that \"contains\" remove change.\n\t\t\t\t\t\t\t// Attribute change needs to be split.\n\t\t\t\t\t\t\tconst howMany = old.howMany;\n\n\t\t\t\t\t\t\told.howMany = inc.offset - old.offset;\n\n\t\t\t\t\t\t\tconst howManyAfter = howMany - old.howMany - inc.nodesToHandle;\n\n\t\t\t\t\t\t\t// Add the second part of attribute change to the beginning of processed array so it won't\n\t\t\t\t\t\t\t// be processed again in this loop.\n\t\t\t\t\t\t\tchanges.unshift( {\n\t\t\t\t\t\t\t\ttype: 'attribute',\n\t\t\t\t\t\t\t\toffset: inc.offset,\n\t\t\t\t\t\t\t\thowMany: howManyAfter,\n\t\t\t\t\t\t\t\tcount: this._changeCount++\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\told.howMany -= oldEnd - inc.offset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( inc.type == 'attribute' ) {\n\t\t\t\t// In case of attribute change, `howMany` should be kept same as `nodesToHandle`. It's not an error.\n\t\t\t\tif ( old.type == 'insert' ) {\n\t\t\t\t\tif ( inc.offset < old.offset && incEnd > old.offset ) {\n\t\t\t\t\t\tif ( incEnd > oldEnd ) {\n\t\t\t\t\t\t\t// This case is similar to a case described when incoming change was insert and old change was attribute.\n\t\t\t\t\t\t\t// See comment above.\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// This time incoming change is attribute. We need to split incoming change in this case too.\n\t\t\t\t\t\t\t// However this time, the second part of the attribute change needs to be processed further\n\t\t\t\t\t\t\t// because there might be other changes that it collides with.\n\t\t\t\t\t\t\tconst attributePart = {\n\t\t\t\t\t\t\t\ttype: 'attribute',\n\t\t\t\t\t\t\t\toffset: oldEnd,\n\t\t\t\t\t\t\t\thowMany: incEnd - oldEnd,\n\t\t\t\t\t\t\t\tcount: this._changeCount++\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tthis._handleChange( attributePart, changes );\n\n\t\t\t\t\t\t\tchanges.push( attributePart );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinc.nodesToHandle = old.offset - inc.offset;\n\t\t\t\t\t\tinc.howMany = inc.nodesToHandle;\n\t\t\t\t\t} else if ( inc.offset >= old.offset && inc.offset < oldEnd ) {\n\t\t\t\t\t\tif ( incEnd > oldEnd ) {\n\t\t\t\t\t\t\tinc.nodesToHandle = incEnd - oldEnd;\n\t\t\t\t\t\t\tinc.offset = oldEnd;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinc.nodesToHandle = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'remove' ) {\n\t\t\t\t\t// This is a case when attribute change \"contains\" remove change.\n\t\t\t\t\t// The attribute change needs to be split into two because changes cannot intersect.\n\t\t\t\t\tif ( inc.offset < old.offset && incEnd > old.offset ) {\n\t\t\t\t\t\tconst attributePart = {\n\t\t\t\t\t\t\ttype: 'attribute',\n\t\t\t\t\t\t\toffset: old.offset,\n\t\t\t\t\t\t\thowMany: incEnd - old.offset,\n\t\t\t\t\t\t\tcount: this._changeCount++\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis._handleChange( attributePart, changes );\n\n\t\t\t\t\t\tchanges.push( attributePart );\n\n\t\t\t\t\t\tinc.nodesToHandle = old.offset - inc.offset;\n\t\t\t\t\t\tinc.howMany = inc.nodesToHandle;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'attribute' ) {\n\t\t\t\t\t// There are only two conflicting scenarios possible here:\n\t\t\t\t\tif ( inc.offset >= old.offset && incEnd <= oldEnd ) {\n\t\t\t\t\t\t// `old` change includes `inc` change, or they are the same.\n\t\t\t\t\t\tinc.nodesToHandle = 0;\n\t\t\t\t\t\tinc.howMany = 0;\n\t\t\t\t\t\tinc.offset = 0;\n\t\t\t\t\t} else if ( inc.offset <= old.offset && incEnd >= oldEnd ) {\n\t\t\t\t\t\t// `inc` change includes `old` change.\n\t\t\t\t\t\told.howMany = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinc.howMany = inc.nodesToHandle;\n\t\tdelete inc.nodesToHandle;\n\t}\n\n\t/**\n\t * Returns an object with a single insert change description.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent The element in which the change happened.\n\t * @param {Number} offset The offset at which change happened.\n\t * @param {String} name The name of the removed element or `'$text'` for a character.\n\t * @returns {Object} The diff item.\n\t */\n\t_getInsertDiff( parent, offset, name ) {\n\t\treturn {\n\t\t\ttype: 'insert',\n\t\t\tposition: Position._createAt( parent, offset ),\n\t\t\tname,\n\t\t\tlength: 1,\n\t\t\tchangeCount: this._changeCount++\n\t\t};\n\t}\n\n\t/**\n\t * Returns an object with a single remove change description.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent The element in which change happened.\n\t * @param {Number} offset The offset at which change happened.\n\t * @param {String} name The name of the removed element or `'$text'` for a character.\n\t * @returns {Object} The diff item.\n\t */\n\t_getRemoveDiff( parent, offset, name ) {\n\t\treturn {\n\t\t\ttype: 'remove',\n\t\t\tposition: Position._createAt( parent, offset ),\n\t\t\tname,\n\t\t\tlength: 1,\n\t\t\tchangeCount: this._changeCount++\n\t\t};\n\t}\n\n\t/**\n\t * Returns an array of objects where each one is a single attribute change description.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range The range where the change happened.\n\t * @param {Map} oldAttributes A map, map iterator or compatible object that contains attributes before the change.\n\t * @param {Map} newAttributes A map, map iterator or compatible object that contains attributes after the change.\n\t * @returns {Array.<Object>} An array containing one or more diff items.\n\t */\n\t_getAttributesDiff( range, oldAttributes, newAttributes ) {\n\t\t// Results holder.\n\t\tconst diffs = [];\n\n\t\t// Clone new attributes as we will be performing changes on this object.\n\t\tnewAttributes = new Map( newAttributes );\n\n\t\t// Look through old attributes.\n\t\tfor ( const [ key, oldValue ] of oldAttributes ) {\n\t\t\t// Check what is the new value of the attribute (or if it was removed).\n\t\t\tconst newValue = newAttributes.has( key ) ? newAttributes.get( key ) : null;\n\n\t\t\t// If values are different (or attribute was removed)...\n\t\t\tif ( newValue !== oldValue ) {\n\t\t\t\t// Add diff item.\n\t\t\t\tdiffs.push( {\n\t\t\t\t\ttype: 'attribute',\n\t\t\t\t\tposition: range.start,\n\t\t\t\t\trange: range.clone(),\n\t\t\t\t\tlength: 1,\n\t\t\t\t\tattributeKey: key,\n\t\t\t\t\tattributeOldValue: oldValue,\n\t\t\t\t\tattributeNewValue: newValue,\n\t\t\t\t\tchangeCount: this._changeCount++\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Prevent returning two diff items for the same change.\n\t\t\tnewAttributes.delete( key );\n\t\t}\n\n\t\t// Look through new attributes that weren't handled above.\n\t\tfor ( const [ key, newValue ] of newAttributes ) {\n\t\t\t// Each of them is a new attribute. Add diff item.\n\t\t\tdiffs.push( {\n\t\t\t\ttype: 'attribute',\n\t\t\t\tposition: range.start,\n\t\t\t\trange: range.clone(),\n\t\t\t\tlength: 1,\n\t\t\t\tattributeKey: key,\n\t\t\t\tattributeOldValue: null,\n\t\t\t\tattributeNewValue: newValue,\n\t\t\t\tchangeCount: this._changeCount++\n\t\t\t} );\n\t\t}\n\n\t\treturn diffs;\n\t}\n\n\t/**\n\t * Checks whether given element or any of its parents is an element that is buffered as an inserted element.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} element Element to check.\n\t * @returns {Boolean}\n\t */\n\t_isInInsertedElement( element ) {\n\t\tconst parent = element.parent;\n\n\t\tif ( !parent ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst changes = this._changesInElement.get( parent );\n\t\tconst offset = element.startOffset;\n\n\t\tif ( changes ) {\n\t\t\tfor ( const change of changes ) {\n\t\t\t\tif ( change.type == 'insert' && offset >= change.offset && offset < change.offset + change.howMany ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._isInInsertedElement( parent );\n\t}\n\n\t/**\n\t * Removes deeply all buffered changes that are registered in elements from range specified by `parent`, `offset`\n\t * and `howMany`.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent\n\t * @param {Number} offset\n\t * @param {Number} howMany\n\t */\n\t_removeAllNestedChanges( parent, offset, howMany ) {\n\t\tconst range = new Range( Position._createAt( parent, offset ), Position._createAt( parent, offset + howMany ) );\n\n\t\tfor ( const item of range.getItems( { shallow: true } ) ) {\n\t\t\tif ( item.is( 'element' ) ) {\n\t\t\t\tthis._elementSnapshots.delete( item );\n\t\t\t\tthis._changesInElement.delete( item );\n\n\t\t\t\tthis._removeAllNestedChanges( item, 0, item.maxOffset );\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Returns an array that is a copy of passed child list with the exception that text nodes are split to one or more\n// objects, each representing one character and attributes set on that character.\nfunction _getChildrenSnapshot( children ) {\n\tconst snapshot = [];\n\n\tfor ( const child of children ) {\n\t\tif ( child.is( 'text' ) ) {\n\t\t\tfor ( let i = 0; i < child.data.length; i++ ) {\n\t\t\t\tsnapshot.push( {\n\t\t\t\t\tname: '$text',\n\t\t\t\t\tattributes: new Map( child.getAttributes() )\n\t\t\t\t} );\n\t\t\t}\n\t\t} else {\n\t\t\tsnapshot.push( {\n\t\t\t\tname: child.name,\n\t\t\t\tattributes: new Map( child.getAttributes() )\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn snapshot;\n}\n\n// Generates array of actions for given changes set.\n// It simulates what `diff` function does.\n// Generated actions are:\n// - 'e' for 'equal' - when item at that position did not change,\n// - 'i' for 'insert' - when item at that position was inserted,\n// - 'r' for 'remove' - when item at that position was removed,\n// - 'a' for 'attribute' - when item at that position has it attributes changed.\n//\n// Example (assume that uppercase letters have bold attribute, compare with function code):\n//\n// children before:\tfooBAR\n// children after:\tfoxybAR\n//\n// changes: type: remove, offset: 1, howMany: 1\n//\t\t\ttype: insert, offset: 2, howMany: 2\n//\t\t\ttype: attribute, offset: 4, howMany: 1\n//\n// expected actions: equal (f), remove (o), equal (o), insert (x), insert (y), attribute (b), equal (A), equal (R)\n//\n// steps taken by th script:\n//\n// 1. change = \"type: remove, offset: 1, howMany: 1\"; offset = 0; oldChildrenHandled = 0\n//    1.1 between this change and the beginning is one not-changed node, fill with one equal action, one old child has been handled\n//    1.2 this change removes one node, add one remove action\n//    1.3 change last visited `offset` to 1\n//    1.4 since an old child has been removed, one more old child has been handled\n//    1.5 actions at this point are: equal, remove\n//\n// 2. change = \"type: insert, offset: 2, howMany: 2\"; offset = 1; oldChildrenHandled = 2\n//    2.1 between this change and previous change is one not-changed node, add equal action, another one old children has been handled\n//    2.2 this change inserts two nodes, add two insert actions\n//    2.3 change last visited offset to the end of the inserted range, that is 4\n//    2.4 actions at this point are: equal, remove, equal, insert, insert\n//\n// 3. change = \"type: attribute, offset: 4, howMany: 1\"; offset = 4, oldChildrenHandled = 3\n//    3.1 between this change and previous change are no not-changed nodes\n//    3.2 this change changes one node, add one attribute action\n//    3.3 change last visited `offset` to the end of change range, that is 5\n//    3.4 since an old child has been changed, one more old child has been handled\n//    3.5 actions at this point are: equal, remove, equal, insert, insert, attribute\n//\n// 4. after loop oldChildrenHandled = 4, oldChildrenLength = 6 (fooBAR is 6 characters)\n//    4.1 fill up with two equal actions\n//\n// The result actions are: equal, remove, equal, insert, insert, attribute, equal, equal.\nfunction _generateActionsFromChanges( oldChildrenLength, changes ) {\n\tconst actions = [];\n\n\tlet offset = 0;\n\tlet oldChildrenHandled = 0;\n\n\t// Go through all buffered changes.\n\tfor ( const change of changes ) {\n\t\t// First, fill \"holes\" between changes with \"equal\" actions.\n\t\tif ( change.offset > offset ) {\n\t\t\tfor ( let i = 0; i < change.offset - offset; i++ ) {\n\t\t\t\tactions.push( 'e' );\n\t\t\t}\n\n\t\t\toldChildrenHandled += change.offset - offset;\n\t\t}\n\n\t\t// Then, fill up actions accordingly to change type.\n\t\tif ( change.type == 'insert' ) {\n\t\t\tfor ( let i = 0; i < change.howMany; i++ ) {\n\t\t\t\tactions.push( 'i' );\n\t\t\t}\n\n\t\t\t// The last handled offset is after inserted range.\n\t\t\toffset = change.offset + change.howMany;\n\t\t} else if ( change.type == 'remove' ) {\n\t\t\tfor ( let i = 0; i < change.howMany; i++ ) {\n\t\t\t\tactions.push( 'r' );\n\t\t\t}\n\n\t\t\t// The last handled offset is at the position where the nodes were removed.\n\t\t\toffset = change.offset;\n\t\t\t// We removed `howMany` old nodes, update `oldChildrenHandled`.\n\t\t\toldChildrenHandled += change.howMany;\n\t\t} else {\n\t\t\tactions.push( ...'a'.repeat( change.howMany ).split( '' ) );\n\n\t\t\t// The last handled offset is at the position after the changed range.\n\t\t\toffset = change.offset + change.howMany;\n\t\t\t// We changed `howMany` old nodes, update `oldChildrenHandled`.\n\t\t\toldChildrenHandled += change.howMany;\n\t\t}\n\t}\n\n\t// Fill \"equal\" actions at the end of actions set. Use `oldChildrenHandled` to see how many children\n\t// has not been changed / removed at the end of their parent.\n\tif ( oldChildrenHandled < oldChildrenLength ) {\n\t\tfor ( let i = 0; i < oldChildrenLength - oldChildrenHandled - offset; i++ ) {\n\t\t\tactions.push( 'e' );\n\t\t}\n\t}\n\n\treturn actions;\n}\n\n// Filter callback for Array.filter that filters out change entries that are in graveyard.\nfunction _changesInGraveyardFilter( entry ) {\n\tconst posInGy = entry.position && entry.position.root.rootName == '$graveyard';\n\tconst rangeInGy = entry.range && entry.range.root.rootName == '$graveyard';\n\n\treturn !posInGy && !rangeInGy;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/history\n */\n\n/**\n * `History` keeps the track of all the operations applied to the {@link module:engine/model/document~Document document}.\n */\nexport default class History {\n\t/**\n\t * Creates an empty History instance.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Operations added to the history.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_operations\n\t\t */\n\t\tthis._operations = [];\n\n\t\t/**\n\t\t * Holds an information which {@link module:engine/model/operation/operation~Operation operation} undoes which\n\t\t * {@link module:engine/model/operation/operation~Operation operation}.\n\t\t *\n\t\t * Keys of the map are \"undoing operations\", that is operations that undone some other operations. For each key, the\n\t\t * value is an operation that has been undone by the \"undoing operation\".\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/model/history~History#_undoPairs\n\t\t */\n\t\tthis._undoPairs = new Map();\n\n\t\t/**\n\t\t * Holds all undone operations.\n\t\t *\n\t\t * @private\n\t\t * @member {Set.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_undoneOperations\n\t\t */\n\t\tthis._undoneOperations = new Set();\n\t}\n\n\t/**\n\t * Adds an operation to the history.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to add.\n\t */\n\taddOperation( operation ) {\n\t\tif ( this._operations.includes( operation ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._operations.push( operation );\n\t}\n\n\t/**\n\t * Returns operations added to the history.\n\t *\n\t * @param {Number} [from=0] Base version from which operations should be returned (inclusive). Defaults to `0`, which means\n\t * that operations from the first one will be returned.\n\t * @param {Number} [to=Number.POSITIVE_INFINITY] Base version up to which operations should be returned (exclusive).\n\t * Defaults to `Number.POSITIVE_INFINITY` which means that operations up to the last one will be returned.\n\t * @returns {Iterable.<module:engine/model/operation/operation~Operation>} Operations added to the history.\n\t */\n\tgetOperations( from = 0, to = Number.POSITIVE_INFINITY ) {\n\t\tif ( from < 0 ) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn this._operations.slice( from, to );\n\t}\n\n\t/**\n\t * Returns operation from the history that bases on given `baseVersion`.\n\t *\n\t * @param {Number} baseVersion Base version of the operation to get.\n\t * @returns {module:engine/model/operation/operation~Operation|null} Operation with given base version or `null` if\n\t * there is no such operation in history.\n\t */\n\tgetOperation( baseVersion ) {\n\t\treturn this._operations[ baseVersion ];\n\t}\n\n\t/**\n\t * Marks in history that one operation is an operation that is undoing the other operation. By marking operation this way,\n\t * history is keeping more context information about operations, which helps in operational transformation.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} undoneOperation Operation which is undone by `undoingOperation`.\n\t * @param {module:engine/model/operation/operation~Operation} undoingOperation Operation which undoes `undoneOperation`.\n\t */\n\tsetOperationAsUndone( undoneOperation, undoingOperation ) {\n\t\tthis._undoPairs.set( undoingOperation, undoneOperation );\n\t\tthis._undoneOperations.add( undoneOperation );\n\t}\n\n\t/**\n\t * Checks whether given `operation` is undoing any other operation.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\n\t * @returns {Boolean} `true` if given `operation` is undoing any other operation, `false` otherwise.\n\t */\n\tisUndoingOperation( operation ) {\n\t\treturn this._undoPairs.has( operation );\n\t}\n\n\t/**\n\t * Checks whether given `operation` has been undone by any other operation.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\n\t * @returns {Boolean} `true` if given `operation` has been undone any other operation, `false` otherwise.\n\t */\n\tisUndoneOperation( operation ) {\n\t\treturn this._undoneOperations.has( operation );\n\t}\n\n\t/**\n\t * For given `undoingOperation`, returns the operation which has been undone by it.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} undoingOperation\n\t * @returns {module:engine/model/operation/operation~Operation|undefined} Operation that has been undone by given\n\t * `undoingOperation` or `undefined` if given `undoingOperation` is not undoing any other operation.\n\t */\n\tgetUndoneOperation( undoingOperation ) {\n\t\treturn this._undoPairs.get( undoingOperation );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Set of utils to handle unicode characters.\n *\n * @module utils/unicode\n */\n\n/**\n * Checks whether given `character` is a combining mark.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nexport function isCombiningMark( character ) {\n\treturn !!character && character.length == 1 && /[\\u0300-\\u036f\\u1ab0-\\u1aff\\u1dc0-\\u1dff\\u20d0-\\u20ff\\ufe20-\\ufe2f]/.test( character );\n}\n\n/**\n * Checks whether given `character` is a high half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nexport function isHighSurrogateHalf( character ) {\n\treturn !!character && character.length == 1 && /[\\ud800-\\udbff]/.test( character );\n}\n\n/**\n * Checks whether given `character` is a low half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nexport function isLowSurrogateHalf( character ) {\n\treturn !!character && character.length == 1 && /[\\udc00-\\udfff]/.test( character );\n}\n\n/**\n * Checks whether given offset in a string is inside a surrogate pair (between two surrogate halves).\n *\n * @param {String} string String to check.\n * @param {Number} offset Offset to check.\n * @returns {Boolean}\n */\nexport function isInsideSurrogatePair( string, offset ) {\n\treturn isHighSurrogateHalf( string.charAt( offset - 1 ) ) && isLowSurrogateHalf( string.charAt( offset ) );\n}\n\n/**\n * Checks whether given offset in a string is between base character and combining mark or between two combining marks.\n *\n * @param {String} string String to check.\n * @param {Number} offset Offset to check.\n * @returns {Boolean}\n */\nexport function isInsideCombinedSymbol( string, offset ) {\n\treturn isCombiningMark( string.charAt( offset ) );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/document\n */\n\nimport Differ from './differ';\nimport RootElement from './rootelement';\nimport History from './history';\nimport DocumentSelection from './documentselection';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\nimport { clone } from 'lodash-es';\n\n// @if CK_DEBUG_ENGINE // const { logDocument } = require( '../dev-utils/utils' );\n\nconst graveyardName = '$graveyard';\n\n/**\n * Data model's document. It contains the model's structure, its selection and the history of changes.\n *\n * Read more about working with the model in\n * {@glink framework/guides/architecture/editing-engine#model introduction to the the editing engine's architecture}.\n *\n * Usually, the document contains just one {@link module:engine/model/document~Document#roots root element}, so\n * you can retrieve it by just calling {@link module:engine/model/document~Document#getRoot} without specifying its name:\n *\n *\t\tmodel.document.getRoot(); // -> returns the main root\n *\n * However, the document may contain multiple roots – e.g. when the editor has multiple editable areas\n * (e.g. a title and a body of a message).\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class Document {\n\t/**\n\t * Creates an empty document instance with no {@link #roots} (other than\n\t * the {@link #graveyard graveyard root}).\n\t */\n\tconstructor( model ) {\n\t\t/**\n\t\t * The {@link module:engine/model/model~Model model} that the document is a part of.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * The document version. It starts from `0` and every operation increases the version number. It is used to ensure that\n\t\t * operations are applied on a proper document version.\n\t\t *\n\t\t * If the {@link module:engine/model/operation/operation~Operation#baseVersion base version} does not match the document version,\n\t\t * a {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\t\tthis.version = 0;\n\n\t\t/**\n\t\t * The document's history.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/history~History}\n\t\t */\n\t\tthis.history = new History( this );\n\n\t\t/**\n\t\t * The selection in this document.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/documentselection~DocumentSelection}\n\t\t */\n\t\tthis.selection = new DocumentSelection( this );\n\n\t\t/**\n\t\t * A list of roots that are owned and managed by this document. Use {@link #createRoot} and\n\t\t * {@link #getRoot} to manipulate it.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:utils/collection~Collection}\n\t\t */\n\t\tthis.roots = new Collection( { idProperty: 'rootName' } );\n\n\t\t/**\n\t\t * The model differ object. Its role is to buffer changes done on the model document and then calculate a diff of those changes.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/differ~Differ}\n\t\t */\n\t\tthis.differ = new Differ( model.markers );\n\n\t\t/**\n\t\t * Post-fixer callbacks registered to the model document.\n\t\t *\n\t\t * @private\n\t\t * @type {Set.<Function>}\n\t\t */\n\t\tthis._postFixers = new Set();\n\n\t\t/**\n\t\t * A boolean indicates whether the selection has changed until\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._hasSelectionChangedFromTheLastChangeBlock = false;\n\n\t\t// Graveyard tree root. Document always have a graveyard root, which stores removed nodes.\n\t\tthis.createRoot( '$root', graveyardName );\n\n\t\t// First, if the operation is a document operation check if it's base version is correct.\n\t\tthis.listenTo( model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( operation.isDocumentOperation && operation.baseVersion !== this.version ) {\n\t\t\t\t/**\n\t\t\t\t * Only operations with matching versions can be applied.\n\t\t\t\t *\n\t\t\t\t * @error document-applyOperation-wrong-version\n\t\t\t\t * @param {module:engine/model/operation/operation~Operation} operation\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-document-applyOperation-wrong-version: Only operations with matching versions can be applied.',\n\t\t\t\t\tthis,\n\t\t\t\t\t{ operation }\n\t\t\t\t);\n\t\t\t}\n\t\t}, { priority: 'highest' } );\n\n\t\t// Then, still before an operation is applied on model, buffer the change in differ.\n\t\tthis.listenTo( model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( operation.isDocumentOperation ) {\n\t\t\t\tthis.differ.bufferOperation( operation );\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\n\t\t// After the operation is applied, bump document's version and add the operation to the history.\n\t\tthis.listenTo( model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( operation.isDocumentOperation ) {\n\t\t\t\tthis.version++;\n\t\t\t\tthis.history.addOperation( operation );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\t// Listen to selection changes. If selection changed, mark it.\n\t\tthis.listenTo( this.selection, 'change', () => {\n\t\t\tthis._hasSelectionChangedFromTheLastChangeBlock = true;\n\t\t} );\n\n\t\t// Buffer marker changes.\n\t\t// This is not covered in buffering operations because markers may change outside of them (when they\n\t\t// are modified using `model.markers` collection, not through `MarkerOperation`).\n\t\tthis.listenTo( model.markers, 'update', ( evt, marker, oldRange, newRange ) => {\n\t\t\t// Whenever marker is updated, buffer that change.\n\t\t\tthis.differ.bufferMarkerChange( marker.name, oldRange, newRange, marker.affectsData );\n\n\t\t\tif ( oldRange === null ) {\n\t\t\t\t// If this is a new marker, add a listener that will buffer change whenever marker changes.\n\t\t\t\tmarker.on( 'change', ( evt, oldRange ) => {\n\t\t\t\t\tthis.differ.bufferMarkerChange( marker.name, oldRange, marker.getRange(), marker.affectsData );\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * The graveyard tree root. A document always has a graveyard root that stores removed nodes.\n\t *\n\t * @readonly\n\t * @member {module:engine/model/rootelement~RootElement}\n\t */\n\tget graveyard() {\n\t\treturn this.getRoot( graveyardName );\n\t}\n\n\t/**\n\t * Creates a new root.\n\t *\n\t * @param {String} [elementName='$root'] The element name. Defaults to `'$root'` which also has some basic schema defined\n\t * (`$block`s are allowed inside the `$root`). Make sure to define a proper schema if you use a different name.\n\t * @param {String} [rootName='main'] A unique root name.\n\t * @returns {module:engine/model/rootelement~RootElement} The created root.\n\t */\n\tcreateRoot( elementName = '$root', rootName = 'main' ) {\n\t\tif ( this.roots.get( rootName ) ) {\n\t\t\t/**\n\t\t\t * A root with the specified name already exists.\n\t\t\t *\n\t\t\t * @error model-document-createRoot-name-exists\n\t\t\t * @param {module:engine/model/document~Document} doc\n\t\t\t * @param {String} name\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-document-createRoot-name-exists: Root with specified name already exists.',\n\t\t\t\tthis,\n\t\t\t\t{ name: rootName }\n\t\t\t);\n\t\t}\n\n\t\tconst root = new RootElement( this, elementName, rootName );\n\t\tthis.roots.add( root );\n\n\t\treturn root;\n\t}\n\n\t/**\n\t * Removes all event listeners set by the document instance.\n\t */\n\tdestroy() {\n\t\tthis.selection.destroy();\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Returns a root by its name.\n\t *\n\t * @param {String} [name='main'] A unique root name.\n\t * @returns {module:engine/model/rootelement~RootElement|null} The root registered under a given name or `null` when\n\t * there is no root with the given name.\n\t */\n\tgetRoot( name = 'main' ) {\n\t\treturn this.roots.get( name );\n\t}\n\n\t/**\n\t * Returns an array with names of all roots (without the {@link #graveyard}) added to the document.\n\t *\n\t * @returns {Array.<String>} Roots names.\n\t */\n\tgetRootNames() {\n\t\treturn Array.from( this.roots, root => root.rootName ).filter( name => name != graveyardName );\n\t}\n\n\t/**\n\t * Used to register a post-fixer callback. A post-fixer mechanism guarantees that the features\n\t * will operate on a correct model state.\n\t *\n\t * An execution of a feature may lead to an incorrect document tree state. The callbacks are used to fix the document tree after\n\t * it has changed. Post-fixers are fired just after all changes from the outermost change block were applied but\n\t * before the {@link module:engine/model/document~Document#event:change change event} is fired. If a post-fixer callback made\n\t * a change, it should return `true`. When this happens, all post-fixers are fired again to check if something else should\n\t * not be fixed in the new document tree state.\n\t *\n\t * As a parameter, a post-fixer callback receives a {@link module:engine/model/writer~Writer writer} instance connected with the\n\t * executed changes block. Thanks to that, all changes done by the callback will be added to the same\n\t * {@link module:engine/model/batch~Batch batch} (and undo step) as the original changes. This makes post-fixer changes transparent\n\t * for the user.\n\t *\n\t * An example of a post-fixer is a callback that checks if all the data were removed from the editor. If so, the\n\t * callback should add an empty paragraph so that the editor is never empty:\n\t *\n\t *\t\tdocument.registerPostFixer( writer => {\n\t *\t\t\tconst changes = document.differ.getChanges();\n\t *\n\t *\t\t\t// Check if the changes lead to an empty root in the editor.\n\t *\t\t\tfor ( const entry of changes ) {\n\t *\t\t\t\tif ( entry.type == 'remove' && entry.position.root.isEmpty ) {\n\t *\t\t\t\t\twriter.insertElement( 'paragraph', entry.position.root, 0 );\n\t *\n\t *\t\t\t\t\t// It is fine to return early, even if multiple roots would need to be fixed.\n\t *\t\t\t\t\t// All post-fixers will be fired again, so if there are more empty roots, those will be fixed, too.\n\t *\t\t\t\t\treturn true;\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * @param {Function} postFixer\n\t */\n\tregisterPostFixer( postFixer ) {\n\t\tthis._postFixers.add( postFixer );\n\t}\n\n\t/**\n\t * A custom `toJSON()` method to solve child-parent circular dependencies.\n\t *\n\t * @returns {Object} A clone of this object with the document property changed to a string.\n\t */\n\ttoJSON() {\n\t\tconst json = clone( this );\n\n\t\t// Due to circular references we need to remove parent reference.\n\t\tjson.selection = '[engine.model.DocumentSelection]';\n\t\tjson.model = '[engine.model.Model]';\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Check if there were any changes done on document, and if so, call post-fixers,\n\t * fire `change` event for features and conversion and then reset the differ.\n\t * Fire `change:data` event when at least one operation or buffered marker changes the data.\n\t *\n\t * @protected\n\t * @fires change\n\t * @fires change:data\n\t * @param {module:engine/model/writer~Writer} writer The writer on which post-fixers will be called.\n\t */\n\t_handleChangeBlock( writer ) {\n\t\tif ( this._hasDocumentChangedFromTheLastChangeBlock() ) {\n\t\t\tthis._callPostFixers( writer );\n\n\t\t\t// Refresh selection attributes according to the final position in the model after the change.\n\t\t\tthis.selection.refresh();\n\n\t\t\tif ( this.differ.hasDataChanges() ) {\n\t\t\t\tthis.fire( 'change:data', writer.batch );\n\t\t\t} else {\n\t\t\t\tthis.fire( 'change', writer.batch );\n\t\t\t}\n\n\t\t\t// Theoretically, it is not necessary to refresh selection after change event because\n\t\t\t// post-fixers are the last who should change the model, but just in case...\n\t\t\tthis.selection.refresh();\n\n\t\t\tthis.differ.reset();\n\t\t}\n\n\t\tthis._hasSelectionChangedFromTheLastChangeBlock = false;\n\t}\n\n\t/**\n\t * Returns whether there is a buffered change or if the selection has changed from the last\n\t * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()` block}\n\t * or {@link module:engine/model/model~Model#change `change()` block}.\n\t *\n\t * @protected\n\t * @returns {Boolean} Returns `true` if document has changed from the last `change()` or `enqueueChange()` block.\n\t */\n\t_hasDocumentChangedFromTheLastChangeBlock() {\n\t\treturn !this.differ.isEmpty || this._hasSelectionChangedFromTheLastChangeBlock;\n\t}\n\n\t/**\n\t * Returns the default root for this document which is either the first root that was added to the document using\n\t * {@link #createRoot} or the {@link #graveyard graveyard root} if no other roots were created.\n\t *\n\t * @protected\n\t * @returns {module:engine/model/rootelement~RootElement} The default root for this document.\n\t */\n\t_getDefaultRoot() {\n\t\tfor ( const root of this.roots ) {\n\t\t\tif ( root !== this.graveyard ) {\n\t\t\t\treturn root;\n\t\t\t}\n\t\t}\n\n\t\treturn this.graveyard;\n\t}\n\n\t/**\n\t * Returns the default range for this selection. The default range is a collapsed range that starts and ends\n\t * at the beginning of this selection's document {@link #_getDefaultRoot default root}.\n\t *\n\t * @protected\n\t * @returns {module:engine/model/range~Range}\n\t */\n\t_getDefaultRange() {\n\t\tconst defaultRoot = this._getDefaultRoot();\n\t\tconst model = this.model;\n\t\tconst schema = model.schema;\n\n\t\t// Find the first position where the selection can be put.\n\t\tconst position = model.createPositionFromPath( defaultRoot, [ 0 ] );\n\t\tconst nearestRange = schema.getNearestSelectionRange( position );\n\n\t\t// If valid selection range is not found - return range collapsed at the beginning of the root.\n\t\treturn nearestRange || model.createRange( position );\n\t}\n\n\t/**\n\t * Checks whether a given {@link module:engine/model/range~Range range} is a valid range for\n\t * the {@link #selection document's selection}.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range A range to check.\n\t * @returns {Boolean} `true` if `range` is valid, `false` otherwise.\n\t */\n\t_validateSelectionRange( range ) {\n\t\treturn validateTextNodePosition( range.start ) && validateTextNodePosition( range.end );\n\t}\n\n\t/**\n\t * Performs post-fixer loops. Executes post-fixer callbacks as long as none of them has done any changes to the model.\n\t *\n\t * @private\n\t * @param {module:engine/model/writer~Writer} writer The writer on which post-fixer callbacks will be called.\n\t */\n\t_callPostFixers( writer ) {\n\t\tlet wasFixed = false;\n\n\t\tdo {\n\t\t\tfor ( const callback of this._postFixers ) {\n\t\t\t\t// Ensure selection attributes are up to date before each post-fixer.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/1673.\n\t\t\t\t//\n\t\t\t\t// It might be good to refresh the selection after each operation but at the moment it leads\n\t\t\t\t// to losing attributes for composition or and spell checking\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-typing/issues/188\n\t\t\t\tthis.selection.refresh();\n\n\t\t\t\twasFixed = callback( writer );\n\n\t\t\t\tif ( wasFixed ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} while ( wasFixed );\n\t}\n\n\t/**\n\t * Fired after each {@link module:engine/model/model~Model#enqueueChange `enqueueChange()` block} or the outermost\n\t * {@link module:engine/model/model~Model#change `change()` block} was executed and the document was changed\n\t * during that block's execution.\n\t *\n\t * The changes which this event will cover include:\n\t *\n\t * * document structure changes,\n\t * * selection changes,\n\t * * marker changes.\n\t *\n\t * If you want to be notified about all these changes, then simply listen to this event like this:\n\t *\n\t *\t\tmodel.document.on( 'change', () => {\n\t *\t\t\tconsole.log( 'The document has changed!' );\n\t *\t\t} );\n\t *\n\t * If, however, you only want to be notified about the data changes, then use the\n\t * {@link module:engine/model/document~Document#event:change:data change:data} event,\n\t * which is fired for document structure changes and marker changes (which affects the data).\n\t *\n\t *\t\tmodel.document.on( 'change:data', () => {\n\t *\t\t\tconsole.log( 'The data has changed!' );\n\t *\t\t} );\n\t *\n\t * @event change\n\t * @param {module:engine/model/batch~Batch} batch The batch that was used in the executed changes block.\n\t */\n\n\t/**\n\t * It is a narrower version of the {@link #event:change} event. It is fired for changes which\n\t * affect the editor data. This is:\n\t *\n\t * * document structure changes,\n\t * * marker changes (which affects the data).\n\t *\n\t * If you want to be notified about the data changes, then listen to this event:\n\t *\n\t *\t\tmodel.document.on( 'change:data', () => {\n\t *\t\t\tconsole.log( 'The data has changed!' );\n\t *\t\t} );\n\t *\n\t * If you would like to listen to all document changes, then check out the\n\t * {@link module:engine/model/document~Document#event:change change} event.\n\t *\n\t * @event change:data\n\t * @param {module:engine/model/batch~Batch} batch The batch that was used in the executed changes block.\n\t */\n\n\t// @if CK_DEBUG_ENGINE // log( version = null ) {\n\t// @if CK_DEBUG_ENGINE // \tversion = version === null ? this.version : version;\n\t// @if CK_DEBUG_ENGINE // \tlogDocument( this, version );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\nmix( Document, EmitterMixin );\n\n// Checks whether given range boundary position is valid for document selection, meaning that is not between\n// unicode surrogate pairs or base character and combining marks.\nfunction validateTextNodePosition( rangeBoundary ) {\n\tconst textNode = rangeBoundary.textNode;\n\n\tif ( textNode ) {\n\t\tconst data = textNode.data;\n\t\tconst offset = rangeBoundary.offset - textNode.startOffset;\n\n\t\treturn !isInsideSurrogatePair( data, offset ) && !isInsideCombinedSymbol( data, offset );\n\t}\n\n\treturn true;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/markercollection\n */\n\nimport LiveRange from './liverange';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * The collection of all {@link module:engine/model/markercollection~Marker markers} attached to the document.\n * It lets you {@link module:engine/model/markercollection~MarkerCollection#get get} markers or track them using\n * {@link module:engine/model/markercollection~MarkerCollection#event:update} event.\n *\n * To create, change or remove makers use {@link module:engine/model/writer~Writer model writers'} methods:\n * {@link module:engine/model/writer~Writer#addMarker} or {@link module:engine/model/writer~Writer#removeMarker}. Since\n * the writer is the only proper way to change the data model it is not possible to change markers directly using this\n * collection. All markers created by the writer will be automatically added to this collection.\n *\n * By default there is one marker collection available as {@link module:engine/model/model~Model#markers model property}.\n *\n * @see module:engine/model/markercollection~Marker\n */\nexport default class MarkerCollection {\n\t/**\n\t * Creates a markers collection.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Stores {@link ~Marker markers} added to the collection.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} #_markers\n\t\t */\n\t\tthis._markers = new Map();\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over all {@link ~Marker markers} added to the collection.\n\t *\n\t * @returns {Iterable}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._markers.values();\n\t}\n\n\t/**\n\t * Checks if marker with given `markerName` is in the collection.\n\t *\n\t * @param {String} markerName Marker name.\n\t * @returns {Boolean} `true` if marker with given `markerName` is in the collection, `false` otherwise.\n\t */\n\thas( markerName ) {\n\t\treturn this._markers.has( markerName );\n\t}\n\n\t/**\n\t * Returns {@link ~Marker marker} with given `markerName`.\n\t *\n\t * @param {String} markerName Name of marker to get.\n\t * @returns {module:engine/model/markercollection~Marker|null} Marker with given name or `null` if such marker was\n\t * not added to the collection.\n\t */\n\tget( markerName ) {\n\t\treturn this._markers.get( markerName ) || null;\n\t}\n\n\t/**\n\t * Creates and adds a {@link ~Marker marker} to the `MarkerCollection` with given name on given\n\t * {@link module:engine/model/range~Range range}.\n\t *\n\t * If `MarkerCollection` already had a marker with given name (or {@link ~Marker marker} was passed), the marker in\n\t * collection is updated and {@link module:engine/model/markercollection~MarkerCollection#event:update} event is fired\n\t * but only if there was a change (marker range or {@link module:engine/model/markercollection~Marker#managedUsingOperations}\n\t * flag has changed.\n\t *\n\t * @protected\n\t * @fires module:engine/model/markercollection~MarkerCollection#event:update\n\t * @param {String|module:engine/model/markercollection~Marker} markerOrName Name of marker to set or marker instance to update.\n\t * @param {module:engine/model/range~Range} range Marker range.\n\t * @param {Boolean} [managedUsingOperations=false] Specifies whether the marker is managed using operations.\n\t * @param {Boolean} [affectsData=false] Specifies whether the marker affects the data produced by the data pipeline\n\t * (is persisted in the editor's data).\n\t * @returns {module:engine/model/markercollection~Marker} `Marker` instance which was added or updated.\n\t */\n\t_set( markerOrName, range, managedUsingOperations = false, affectsData = false ) {\n\t\tconst markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\t\tconst oldMarker = this._markers.get( markerName );\n\n\t\tif ( oldMarker ) {\n\t\t\tconst oldRange = oldMarker.getRange();\n\t\t\tlet hasChanged = false;\n\n\t\t\tif ( !oldRange.isEqual( range ) ) {\n\t\t\t\toldMarker._attachLiveRange( LiveRange.fromRange( range ) );\n\t\t\t\thasChanged = true;\n\t\t\t}\n\n\t\t\tif ( managedUsingOperations != oldMarker.managedUsingOperations ) {\n\t\t\t\toldMarker._managedUsingOperations = managedUsingOperations;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\n\t\t\tif ( typeof affectsData === 'boolean' && affectsData != oldMarker.affectsData ) {\n\t\t\t\toldMarker._affectsData = affectsData;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\n\t\t\tif ( hasChanged ) {\n\t\t\t\tthis.fire( 'update:' + markerName, oldMarker, oldRange, range );\n\t\t\t}\n\n\t\t\treturn oldMarker;\n\t\t}\n\n\t\tconst liveRange = LiveRange.fromRange( range );\n\t\tconst marker = new Marker( markerName, liveRange, managedUsingOperations, affectsData );\n\n\t\tthis._markers.set( markerName, marker );\n\t\tthis.fire( 'update:' + markerName, marker, null, range );\n\n\t\treturn marker;\n\t}\n\n\t/**\n\t * Removes given {@link ~Marker marker} or a marker with given name from the `MarkerCollection`.\n\t *\n\t * @protected\n\t * @fires module:engine/model/markercollection~MarkerCollection#event:update\n\t * @param {String} markerOrName Marker or name of a marker to remove.\n\t * @returns {Boolean} `true` if marker was found and removed, `false` otherwise.\n\t */\n\t_remove( markerOrName ) {\n\t\tconst markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\t\tconst oldMarker = this._markers.get( markerName );\n\n\t\tif ( oldMarker ) {\n\t\t\tthis._markers.delete( markerName );\n\t\t\tthis.fire( 'update:' + markerName, oldMarker, oldMarker.getRange(), null );\n\n\t\t\tthis._destroyMarker( oldMarker );\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Fires an {@link module:engine/model/markercollection~MarkerCollection#event:update} event for the given {@link ~Marker marker}\n\t * but does not change the marker. Useful to force {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher downcast\n\t * conversion} for the marker.\n\t *\n\t * @protected\n\t * @fires module:engine/model/markercollection~MarkerCollection#event:update\n\t * @param {String} markerOrName Marker or name of a marker to refresh.\n\t */\n\t_refresh( markerOrName ) {\n\t\tconst markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\t\tconst marker = this._markers.get( markerName );\n\n\t\tif ( !marker ) {\n\t\t\tthrow new CKEditorError( 'markercollection-refresh-marker-not-exists: Marker with provided name does not exists.', this );\n\t\t}\n\n\t\tconst range = marker.getRange();\n\n\t\tthis.fire( 'update:' + markerName, marker, range, range, marker.managedUsingOperations, marker.affectsData );\n\t}\n\n\t/**\n\t * Returns iterator that iterates over all markers, which ranges contain given {@link module:engine/model/position~Position position}.\n\t *\n\t * @param {module:engine/model/position~Position} position\n\t * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n\t */\n\t* getMarkersAtPosition( position ) {\n\t\tfor ( const marker of this ) {\n\t\t\tif ( marker.getRange().containsPosition( position ) ) {\n\t\t\t\tyield marker;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns iterator that iterates over all markers, which intersects with given {@link module:engine/model/range~Range range}.\n\t *\n\t * @param {module:engine/model/range~Range} range\n\t * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n\t */\n\t* getMarkersIntersectingRange( range ) {\n\t\tfor ( const marker of this ) {\n\t\t\tif ( marker.getRange().getIntersection( range ) !== null ) {\n\t\t\t\tyield marker;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Destroys marker collection and all markers inside it.\n\t */\n\tdestroy() {\n\t\tfor ( const marker of this._markers.values() ) {\n\t\t\tthis._destroyMarker( marker );\n\t\t}\n\n\t\tthis._markers = null;\n\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Iterates over all markers that starts with given `prefix`.\n\t *\n\t *\t\tconst markerFooA = markersCollection.set( 'foo:a', rangeFooA );\n\t *\t\tconst markerFooB = markersCollection.set( 'foo:b', rangeFooB );\n\t *\t\tconst markerBarA = markersCollection.set( 'bar:a', rangeBarA );\n\t *\t\tconst markerFooBarA = markersCollection.set( 'foobar:a', rangeFooBarA );\n\t *\t\tArray.from( markersCollection.getMarkersGroup( 'foo' ) ); // [ markerFooA, markerFooB ]\n\t *\t\tArray.from( markersCollection.getMarkersGroup( 'a' ) ); // []\n\t *\n\t * @param prefix\n\t * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n\t */\n\t* getMarkersGroup( prefix ) {\n\t\tfor ( const marker of this._markers.values() ) {\n\t\t\tif ( marker.name.startsWith( prefix + ':' ) ) {\n\t\t\t\tyield marker;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Destroys the marker.\n\t *\n\t * @private\n\t * @param {module:engine/model/markercollection~Marker} marker Marker to destroy.\n\t */\n\t_destroyMarker( marker ) {\n\t\tmarker.stopListening();\n\t\tmarker._detachLiveRange();\n\t}\n\n\t/**\n\t * Fired whenever marker is added, updated or removed from `MarkerCollection`.\n\t *\n\t * @event update\n\t * @param {module:engine/model/markercollection~Marker} marker Updated Marker.\n\t * @param {module:engine/model/range~Range|null} oldRange Marker range before the update. When is not defined it\n\t * means that marker is just added.\n\t * @param {module:engine/model/range~Range|null} newRange Marker range after update. When is not defined it\n\t * means that marker is just removed.\n\t */\n}\n\nmix( MarkerCollection, EmitterMixin );\n\n/**\n * `Marker` is a continuous parts of model (like a range), is named and represent some kind of information about marked\n * part of model document. In contrary to {@link module:engine/model/node~Node nodes}, which are building blocks of\n * model document tree, markers are not stored directly in document tree but in\n * {@link module:engine/model/model~Model#markers model markers' collection}. Still, they are document data, by giving\n * additional meaning to the part of a model document between marker start and marker end.\n *\n * In this sense, markers are similar to adding and converting attributes on nodes. The difference is that attribute is\n * connected with a given node (e.g. a character is bold no matter if it gets moved or content around it changes).\n * Markers on the other hand are continuous ranges and are characterized by their start and end position. This means that\n * any character in the marker is marked by the marker. For example, if a character is moved outside of marker it stops being\n * \"special\" and the marker is shrunk. Similarly, when a character is moved into the marker from other place in document\n * model, it starts being \"special\" and the marker is enlarged.\n *\n * Another upside of markers is that finding marked part of document is fast and easy. Using attributes to mark some nodes\n * and then trying to find that part of document would require traversing whole document tree. Marker gives instant access\n * to the range which it is marking at the moment.\n *\n * Markers are built from a name and a range.\n *\n * Range of the marker is updated automatically when document changes, using\n * {@link module:engine/model/liverange~LiveRange live range} mechanism.\n *\n * Name is used to group and identify markers. Names have to be unique, but markers can be grouped by\n * using common prefixes, separated with `:`, for example: `user:john` or `search:3`. That's useful in term of creating\n * namespaces for custom elements (e.g. comments, highlights). You can use this prefixes in\n * {@link module:engine/model/markercollection~MarkerCollection#event:update} listeners to listen on changes in a group of markers.\n * For instance: `model.markers.on( 'update:user', callback );` will be called whenever any `user:*` markers changes.\n *\n * There are two types of markers.\n *\n * 1. Markers managed directly, without using operations. They are added directly by {@link module:engine/model/writer~Writer}\n * to the {@link module:engine/model/markercollection~MarkerCollection} without any additional mechanism. They can be used\n * as bookmarks or visual markers. They are great for showing results of the find, or select link when the focus is in the input.\n *\n * 1. Markers managed using operations. These markers are also stored in {@link module:engine/model/markercollection~MarkerCollection}\n * but changes in these markers is managed the same way all other changes in the model structure - using operations.\n * Therefore, they are handled in the undo stack and synchronized between clients if the collaboration plugin is enabled.\n * This type of markers is useful for solutions like spell checking or comments.\n *\n * Both type of them should be added / updated by {@link module:engine/model/writer~Writer#addMarker}\n * and removed by {@link module:engine/model/writer~Writer#removeMarker} methods.\n *\n *\t\tmodel.change( ( writer ) => {\n * \t\t\tconst marker = writer.addMarker( name, { range, usingOperation: true } );\n *\n * \t\t\t// ...\n *\n * \t\t\twriter.removeMarker( marker );\n *\t\t} );\n *\n * See {@link module:engine/model/writer~Writer} to find more examples.\n *\n * Since markers need to track change in the document, for efficiency reasons, it is best to create and keep as little\n * markers as possible and remove them as soon as they are not needed anymore.\n *\n * Markers can be downcasted and upcasted.\n *\n * Markers downcast happens on {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker} and\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:removeMarker} events.\n * Use {@link module:engine/conversion/downcasthelpers downcast converters} or attach a custom converter to mentioned events.\n * For {@link module:engine/controller/datacontroller~DataController data pipeline}, marker should be downcasted to an element.\n * Then, it can be upcasted back to a marker. Again, use {@link module:engine/conversion/upcasthelpers upcast converters} or\n * attach a custom converter to {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element}.\n *\n * `Marker` instances are created and destroyed only by {@link ~MarkerCollection MarkerCollection}.\n */\nclass Marker {\n\t/**\n\t * Creates a marker instance.\n\t *\n\t * @param {String} name Marker name.\n\t * @param {module:engine/model/liverange~LiveRange} liveRange Range marked by the marker.\n\t * @param {Boolean} managedUsingOperations Specifies whether the marker is managed using operations.\n\t * @param {Boolean} affectsData Specifies whether the marker affects the data produced by the data pipeline\n\t * (is persisted in the editor's data).\n\t */\n\tconstructor( name, liveRange, managedUsingOperations, affectsData ) {\n\t\t/**\n\t\t * Marker's name.\n\t\t *\n\t\t * @readonly\n\t\t * @type {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Range marked by the marker.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:engine/model/liverange~LiveRange}\n\t\t */\n\t\tthis._liveRange = this._attachLiveRange( liveRange );\n\n\t\t/**\n\t\t * Flag indicates if the marker is managed using operations or not.\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._managedUsingOperations = managedUsingOperations;\n\n\t\t/**\n\t\t * Specifies whether the marker affects the data produced by the data pipeline\n\t\t * (is persisted in the editor's data).\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._affectsData = affectsData;\n\t}\n\n\t/**\n\t * A value indicating if the marker is managed using operations.\n\t * See {@link ~Marker marker class description} to learn more about marker types.\n\t * See {@link module:engine/model/writer~Writer#addMarker}.\n\t *\n\t * @returns {Boolean}\n\t */\n\tget managedUsingOperations() {\n\t\tif ( !this._liveRange ) {\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Cannot use a destroyed marker instance.', this );\n\t\t}\n\n\t\treturn this._managedUsingOperations;\n\t}\n\n\t/**\n\t * A value indicating if the marker changes the data.\n\t *\n\t * @returns {Boolean}\n\t */\n\tget affectsData() {\n\t\tif ( !this._liveRange ) {\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Cannot use a destroyed marker instance.', this );\n\t\t}\n\n\t\treturn this._affectsData;\n\t}\n\n\t/**\n\t * Returns current marker start position.\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tgetStart() {\n\t\tif ( !this._liveRange ) {\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Cannot use a destroyed marker instance.', this );\n\t\t}\n\n\t\treturn this._liveRange.start.clone();\n\t}\n\n\t/**\n\t * Returns current marker end position.\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tgetEnd() {\n\t\tif ( !this._liveRange ) {\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Cannot use a destroyed marker instance.', this );\n\t\t}\n\n\t\treturn this._liveRange.end.clone();\n\t}\n\n\t/**\n\t * Returns a range that represents the current state of the marker.\n\t *\n\t * Keep in mind that returned value is a {@link module:engine/model/range~Range Range}, not a\n\t * {@link module:engine/model/liverange~LiveRange LiveRange}. This means that it is up-to-date and relevant only\n\t * until next model document change. Do not store values returned by this method. Instead, store {@link ~Marker#name}\n\t * and get `Marker` instance from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection} every\n\t * time there is a need to read marker properties. This will guarantee that the marker has not been removed and\n\t * that it's data is up-to-date.\n\t *\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tgetRange() {\n\t\tif ( !this._liveRange ) {\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Cannot use a destroyed marker instance.', this );\n\t\t}\n\n\t\treturn this._liveRange.toRange();\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tmarker.is( 'marker' ); // -> true\n\t *\t\tmarker.is( 'model:marker' ); // -> true\n\t *\n\t *\t\tmarker.is( 'view:element' ); // -> false\n\t *\t\tmarker.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'marker' || type === 'model:marker';\n\t}\n\n\t/**\n\t * Binds new live range to the marker and detach the old one if is attached.\n\t *\n\t * @protected\n\t * @param {module:engine/model/liverange~LiveRange} liveRange Live range to attach\n\t * @returns {module:engine/model/liverange~LiveRange} Attached live range.\n\t */\n\t_attachLiveRange( liveRange ) {\n\t\tif ( this._liveRange ) {\n\t\t\tthis._detachLiveRange();\n\t\t}\n\n\t\t// Delegating does not work with namespaces. Alternatively, we could delegate all events (using `*`).\n\t\tliveRange.delegate( 'change:range' ).to( this );\n\t\tliveRange.delegate( 'change:content' ).to( this );\n\n\t\tthis._liveRange = liveRange;\n\n\t\treturn liveRange;\n\t}\n\n\t/**\n\t * Unbinds and destroys currently attached live range.\n\t *\n\t * @protected\n\t */\n\t_detachLiveRange() {\n\t\tthis._liveRange.stopDelegating( 'change:range', this );\n\t\tthis._liveRange.stopDelegating( 'change:content', this );\n\t\tthis._liveRange.detach();\n\t\tthis._liveRange = null;\n\t}\n\n\t/**\n\t * Fired whenever {@link ~Marker#_liveRange marker range} is changed due to changes on {@link module:engine/model/document~Document}.\n\t * This is a delegated {@link module:engine/model/liverange~LiveRange#event:change:range LiveRange change:range event}.\n\t *\n\t * When marker is removed from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection},\n\t * all event listeners listening to it should be removed. It is best to do it on\n\t * {@link module:engine/model/markercollection~MarkerCollection#event:update MarkerCollection update event}.\n\t *\n\t * @see module:engine/model/liverange~LiveRange#event:change:range\n\t * @event change:range\n\t * @param {module:engine/model/range~Range} oldRange\n\t * @param {Object} data\n\t */\n\n\t/**\n\t * Fired whenever change on {@link module:engine/model/document~Document} is done inside {@link ~Marker#_liveRange marker range}.\n\t * This is a delegated {@link module:engine/model/liverange~LiveRange#event:change:content LiveRange change:content event}.\n\t *\n\t * When marker is removed from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection},\n\t * all event listeners listening to it should be removed. It is best to do it on\n\t * {@link module:engine/model/markercollection~MarkerCollection#event:update MarkerCollection update event}.\n\t *\n\t * @see module:engine/model/liverange~LiveRange#event:change:content\n\t * @event change:content\n\t * @param {module:engine/model/range~Range} oldRange\n\t * @param {Object} data\n\t */\n}\n\nmix( Marker, EmitterMixin );\n\n/**\n * Cannot use a {@link module:engine/model/markercollection~MarkerCollection#destroy destroyed marker} instance.\n *\n * @error marker-destroyed\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/nooperation\n */\n\nimport Operation from './operation';\n\n/**\n * Operation which is doing nothing (\"empty operation\", \"do-nothing operation\", \"noop\"). This is an operation,\n * which when executed does not change the tree model. It still has some parameters defined for transformation purposes.\n *\n * In most cases this operation is a result of transforming operations. When transformation returns\n * {@link module:engine/model/operation/nooperation~NoOperation} it means that changes done by the transformed operation\n * have already been applied.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class NoOperation extends Operation {\n\tget type() {\n\t\treturn 'noop';\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/nooperation~NoOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new NoOperation( this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/nooperation~NoOperation}\n\t */\n\tgetReversed() {\n\t\treturn new NoOperation( this.baseVersion + 1 );\n\t}\n\n\t_execute() {\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'NoOperation';\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `NoOperation( ${ this.baseVersion } )`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/operationfactory\n */\n\nimport AttributeOperation from '../operation/attributeoperation';\nimport InsertOperation from '../operation/insertoperation';\nimport MarkerOperation from '../operation/markeroperation';\nimport MoveOperation from '../operation/moveoperation';\nimport NoOperation from '../operation/nooperation';\nimport Operation from '../operation/operation';\nimport RenameOperation from '../operation/renameoperation';\nimport RootAttributeOperation from '../operation/rootattributeoperation';\nimport SplitOperation from '../operation/splitoperation';\nimport MergeOperation from '../operation/mergeoperation';\n\nconst operations = {};\noperations[ AttributeOperation.className ] = AttributeOperation;\noperations[ InsertOperation.className ] = InsertOperation;\noperations[ MarkerOperation.className ] = MarkerOperation;\noperations[ MoveOperation.className ] = MoveOperation;\noperations[ NoOperation.className ] = NoOperation;\noperations[ Operation.className ] = Operation;\noperations[ RenameOperation.className ] = RenameOperation;\noperations[ RootAttributeOperation.className ] = RootAttributeOperation;\noperations[ SplitOperation.className ] = SplitOperation;\noperations[ MergeOperation.className ] = MergeOperation;\n\n/**\n * A factory class for creating operations.\n *\n * @abstract\n */\nexport default class OperationFactory {\n\t/**\n\t * Creates an operation instance from a JSON object (parsed JSON string).\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/operation~Operation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn operations[ json.__className ].fromJSON( json, document );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/liveposition\n */\n\nimport Position from './position';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * `LivePosition` is a type of {@link module:engine/model/position~Position Position}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Contrary to {@link module:engine/model/position~Position}, `LivePosition` works only in roots that are\n * {@link module:engine/model/rootelement~RootElement}.\n * If {@link module:engine/model/documentfragment~DocumentFragment} is passed, error will be thrown.\n *\n * **Note:** Be very careful when dealing with `LivePosition`. Each `LivePosition` instance bind events that might\n * have to be unbound.\n * Use {@link module:engine/model/liveposition~LivePosition#detach} whenever you don't need `LivePosition` anymore.\n *\n * @extends module:engine/model/position~Position\n */\nexport default class LivePosition extends Position {\n\t/**\n\t * Creates a live position.\n\t *\n\t * @see module:engine/model/position~Position\n\t * @param {module:engine/model/rootelement~RootElement} root\n\t * @param {Array.<Number>} path\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness]\n\t */\n\tconstructor( root, path, stickiness = 'toNone' ) {\n\t\tsuper( root, path, stickiness );\n\n\t\tif ( !this.root.is( 'rootElement' ) ) {\n\t\t\t/**\n\t\t\t * LivePosition's root has to be an instance of RootElement.\n\t\t\t *\n\t\t\t * @error liveposition-root-not-rootelement\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-liveposition-root-not-rootelement: LivePosition\\'s root has to be an instance of RootElement.',\n\t\t\t\troot\n\t\t\t);\n\t\t}\n\n\t\tbindWithDocument.call( this );\n\t}\n\n\t/**\n\t * Unbinds all events previously bound by `LivePosition`. Use it whenever you don't need `LivePosition` instance\n\t * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n\t * referring to it).\n\t */\n\tdetach() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tlivePosition.is( 'position' ); // -> true\n\t *\t\tlivePosition.is( 'model:position' ); // -> true\n\t *\t\tlivePosition.is( 'liveposition' ); // -> true\n\t *\t\tlivePosition.is( 'model:livePosition' ); // -> true\n\t *\n\t *\t\tlivePosition.is( 'view:position' ); // -> false\n\t *\t\tlivePosition.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === 'livePosition' || type === 'model:livePosition' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype == 'position' || type === 'model:position';\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/model/position~Position position instance}, which is equal to this live position.\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\ttoPosition() {\n\t\treturn new Position( this.root, this.path.slice(), this.stickiness );\n\t}\n\n\t/**\n\t * Creates a `LivePosition` instance that is equal to position.\n\t *\n\t * @param {module:engine/model/position~Position} position\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness]\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tstatic fromPosition( position, stickiness ) {\n\t\treturn new this( position.root, position.path.slice(), stickiness ? stickiness : position.stickiness );\n\t}\n\n\t/**\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liveposition~LivePosition._createAfter\n\t * @see module:engine/model/position~Position._createAfter\n\t * @param {module:engine/model/node~Node} node\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\n\t * @returns {module:engine/model/liveposition~LivePosition}\n\t */\n\n\t/**\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liveposition~LivePosition._createBefore\n\t * @see module:engine/model/position~Position._createBefore\n\t * @param {module:engine/model/node~Node} node\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\n\t * @returns {module:engine/model/liveposition~LivePosition}\n\t */\n\n\t/**\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liveposition~LivePosition._createAt\n\t * @see module:engine/model/position~Position._createAt\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset]\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\n\t * @returns {module:engine/model/liveposition~LivePosition}\n\t */\n\n\t/**\n\t * Fired when `LivePosition` instance is changed due to changes on {@link module:engine/model/document~Document}.\n\t *\n\t * @event module:engine/model/liveposition~LivePosition#change\n\t * @param {module:engine/model/position~Position} oldPosition Position equal to this live position before it got changed.\n\t */\n}\n\n// Binds this `LivePosition` to the {@link module:engine/model/document~Document document} that owns\n// this position's {@link module:engine/model/position~Position#root root}.\n//\n// @private\nfunction bindWithDocument() {\n\tthis.listenTo(\n\t\tthis.root.document.model,\n\t\t'applyOperation',\n\t\t( event, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( !operation.isDocumentOperation ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttransform.call( this, operation );\n\t\t},\n\t\t{ priority: 'low' }\n\t);\n}\n\n// Updates this position accordingly to the updates applied to the model. Bases on change events.\n//\n// @private\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\nfunction transform( operation ) {\n\tconst result = this.getTransformedByOperation( operation );\n\n\tif ( !this.isEqual( result ) ) {\n\t\tconst oldPosition = this.toPosition();\n\n\t\tthis.path = result.path;\n\t\tthis.root = result.root;\n\n\t\tthis.fire( 'change', oldPosition );\n\t}\n}\n\nmix( LivePosition, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/insertcontent\n */\n\nimport Position from '../position';\nimport LivePosition from '../liveposition';\nimport Element from '../element';\nimport Range from '../range';\nimport DocumentSelection from '../documentselection';\nimport Selection from '../selection';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Inserts content into the editor (specified selection) as one would expect the paste\n * functionality to work.\n *\n * If an instance of {@link module:engine/model/selection~Selection} is passed as `selectable` it will be modified\n * to the insertion selection (equal to a range to be selected after insertion).\n *\n * If `selectable` is not passed, the content will be inserted using the current selection of the model document.\n *\n * **Note:** Use {@link module:engine/model/model~Model#insertContent} instead of this function.\n * This function is only exposed to be reusable in algorithms which change the {@link module:engine/model/model~Model#insertContent}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which the insertion\n * should be performed.\n * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n * @param {module:engine/model/selection~Selectable} [selectable=model.document.selection]\n * Selection into which the content should be inserted.\n * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n * @returns {module:engine/model/range~Range} Range which contains all the performed changes. This is a range that, if removed,\n * would return the model to the state before the insertion. If no changes were preformed by `insertContent`, returns a range collapsed\n * at the insertion position.\n */\nexport default function insertContent( model, content, selectable, placeOrOffset ) {\n\treturn model.change( writer => {\n\t\tlet selection;\n\n\t\tif ( !selectable ) {\n\t\t\tselection = model.document.selection;\n\t\t} else if ( selectable instanceof Selection || selectable instanceof DocumentSelection ) {\n\t\t\tselection = selectable;\n\t\t} else {\n\t\t\tselection = writer.createSelection( selectable, placeOrOffset );\n\t\t}\n\n\t\tif ( !selection.isCollapsed ) {\n\t\t\tmodel.deleteContent( selection, { doNotAutoparagraph: true } );\n\t\t}\n\n\t\tconst insertion = new Insertion( model, writer, selection.anchor );\n\n\t\tlet nodesToInsert;\n\n\t\tif ( content.is( 'documentFragment' ) ) {\n\t\t\tnodesToInsert = content.getChildren();\n\t\t} else {\n\t\t\tnodesToInsert = [ content ];\n\t\t}\n\n\t\tinsertion.handleNodes( nodesToInsert, {\n\t\t\t// The set of children being inserted is the only set in this context\n\t\t\t// so it's the first and last (it's a hack ;)).\n\t\t\tisFirst: true,\n\t\t\tisLast: true\n\t\t} );\n\n\t\tconst newRange = insertion.getSelectionRange();\n\n\t\t/* istanbul ignore else */\n\t\tif ( newRange ) {\n\t\t\tif ( selection instanceof DocumentSelection ) {\n\t\t\t\twriter.setSelection( newRange );\n\t\t\t} else {\n\t\t\t\tselection.setTo( newRange );\n\t\t\t}\n\t\t} else {\n\t\t\t// We are not testing else because it's a safe check for unpredictable edge cases:\n\t\t\t// an insertion without proper range to select.\n\t\t\t//\n\t\t\t// @if CK_DEBUG // console.warn( 'Cannot determine a proper selection range after insertion.' );\n\t\t}\n\n\t\tconst affectedRange = insertion.getAffectedRange() || model.createRange( selection.anchor );\n\n\t\tinsertion.destroy();\n\n\t\treturn affectedRange;\n\t} );\n}\n\n/**\n * Utility class for performing content insertion.\n *\n * @private\n */\nclass Insertion {\n\tconstructor( model, writer, position ) {\n\t\t/**\n\t\t * The model in context of which the insertion should be performed.\n\t\t *\n\t\t * @member {module:engine/model~Model} #model\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * Batch to which operations will be added.\n\t\t *\n\t\t * @member {module:engine/controller/writer~Batch} #writer\n\t\t */\n\t\tthis.writer = writer;\n\n\t\t/**\n\t\t * The position at which (or near which) the next node will be inserted.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} #position\n\t\t */\n\t\tthis.position = position;\n\n\t\t/**\n\t\t * Elements with which the inserted elements can be merged.\n\t\t *\n\t\t *\t\t<p>x^</p><p>y</p> + <p>z</p> (can merge to <p>x</p>)\n\t\t *\t\t<p>x</p><p>^y</p> + <p>z</p> (can merge to <p>y</p>)\n\t\t *\t\t<p>x^y</p> + <p>z</p> (can merge to <p>xy</p> which will be split during the action,\n\t\t *\t\t\t\t\t\t\t\tso both its pieces will be added to this set)\n\t\t *\n\t\t *\n\t\t * @member {Set} #canMergeWith\n\t\t */\n\t\tthis.canMergeWith = new Set( [ this.position.parent ] );\n\n\t\t/**\n\t\t * Schema of the model.\n\t\t *\n\t\t * @member {module:engine/model/schema~Schema} #schema\n\t\t */\n\t\tthis.schema = model.schema;\n\n\t\tthis._filterAttributesOf = [];\n\n\t\t/**\n\t\t * Beginning of the affected range. See {@link module:engine/model/utils/insertcontent~Insertion#getAffectedRange}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/liveposition~LivePosition|null} #_affectedStart\n\t\t */\n\t\tthis._affectedStart = null;\n\n\t\t/**\n\t\t * End of the affected range. See {@link module:engine/model/utils/insertcontent~Insertion#getAffectedRange}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/liveposition~LivePosition|null} #_affectedEnd\n\t\t */\n\t\tthis._affectedEnd = null;\n\t}\n\n\t/**\n\t * Handles insertion of a set of nodes.\n\t *\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to insert.\n\t * @param {Object} parentContext Context in which parent of these nodes was supposed to be inserted.\n\t * If the parent context is passed it means that the parent element was stripped (was not allowed).\n\t */\n\thandleNodes( nodes, parentContext ) {\n\t\tnodes = Array.from( nodes );\n\n\t\tfor ( let i = 0; i < nodes.length; i++ ) {\n\t\t\tconst node = nodes[ i ];\n\n\t\t\tthis._handleNode( node, {\n\t\t\t\tisFirst: i === 0 && parentContext.isFirst,\n\t\t\t\tisLast: ( i === ( nodes.length - 1 ) ) && parentContext.isLast\n\t\t\t} );\n\t\t}\n\n\t\t// TMP this will become a post-fixer.\n\t\tthis.schema.removeDisallowedAttributes( this._filterAttributesOf, this.writer );\n\t\tthis._filterAttributesOf = [];\n\t}\n\n\t/**\n\t * Returns range to be selected after insertion.\n\t * Returns `null` if there is no valid range to select after insertion.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetSelectionRange() {\n\t\tif ( this.nodeToSelect ) {\n\t\t\treturn Range._createOn( this.nodeToSelect );\n\t\t}\n\n\t\treturn this.model.schema.getNearestSelectionRange( this.position );\n\t}\n\n\t/**\n\t * Returns a range which contains all the performed changes. This is a range that, if removed, would return the model to the state\n\t * before the insertion. Returns `null` if no changes were done.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetAffectedRange() {\n\t\tif ( !this._affectedStart ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new Range( this._affectedStart, this._affectedEnd );\n\t}\n\n\t/**\n\t * Destroys `Insertion` instance.\n\t */\n\tdestroy() {\n\t\tif ( this._affectedStart ) {\n\t\t\tthis._affectedStart.detach();\n\t\t}\n\n\t\tif ( this._affectedEnd ) {\n\t\t\tthis._affectedEnd.detach();\n\t\t}\n\t}\n\n\t/**\n\t * Handles insertion of a single node.\n\t *\n\t * @private\n\t * @param {module:engine/model/node~Node} node\n\t * @param {Object} context\n\t * @param {Boolean} context.isFirst Whether the given node is the first one in the content to be inserted.\n\t * @param {Boolean} context.isLast Whether the given node is the last one in the content to be inserted.\n\t */\n\t_handleNode( node, context ) {\n\t\t// Let's handle object in a special way.\n\t\t// * They should never be merged with other elements.\n\t\t// * If they are not allowed in any of the selection ancestors, they could be either autoparagraphed or totally removed.\n\t\tif ( this.schema.isObject( node ) ) {\n\t\t\tthis._handleObject( node, context );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Try to find a place for the given node.\n\t\t// Split the position.parent's branch up to a point where the node can be inserted.\n\t\t// If it isn't allowed in the whole branch, then of course don't split anything.\n\t\tconst isAllowed = this._checkAndSplitToAllowedPosition( node, context );\n\n\t\tif ( !isAllowed ) {\n\t\t\tthis._handleDisallowedNode( node, context );\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._insert( node );\n\n\t\t// After the node was inserted we may try to merge it with its siblings.\n\t\t// This should happen only if it was the first and/or last of the nodes (so only with boundary nodes)\n\t\t// and only if the selection was in those elements initially.\n\t\t//\n\t\t// E.g.:\n\t\t// <p>x^</p> + <p>y</p> => <p>x</p><p>y</p> => <p>xy[]</p>\n\t\t// and:\n\t\t// <p>x^y</p> + <p>z</p> => <p>x</p>^<p>y</p> + <p>z</p> => <p>x</p><p>z</p><p>y</p> => <p>xz[]y</p>\n\t\t// but:\n\t\t// <p>x</p><p>^</p><p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging)\n\t\t// <p>x</p>[<img>]<p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging, note: after running deleteContents\n\t\t//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t it's exactly the same case as above)\n\t\tthis._mergeSiblingsOf( node, context );\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/element~Element} node The object element.\n\t * @param {Object} context\n\t */\n\t_handleObject( node, context ) {\n\t\t// Try finding it a place in the tree.\n\t\tif ( this._checkAndSplitToAllowedPosition( node ) ) {\n\t\t\tthis._insert( node );\n\t\t}\n\t\t// Try autoparagraphing.\n\t\telse {\n\t\t\tthis._tryAutoparagraphing( node, context );\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/node~Node} node The disallowed node which needs to be handled.\n\t * @param {Object} context\n\t */\n\t_handleDisallowedNode( node, context ) {\n\t\t// If the node is an element, try inserting its children (strip the parent).\n\t\tif ( node.is( 'element' ) ) {\n\t\t\tthis.handleNodes( node.getChildren(), context );\n\t\t}\n\t\t// If text is not allowed, try autoparagraphing it.\n\t\telse {\n\t\t\tthis._tryAutoparagraphing( node, context );\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node to insert.\n\t */\n\t_insert( node ) {\n\t\t/* istanbul ignore if */\n\t\tif ( !this.schema.checkChild( this.position, node ) ) {\n\t\t\t// Algorithm's correctness check. We should never end up here but it's good to know that we did.\n\t\t\t// Note that it would often be a silent issue if we insert node in a place where it's not allowed.\n\n\t\t\t/**\n\t\t\t * Given node cannot be inserted on the given position.\n\t\t\t *\n\t\t\t * @error insertcontent-wrong-position\n\t\t\t * @param {module:engine/model/node~Node} node Node to insert.\n\t\t\t * @param {module:engine/model/position~Position} position Position to insert the node at.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'insertcontent-wrong-position: Given node cannot be inserted on the given position.',\n\t\t\t\tthis,\n\t\t\t\t{ node, position: this.position }\n\t\t\t);\n\t\t}\n\n\t\tconst livePos = LivePosition.fromPosition( this.position, 'toNext' );\n\n\t\tthis._setAffectedBoundaries( this.position );\n\t\tthis.writer.insert( node, this.position );\n\n\t\tthis.position = livePos.toPosition();\n\t\tlivePos.detach();\n\n\t\t// The last inserted object should be selected because we can't put a collapsed selection after it.\n\t\tif ( this.schema.isObject( node ) && !this.schema.checkChild( this.position, '$text' ) ) {\n\t\t\tthis.nodeToSelect = node;\n\t\t} else {\n\t\t\tthis.nodeToSelect = null;\n\t\t}\n\n\t\tthis._filterAttributesOf.push( node );\n\t}\n\n\t/**\n\t * Sets `_affectedStart` and `_affectedEnd` to the given `position`. Should be used before a change is done during insertion process to\n\t * mark the affected range.\n\t *\n\t * This method is used before inserting a node or splitting a parent node. `_affectedStart` and `_affectedEnd` are also changed\n\t * during merging, but the logic there is more complicated so it is left out of this function.\n\t *\n\t * @private\n\t * @param {module:engine/model/position~Position} position\n\t */\n\t_setAffectedBoundaries( position ) {\n\t\t// Set affected boundaries stickiness so that those position will \"expand\" when something is inserted in between them:\n\t\t// <paragraph>Foo][bar</paragraph> -> <paragraph>Foo]xx[bar</paragraph>\n\t\t// This is why it cannot be a range but two separate positions.\n\t\tif ( !this._affectedStart ) {\n\t\t\tthis._affectedStart = LivePosition.fromPosition( position, 'toPrevious' );\n\t\t}\n\n\t\t// If `_affectedEnd` is before the new boundary position, expand `_affectedEnd`. This can happen if first inserted node was\n\t\t// inserted into the parent but the next node is moved-out of that parent:\n\t\t// (1) <paragraph>Foo][</paragraph> -> <paragraph>Foo]xx[</paragraph>\n\t\t// (2) <paragraph>Foo]xx[</paragraph> -> <paragraph>Foo]xx</paragraph><widget></widget>[\n\t\tif ( !this._affectedEnd || this._affectedEnd.isBefore( position ) ) {\n\t\t\tif ( this._affectedEnd ) {\n\t\t\t\tthis._affectedEnd.detach();\n\t\t\t}\n\n\t\t\tthis._affectedEnd = LivePosition.fromPosition( position, 'toNext' );\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n\t * @param {Object} context\n\t */\n\t_mergeSiblingsOf( node, context ) {\n\t\tif ( !( node instanceof Element ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst mergeLeft = this._canMergeLeft( node, context );\n\t\tconst mergeRight = this._canMergeRight( node, context );\n\t\tconst mergePosLeft = LivePosition._createBefore( node );\n\t\tmergePosLeft.stickiness = 'toNext';\n\t\tconst mergePosRight = LivePosition._createAfter( node );\n\t\tmergePosRight.stickiness = 'toNext';\n\n\t\tif ( mergeLeft ) {\n\t\t\tconst livePosition = LivePosition.fromPosition( this.position );\n\t\t\tlivePosition.stickiness = 'toNext';\n\n\t\t\t// If `_affectedStart` is sames as merge position, it means that the element \"marked\" by `_affectedStart` is going to be\n\t\t\t// removed and its contents will be moved. This won't transform `LivePosition` so `_affectedStart` needs to be moved\n\t\t\t// by hand to properly reflect affected range. (Due to `_affectedStart` and `_affectedEnd` stickiness, the \"range\" is\n\t\t\t// shown as `][`).\n\t\t\t//\n\t\t\t// Example - insert `<paragraph>Abc</paragraph><paragraph>Xyz</paragraph>` at the end of `<paragraph>Foo^</paragraph>`:\n\t\t\t//\n\t\t\t// <paragraph>Foo</paragraph><paragraph>Bar</paragraph>   -->\n\t\t\t// <paragraph>Foo</paragraph>]<paragraph>Abc</paragraph><paragraph>Xyz</paragraph>[<paragraph>Bar</paragraph>   -->\n\t\t\t// <paragraph>Foo]Abc</paragraph><paragraph>Xyz</paragraph>[<paragraph>Bar</paragraph>\n\t\t\t//\n\t\t\t// Note, that if we are here then something must have been inserted, so `_affectedStart` and `_affectedEnd` have to be set.\n\t\t\tif ( this._affectedStart.isEqual( mergePosLeft ) ) {\n\t\t\t\tthis._affectedStart.detach();\n\t\t\t\tthis._affectedStart = LivePosition._createAt( mergePosLeft.nodeBefore, 'end', 'toPrevious' );\n\t\t\t}\n\n\t\t\tthis.writer.merge( mergePosLeft );\n\n\t\t\t// If only one element (the merged one) is in the \"affected range\", also move the affected range end appropriately.\n\t\t\t//\n\t\t\t// Example - insert `<paragraph>Abc</paragraph>` at the of `<paragraph>Foo^</paragraph>`:\n\t\t\t//\n\t\t\t// <paragraph>Foo</paragraph><paragraph>Bar</paragraph>   -->\n\t\t\t// <paragraph>Foo</paragraph>]<paragraph>Abc</paragraph>[<paragraph>Bar</paragraph>   -->\n\t\t\t// <paragraph>Foo]Abc</paragraph>[<paragraph>Bar</paragraph>   -->\n\t\t\t// <paragraph>Foo]Abc[</paragraph><paragraph>Bar</paragraph>\n\t\t\tif ( mergePosLeft.isEqual( this._affectedEnd ) && context.isLast ) {\n\t\t\t\tthis._affectedEnd.detach();\n\t\t\t\tthis._affectedEnd = LivePosition._createAt( mergePosLeft.nodeBefore, 'end', 'toNext' );\n\t\t\t}\n\n\t\t\tthis.position = livePosition.toPosition();\n\t\t\tlivePosition.detach();\n\t\t}\n\n\t\tif ( mergeRight ) {\n\t\t\t/* istanbul ignore if */\n\t\t\tif ( !this.position.isEqual( mergePosRight ) ) {\n\t\t\t\t// Algorithm's correctness check. We should never end up here but it's good to know that we did.\n\t\t\t\t// At this point the insertion position should be after the node we'll merge. If it isn't,\n\t\t\t\t// it should need to be secured as in the left merge case.\n\t\t\t\t/**\n\t\t\t\t * An internal error occured during merging insertion content with siblings.\n\t\t\t\t * The insertion position should equal to the merge position.\n\t\t\t\t *\n\t\t\t\t * @error insertcontent-invalid-insertion-position\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'insertcontent-invalid-insertion-position', this );\n\t\t\t}\n\n\t\t\t// Move the position to the previous node, so it isn't moved to the graveyard on merge.\n\t\t\t// <p>x</p>[]<p>y</p> => <p>x[]</p><p>y</p>\n\t\t\tthis.position = Position._createAt( mergePosRight.nodeBefore, 'end' );\n\n\t\t\t// OK:  <p>xx[]</p> + <p>yy</p> => <p>xx[]yy</p> (when sticks to previous)\n\t\t\t// NOK: <p>xx[]</p> + <p>yy</p> => <p>xxyy[]</p> (when sticks to next)\n\t\t\tconst livePosition = LivePosition.fromPosition( this.position, 'toPrevious' );\n\n\t\t\t// See comment above on moving `_affectedStart`.\n\t\t\tif ( this._affectedEnd.isEqual( mergePosRight ) ) {\n\t\t\t\tthis._affectedEnd.detach();\n\t\t\t\tthis._affectedEnd = LivePosition._createAt( mergePosRight.nodeBefore, 'end', 'toNext' );\n\t\t\t}\n\n\t\t\tthis.writer.merge( mergePosRight );\n\n\t\t\t// See comment above on moving `_affectedStart`.\n\t\t\tif ( mergePosRight.getShiftedBy( -1 ).isEqual( this._affectedStart ) && context.isFirst ) {\n\t\t\t\tthis._affectedStart.detach();\n\t\t\t\tthis._affectedStart = LivePosition._createAt( mergePosRight.nodeBefore, 0, 'toPrevious' );\n\t\t\t}\n\n\t\t\tthis.position = livePosition.toPosition();\n\t\t\tlivePosition.detach();\n\t\t}\n\n\t\tif ( mergeLeft || mergeRight ) {\n\t\t\t// After merge elements that were marked by _insert() to be filtered might be gone so\n\t\t\t// we need to mark the new container.\n\t\t\tthis._filterAttributesOf.push( this.position.parent );\n\t\t}\n\n\t\tmergePosLeft.detach();\n\t\tmergePosRight.detach();\n\t}\n\n\t/**\n\t * Checks whether specified node can be merged with previous sibling element.\n\t *\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n\t * @param {Object} context\n\t * @returns {Boolean}\n\t */\n\t_canMergeLeft( node, context ) {\n\t\tconst previousSibling = node.previousSibling;\n\n\t\treturn context.isFirst &&\n\t\t\t( previousSibling instanceof Element ) &&\n\t\t\tthis.canMergeWith.has( previousSibling ) &&\n\t\t\tthis.model.schema.checkMerge( previousSibling, node );\n\t}\n\n\t/**\n\t * Checks whether specified node can be merged with next sibling element.\n\t *\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n\t * @param {Object} context\n\t * @returns {Boolean}\n\t */\n\t_canMergeRight( node, context ) {\n\t\tconst nextSibling = node.nextSibling;\n\n\t\treturn context.isLast &&\n\t\t\t( nextSibling instanceof Element ) &&\n\t\t\tthis.canMergeWith.has( nextSibling ) &&\n\t\t\tthis.model.schema.checkMerge( node, nextSibling );\n\t}\n\n\t/**\n\t * Tries wrapping the node in a new paragraph and inserting it this way.\n\t *\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node which needs to be autoparagraphed.\n\t * @param {Object} context\n\t */\n\t_tryAutoparagraphing( node, context ) {\n\t\tconst paragraph = this.writer.createElement( 'paragraph' );\n\n\t\t// Do not autoparagraph if the paragraph won't be allowed there,\n\t\t// cause that would lead to an infinite loop. The paragraph would be rejected in\n\t\t// the next _handleNode() call and we'd be here again.\n\t\tif ( this._getAllowedIn( paragraph, this.position.parent ) && this.schema.checkChild( paragraph, node ) ) {\n\t\t\tparagraph._appendChild( node );\n\t\t\tthis._handleNode( paragraph, context );\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/node~Node} node\n\t * @returns {Boolean} Whether an allowed position was found.\n\t * `false` is returned if the node isn't allowed at any position up in the tree, `true` if was.\n\t */\n\t_checkAndSplitToAllowedPosition( node ) {\n\t\tconst allowedIn = this._getAllowedIn( node, this.position.parent );\n\n\t\tif ( !allowedIn ) {\n\t\t\treturn false;\n\t\t}\n\n\t\twhile ( allowedIn != this.position.parent ) {\n\t\t\t// If a parent which we'd need to leave is a limit element, break.\n\t\t\tif ( this.schema.isLimit( this.position.parent ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif ( this.position.isAtStart ) {\n\t\t\t\t// If insertion position is at the beginning of the parent, move it out instead of splitting.\n\t\t\t\t// <p>^Foo</p> -> ^<p>Foo</p>\n\t\t\t\tconst parent = this.position.parent;\n\n\t\t\t\tthis.position = this.writer.createPositionBefore( parent );\n\n\t\t\t\t// Special case – parent is empty (<p>^</p>).\n\t\t\t\t//\n\t\t\t\t// 1. parent.isEmpty\n\t\t\t\t// We can remove the element after moving insertion position out of it.\n\t\t\t\t//\n\t\t\t\t// 2. parent.parent === allowedIn\n\t\t\t\t// However parent should remain in place when allowed element is above limit element in document tree.\n\t\t\t\t// For example there shouldn't be allowed to remove empty paragraph from tableCell, when is pasted\n\t\t\t\t// content allowed in $root.\n\t\t\t\tif ( parent.isEmpty && parent.parent === allowedIn ) {\n\t\t\t\t\tthis.writer.remove( parent );\n\t\t\t\t}\n\t\t\t} else if ( this.position.isAtEnd ) {\n\t\t\t\t// If insertion position is at the end of the parent, move it out instead of splitting.\n\t\t\t\t// <p>Foo^</p> -> <p>Foo</p>^\n\t\t\t\tthis.position = this.writer.createPositionAfter( this.position.parent );\n\t\t\t} else {\n\t\t\t\tconst tempPos = this.writer.createPositionAfter( this.position.parent );\n\n\t\t\t\tthis._setAffectedBoundaries( this.position );\n\t\t\t\tthis.writer.split( this.position );\n\n\t\t\t\tthis.position = tempPos;\n\n\t\t\t\tthis.canMergeWith.add( this.position.nodeAfter );\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Gets the element in which the given node is allowed. It checks the passed element and all its ancestors.\n\t *\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node to check.\n\t * @param {module:engine/model/element~Element} element The element in which the node's correctness should be checked.\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\t_getAllowedIn( node, element ) {\n\t\tif ( this.schema.checkChild( element, node ) ) {\n\t\t\treturn element;\n\t\t}\n\n\t\tif ( element.parent ) {\n\t\t\treturn this._getAllowedIn( node, element.parent );\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/deletecontent\n */\n\nimport LivePosition from '../liveposition';\nimport Range from '../range';\nimport DocumentSelection from '../documentselection';\n\n/**\n * Deletes content of the selection and merge siblings. The resulting selection is always collapsed.\n *\n * **Note:** Use {@link module:engine/model/model~Model#deleteContent} instead of this function.\n * This function is only exposed to be reusable in algorithms\n * which change the {@link module:engine/model/model~Model#deleteContent}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which the insertion\n * should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * Selection of which the content should be deleted.\n * @param {Object} [options]\n * @param {Boolean} [options.leaveUnmerged=false] Whether to merge elements after removing the content of the selection.\n *\n * For example `<heading>x[x</heading><paragraph>y]y</paragraph>` will become:\n *\n * * `<heading>x^y</heading>` with the option disabled (`leaveUnmerged == false`)\n * * `<heading>x^</heading><paragraph>y</paragraph>` with enabled (`leaveUnmerged == true`).\n *\n * Note: {@link module:engine/model/schema~Schema#isObject object} and {@link module:engine/model/schema~Schema#isLimit limit}\n * elements will not be merged.\n *\n * @param {Boolean} [options.doNotResetEntireContent=false] Whether to skip replacing the entire content with a\n * paragraph when the entire content was selected.\n *\n * For example `<heading>[x</heading><paragraph>y]</paragraph>` will become:\n *\n * * `<paragraph>^</paragraph>` with the option disabled (`doNotResetEntireContent == false`)\n * * `<heading>^</heading>` with enabled (`doNotResetEntireContent == true`).\n *\n * @param {Boolean} [options.doNotAutoparagraph=false] Whether to create a paragraph if after content deletion selection is moved\n * to a place where text cannot be inserted.\n *\n * For example `<paragraph>x</paragraph>[<image src=\"foo.jpg\"></image>]` will become:\n *\n * * `<paragraph>x</paragraph><paragraph>[]</paragraph>` with the option disabled (`doNotAutoparagraph == false`)\n * * `<paragraph>x</paragraph>[]` with the option enabled (`doNotAutoparagraph == true`).\n *\n * If you use this option you need to make sure to handle invalid selections yourself or leave\n * them to the selection post-fixer (may not always work).\n *\n * **Note:** if there is no valid position for the selection, the paragraph will always be created:\n *\n * `[<image src=\"foo.jpg\"></image>]` -> `<paragraph>[]</paragraph>`.\n */\nexport default function deleteContent( model, selection, options = {} ) {\n\tif ( selection.isCollapsed ) {\n\t\treturn;\n\t}\n\n\tconst selRange = selection.getFirstRange();\n\n\t// If the selection is already removed, don't do anything.\n\tif ( selRange.root.rootName == '$graveyard' ) {\n\t\treturn;\n\t}\n\n\tconst schema = model.schema;\n\n\tmodel.change( writer => {\n\t\t// 1. Replace the entire content with paragraph.\n\t\t// See: https://github.com/ckeditor/ckeditor5-engine/issues/1012#issuecomment-315017594.\n\t\tif ( !options.doNotResetEntireContent && shouldEntireContentBeReplacedWithParagraph( schema, selection ) ) {\n\t\t\treplaceEntireContentWithParagraph( writer, selection, schema );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst startPos = selRange.start;\n\t\tconst endPos = LivePosition.fromPosition( selRange.end, 'toNext' );\n\n\t\t// 2. Remove the content if there is any.\n\t\tif ( !selRange.start.isTouching( selRange.end ) ) {\n\t\t\twriter.remove( selRange );\n\t\t}\n\n\t\t// 3. Merge elements in the right branch to the elements in the left branch.\n\t\t// The only reasonable (in terms of data and selection correctness) case in which we need to do that is:\n\t\t//\n\t\t// <heading type=1>Fo[</heading><paragraph>]ar</paragraph> => <heading type=1>Fo^ar</heading>\n\t\t//\n\t\t// However, the algorithm supports also merging deeper structures (up to the depth of the shallower branch),\n\t\t// as it's hard to imagine what should actually be the default behavior. Usually, specific features will\n\t\t// want to override that behavior anyway.\n\t\tif ( !options.leaveUnmerged ) {\n\t\t\tmergeBranches( writer, startPos, endPos );\n\n\t\t\t// TMP this will be replaced with a postfixer.\n\t\t\t// We need to check and strip disallowed attributes in all nested nodes because after merge\n\t\t\t// some attributes could end up in a path where are disallowed.\n\t\t\t//\n\t\t\t// e.g. bold is disallowed for <H1>\n\t\t\t// <h1>Fo{o</h1><p>b}a<b>r</b><p> -> <h1>Fo{}a<b>r</b><h1> -> <h1>Fo{}ar<h1>.\n\t\t\tschema.removeDisallowedAttributes( startPos.parent.getChildren(), writer );\n\t\t}\n\n\t\tcollapseSelectionAt( writer, selection, startPos );\n\n\t\t// 4. Add a paragraph to set selection in it.\n\t\t// Check if a text is allowed in the new container. If not, try to create a new paragraph (if it's allowed here).\n\t\t// If autoparagraphing is off, we assume that you know what you do so we leave the selection wherever it was.\n\t\tif ( !options.doNotAutoparagraph && shouldAutoparagraph( schema, startPos ) ) {\n\t\t\tinsertParagraph( writer, startPos, selection );\n\t\t}\n\n\t\tendPos.detach();\n\t} );\n}\n\n// This function is a result of reaching the Ballmer's peak for just the right amount of time.\n// Even I had troubles documenting it after a while and after reading it again I couldn't believe that it really works.\nfunction mergeBranches( writer, startPos, endPos ) {\n\tconst startParent = startPos.parent;\n\tconst endParent = endPos.parent;\n\n\t// If both positions ended up in the same parent, then there's nothing more to merge:\n\t// <$root><p>x[]</p><p>{}y</p></$root> => <$root><p>xy</p>[]{}</$root>\n\tif ( startParent == endParent ) {\n\t\treturn;\n\t}\n\n\t// If one of the positions is a limit element, then there's nothing to merge because we don't want to cross the limit boundaries.\n\tif ( writer.model.schema.isLimit( startParent ) || writer.model.schema.isLimit( endParent ) ) {\n\t\treturn;\n\t}\n\n\t// Check if operations we'll need to do won't need to cross object or limit boundaries.\n\t// E.g., we can't merge endParent into startParent in this case:\n\t// <limit><startParent>x[]</startParent></limit><endParent>{}</endParent>\n\tif ( !checkCanBeMerged( startPos, endPos, writer.model.schema ) ) {\n\t\treturn;\n\t}\n\n\t// Remember next positions to merge. For example:\n\t// <a><b>x[]</b></a><c><d>{}y</d></c>\n\t// will become:\n\t// <a><b>xy</b>[]</a><c>{}</c>\n\tstartPos = writer.createPositionAfter( startParent );\n\tendPos = writer.createPositionBefore( endParent );\n\n\tif ( !endPos.isEqual( startPos ) ) {\n\t\t// In this case, before we merge, we need to move `endParent` to the `startPos`:\n\t\t// <a><b>x[]</b></a><c><d>{}y</d></c>\n\t\t// becomes:\n\t\t// <a><b>x</b>[]<d>y</d></a><c>{}</c>\n\t\twriter.insert( endParent, startPos );\n\t}\n\n\t// Merge two siblings:\n\t// <a>x</a>[]<b>y</b> -> <a>xy</a> (the usual case)\n\t// <a><b>x</b>[]<d>y</d></a><c></c> -> <a><b>xy</b>[]</a><c></c> (this is the \"move parent\" case shown above)\n\twriter.merge( startPos );\n\n\t// Remove empty end ancestors:\n\t// <a>fo[o</a><b><a><c>bar]</c></a></b>\n\t// becomes:\n\t// <a>fo[]</a><b><a>{}</a></b>\n\t// So we can remove <a> and <b>.\n\twhile ( endPos.parent.isEmpty ) {\n\t\tconst parentToRemove = endPos.parent;\n\n\t\tendPos = writer.createPositionBefore( parentToRemove );\n\n\t\twriter.remove( parentToRemove );\n\t}\n\n\t// Continue merging next level.\n\tmergeBranches( writer, startPos, endPos );\n}\n\nfunction shouldAutoparagraph( schema, position ) {\n\tconst isTextAllowed = schema.checkChild( position, '$text' );\n\tconst isParagraphAllowed = schema.checkChild( position, 'paragraph' );\n\n\treturn !isTextAllowed && isParagraphAllowed;\n}\n\n// Check if parents of two positions can be merged by checking if there are no limit/object\n// boundaries between those two positions.\n//\n// E.g. in <bQ><p>x[]</p></bQ><widget><caption>{}</caption></widget>\n// we'll check <p>, <bQ>, <widget> and <caption>.\n// Usually, widget and caption are marked as objects/limits in the schema, so in this case merging will be blocked.\nfunction checkCanBeMerged( leftPos, rightPos, schema ) {\n\tconst rangeToCheck = new Range( leftPos, rightPos );\n\n\tfor ( const value of rangeToCheck.getWalker() ) {\n\t\tif ( schema.isLimit( value.item ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction insertParagraph( writer, position, selection ) {\n\tconst paragraph = writer.createElement( 'paragraph' );\n\n\twriter.insert( paragraph, position );\n\n\tcollapseSelectionAt( writer, selection, writer.createPositionAt( paragraph, 0 ) );\n}\n\nfunction replaceEntireContentWithParagraph( writer, selection ) {\n\tconst limitElement = writer.model.schema.getLimitElement( selection );\n\n\twriter.remove( writer.createRangeIn( limitElement ) );\n\tinsertParagraph( writer, writer.createPositionAt( limitElement, 0 ), selection );\n}\n\n// We want to replace the entire content with a paragraph when:\n// * the entire content is selected,\n// * selection contains at least two elements,\n// * whether the paragraph is allowed in schema in the common ancestor.\nfunction shouldEntireContentBeReplacedWithParagraph( schema, selection ) {\n\tconst limitElement = schema.getLimitElement( selection );\n\n\tif ( !selection.containsEntireContent( limitElement ) ) {\n\t\treturn false;\n\t}\n\n\tconst range = selection.getFirstRange();\n\n\tif ( range.start.parent == range.end.parent ) {\n\t\treturn false;\n\t}\n\n\treturn schema.checkChild( limitElement, 'paragraph' );\n}\n\n// Helper function that sets the selection. Depending whether given `selection` is a document selection or not,\n// uses a different method to set it.\nfunction collapseSelectionAt( writer, selection, positionOrRange ) {\n\tif ( selection instanceof DocumentSelection ) {\n\t\twriter.setSelection( positionOrRange );\n\t} else {\n\t\tselection.setTo( positionOrRange );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/modifyselection\n */\n\nimport Position from '../position';\nimport TreeWalker from '../treewalker';\nimport Range from '../range';\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\nimport DocumentSelection from '../documentselection';\n\nconst wordBoundaryCharacters = ' ,.?!:;\"-()';\n\n/**\n * Modifies the selection. Currently, the supported modifications are:\n *\n * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\n * Possible values for `unit` are:\n *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\n *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\n *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\n *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\n *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\n *  why `'character'` value is most natural and common method of modifying selection.\n *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\n *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\n *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\n *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\n *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\n *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\n *  extension will include whole \"surrogate pair\".\n *  * `'word'` - moves selection by a whole word.\n *\n * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\n *\n * **Note:** Use {@link module:engine/model/model~Model#modifySelection} instead of this function.\n * This function is only exposed to be reusable in algorithms\n * which change the {@link module:engine/model/model~Model#modifySelection}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which\n * the selection modification should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection to modify.\n * @param {Object} [options]\n * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\n * @param {'character'|'codePoint'|'word'} [options.unit='character'] The unit by which selection should be modified.\n */\nexport default function modifySelection( model, selection, options = {} ) {\n\tconst schema = model.schema;\n\tconst isForward = options.direction != 'backward';\n\tconst unit = options.unit ? options.unit : 'character';\n\n\tconst focus = selection.focus;\n\n\tconst walker = new TreeWalker( {\n\t\tboundaries: getSearchRange( focus, isForward ),\n\t\tsingleCharacters: true,\n\t\tdirection: isForward ? 'forward' : 'backward'\n\t} );\n\n\tconst data = { walker, schema, isForward, unit };\n\n\tlet next;\n\n\twhile ( ( next = walker.next() ) ) {\n\t\tif ( next.done ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst position = tryExtendingTo( data, next.value );\n\n\t\tif ( position ) {\n\t\t\tif ( selection instanceof DocumentSelection ) {\n\t\t\t\tmodel.change( writer => {\n\t\t\t\t\twriter.setSelectionFocus( position );\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tselection.setFocus( position );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t}\n}\n\n// Checks whether the selection can be extended to the the walker's next value (next position).\n// @param {{ walker, unit, isForward, schema }} data\n// @param {module:engine/view/treewalker~TreeWalkerValue} value\nfunction tryExtendingTo( data, value ) {\n\t// If found text, we can certainly put the focus in it. Let's just find a correct position\n\t// based on the unit.\n\tif ( value.type == 'text' ) {\n\t\tif ( data.unit === 'word' ) {\n\t\t\treturn getCorrectWordBreakPosition( data.walker, data.isForward );\n\t\t}\n\n\t\treturn getCorrectPosition( data.walker, data.unit, data.isForward );\n\t}\n\n\t// Entering an element.\n\tif ( value.type == ( data.isForward ? 'elementStart' : 'elementEnd' ) ) {\n\t\t// If it's an object, we can select it now.\n\t\tif ( data.schema.isObject( value.item ) ) {\n\t\t\treturn Position._createAt( value.item, data.isForward ? 'after' : 'before' );\n\t\t}\n\n\t\t// If text allowed on this position, extend to this place.\n\t\tif ( data.schema.checkChild( value.nextPosition, '$text' ) ) {\n\t\t\treturn value.nextPosition;\n\t\t}\n\t}\n\t// Leaving an element.\n\telse {\n\t\t// If leaving a limit element, stop.\n\t\tif ( data.schema.isLimit( value.item ) ) {\n\t\t\t// NOTE: Fast-forward the walker until the end.\n\t\t\tdata.walker.skip( () => true );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// If text allowed on this position, extend to this place.\n\t\tif ( data.schema.checkChild( value.nextPosition, '$text' ) ) {\n\t\t\treturn value.nextPosition;\n\t\t}\n\t}\n}\n\n// Finds a correct position by walking in a text node and checking whether selection can be extended to given position\n// or should be extended further.\n//\n// @param {module:engine/model/treewalker~TreeWalker} walker\n// @param {String} unit The unit by which selection should be modified.\nfunction getCorrectPosition( walker, unit ) {\n\tconst textNode = walker.position.textNode;\n\n\tif ( textNode ) {\n\t\tconst data = textNode.data;\n\t\tlet offset = walker.position.offset - textNode.startOffset;\n\n\t\twhile ( isInsideSurrogatePair( data, offset ) || ( unit == 'character' && isInsideCombinedSymbol( data, offset ) ) ) {\n\t\t\twalker.next();\n\n\t\t\toffset = walker.position.offset - textNode.startOffset;\n\t\t}\n\t}\n\n\treturn walker.position;\n}\n\n// Finds a correct position of a word break by walking in a text node and checking whether selection can be extended to given position\n// or should be extended further.\n//\n// @param {module:engine/model/treewalker~TreeWalker} walker\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\nfunction getCorrectWordBreakPosition( walker, isForward ) {\n\tlet textNode = walker.position.textNode;\n\n\tif ( textNode ) {\n\t\tlet offset = walker.position.offset - textNode.startOffset;\n\n\t\twhile ( !isAtWordBoundary( textNode.data, offset, isForward ) && !isAtNodeBoundary( textNode, offset, isForward ) ) {\n\t\t\twalker.next();\n\n\t\t\t// Check of adjacent text nodes with different attributes (like BOLD).\n\t\t\t// Example          : 'foofoo []bar<$text bold=\"true\">bar</$text> bazbaz'\n\t\t\t// should expand to : 'foofoo [bar<$text bold=\"true\">bar</$text>] bazbaz'.\n\t\t\tconst nextNode = isForward ? walker.position.nodeAfter : walker.position.nodeBefore;\n\n\t\t\t// Scan only text nodes. Ignore inline elements (like `<softBreak>`).\n\t\t\tif ( nextNode && nextNode.is( 'text' ) ) {\n\t\t\t\t// Check boundary char of an adjacent text node.\n\t\t\t\tconst boundaryChar = nextNode.data.charAt( isForward ? 0 : nextNode.data.length - 1 );\n\n\t\t\t\t// Go to the next node if the character at the boundary of that node belongs to the same word.\n\t\t\t\tif ( !wordBoundaryCharacters.includes( boundaryChar ) ) {\n\t\t\t\t\t// If adjacent text node belongs to the same word go to it & reset values.\n\t\t\t\t\twalker.next();\n\n\t\t\t\t\ttextNode = walker.position.textNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toffset = walker.position.offset - textNode.startOffset;\n\t\t}\n\t}\n\n\treturn walker.position;\n}\n\nfunction getSearchRange( start, isForward ) {\n\tconst root = start.root;\n\tconst searchEnd = Position._createAt( root, isForward ? 'end' : 0 );\n\n\tif ( isForward ) {\n\t\treturn new Range( start, searchEnd );\n\t} else {\n\t\treturn new Range( searchEnd, start );\n\t}\n}\n\n// Checks if selection is on word boundary.\n//\n// @param {String} data The text node value to investigate.\n// @param {Number} offset Position offset.\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\nfunction isAtWordBoundary( data, offset, isForward ) {\n\t// The offset to check depends on direction.\n\tconst offsetToCheck = offset + ( isForward ? 0 : -1 );\n\n\treturn wordBoundaryCharacters.includes( data.charAt( offsetToCheck ) );\n}\n\n// Checks if selection is on node boundary.\n//\n// @param {module:engine/model/text~Text} textNode The text node to investigate.\n// @param {Number} offset Position offset.\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\nfunction isAtNodeBoundary( textNode, offset, isForward ) {\n\treturn offset === ( isForward ? textNode.endOffset : 0 );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/getselectedcontent\n */\n\n/**\n * Gets a clone of the selected content.\n *\n * For example, for the following selection:\n *\n * ```html\n * <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n * ```\n *\n * It will return a document fragment with such a content:\n *\n * ```html\n * <quote><h>st</h></quote><p>se</p>\n * ```\n *\n * @param {module:engine/model/model~Model} model The model in context of which\n * the selection modification should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection of which content will be returned.\n * @returns {module:engine/model/documentfragment~DocumentFragment}\n */\nexport default function getSelectedContent( model, selection ) {\n\treturn model.change( writer => {\n\t\tconst frag = writer.createDocumentFragment();\n\t\tconst range = selection.getFirstRange();\n\n\t\tif ( !range || range.isCollapsed ) {\n\t\t\treturn frag;\n\t\t}\n\n\t\tconst root = range.start.root;\n\t\tconst commonPath = range.start.getCommonPath( range.end );\n\t\tconst commonParent = root.getNodeByPath( commonPath );\n\n\t\t// ## 1st step\n\t\t//\n\t\t// First, we'll clone a fragment represented by a minimal flat range\n\t\t// containing the original range to be cloned.\n\t\t// E.g. let's consider such a range:\n\t\t//\n\t\t// <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n\t\t//\n\t\t// A minimal flat range containing this one is:\n\t\t//\n\t\t// <p>x</p>[<quote><p>y</p><h>first</h></quote><p>second</p>]<p>z</p>\n\t\t//\n\t\t// We can easily clone this structure, preserving e.g. the <quote> element.\n\t\tlet flatSubtreeRange;\n\n\t\tif ( range.start.parent == range.end.parent ) {\n\t\t\t// The original range is flat, so take it.\n\t\t\tflatSubtreeRange = range;\n\t\t} else {\n\t\t\tflatSubtreeRange = writer.createRange(\n\t\t\t\twriter.createPositionAt( commonParent, range.start.path[ commonPath.length ] ),\n\t\t\t\twriter.createPositionAt( commonParent, range.end.path[ commonPath.length ] + 1 )\n\t\t\t);\n\t\t}\n\n\t\tconst howMany = flatSubtreeRange.end.offset - flatSubtreeRange.start.offset;\n\n\t\t// Clone the whole contents.\n\t\tfor ( const item of flatSubtreeRange.getItems( { shallow: true } ) ) {\n\t\t\tif ( item.is( 'textProxy' ) ) {\n\t\t\t\twriter.appendText( item.data, item.getAttributes(), frag );\n\t\t\t} else {\n\t\t\t\twriter.append( item._clone( true ), frag );\n\t\t\t}\n\t\t}\n\n\t\t// ## 2nd step\n\t\t//\n\t\t// If the original range wasn't flat, then we need to remove the excess nodes from the both ends of the cloned fragment.\n\t\t//\n\t\t// For example, for the range shown in the 1st step comment, we need to remove these pieces:\n\t\t//\n\t\t// <quote>[<p>y</p>]<h>[fir]st</h></quote><p>se[cond]</p>\n\t\t//\n\t\t// So this will be the final copied content:\n\t\t//\n\t\t// <quote><h>st</h></quote><p>se</p>\n\t\t//\n\t\t// In order to do that, we remove content from these two ranges:\n\t\t//\n\t\t// [<quote><p>y</p><h>fir]st</h></quote><p>se[cond</p>]\n\t\tif ( flatSubtreeRange != range ) {\n\t\t\t// Find the position of the original range in the cloned fragment.\n\t\t\tconst newRange = range._getTransformedByMove( flatSubtreeRange.start, writer.createPositionAt( frag, 0 ), howMany )[ 0 ];\n\n\t\t\tconst leftExcessRange = writer.createRange( writer.createPositionAt( frag, 0 ), newRange.start );\n\t\t\tconst rightExcessRange = writer.createRange( newRange.end, writer.createPositionAt( frag, 'end' ) );\n\n\t\t\tremoveRangeContent( rightExcessRange, writer );\n\t\t\tremoveRangeContent( leftExcessRange, writer );\n\t\t}\n\n\t\treturn frag;\n\t} );\n}\n\n// After https://github.com/ckeditor/ckeditor5-engine/issues/690 is fixed,\n// this function will, most likely, be able to rewritten using getMinimalFlatRanges().\nfunction removeRangeContent( range, writer ) {\n\tconst parentsToCheck = [];\n\n\tArray.from( range.getItems( { direction: 'backward' } ) )\n\t\t// We should better store ranges because text proxies will lose integrity\n\t\t// with the text nodes when we'll start removing content.\n\t\t.map( item => writer.createRangeOn( item ) )\n\t\t// Filter only these items which are fully contained in the passed range.\n\t\t//\n\t\t// E.g. for the following range: [<quote><p>y</p><h>fir]st</h>\n\t\t// the walker will return the entire <h> element, when only the \"fir\" item inside it is fully contained.\n\t\t.filter( itemRange => {\n\t\t\t// We should be able to use Range.containsRange, but https://github.com/ckeditor/ckeditor5-engine/issues/691.\n\t\t\tconst contained =\n\t\t\t\t( itemRange.start.isAfter( range.start ) || itemRange.start.isEqual( range.start ) ) &&\n\t\t\t\t( itemRange.end.isBefore( range.end ) || itemRange.end.isEqual( range.end ) );\n\n\t\t\treturn contained;\n\t\t} )\n\t\t.forEach( itemRange => {\n\t\t\tparentsToCheck.push( itemRange.start.parent );\n\n\t\t\twriter.remove( itemRange );\n\t\t} );\n\n\t// Remove ancestors of the removed items if they turned to be empty now\n\t// (their whole content was contained in the range).\n\tparentsToCheck.forEach( parentToCheck => {\n\t\tlet parent = parentToCheck;\n\n\t\twhile ( parent.parent && parent.isEmpty ) {\n\t\t\tconst removeRange = writer.createRangeOn( parent );\n\n\t\t\tparent = parent.parent;\n\n\t\t\twriter.remove( removeRange );\n\t\t}\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/selection-post-fixer\n */\n\nimport Range from '../range';\nimport Position from '../position';\n\n/**\n * Injects selection post-fixer to the model.\n *\n * The role of the selection post-fixer is to ensure that the selection is in a correct place\n * after a {@link module:engine/model/model~Model#change `change()`} block was executed.\n *\n * The correct position means that:\n *\n * * All collapsed selection ranges are in a place where the {@link module:engine/model/schema~Schema}\n * allows a `$text`.\n * * None of the selection's non-collapsed ranges crosses a {@link module:engine/model/schema~Schema#isLimit limit element}\n * boundary (a range must be rooted within one limit element).\n * * Only {@link module:engine/model/schema~Schema#isObject object elements} can be selected from the outside\n * (e.g. `[<paragraph>foo</paragraph>]` is invalid). This rule applies independently to both selection ends, so this\n * selection is correct: `<paragraph>f[oo</paragraph><image></image>]`.\n *\n * If the position is not correct, the post-fixer will automatically correct it.\n *\n * ## Fixing a non-collapsed selection\n *\n * See as an example a selection that starts in a P1 element and ends inside the text of a TD element\n * (`[` and `]` are range boundaries and `(l)` denotes an element defined as `isLimit=true`):\n *\n *\t\troot\n *\t\t |- element P1\n *\t\t |   |- \"foo\"                                      root\n *\t\t |- element TABLE (l)                   P1         TABLE             P2\n *\t\t |   |- element TR (l)                 f o[o     TR      TR         b a r\n *\t\t |   |   |- element TD (l)                       TD      TD\n *\t\t |   |       |- \"aaa\"                          a]a a    b b b\n *\t\t |   |- element TR (l)\n *\t\t |   |   |- element TD (l)                           ||\n *\t\t |   |       |- \"bbb\"                                ||\n *\t\t |- element P2                                       VV\n *\t\t |   |- \"bar\"\n *\t\t                                                   root\n *\t\t                                        P1         TABLE]            P2\n *\t\t                                       f o[o     TR      TR         b a r\n *\t\t                                                 TD      TD\n *\t\t                                               a a a    b b b\n *\n * In the example above, the TABLE, TR and TD are defined as `isLimit=true` in the schema. The range which is not contained within\n * a single limit element must be expanded to select the outermost limit element. The range end is inside the text node of the TD element.\n * As the TD element is a child of the TR and TABLE elements, where both are defined as `isLimit=true` in the schema, the range must be\n * expanded to select the whole TABLE element.\n *\n * **Note** If the selection contains multiple ranges, the method returns a minimal set of ranges that are not intersecting after expanding\n * them to select `isLimit=true` elements.\n *\n * @param {module:engine/model/model~Model} model\n */\nexport function injectSelectionPostFixer( model ) {\n\tmodel.document.registerPostFixer( writer => selectionPostFixer( writer, model ) );\n}\n\n// The selection post-fixer.\n//\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/model~Model} model\nfunction selectionPostFixer( writer, model ) {\n\tconst selection = model.document.selection;\n\tconst schema = model.schema;\n\n\tconst ranges = [];\n\n\tlet wasFixed = false;\n\n\tfor ( const modelRange of selection.getRanges() ) {\n\t\t// Go through all ranges in selection and try fixing each of them.\n\t\t// Those ranges might overlap but will be corrected later.\n\t\tconst correctedRange = tryFixingRange( modelRange, schema );\n\n\t\tif ( correctedRange ) {\n\t\t\tranges.push( correctedRange );\n\t\t\twasFixed = true;\n\t\t} else {\n\t\t\tranges.push( modelRange );\n\t\t}\n\t}\n\n\t// If any of ranges were corrected update the selection.\n\tif ( wasFixed ) {\n\t\twriter.setSelection( mergeIntersectingRanges( ranges ), { backward: selection.isBackward } );\n\t}\n}\n\n// Tries fixing a range if it's incorrect.\n//\n// @param {module:engine/model/range~Range} range\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\nfunction tryFixingRange( range, schema ) {\n\tif ( range.isCollapsed ) {\n\t\treturn tryFixingCollapsedRange( range, schema );\n\t}\n\n\treturn tryFixingNonCollapsedRage( range, schema );\n}\n\n// Tries to fix collapsed ranges.\n//\n// * Fixes situation when a range is in a place where $text is not allowed\n//\n// @param {module:engine/model/range~Range} range Collapsed range to fix.\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\nfunction tryFixingCollapsedRange( range, schema ) {\n\tconst originalPosition = range.start;\n\n\tconst nearestSelectionRange = schema.getNearestSelectionRange( originalPosition );\n\n\t// This might be null ie when editor data is empty.\n\t// In such cases there is no need to fix the selection range.\n\tif ( !nearestSelectionRange ) {\n\t\treturn null;\n\t}\n\n\tif ( !nearestSelectionRange.isCollapsed ) {\n\t\treturn nearestSelectionRange;\n\t}\n\n\tconst fixedPosition = nearestSelectionRange.start;\n\n\t// Fixed position is the same as original - no need to return corrected range.\n\tif ( originalPosition.isEqual( fixedPosition ) ) {\n\t\treturn null;\n\t}\n\n\treturn new Range( fixedPosition );\n}\n\n// Tries to fix an expanded range.\n//\n// @param {module:engine/model/range~Range} range Expanded range to fix.\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\nfunction tryFixingNonCollapsedRage( range, schema ) {\n\tconst start = range.start;\n\tconst end = range.end;\n\n\tconst isTextAllowedOnStart = schema.checkChild( start, '$text' );\n\tconst isTextAllowedOnEnd = schema.checkChild( end, '$text' );\n\n\tconst startLimitElement = schema.getLimitElement( start );\n\tconst endLimitElement = schema.getLimitElement( end );\n\n\t// Ranges which both end are inside the same limit element (or root) might needs only minor fix.\n\tif ( startLimitElement === endLimitElement ) {\n\t\t// Range is valid when both position allows to place a text:\n\t\t// - <block>f[oobarba]z</block>\n\t\t// This would be \"fixed\" by a next check but as it will be the same it's better to return null so the selection stays the same.\n\t\tif ( isTextAllowedOnStart && isTextAllowedOnEnd ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Range that is on non-limit element (or is partially) must be fixed so it is placed inside the block around $text:\n\t\t// - [<block>foo</block>]    ->    <block>[foo]</block>\n\t\t// - [<block>foo]</block>    ->    <block>[foo]</block>\n\t\t// - <block>f[oo</block>]    ->    <block>f[oo]</block>\n\t\t// - [<block>foo</block><object></object>]    ->    <block>[foo</block><object></object>]\n\t\tif ( checkSelectionOnNonLimitElements( start, end, schema ) ) {\n\t\t\tconst isStartObject = start.nodeAfter && schema.isObject( start.nodeAfter );\n\t\t\tconst fixedStart = isStartObject ? null : schema.getNearestSelectionRange( start, 'forward' );\n\n\t\t\tconst isEndObject = end.nodeBefore && schema.isObject( end.nodeBefore );\n\t\t\tconst fixedEnd = isEndObject ? null : schema.getNearestSelectionRange( end, 'backward' );\n\n\t\t\t// The schema.getNearestSelectionRange might return null - if that happens use original position.\n\t\t\tconst rangeStart = fixedStart ? fixedStart.start : start;\n\t\t\tconst rangeEnd = fixedEnd ? fixedEnd.start : end;\n\n\t\t\treturn new Range( rangeStart, rangeEnd );\n\t\t}\n\t}\n\n\tconst isStartInLimit = startLimitElement && !startLimitElement.is( 'rootElement' );\n\tconst isEndInLimit = endLimitElement && !endLimitElement.is( 'rootElement' );\n\n\t// At this point we eliminated valid positions on text nodes so if one of range positions is placed inside a limit element\n\t// then the range crossed limit element boundaries and needs to be fixed.\n\tif ( isStartInLimit || isEndInLimit ) {\n\t\tconst bothInSameParent = ( start.nodeAfter && end.nodeBefore ) && start.nodeAfter.parent === end.nodeBefore.parent;\n\n\t\tconst expandStart = isStartInLimit && ( !bothInSameParent || !isInObject( start.nodeAfter, schema ) );\n\t\tconst expandEnd = isEndInLimit && ( !bothInSameParent || !isInObject( end.nodeBefore, schema ) );\n\n\t\t// Although we've already found limit element on start/end positions we must find the outer-most limit element.\n\t\t// as limit elements might be nested directly inside (ie table > tableRow > tableCell).\n\t\tlet fixedStart = start;\n\t\tlet fixedEnd = end;\n\n\t\tif ( expandStart ) {\n\t\t\tfixedStart = Position._createBefore( findOutermostLimitAncestor( startLimitElement, schema ) );\n\t\t}\n\n\t\tif ( expandEnd ) {\n\t\t\tfixedEnd = Position._createAfter( findOutermostLimitAncestor( endLimitElement, schema ) );\n\t\t}\n\n\t\treturn new Range( fixedStart, fixedEnd );\n\t}\n\n\t// Range was not fixed at this point so it is valid - ie it was placed around limit element already.\n\treturn null;\n}\n\n// Finds the outer-most ancestor.\n//\n// @param {module:engine/model/node~Node} startingNode\n// @param {module:engine/model/schema~Schema} schema\n// @param {String} expandToDirection Direction of expansion - either 'start' or 'end' of the range.\n// @returns {module:engine/model/node~Node}\nfunction findOutermostLimitAncestor( startingNode, schema ) {\n\tlet isLimitNode = startingNode;\n\tlet parent = isLimitNode;\n\n\t// Find outer most isLimit block as such blocks might be nested (ie. in tables).\n\twhile ( schema.isLimit( parent ) && parent.parent ) {\n\t\tisLimitNode = parent;\n\t\tparent = parent.parent;\n\t}\n\n\treturn isLimitNode;\n}\n\n// Checks whether any of range boundaries is placed around non-limit elements.\n//\n// @param {module:engine/model/position~Position} start\n// @param {module:engine/model/position~Position} end\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\nfunction checkSelectionOnNonLimitElements( start, end, schema ) {\n\tconst startIsOnBlock = ( start.nodeAfter && !schema.isLimit( start.nodeAfter ) ) || schema.checkChild( start, '$text' );\n\tconst endIsOnBlock = ( end.nodeBefore && !schema.isLimit( end.nodeBefore ) ) || schema.checkChild( end, '$text' );\n\n\t// We should fix such selection when one of those nodes needs fixing.\n\treturn startIsOnBlock || endIsOnBlock;\n}\n\n// Returns a minimal non-intersecting array of ranges.\n//\n// @param {Array.<module:engine/model/range~Range>} ranges\n// @returns {Array.<module:engine/model/range~Range>}\nfunction mergeIntersectingRanges( ranges ) {\n\tconst nonIntersectingRanges = [];\n\n\t// First range will always be fine.\n\tnonIntersectingRanges.push( ranges.shift() );\n\n\tfor ( const range of ranges ) {\n\t\tconst previousRange = nonIntersectingRanges.pop();\n\n\t\tif ( range.isIntersecting( previousRange ) ) {\n\t\t\t// Get the sum of two ranges.\n\t\t\tconst start = previousRange.start.isAfter( range.start ) ? range.start : previousRange.start;\n\t\t\tconst end = previousRange.end.isAfter( range.end ) ? previousRange.end : range.end;\n\n\t\t\tconst merged = new Range( start, end );\n\t\t\tnonIntersectingRanges.push( merged );\n\t\t} else {\n\t\t\tnonIntersectingRanges.push( previousRange );\n\t\t\tnonIntersectingRanges.push( range );\n\t\t}\n\t}\n\n\treturn nonIntersectingRanges;\n}\n\n// Checks if node exists and if it's an object.\n//\n// @param {module:engine/model/node~Node} node\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\nfunction isInObject( node, schema ) {\n\treturn node && schema.isObject( node );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/model\n */\n\nimport Batch from './batch';\nimport Writer from './writer';\nimport Schema from './schema';\nimport Document from './document';\nimport MarkerCollection from './markercollection';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ModelElement from './element';\nimport ModelRange from './range';\nimport ModelPosition from './position';\nimport ModelSelection from './selection';\nimport OperationFactory from './operation/operationfactory';\n\nimport insertContent from './utils/insertcontent';\nimport deleteContent from './utils/deletecontent';\nimport modifySelection from './utils/modifyselection';\nimport getSelectedContent from './utils/getselectedcontent';\nimport { injectSelectionPostFixer } from './utils/selection-post-fixer';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n// @if CK_DEBUG_ENGINE // const { dumpTrees } = require( '../dev-utils/utils' );\n// @if CK_DEBUG_ENGINE // const { OperationReplayer } = require( '../dev-utils/operationreplayer' ).default;\n\n/**\n * Editor's data model. Read about the model in the\n * {@glink framework/guides/architecture/editing-engine engine architecture guide}.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Model {\n\tconstructor() {\n\t\t/**\n\t\t * Model's marker collection.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/markercollection~MarkerCollection}\n\t\t */\n\t\tthis.markers = new MarkerCollection();\n\n\t\t/**\n\t\t * Model's document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/document~Document}\n\t\t */\n\t\tthis.document = new Document( this );\n\n\t\t/**\n\t\t * Model's schema.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/schema~Schema}\n\t\t */\n\t\tthis.schema = new Schema();\n\n\t\t/**\n\t\t * All callbacks added by {@link module:engine/model/model~Model#change} or\n\t\t * {@link module:engine/model/model~Model#enqueueChange} methods waiting to be executed.\n\t\t *\n\t\t * @private\n\t\t * @type {Array.<Function>}\n\t\t */\n\t\tthis._pendingChanges = [];\n\n\t\t/**\n\t\t * The last created and currently used writer instance.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/writer~Writer}\n\t\t */\n\t\tthis._currentWriter = null;\n\n\t\t[ 'insertContent', 'deleteContent', 'modifySelection', 'getSelectedContent', 'applyOperation' ]\n\t\t\t.forEach( methodName => this.decorate( methodName ) );\n\n\t\t// Adding operation validation with `highest` priority, so it is called before any other feature would like\n\t\t// to do anything with the operation. If the operation has incorrect parameters it should throw on the earliest occasion.\n\t\tthis.on( 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\toperation._validate();\n\t\t}, { priority: 'highest' } );\n\n\t\t// Register some default abstract entities.\n\t\tthis.schema.register( '$root', {\n\t\t\tisLimit: true\n\t\t} );\n\t\tthis.schema.register( '$block', {\n\t\t\tallowIn: '$root',\n\t\t\tisBlock: true\n\t\t} );\n\t\tthis.schema.register( '$text', {\n\t\t\tallowIn: '$block',\n\t\t\tisInline: true\n\t\t} );\n\t\tthis.schema.register( '$clipboardHolder', {\n\t\t\tallowContentOf: '$root',\n\t\t\tisLimit: true\n\t\t} );\n\t\tthis.schema.extend( '$text', { allowIn: '$clipboardHolder' } );\n\n\t\t// An element needed by the `upcastElementToMarker` converter.\n\t\t// This element temporarily represents a marker boundary during the conversion process and is removed\n\t\t// at the end of the conversion. `UpcastDispatcher` or at least `Conversion` class looks like a\n\t\t// better place for this registration but both know nothing about `Schema`.\n\t\tthis.schema.register( '$marker' );\n\t\tthis.schema.addChildCheck( ( context, childDefinition ) => {\n\t\t\tif ( childDefinition.name === '$marker' ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t\tinjectSelectionPostFixer( this );\n\n\t\t// @if CK_DEBUG_ENGINE // this.on( 'applyOperation', () => {\n\t\t// @if CK_DEBUG_ENGINE // \tdumpTrees( this.document, this.document.version );\n\t\t// @if CK_DEBUG_ENGINE // }, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * The `change()` method is the primary way of changing the model. You should use it to modify all document nodes\n\t * (including detached nodes – i.e. nodes not added to the {@link module:engine/model/model~Model#document model document}),\n\t * the {@link module:engine/model/document~Document#selection document's selection}, and\n\t * {@link module:engine/model/model~Model#markers model markers}.\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n\t *\t\t} );\n\t *\n\t * All changes inside the change block use the same {@link module:engine/model/batch~Batch} so they are combined\n\t * into a single undo step.\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\twriter.insertText( 'foo', paragraph, 'end' ); // foo.\n\t *\n\t *\t\t\tmodel.change( writer => {\n\t *\t\t\t\twriter.insertText( 'bar', paragraph, 'end' ); // foobar.\n\t *\t\t\t} );\n\t *\n\t * \t\t\twriter.insertText( 'bom', paragraph, 'end' ); // foobarbom.\n\t *\t\t} );\n\t *\n\t * The callback of the `change()` block is executed synchronously.\n\t *\n\t * You can also return a value from the change block.\n\t *\n\t *\t\tconst img = model.change( writer => {\n\t *\t\t\treturn writer.createElement( 'img' );\n\t *\t\t} );\n\t *\n\t * @see #enqueueChange\n\t * @param {Function} callback Callback function which may modify the model.\n\t * @returns {*} Value returned by the callback.\n\t */\n\tchange( callback ) {\n\t\ttry {\n\t\t\tif ( this._pendingChanges.length === 0 ) {\n\t\t\t\t// If this is the outermost block, create a new batch and start `_runPendingChanges` execution flow.\n\t\t\t\tthis._pendingChanges.push( { batch: new Batch(), callback } );\n\n\t\t\t\treturn this._runPendingChanges()[ 0 ];\n\t\t\t} else {\n\t\t\t\t// If this is not the outermost block, just execute the callback.\n\t\t\t\treturn callback( this._currentWriter );\n\t\t\t}\n\t\t} catch ( err ) {\n\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t/* istanbul ignore next */\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t}\n\t}\n\n\t/**\n\t * The `enqueueChange()` method performs similar task as the {@link #change `change()` method}, with two major differences.\n\t *\n\t * First, the callback of `enqueueChange()` is executed when all other enqueued changes are done. It might be executed\n\t * immediately if it is not nested in any other change block, but if it is nested in another (enqueue)change block,\n\t * it will be delayed and executed after the outermost block.\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\tconsole.log( 1 );\n\t *\n\t *\t\t\tmodel.enqueueChange( writer => {\n\t *\t\t\t\tconsole.log( 2 );\n\t *\t\t\t} );\n\t *\n\t * \t\t\tconsole.log( 3 );\n\t *\t\t} ); // Will log: 1, 3, 2.\n\t *\n\t * In addition to that, the changes enqueued with `enqueueChange()` will be converted separately from the changes\n\t * done in the outer `change()` block.\n\t *\n\t * Second, it lets you define the {@link module:engine/model/batch~Batch} into which you want to add your changes.\n\t * By default, a new batch is created. In the sample above, `change` and `enqueueChange` blocks use a different\n\t * batch (and different {@link module:engine/model/writer~Writer} since each of them operates on the separate batch).\n\t *\n\t * When using the `enqueueChange()` block you can also add some changes to the batch you used before.\n\t *\n\t *\t\tmodel.enqueueChange( batch, writer => {\n\t *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n\t *\t\t} );\n\t *\n\t * In order to make a nested `enqueueChange()` create a single undo step together with the changes done in the outer `change()`\n\t * block, you can obtain the batch instance from the  {@link module:engine/model/writer~Writer#batch writer} of the outer block.\n\t *\n\t * @param {module:engine/model/batch~Batch|'transparent'|'default'} batchOrType Batch or batch type should be used in the callback.\n\t * If not defined, a new batch will be created.\n\t * @param {Function} callback Callback function which may modify the model.\n\t */\n\tenqueueChange( batchOrType, callback ) {\n\t\ttry {\n\t\t\tif ( typeof batchOrType === 'string' ) {\n\t\t\t\tbatchOrType = new Batch( batchOrType );\n\t\t\t} else if ( typeof batchOrType == 'function' ) {\n\t\t\t\tcallback = batchOrType;\n\t\t\t\tbatchOrType = new Batch();\n\t\t\t}\n\n\t\t\tthis._pendingChanges.push( { batch: batchOrType, callback } );\n\n\t\t\tif ( this._pendingChanges.length == 1 ) {\n\t\t\t\tthis._runPendingChanges();\n\t\t\t}\n\t\t} catch ( err ) {\n\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t/* istanbul ignore next */\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t}\n\t}\n\n\t/**\n\t * {@link module:utils/observablemixin~ObservableMixin#decorate Decorated} function for applying\n\t * {@link module:engine/model/operation/operation~Operation operations} to the model.\n\t *\n\t * This is a low-level way of changing the model. It is exposed for very specific use cases (like the undo feature).\n\t * Normally, to modify the model, you will want to use {@link module:engine/model/writer~Writer `Writer`}.\n\t * See also {@glink framework/guides/architecture/editing-engine#changing-the-model Changing the model} section\n\t * of the {@glink framework/guides/architecture/editing-engine Editing architecture} guide.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation The operation to apply.\n\t */\n\tapplyOperation( operation ) {\n\t\t// @if CK_DEBUG_ENGINE // console.log( 'Applying ' + operation );\n\n\t\t// @if CK_DEBUG_ENGINE // if ( !this._operationLogs ) {\n\t\t// @if CK_DEBUG_ENGINE //\tthis._operationLogs = [];\n\t\t// @if CK_DEBUG_ENGINE // }\n\n\t\t// @if CK_DEBUG_ENGINE // this._operationLogs.push( JSON.stringify( operation ) );\n\n\t\t// @if CK_DEBUG_ENGINE //if ( !this._appliedOperations ) {\n\t\t// @if CK_DEBUG_ENGINE //\tthis._appliedOperations = [];\n\t\t// @if CK_DEBUG_ENGINE //}\n\n\t\t// @if CK_DEBUG_ENGINE //this._appliedOperations.push( operation );\n\n\t\toperation._execute();\n\t}\n\n\t// @if CK_DEBUG_ENGINE // getAppliedOperation() {\n\t// @if CK_DEBUG_ENGINE //\tif ( !this._appliedOperations ) {\n\t// @if CK_DEBUG_ENGINE //\t\treturn '';\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\treturn this._appliedOperations.map( JSON.stringify ).join( '-------' );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // createReplayer( stringifiedOperations ) {\n\t// @if CK_DEBUG_ENGINE //\treturn new OperationReplayer( this, '-------', stringifiedOperations );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t/**\n\t * Inserts content at the position in the editor specified by the selection, as one would expect the paste\n\t * functionality to work.\n\t *\n\t * This is a high-level method. It takes the {@link #schema schema} into consideration when inserting\n\t * the content, clears the given selection's content before inserting nodes and moves the selection\n\t * to its target position at the end of the process.\n\t * It can split elements, merge them, wrap bare text nodes with paragraphs, etc. &mdash; just like the\n\t * pasting feature should do.\n\t *\n\t * For lower-level methods see {@link module:engine/model/writer~Writer `Writer`}.\n\t *\n\t * This method, unlike {@link module:engine/model/writer~Writer `Writer`}'s methods, does not have to be used\n\t * inside a {@link #change `change()` block}.\n\t *\n\t * # Conversion and schema\n\t *\n\t * Inserting elements and text nodes into the model is not enough to make CKEditor 5 render that content\n\t * to the user. CKEditor 5 implements a model-view-controller architecture and what `model.insertContent()` does\n\t * is only adding nodes to the model. Additionally, you need to define\n\t * {@glink framework/guides/architecture/editing-engine#conversion converters} between the model and view\n\t * and define those nodes in the {@glink framework/guides/architecture/editing-engine#schema schema}.\n\t *\n\t * So, while this method may seem similar to CKEditor 4 `editor.insertHtml()` (in fact, both methods\n\t * are used for paste-like content insertion), the CKEditor 5 method cannot be use to insert arbitrary HTML\n\t * unless converters are defined for all elements and attributes in that HTML.\n\t *\n\t * # Examples\n\t *\n\t * Using `insertContent()` with a manually created model structure:\n\t *\n\t *\t\t// Let's create a document fragment containing such content as:\n\t *\t\t//\n\t *\t\t// <paragraph>foo</paragraph>\n\t *\t\t// <blockQuote>\n\t *\t\t//    <paragraph>bar</paragraph>\n\t *\t\t// </blockQuote>\n\t *\t\tconst docFrag = editor.model.change( writer => {\n\t *\t\t\tconst p1 = writer.createElement( 'paragraph' );\n\t *\t\t\tconst p2 = writer.createElement( 'paragraph' );\n\t *\t\t\tconst blockQuote = writer.createElement( 'blockQuote' );\n\t *\t\t\tconst docFrag = writer.createDocumentFragment();\n\t *\n\t *\t\t\twriter.append( p1, docFrag );\n\t *\t\t\twriter.append( blockQuote, docFrag );\n\t *\t\t\twriter.append( p2, blockQuote );\n\t *\t\t\twriter.insertText( 'foo', p1 );\n\t *\t\t\twriter.insertText( 'bar', p2 );\n\t *\n\t *\t\t\treturn docFrag;\n\t *\t\t} );\n\t *\n\t *\t\t// insertContent() does not have to be used in a change() block. It can, though,\n\t *\t\t// so this code could be moved to the callback defined above.\n\t *\t\teditor.model.insertContent( docFrag );\n\t *\n\t * Using `insertContent()` with an HTML string converted to a model document fragment (similar to the pasting mechanism):\n\t *\n\t *\t\t// You can create your own HtmlDataProcessor instance or use editor.data.processor\n\t *\t\t// if you have not overridden the default one (which is the HtmlDataProcessor instance).\n\t *\t\tconst htmlDP = new HtmlDataProcessor( viewDocument );\n\t *\n\t *\t\t// Convert an HTML string to a view document fragment:\n\t *\t\tconst viewFragment = htmlDP.toView( htmlString );\n\t *\n\t *\t\t// Convert the view document fragment to a model document fragment\n\t *\t\t// in the context of $root. This conversion takes the schema into\n\t *\t\t// account so if, for example, the view document fragment contained a bare text node,\n\t *\t\t// this text node cannot be a child of $root, so it will be automatically\n\t *\t\t// wrapped with a <paragraph>. You can define the context yourself (in the second parameter),\n\t *\t\t// and e.g. convert the content like it would happen in a <paragraph>.\n\t *\t\t// Note: The clipboard feature uses a custom context called $clipboardHolder\n\t *\t\t// which has a loosened schema.\n\t *\t\tconst modelFragment = editor.data.toModel( viewFragment );\n\t *\n\t *\t\teditor.model.insertContent( modelFragment );\n\t *\n\t * By default this method will use the document selection but it can also be used with a position, range or selection instance.\n\t *\n\t *\t\t// Insert text at the current document selection position.\n\t *\t\teditor.model.change( writer => {\n\t *\t\t\teditor.model.insertContent( writer.createText( 'x' ) );\n\t *\t\t} );\n\t *\n\t *\t\t// Insert text at a given position - the document selection will not be modified.\n\t *\t\teditor.model.change( writer => {\n\t *\t\t\teditor.model.insertContent( writer.createText( 'x' ), doc.getRoot(), 2 );\n\t *\n\t *\t\t\t// Which is a shorthand for:\n\t *\t\t\teditor.model.insertContent( writer.createText( 'x' ), writer.createPositionAt( doc.getRoot(), 2 ) );\n\t *\t\t} );\n\t *\n\t * If you want the document selection to be moved to the inserted content, use the\n\t * {@link module:engine/model/writer~Writer#setSelection `setSelection()`} method of the writer after inserting\n\t * the content:\n\t *\n\t *\t\teditor.model.change( writer => {\n\t *\t\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\n\t *\t\t\t// Insert an empty paragraph at the beginning of the root.\n\t *\t\t\teditor.model.insertContent( paragraph, writer.createPositionAt( editor.model.document.getRoot(), 0 ) );\n\t *\n\t *\t\t\t// Move the document selection to the inserted paragraph.\n\t *\t\t\twriter.setSelection( paragraph, 'in' );\n\t *\t\t} );\n\t *\n\t * If an instance of the {@link module:engine/model/selection~Selection model selection} is passed as `selectable`,\n\t * the new content will be inserted at the passed selection (instead of document selection):\n\t *\n\t *\t\teditor.model.change( writer => {\n\t *\t\t\t// Create a selection in a paragraph that will be used as a place of insertion.\n\t *\t\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t\t// Insert the new text at the created selection.\n\t *\t\t\teditor.model.insertContent( writer.createText( 'x' ), selection );\n\t *\n\t *\t\t\t// insertContent() modifies the passed selection instance so it can be used to set the document selection.\n\t *\t\t\t// Note: This is not necessary when you passed the document selection to insertContent().\n\t *\t\t\twriter.setSelection( selection );\n\t *\t\t} );\n\t *\n\t * @fires insertContent\n\t * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n\t * @param {module:engine/model/selection~Selectable} [selectable=model.document.selection]\n\t * The selection into which the content should be inserted. If not provided the current model document selection will be used.\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] To be used when a model item was passed as `selectable`.\n\t * This param defines a position in relation to that item.\n\t * @returns {module:engine/model/range~Range} Range which contains all the performed changes. This is a range that, if removed,\n\t * would return the model to the state before the insertion. If no changes were preformed by `insertContent`, returns a range collapsed\n\t * at the insertion position.\n\t */\n\tinsertContent( content, selectable, placeOrOffset ) {\n\t\treturn insertContent( this, content, selectable, placeOrOffset );\n\t}\n\n\t/**\n\t * Deletes content of the selection and merge siblings. The resulting selection is always collapsed.\n\t *\n\t * **Note:** For the sake of predictability, the resulting selection should always be collapsed.\n\t * In cases where a feature wants to modify deleting behavior so selection isn't collapsed\n\t * (e.g. a table feature may want to keep row selection after pressing <kbd>Backspace</kbd>),\n\t * then that behavior should be implemented in the view's listener. At the same time, the table feature\n\t * will need to modify this method's behavior too, e.g. to \"delete contents and then collapse\n\t * the selection inside the last selected cell\" or \"delete the row and collapse selection somewhere near\".\n\t * That needs to be done in order to ensure that other features which use `deleteContent()` will work well with tables.\n\t *\n\t * @fires deleteContent\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n\t * Selection of which the content should be deleted.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.leaveUnmerged=false] Whether to merge elements after removing the content of the selection.\n\t *\n\t * For example `<heading1>x[x</heading1><paragraph>y]y</paragraph>` will become:\n\t *\n\t * * `<heading1>x^y</heading1>` with the option disabled (`leaveUnmerged == false`)\n\t * * `<heading1>x^</heading1><paragraph>y</paragraph>` with enabled (`leaveUnmerged == true`).\n\t *\n\t * Note: {@link module:engine/model/schema~Schema#isObject object} and {@link module:engine/model/schema~Schema#isLimit limit}\n\t * elements will not be merged.\n\t *\n\t * @param {Boolean} [options.doNotResetEntireContent=false] Whether to skip replacing the entire content with a\n\t * paragraph when the entire content was selected.\n\t *\n\t * For example `<heading1>[x</heading1><paragraph>y]</paragraph>` will become:\n\t *\n\t * * `<paragraph>^</paragraph>` with the option disabled (`doNotResetEntireContent == false`)\n\t * * `<heading1>^</heading1>` with enabled (`doNotResetEntireContent == true`)\n\t *\n\t * @param {Boolean} [options.doNotAutoparagraph=false] Whether to create a paragraph if after content deletion selection is moved\n\t * to a place where text cannot be inserted.\n\t *\n\t * For example `<paragraph>x</paragraph>[<image src=\"foo.jpg\"></image>]` will become:\n\t *\n\t * * `<paragraph>x</paragraph><paragraph>[]</paragraph>` with the option disabled (`doNotAutoparagraph == false`)\n\t * * `<paragraph>x[]</paragraph>` with the option enabled (`doNotAutoparagraph == true`).\n\t *\n\t * **Note:** if there is no valid position for the selection, the paragraph will always be created:\n\t *\n\t * `[<image src=\"foo.jpg\"></image>]` -> `<paragraph>[]</paragraph>`.\n\t *\n\t * @param {'forward'|'backward'} [options.direction='backward'] The direction in which the content is being consumed.\n\t * Deleting backward corresponds to using the <kbd>Backspace</kbd> key, while deleting content forward corresponds to\n\t * the <kbd>Shift</kbd>+<kbd>Backspace</kbd> keystroke.\n\t */\n\tdeleteContent( selection, options ) {\n\t\tdeleteContent( this, selection, options );\n\t}\n\n\t/**\n\t * Modifies the selection. Currently, the supported modifications are:\n\t *\n\t * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\n\t * Possible values for `unit` are:\n\t *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\n\t *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\n\t *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\n\t *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\n\t *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\n\t *  why `'character'` value is most natural and common method of modifying selection.\n\t *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\n\t *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\n\t *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\n\t *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\n\t *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\n\t *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\n\t *  extension will include whole \"surrogate pair\".\n\t *  * `'word'` - moves selection by a whole word.\n\t *\n\t * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\n\t *\n\t * @fires modifySelection\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n\t * The selection to modify.\n\t * @param {Object} [options]\n\t * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\n\t * @param {'character'|'codePoint'|'word'} [options.unit='character'] The unit by which selection should be modified.\n\t */\n\tmodifySelection( selection, options ) {\n\t\tmodifySelection( this, selection, options );\n\t}\n\n\t/**\n\t * Gets a clone of the selected content.\n\t *\n\t * For example, for the following selection:\n\t *\n\t * ```html\n\t * <paragraph>x</paragraph>\n\t * <blockQuote>\n\t *\t<paragraph>y</paragraph>\n\t *\t<heading1>fir[st</heading1>\n\t * </blockQuote>\n\t * <paragraph>se]cond</paragraph>\n\t * <paragraph>z</paragraph>\n\t * ```\n\t *\n\t * It will return a document fragment with such a content:\n\t *\n\t * ```html\n\t * <blockQuote>\n\t *\t<heading1>st</heading1>\n\t * </blockQuote>\n\t * <paragraph>se</paragraph>\n\t * ```\n\t *\n\t * @fires getSelectedContent\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n\t * The selection of which content will be returned.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tgetSelectedContent( selection ) {\n\t\treturn getSelectedContent( this, selection );\n\t}\n\n\t/**\n\t * Checks whether the given {@link module:engine/model/range~Range range} or\n\t * {@link module:engine/model/element~Element element} has any meaningful content.\n\t *\n\t * Meaningful content is:\n\t *\n\t * * any text node (`options.ignoreWhitespaces` allows controlling whether this text node must also contain\n\t * any non-whitespace characters),\n\t * * or any {@link module:engine/model/schema~Schema#isObject object element},\n\t * * or any {@link module:engine/model/markercollection~Marker marker} which\n\t * {@link module:engine/model/markercollection~Marker#_affectsData affects data}.\n\t *\n\t * This means that a range containing an empty `<paragraph></paragraph>` is not considered to have a meaningful content.\n\t * However, a range containing an `<image></image>` (which would normally be marked in the schema as an object element)\n\t * is considered non-empty.\n\t *\n\t * @param {module:engine/model/range~Range|module:engine/model/element~Element} rangeOrElement Range or element to check.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.ignoreWhitespaces] Whether text node with whitespaces only should be considered empty.\n\t * @returns {Boolean}\n\t */\n\thasContent( rangeOrElement, options ) {\n\t\tconst range = rangeOrElement instanceof ModelElement ? ModelRange._createIn( rangeOrElement ) : rangeOrElement;\n\n\t\tif ( range.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if there are any markers which affects data in this given range.\n\t\tfor ( const intersectingMarker of this.markers.getMarkersIntersectingRange( range ) ) {\n\t\t\tif ( intersectingMarker.affectsData ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tconst { ignoreWhitespaces = false } = options || {};\n\n\t\tfor ( const item of range.getItems() ) {\n\t\t\tif ( item.is( 'textProxy' ) ) {\n\t\t\t\tif ( !ignoreWhitespaces ) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else if ( item.data.search( /\\S/ ) !== -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else if ( this.schema.isObject( item ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates a position from the given root and path in that root.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createPositionFromPath `Writer#createPositionFromPath()`}.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n\t * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n\t * See {@link module:engine/model/position~PositionStickiness}.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionFromPath( root, path, stickiness ) {\n\t\treturn new ModelPosition( root, path, stickiness );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/model/position~Position position},\n\t * * a parent element and offset in that element,\n\t * * a parent element and `'end'` (the position will be set at the end of that element),\n\t * * a {@link module:engine/model/item~Item model item} and `'before'` or `'after'`\n\t * (the position will be set before or after the given model item).\n\t *\n\t * This method is a shortcut to other factory methods such as:\n\t *\n\t * * {@link module:engine/model/model~Model#createPositionBefore `createPositionBefore()`},\n\t * * {@link module:engine/model/model~Model#createPositionAfter `createPositionAfter()`}.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createPositionAt `Writer#createPositionAt()`},\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tcreatePositionAt( itemOrPosition, offset ) {\n\t\treturn ModelPosition._createAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new position after the given {@link module:engine/model/item~Item model item}.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createPositionAfter `Writer#createPositionAfter()`}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionAfter( item ) {\n\t\treturn ModelPosition._createAfter( item );\n\t}\n\n\t/**\n\t * Creates a new position before the given {@link module:engine/model/item~Item model item}.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createPositionBefore `Writer#createPositionBefore()`}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item before which the position should be placed.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionBefore( item ) {\n\t\treturn ModelPosition._createBefore( item );\n\t}\n\n\t/**\n\t * Creates a range spanning from the `start` position to the `end` position.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createRange `Writer#createRange()`}:\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\tconst range = writer.createRange( start, end );\n\t *\t\t} );\n\t *\n\t * @param {module:engine/model/position~Position} start Start position.\n\t * @param {module:engine/model/position~Position} [end] End position. If not set, the range will be collapsed\n\t * to the `start` position.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRange( start, end ) {\n\t\treturn new ModelRange( start, end );\n\t}\n\n\t/**\n\t * Creates a range inside the given element which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createRangeIn `Writer#createRangeIn()`}:\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\tconst range = writer.createRangeIn( paragraph );\n\t *\t\t} );\n\t *\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRangeIn( element ) {\n\t\treturn ModelRange._createIn( element );\n\t}\n\n\t/**\n\t * Creates a range that starts before the given {@link module:engine/model/item~Item model item} and ends after it.\n\t *\n\t * Note: This method is also available on `writer` instance as\n\t * {@link module:engine/model/writer~Writer#createRangeOn `Writer.createRangeOn()`}:\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\tconst range = writer.createRangeOn( paragraph );\n\t *\t\t} );\n\t *\n\t * @param {module:engine/model/item~Item} item\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRangeOn( item ) {\n\t\treturn ModelRange._createOn( item );\n\t}\n\n\t/**\n\t * Creates a new selection instance based on the given {@link module:engine/model/selection~Selectable selectable}\n\t * or creates an empty selection if no arguments were passed.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createSelection `Writer#createSelection()`}.\n\t *\n\t *\t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the given document selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst documentSelection = model.document.selection;\n\t *\t\tconst selection = writer.createSelection( documentSelection );\n\t *\n\t *\t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates selection at the given offset in the given element.\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/model/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t *\t\t// Additional options (`'backward'`) can be specified as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @returns {module:engine/model/selection~Selection}\n\t */\n\tcreateSelection( selectable, placeOrOffset, options ) {\n\t\treturn new ModelSelection( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/model/batch~Batch} instance.\n\t *\n\t * **Note:** In most cases creating a batch instance is not necessary as they are created when using:\n\t *\n\t * * {@link #change `change()`},\n\t * * {@link #enqueueChange `enqueueChange()`}.\n\t *\n\t * @param {'transparent'|'default'} [type='default'] The type of the batch.\n\t * @returns {module:engine/model/batch~Batch}\n\t */\n\tcreateBatch( type ) {\n\t\treturn new Batch( type );\n\t}\n\n\t/**\n\t * Creates an operation instance from a JSON object (parsed JSON string).\n\t *\n\t * This is an alias for {@link module:engine/model/operation/operationfactory~OperationFactory.fromJSON `OperationFactory.fromJSON()`}.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @returns {module:engine/model/operation/operation~Operation}\n\t */\n\tcreateOperationFromJSON( json ) {\n\t\treturn OperationFactory.fromJSON( json, this.document );\n\t}\n\n\t/**\n\t * Removes all events listeners set by model instance and destroys {@link module:engine/model/document~Document}.\n\t */\n\tdestroy() {\n\t\tthis.document.destroy();\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Common part of {@link module:engine/model/model~Model#change} and {@link module:engine/model/model~Model#enqueueChange}\n\t * which calls callbacks and returns array of values returned by these callbacks.\n\t *\n\t * @private\n\t * @returns {Array.<*>} Array of values returned by callbacks.\n\t */\n\t_runPendingChanges() {\n\t\tconst ret = [];\n\n\t\tthis.fire( '_beforeChanges' );\n\n\t\twhile ( this._pendingChanges.length ) {\n\t\t\t// Create a new writer using batch instance created for this chain of changes.\n\t\t\tconst currentBatch = this._pendingChanges[ 0 ].batch;\n\t\t\tthis._currentWriter = new Writer( this, currentBatch );\n\n\t\t\t// Execute changes callback and gather the returned value.\n\t\t\tconst callbackReturnValue = this._pendingChanges[ 0 ].callback( this._currentWriter );\n\t\t\tret.push( callbackReturnValue );\n\n\t\t\tthis.document._handleChangeBlock( this._currentWriter );\n\n\t\t\tthis._pendingChanges.shift();\n\t\t\tthis._currentWriter = null;\n\t\t}\n\n\t\tthis.fire( '_afterChanges' );\n\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Fired when entering the outermost {@link module:engine/model/model~Model#enqueueChange} or\n\t * {@link module:engine/model/model~Model#change} block.\n\t *\n\t * @protected\n\t * @event _beforeChanges\n\t */\n\n\t/**\n\t * Fired when leaving the outermost {@link module:engine/model/model~Model#enqueueChange} or\n\t * {@link module:engine/model/model~Model#change} block.\n\t *\n\t * @protected\n\t * @event _afterChanges\n\t */\n\n\t/**\n\t * Fired every time any {@link module:engine/model/operation/operation~Operation operation} is applied on the model\n\t * using {@link #applyOperation}.\n\t *\n\t * Note that this event is suitable only for very specific use-cases. Use it if you need to listen to every single operation\n\t * applied on the document. However, in most cases {@link module:engine/model/document~Document#event:change} should\n\t * be used.\n\t *\n\t * A few callbacks are already added to this event by engine internal classes:\n\t *\n\t * * with `highest` priority operation is validated,\n\t * * with `normal` priority operation is executed,\n\t * * with `low` priority the {@link module:engine/model/document~Document} updates its version,\n\t * * with `low` priority {@link module:engine/model/liveposition~LivePosition} and {@link module:engine/model/liverange~LiveRange}\n\t * update themselves.\n\t *\n\t * @event applyOperation\n\t * @param {Array} args Arguments of the `applyOperation` which is an array with a single element - applied\n\t * {@link module:engine/model/operation/operation~Operation operation}.\n\t */\n\n\t/**\n\t * Event fired when {@link #insertContent} method is called.\n\t *\n\t * The {@link #insertContent default action of that method} is implemented as a\n\t * listener to this event so it can be fully customized by the features.\n\t *\n\t * **Note** The `selectable` parameter for the {@link #insertContent} is optional. When `undefined` value is passed the method uses\n\t * `model.document.selection`.\n\t *\n\t * @event insertContent\n\t * @param {Array} args The arguments passed to the original method.\n\t */\n\n\t/**\n\t * Event fired when {@link #deleteContent} method is called.\n\t *\n\t * The {@link #deleteContent default action of that method} is implemented as a\n\t * listener to this event so it can be fully customized by the features.\n\t *\n\t * @event deleteContent\n\t * @param {Array} args The arguments passed to the original method.\n\t */\n\n\t/**\n\t * Event fired when {@link #modifySelection} method is called.\n\t *\n\t * The {@link #modifySelection default action of that method} is implemented as a\n\t * listener to this event so it can be fully customized by the features.\n\t *\n\t * @event modifySelection\n\t * @param {Array} args The arguments passed to the original method.\n\t */\n\n\t/**\n\t * Event fired when {@link #getSelectedContent} method is called.\n\t *\n\t * The {@link #getSelectedContent default action of that method} is implemented as a\n\t * listener to this event so it can be fully customized by the features.\n\t *\n\t * @event getSelectedContent\n\t * @param {Array} args The arguments passed to the original method.\n\t */\n}\n\nmix( Model, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/keystrokehandler\n */\n\nimport DomEmitterMixin from './dom/emittermixin';\nimport { getCode, parseKeystroke } from './keyboard';\n\n/**\n * Keystroke handler allows registering callbacks for given keystrokes.\n *\n * The most frequent use of this class is through the {@link module:core/editor/editor~Editor#keystrokes `editor.keystrokes`}\n * property. It allows listening to keystrokes executed in the editing view:\n *\n *\t\teditor.keystrokes.set( 'Ctrl+A', ( keyEvtData, cancel ) => {\n *\t\t\tconsole.log( 'Ctrl+A has been pressed' );\n *\t\t\tcancel();\n *\t\t} );\n *\n * However, this utility class can be used in various part of the UI. For instance, a certain {@link module:ui/view~View}\n * can use it like this:\n *\n *\t\tclass MyView extends View {\n *\t\t\tconstructor() {\n *\t\t\t\tthis.keystrokes = new KeystrokeHandler();\n *\n * \t\t\t\tthis.keystrokes.set( 'tab', handleTabKey );\n *\t\t\t}\n *\n *\t\t\trender() {\n *\t\t\t\tsuper.render();\n *\n *\t\t\t\tthis.keystrokes.listenTo( this.element );\n *\t\t\t}\n *\t\t}\n *\n * That keystroke handler will listen to `keydown` events fired in this view's main element.\n *\n */\nexport default class KeystrokeHandler {\n\t/**\n\t * Creates an instance of the keystroke handler.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Listener used to listen to events for easier keystroke handler destruction.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:utils/dom/emittermixin~Emitter}\n\t\t */\n\t\tthis._listener = Object.create( DomEmitterMixin );\n\t}\n\n\t/**\n\t * Starts listening for `keydown` events from a given emitter.\n\t *\n\t * @param {module:utils/emittermixin~Emitter} emitter\n\t */\n\tlistenTo( emitter ) {\n\t\t// The #_listener works here as a kind of dispatcher. It groups the events coming from the same\n\t\t// keystroke so the listeners can be attached to them with different priorities.\n\t\t//\n\t\t// E.g. all the keystrokes with the `keyCode` of 42 coming from the `emitter` are propagated\n\t\t// as a `_keydown:42` event by the `_listener`. If there's a callback created by the `set`\n\t\t// method for this 42 keystroke, it listens to the `_listener#_keydown:42` event only and interacts\n\t\t// only with other listeners of this particular event, thus making it possible to prioritize\n\t\t// the listeners and safely cancel execution, when needed. Instead of duplicating the Emitter logic,\n\t\t// the KeystrokeHandler re–uses it to do its job.\n\t\tthis._listener.listenTo( emitter, 'keydown', ( evt, keyEvtData ) => {\n\t\t\tthis._listener.fire( '_keydown:' + getCode( keyEvtData ), keyEvtData );\n\t\t} );\n\t}\n\n\t/**\n\t * Registers a handler for the specified keystroke.\n\t *\n\t * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n\t * the {@link module:utils/keyboard~parseKeystroke} function.\n\t * @param {Function} callback A function called with the\n\t * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n\t * a helper funcion to call both `preventDefault()` and `stopPropagation()` on the underlying event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of the keystroke\n\t * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\n\t * are called in the order they were added.\n\t */\n\tset( keystroke, callback, options = {} ) {\n\t\tconst keyCode = parseKeystroke( keystroke );\n\t\tconst priority = options.priority;\n\n\t\t// Execute the passed callback on KeystrokeHandler#_keydown.\n\t\t// TODO: https://github.com/ckeditor/ckeditor5-utils/issues/144\n\t\tthis._listener.listenTo( this._listener, '_keydown:' + keyCode, ( evt, keyEvtData ) => {\n\t\t\tcallback( keyEvtData, () => {\n\t\t\t\t// Stop the event in the DOM: no listener in the web page\n\t\t\t\t// will be triggered by this event.\n\t\t\t\tkeyEvtData.preventDefault();\n\t\t\t\tkeyEvtData.stopPropagation();\n\n\t\t\t\t// Stop the event in the KeystrokeHandler: no more callbacks\n\t\t\t\t// will be executed for this keystroke.\n\t\t\t\tevt.stop();\n\t\t\t} );\n\n\t\t\t// Mark this keystroke as handled by the callback. See: #press.\n\t\t\tevt.return = true;\n\t\t}, { priority } );\n\t}\n\n\t/**\n\t * Triggers a keystroke handler for a specified key combination, if such a keystroke was {@link #set defined}.\n\t *\n\t * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEvtData Key event data.\n\t * @returns {Boolean} Whether the keystroke was handled.\n\t */\n\tpress( keyEvtData ) {\n\t\treturn !!this._listener.fire( '_keydown:' + getCode( keyEvtData ), keyEvtData );\n\t}\n\n\t/**\n\t * Destroys the keystroke handler.\n\t */\n\tdestroy() {\n\t\tthis._listener.stopListening();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editingkeystrokehandler\n */\n\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\n/**\n * A keystroke handler for editor editing. Its instance is available\n * in {@link module:core/editor/editor~Editor#keystrokes} so plugins\n * can register their keystrokes.\n *\n * E.g. an undo plugin would do this:\n *\n *\t\teditor.keystrokes.set( 'Ctrl+Z', 'undo' );\n *\t\teditor.keystrokes.set( 'Ctrl+Shift+Z', 'redo' );\n *\t\teditor.keystrokes.set( 'Ctrl+Y', 'redo' );\n *\n * @extends module:utils/keystrokehandler~KeystrokeHandler\n */\nexport default class EditingKeystrokeHandler extends KeystrokeHandler {\n\t/**\n\t * Creates an instance of the keystroke handler.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t */\n\tconstructor( editor ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The editor instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor}\n\t\t */\n\t\tthis.editor = editor;\n\t}\n\n\t/**\n\t * Registers a handler for the specified keystroke.\n\t *\n\t * The handler can be specified as a command name or a callback.\n\t *\n\t * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n\t * the {@link module:utils/keyboard~parseKeystroke} function.\n\t * @param {Function|String} callback If a string is passed, then the keystroke will\n\t * {@link module:core/editor/editor~Editor#execute execute a command}.\n\t * If a function, then it will be called with the\n\t * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n\t * a `cancel()` helper to both `preventDefault()` and `stopPropagation()` of the event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of the keystroke\n\t * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\n\t * are called in the order they were added.\n\t */\n\tset( keystroke, callback, options = {} ) {\n\t\tif ( typeof callback == 'string' ) {\n\t\t\tconst commandName = callback;\n\n\t\t\tcallback = ( evtData, cancel ) => {\n\t\t\t\tthis.editor.execute( commandName );\n\t\t\t\tcancel();\n\t\t\t};\n\t\t}\n\n\t\tsuper.set( keystroke, callback, options );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editor/editor\n */\n\nimport Context from '../context';\nimport Config from '@ckeditor/ckeditor5-utils/src/config';\nimport EditingController from '@ckeditor/ckeditor5-engine/src/controller/editingcontroller';\nimport PluginCollection from '../plugincollection';\nimport CommandCollection from '../commandcollection';\nimport DataController from '@ckeditor/ckeditor5-engine/src/controller/datacontroller';\nimport Conversion from '@ckeditor/ckeditor5-engine/src/conversion/conversion';\nimport Model from '@ckeditor/ckeditor5-engine/src/model/model';\nimport EditingKeystrokeHandler from '../editingkeystrokehandler';\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport { StylesProcessor } from '@ckeditor/ckeditor5-engine/src/view/stylesmap';\n\n/**\n * The class representing a basic, generic editor.\n *\n * Check out the list of its subclasses to learn about specific editor implementations.\n *\n * All editor implementations (like {@link module:editor-classic/classiceditor~ClassicEditor} or\n * {@link module:editor-inline/inlineeditor~InlineEditor}) should extend this class. They can add their\n * own methods and properties.\n *\n * When you are implementing a plugin, this editor represents the API\n * which your plugin can expect to get when using its {@link module:core/plugin~Plugin#editor} property.\n *\n * This API should be sufficient in order to implement the \"editing\" part of your feature\n * (schema definition, conversion, commands, keystrokes, etc.).\n * It does not define the editor UI, which is available only if\n * the specific editor implements also the {@link module:core/editor/editorwithui~EditorWithUI} interface\n * (as most editor implementations do).\n *\n * @abstract\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Editor {\n\t/**\n\t * Creates a new instance of the editor class.\n\t *\n\t * Usually, not to be used directly. See the static {@link module:core/editor/editor~Editor.create `create()`} method.\n\t *\n\t * @param {Object} [config={}] The editor configuration.\n\t */\n\tconstructor( config = {} ) {\n\t\t/**\n\t\t * The editor context.\n\t\t * When it is not provided through the configuration, the editor creates it.\n\t\t *\n\t\t * @protected\n\t\t * @type {module:core/context~Context}\n\t\t */\n\t\tthis._context = config.context || new Context( { language: config.language } );\n\t\tthis._context._addEditor( this, !config.context );\n\n\t\t// Clone the plugins to make sure that the plugin array will not be shared\n\t\t// between editors and make the watchdog feature work correctly.\n\t\tconst availablePlugins = Array.from( this.constructor.builtinPlugins || [] );\n\n\t\t/**\n\t\t * Stores all configurations specific to this editor instance.\n\t\t *\n\t\t *\t\teditor.config.get( 'image.toolbar' );\n\t\t *\t\t// -> [ 'imageStyle:full', 'imageStyle:side', '|', 'imageTextAlternative' ]\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/config~Config}\n\t\t */\n\t\tthis.config = new Config( config, this.constructor.defaultConfig );\n\t\tthis.config.define( 'plugins', availablePlugins );\n\t\tthis.config.define( this._context._getEditorConfig() );\n\n\t\t/**\n\t\t * The plugins loaded and in use by this editor instance.\n\t\t *\n\t\t *\t\teditor.plugins.get( 'Clipboard' ); // -> An instance of the clipboard plugin.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/plugincollection~PluginCollection}\n\t\t */\n\t\tthis.plugins = new PluginCollection( this, availablePlugins, this._context.plugins );\n\n\t\t/**\n\t\t * @readonly\n\t\t * @type {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = this._context.locale;\n\n\t\t/**\n\t\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t\t *\n\t\t * @see module:utils/locale~Locale#t\n\t\t * @method #t\n\t\t */\n\t\tthis.t = this.locale.t;\n\n\t\t/**\n\t\t * Commands registered to the editor.\n\t\t *\n\t\t * Use the shorthand {@link #execute `editor.execute()`} method to execute commands:\n\t\t *\n\t\t *\t\t// Execute the bold command:\n\t\t *\t\teditor.execute( 'bold' );\n\t\t *\n\t\t *\t\t// Check the state of the bold command:\n\t\t *\t\teditor.commands.get( 'bold' ).value;\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/commandcollection~CommandCollection}\n\t\t */\n\t\tthis.commands = new CommandCollection();\n\n\t\t/**\n\t\t * Indicates the editor life-cycle state.\n\t\t *\n\t\t * The editor is in one of the following states:\n\t\t *\n\t\t * * `initializing` &ndash; During the editor initialization (before\n\t\t * {@link module:core/editor/editor~Editor.create `Editor.create()`}) finished its job.\n\t\t * * `ready` &ndash; After the promise returned by the {@link module:core/editor/editor~Editor.create `Editor.create()`}\n\t\t * method is resolved.\n\t\t * * `destroyed` &ndash; Once the {@link #destroy `editor.destroy()`} method was called.\n\t\t *\n\t\t * @observable\n\t\t * @member {'initializing'|'ready'|'destroyed'} #state\n\t\t */\n\t\tthis.set( 'state', 'initializing' );\n\t\tthis.once( 'ready', () => ( this.state = 'ready' ), { priority: 'high' } );\n\t\tthis.once( 'destroy', () => ( this.state = 'destroyed' ), { priority: 'high' } );\n\n\t\t/**\n\t\t * Defines whether this editor is in read-only mode.\n\t\t *\n\t\t * In read-only mode the editor {@link #commands commands} are disabled so it is not possible\n\t\t * to modify the document by using them. Also, the editable element(s) become non-editable.\n\t\t *\n\t\t * In order to make the editor read-only, you can set this value directly:\n\t\t *\n\t\t *\t\teditor.isReadOnly = true;\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * The editor's model.\n\t\t *\n\t\t * The central point of the editor's abstract data model.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = new Model();\n\n\t\tconst stylesProcessor = new StylesProcessor();\n\n\t\t/**\n\t\t * The {@link module:engine/controller/datacontroller~DataController data controller}.\n\t\t * Used e.g. for setting and retrieving the editor data.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/controller/datacontroller~DataController}\n\t\t */\n\t\tthis.data = new DataController( this.model, stylesProcessor );\n\n\t\t/**\n\t\t * The {@link module:engine/controller/editingcontroller~EditingController editing controller}.\n\t\t * Controls user input and rendering the content for editing.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/controller/editingcontroller~EditingController}\n\t\t */\n\t\tthis.editing = new EditingController( this.model, stylesProcessor );\n\t\tthis.editing.view.document.bind( 'isReadOnly' ).to( this );\n\n\t\t/**\n\t\t * Conversion manager through which you can register model-to-view and view-to-model converters.\n\t\t *\n\t\t * See the {@link module:engine/conversion/conversion~Conversion} documentation to learn how to add converters.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/conversion~Conversion}\n\t\t */\n\t\tthis.conversion = new Conversion( [ this.editing.downcastDispatcher, this.data.downcastDispatcher ], this.data.upcastDispatcher );\n\t\tthis.conversion.addAlias( 'dataDowncast', this.data.downcastDispatcher );\n\t\tthis.conversion.addAlias( 'editingDowncast', this.editing.downcastDispatcher );\n\n\t\t/**\n\t\t * An instance of the {@link module:core/editingkeystrokehandler~EditingKeystrokeHandler}.\n\t\t *\n\t\t * It allows setting simple keystrokes:\n\t\t *\n\t\t *\t\t// Execute the bold command on Ctrl+E:\n\t\t *\t\teditor.keystrokes.set( 'Ctrl+E', 'bold' );\n\t\t *\n\t\t *\t\t// Execute your own callback:\n\t\t *\t\teditor.keystrokes.set( 'Ctrl+E', ( data, cancel ) => {\n\t\t *\t\t\tconsole.log( data.keyCode );\n\t\t *\n\t\t *\t\t\t// Prevent the default (native) action and stop the underlying keydown event\n\t\t *\t\t\t// so no other editor feature will interfere.\n\t\t *\t\t\tcancel();\n\t\t *\t\t} );\n\t\t *\n\t\t * Note: Certain typing-oriented keystrokes (like <kbd>Backspace</kbd> or <kbd>Enter</kbd>) are handled\n\t\t * by a low-level mechanism and trying to listen to them via the keystroke handler will not work reliably.\n\t\t * To handle these specific keystrokes, see the events fired by the\n\t\t * {@link module:engine/view/document~Document editing view document} (`editor.editing.view.document`).\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editingkeystrokehandler~EditingKeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new EditingKeystrokeHandler( this );\n\t\tthis.keystrokes.listenTo( this.editing.view.document );\n\t}\n\n\t/**\n\t * Loads and initializes plugins specified in the configuration.\n\t *\n\t * @returns {Promise.<module:core/plugin~LoadedPlugins>} A promise which resolves\n\t * once the initialization is completed, providing an array of loaded plugins.\n\t */\n\tinitPlugins() {\n\t\tconst config = this.config;\n\t\tconst plugins = config.get( 'plugins' );\n\t\tconst removePlugins = config.get( 'removePlugins' ) || [];\n\t\tconst extraPlugins = config.get( 'extraPlugins' ) || [];\n\n\t\treturn this.plugins.init( plugins.concat( extraPlugins ), removePlugins );\n\t}\n\n\t/**\n\t * Destroys the editor instance, releasing all resources used by it.\n\t *\n\t * **Note** The editor cannot be destroyed during the initialization phase so if it is called\n\t * while the editor {@link #state is being initialized}, it will wait for the editor initialization before destroying it.\n\t *\n\t * @fires destroy\n\t * @returns {Promise} A promise that resolves once the editor instance is fully destroyed.\n\t */\n\tdestroy() {\n\t\tlet readyPromise = Promise.resolve();\n\n\t\tif ( this.state == 'initializing' ) {\n\t\t\treadyPromise = new Promise( resolve => this.once( 'ready', resolve ) );\n\t\t}\n\n\t\treturn readyPromise\n\t\t\t.then( () => {\n\t\t\t\tthis.fire( 'destroy' );\n\t\t\t\tthis.stopListening();\n\t\t\t\tthis.commands.destroy();\n\t\t\t} )\n\t\t\t.then( () => this.plugins.destroy() )\n\t\t\t.then( () => {\n\t\t\t\tthis.model.destroy();\n\t\t\t\tthis.data.destroy();\n\t\t\t\tthis.editing.destroy();\n\t\t\t\tthis.keystrokes.destroy();\n\t\t\t} )\n\t\t\t// Remove the editor from the context.\n\t\t\t// When the context was created by this editor, the context will be destroyed.\n\t\t\t.then( () => this._context._removeEditor( this ) );\n\t}\n\n\t/**\n\t * Executes the specified command with given parameters.\n\t *\n\t * Shorthand for:\n\t *\n\t *\t\teditor.commands.get( commandName ).execute( ... );\n\t *\n\t * @param {String} commandName The name of the command to execute.\n\t * @param {*} [...commandParams] Command parameters.\n\t */\n\texecute( ...args ) {\n\t\ttry {\n\t\t\tthis.commands.execute( ...args );\n\t\t} catch ( err ) {\n\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t/* istanbul ignore next */\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t}\n\t}\n\n\t/**\n\t * Creates and initializes a new editor instance.\n\t *\n\t * This is an abstract method. Every editor type needs to implement its own initialization logic.\n\t *\n\t * See the `create()` methods of the existing editor types to learn how to use them:\n\t *\n\t * * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}\n\t * * {@link module:editor-balloon/ballooneditor~BalloonEditor.create `BalloonEditor.create()`}\n\t * * {@link module:editor-decoupled/decouplededitor~DecoupledEditor.create `DecoupledEditor.create()`}\n\t * * {@link module:editor-inline/inlineeditor~InlineEditor.create `InlineEditor.create()`}\n\t *\n\t * @abstract\n\t * @method module:core/editor/editor~Editor.create\n\t */\n}\n\nmix( Editor, ObservableMixin );\n\n/**\n * Fired when the {@link module:engine/controller/datacontroller~DataController#event:ready data} and all additional\n * editor components are ready.\n *\n * Note: This event is most useful for plugin developers. When integrating the editor with your website or\n * application, you do not have to listen to `editor#ready` because when the promise returned by the static\n * {@link module:core/editor/editor~Editor.create `Editor.create()`} event is resolved, the editor is already ready.\n * In fact, since the first moment when the editor instance is available to you is inside `then()`'s callback,\n * you cannot even add a listener to the `editor#ready` event.\n *\n * See also the {@link #state `editor.state`} property.\n *\n * @event ready\n */\n\n/**\n * Fired when this editor instance is destroyed. The editor at this point is not usable and this event should be used to\n * perform the clean-up in any plugin.\n *\n *\n * See also the {@link #state `editor.state`} property.\n *\n * @event destroy\n */\n\n/**\n * This error is thrown when trying to pass a `<textarea>` element to a `create()` function of an editor class.\n *\n * The only editor type which can be initialized on `<textarea>` elements is {@glink builds/guides/overview#classic-editor classic editor}.\n * This editor hides the passed element and inserts its own UI next to it. Other types of editors reuse the passed element as their root\n * editable element and therefore `<textarea>` is not appropriate for them. Use a `<div>` or another text container instead:\n *\n *\t\t<div id=\"editor\">\n *\t\t\t<p>Initial content.</p>\n *\t\t</div>\n *\n * @error editor-wrong-element\n */\n\n/**\n * An array of plugins built into this editor class.\n *\n * It is used in CKEditor 5 builds to provide a list of plugins which are later automatically initialized\n * during the editor initialization.\n *\n * They will be automatically initialized by the editor, unless listed in `config.removePlugins` and\n * unless `config.plugins` is passed.\n *\n *\t\t// Build some plugins into the editor class first.\n *\t\tClassicEditor.builtinPlugins = [ FooPlugin, BarPlugin ];\n *\n *\t\t// Normally, you need to define config.plugins, but since ClassicEditor.builtinPlugins was\n *\t\t// defined, now you can call create() without any configuration.\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> An instance of the Foo plugin.\n *\t\t\t\teditor.plugins.get( BarPlugin ); // -> An instance of the Bar plugin.\n *\t\t\t} );\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, {\n *\t\t\t\t// Do not initialize these plugins (note: it is defined by a string):\n *\t\t\t\tremovePlugins: [ 'Foo' ]\n *\t\t\t} )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> Undefined.\n *\t\t\t\teditor.config.get( BarPlugin ); // -> An instance of the Bar plugin.\n *\t\t\t} );\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, {\n *\t\t\t\t// Load only this plugin. It can also be defined by a string if\n *\t\t\t\t// this plugin was built into the editor class.\n *\t\t\t\tplugins: [ FooPlugin ]\n *\t\t\t} )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> An instance of the Foo plugin.\n *\t\t\t\teditor.config.get( BarPlugin ); // -> Undefined.\n *\t\t\t} );\n *\n * See also {@link module:core/editor/editor~Editor.defaultConfig}.\n *\n * @static\n * @member {Array.<Function>} module:core/editor/editor~Editor.builtinPlugins\n */\n\n/**\n * The default configuration which is built into the editor class.\n *\n * It is used in CKEditor 5 builds to provide the default configuration options which are later used during the editor initialization.\n *\n *\t\tClassicEditor.defaultConfig = {\n *\t\t\tfoo: 1,\n *\t\t\tbar: 2\n *\t\t};\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.config.get( 'foo' ); // -> 1\n *\t\t\t\teditor.config.get( 'bar' ); // -> 2\n *\t\t\t} );\n *\n *\t\t// The default options can be overridden by the configuration passed to create().\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, { bar: 3 } )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.config.get( 'foo' ); // -> 1\n *\t\t\t\teditor.config.get( 'bar' ); // -> 3\n *\t\t\t} );\n *\n * See also {@link module:core/editor/editor~Editor.builtinPlugins}.\n *\n * @static\n * @member {Object} module:core/editor/editor~Editor.defaultConfig\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editor/utils/dataapimixin\n */\n\n/**\n * Implementation of the {@link module:core/editor/utils/dataapimixin~DataApi}.\n *\n * @mixin DataApiMixin\n * @implements module:core/editor/utils/dataapimixin~DataApi\n */\nconst DataApiMixin = {\n\t/**\n\t * @inheritDoc\n\t */\n\tsetData( data ) {\n\t\tthis.data.set( data );\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tgetData( options ) {\n\t\treturn this.data.get( options );\n\t}\n};\n\nexport default DataApiMixin;\n\n/**\n * Interface defining editor methods for setting and getting data to and from the editor's main root element\n * using the {@link module:core/editor/editor~Editor#data data pipeline}.\n *\n * This interface is not a part of the {@link module:core/editor/editor~Editor} class because one may want to implement\n * an editor with multiple root elements, in which case the methods for setting and getting data will need to be implemented\n * differently.\n *\n * @interface DataApi\n */\n\n/**\n * Sets the data in the editor.\n *\n *\t\teditor.setData( '<p>This is editor!</p>' );\n *\n * By default the editor accepts HTML. This can be controlled by injecting a different data processor.\n * See the {@glink features/markdown Markdown output} guide for more details.\n *\n * Note: Not only is the format of the data configurable, but the type of the `setData()`'s parameter does not\n * have to be a string either. You can e.g. accept an object or a DOM `DocumentFragment` if you consider this\n * the right format for you.\n *\n * @method #setData\n * @param {String} data Input data.\n */\n\n/**\n * Gets the data from the editor.\n *\n *\t\teditor.getData(); // -> '<p>This is editor!</p>'\n *\n * By default the editor outputs HTML. This can be controlled by injecting a different data processor.\n * See the {@glink features/markdown Markdown output} guide for more details.\n *\n * Note: Not only is the format of the data configurable, but the type of the `getData()`'s return value does not\n * have to be a string either. You can e.g. return an object or a DOM `DocumentFragment` if you consider this\n * the right format for you.\n *\n * @method #getData\n * @param {Object} [options]\n * @param {String} [options.rootName='main'] Root name.\n * @param {String} [options.trim='empty'] Whether returned data should be trimmed. This option is set to `'empty'` by default,\n * which means that whenever editor content is considered empty, an empty string is returned. To turn off trimming\n * use `'none'`. In such cases exact content will be returned (for example `'<p>&nbsp;</p>'` for an empty editor).\n * @returns {String} Output data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/setdatainelement\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * Sets data in a given element.\n *\n * @param {HTMLElement} el The element in which the data will be set.\n * @param {String} data The data string.\n */\nexport default function setDataInElement( el, data ) {\n\tif ( el instanceof HTMLTextAreaElement ) {\n\t\tel.value = data;\n\t}\n\n\tel.innerHTML = data;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport setDataInElement from '@ckeditor/ckeditor5-utils/src/dom/setdatainelement';\n\n/**\n * @module core/editor/utils/elementapimixin\n */\n\n/**\n * Implementation of the {@link module:core/editor/utils/elementapimixin~ElementApi}.\n *\n * @mixin ElementApiMixin\n * @implements module:core/editor/utils/elementapimixin~ElementApi\n */\nconst ElementApiMixin = {\n\t/**\n\t * @inheritDoc\n\t */\n\tupdateSourceElement() {\n\t\tif ( !this.sourceElement ) {\n\t\t\t/**\n\t\t\t * Cannot update the source element of a detached editor.\n\t\t\t *\n\t\t\t * The {@link ~ElementApi#updateSourceElement `updateSourceElement()`} method cannot be called if you did not\n\t\t\t * pass an element to `Editor.create()`.\n\t\t\t *\n\t\t\t * @error editor-missing-sourceelement\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'editor-missing-sourceelement: Cannot update the source element of a detached editor.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tsetDataInElement( this.sourceElement, this.data.get() );\n\t}\n};\n\nexport default ElementApiMixin;\n\n/**\n * Interface describing an editor that replaced a DOM element (was \"initialized on an element\").\n *\n * Such an editor should provide a method to\n * {@link module:core/editor/utils/elementapimixin~ElementApi#updateSourceElement update the replaced element with the current data}.\n *\n * @interface ElementApi\n */\n\n/**\n * The element on which the editor has been initialized.\n *\n * @readonly\n * @member {HTMLElement} #sourceElement\n */\n\n/**\n * Updates the {@link #sourceElement editor source element}'s content with the data.\n *\n * @method #updateSourceElement\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport { isFunction } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * @module core/editor/utils/attachtoform\n */\n\n/**\n * Checks if the editor is initialized on a `<textarea>` element that belongs to a form. If yes, it updates the editor's element\n * content before submitting the form.\n *\n * This helper requires the {@link module:core/editor/utils/elementapimixin~ElementApi ElementApi interface}.\n *\n * @param {module:core/editor/editor~Editor} editor Editor instance.\n */\nexport default function attachToForm( editor ) {\n\tif ( !isFunction( editor.updateSourceElement ) ) {\n\t\t/**\n\t\t * The editor passed to `attachToForm()` must implement the\n\t\t * {@link module:core/editor/utils/elementapimixin~ElementApi} interface.\n\t\t *\n\t\t * @error attachtoform-missing-elementapi-interface\n\t\t */\n\t\tthrow new CKEditorError(\n\t\t\t'attachtoform-missing-elementapi-interface: Editor passed to attachToForm() must implement ElementApi.',\n\t\t\teditor\n\t\t);\n\t}\n\n\tconst sourceElement = editor.sourceElement;\n\n\t// Only when replacing a textarea which is inside of a form element.\n\tif ( sourceElement && sourceElement.tagName.toLowerCase() === 'textarea' && sourceElement.form ) {\n\t\tlet originalSubmit;\n\t\tconst form = sourceElement.form;\n\t\tconst onSubmit = () => editor.updateSourceElement();\n\n\t\t// Replace the original form#submit() to call a custom submit function first.\n\t\t// Check if #submit is a function because the form might have an input named \"submit\".\n\t\tif ( isFunction( form.submit ) ) {\n\t\t\toriginalSubmit = form.submit;\n\n\t\t\tform.submit = () => {\n\t\t\t\tonSubmit();\n\t\t\t\toriginalSubmit.apply( form );\n\t\t\t};\n\t\t}\n\n\t\t// Update the replaced textarea with data before each form#submit event.\n\t\tform.addEventListener( 'submit', onSubmit );\n\n\t\t// Remove the submit listener and revert the original submit method on\n\t\t// editor#destroy.\n\t\teditor.on( 'destroy', () => {\n\t\t\tform.removeEventListener( 'submit', onSubmit );\n\n\t\t\tif ( originalSubmit ) {\n\t\t\t\tform.submit = originalSubmit;\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/dataprocessor/basichtmlwriter\n */\n\n/* globals document */\n\n/**\n * Basic HTML writer. It uses the native `innerHTML` property for basic conversion\n * from a document fragment to an HTML string.\n *\n * @implements module:engine/dataprocessor/htmlwriter~HtmlWriter\n */\nexport default class BasicHtmlWriter {\n\t/**\n\t * Returns an HTML string created from the document fragment.\n\t *\n\t * @param {DocumentFragment} fragment\n\t * @returns {String}\n\t */\n\tgetHtml( fragment ) {\n\t\tconst doc = document.implementation.createHTMLDocument( '' );\n\t\tconst container = doc.createElement( 'div' );\n\t\tcontainer.appendChild( fragment );\n\n\t\treturn container.innerHTML;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/dataprocessor/htmldataprocessor\n */\n\n/* globals document, DOMParser */\n\nimport BasicHtmlWriter from './basichtmlwriter';\nimport DomConverter from '../view/domconverter';\n\n/**\n * The HTML data processor class.\n * This data processor implementation uses HTML as input and output data.\n *\n * @implements module:engine/dataprocessor/dataprocessor~DataProcessor\n */\nexport default class HtmlDataProcessor {\n\t/**\n\t * Creates a new instance of the HTML data processor class.\n\t *\n\t * @param {module:engine/view/document~Document} document The view document instance.\n\t */\n\tconstructor( document ) {\n\t\t/**\n\t\t * A DOM parser instance used to parse an HTML string to an HTML document.\n\t\t *\n\t\t * @private\n\t\t * @member {DOMParser}\n\t\t */\n\t\tthis._domParser = new DOMParser();\n\n\t\t/**\n\t\t * A DOM converter used to convert DOM elements to view elements.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis._domConverter = new DomConverter( document, { blockFillerMode: 'nbsp' } );\n\n\t\t/**\n\t\t * A basic HTML writer instance used to convert DOM elements to an HTML string.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/dataprocessor/basichtmlwriter~BasicHtmlWriter}\n\t\t */\n\t\tthis._htmlWriter = new BasicHtmlWriter();\n\t}\n\n\t/**\n\t * Converts a provided {@link module:engine/view/documentfragment~DocumentFragment document fragment}\n\t * to data format &mdash; in this case to an HTML string.\n\t *\n\t * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment\n\t * @returns {String} HTML string.\n\t */\n\ttoData( viewFragment ) {\n\t\t// Convert view DocumentFragment to DOM DocumentFragment.\n\t\tconst domFragment = this._domConverter.viewToDom( viewFragment, document );\n\n\t\t// Convert DOM DocumentFragment to HTML output.\n\t\treturn this._htmlWriter.getHtml( domFragment );\n\t}\n\n\t/**\n\t * Converts the provided HTML string to a view tree.\n\t *\n\t * @param {String} data An HTML string.\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} A converted view element.\n\t */\n\ttoView( data ) {\n\t\t// Convert input HTML data to DOM DocumentFragment.\n\t\tconst domFragment = this._toDom( data );\n\n\t\t// Convert DOM DocumentFragment to view DocumentFragment.\n\t\treturn this._domConverter.domToView( domFragment );\n\t}\n\n\t/**\n\t * Converts an HTML string to its DOM representation. Returns a document fragment containing nodes parsed from\n\t * the provided data.\n\t *\n\t * @private\n\t * @param {String} data\n\t * @returns {DocumentFragment}\n\t */\n\t_toDom( data ) {\n\t\tconst document = this._domParser.parseFromString( data, 'text/html' );\n\t\tconst fragment = document.createDocumentFragment();\n\t\tconst nodes = document.body.childNodes;\n\n\t\twhile ( nodes.length > 0 ) {\n\t\t\tfragment.appendChild( nodes[ 0 ] );\n\t\t}\n\n\t\treturn fragment;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/componentfactory\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * A helper class implementing the UI component ({@link module:ui/view~View view}) factory.\n *\n * It allows functions producing specific UI components to be registered under their unique names\n * in the factory. A registered component can be then instantiated by providing its name.\n * Note that names are case insensitive.\n *\n *\t\t// The editor provides localization tools for the factory.\n *\t\tconst factory = new ComponentFactory( editor );\n *\n *\t\tfactory.add( 'foo', locale => new FooView( locale ) );\n *\t\tfactory.add( 'bar', locale => new BarView( locale ) );\n *\n *\t\t// An instance of FooView.\n *\t\tconst fooInstance = factory.create( 'foo' );\n *\n *\t\t// Names are case insensitive so this is also allowed:\n *\t\tconst barInstance = factory.create( 'Bar' );\n *\n * The {@link module:core/editor/editor~Editor#locale editor locale} is passed to the factory\n * function when {@link module:ui/componentfactory~ComponentFactory#create} is called.\n */\nexport default class ComponentFactory {\n\t/**\n\t * Creates an instance of the factory.\n\t *\n\t * @constructor\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * The editor instance that the factory belongs to.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor}\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * Registered component factories.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._components = new Map();\n\t}\n\n\t/**\n\t * Returns an iterator of registered component names. Names are returned in lower case.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\t* names() {\n\t\tfor ( const value of this._components.values() ) {\n\t\t\tyield value.originalName;\n\t\t}\n\t}\n\n\t/**\n\t * Registers a component factory function that will be used by the\n\t * {@link #create create} method and called with the\n\t * {@link module:core/editor/editor~Editor#locale editor locale} as an argument,\n\t * allowing localization of the {@link module:ui/view~View view}.\n\t *\n\t * @param {String} name The name of the component.\n\t * @param {Function} callback The callback that returns the component.\n\t */\n\tadd( name, callback ) {\n\t\tif ( this.has( name ) ) {\n\t\t\t/**\n\t\t\t * The item already exists in the component factory.\n\t\t\t *\n\t\t\t * @error componentfactory-item-exists\n\t\t\t * @param {String} name The name of the component.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'componentfactory-item-exists: The item already exists in the component factory.',\n\t\t\t\tthis,\n\t\t\t\t{ name }\n\t\t\t);\n\t\t}\n\n\t\tthis._components.set( getNormalized( name ), { callback, originalName: name } );\n\t}\n\n\t/**\n\t * Creates an instance of a component registered in the factory under a specific name.\n\t *\n\t * When called, the {@link module:core/editor/editor~Editor#locale editor locale} is passed to\n\t * the previously {@link #add added} factory function, allowing localization of the\n\t * {@link module:ui/view~View view}.\n\t *\n\t * @param {String} name The name of the component.\n\t * @returns {module:ui/view~View} The instantiated component view.\n\t */\n\tcreate( name ) {\n\t\tif ( !this.has( name ) ) {\n\t\t\t/**\n\t\t\t * The required component is not registered in the component factory. Please make sure\n\t\t\t * the provided name is correct and the component has been correctly\n\t\t\t * {@link #add added} to the factory.\n\t\t\t *\n\t\t\t * @error componentfactory-item-missing\n\t\t\t * @param {String} name The name of the missing component.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'componentfactory-item-missing: The required component is not registered in the factory.',\n\t\t\t\tthis,\n\t\t\t\t{ name }\n\t\t\t);\n\t\t}\n\n\t\treturn this._components.get( getNormalized( name ) ).callback( this.editor.locale );\n\t}\n\n\t/**\n\t * Checks if a component of a given name is registered in the factory.\n\t *\n\t * @param {String} name The name of the component.\n\t * @returns {Boolean}\n\t */\n\thas( name ) {\n\t\treturn this._components.has( getNormalized( name ) );\n\t}\n}\n\n//\n// Ensures that the component name used as the key in the internal map is in lower case.\n//\n// @private\n// @param {String} name\n// @returns {String}\nfunction getNormalized( name ) {\n\treturn String( name ).toLowerCase();\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* global setTimeout, clearTimeout */\n\n/**\n * @module utils/focustracker\n */\n\nimport DomEmitterMixin from './dom/emittermixin';\nimport ObservableMixin from './observablemixin';\nimport CKEditorError from './ckeditorerror';\nimport mix from './mix';\n\n/**\n * Allows observing a group of `HTMLElement`s whether at least one of them is focused.\n *\n * Used by the {@link module:core/editor/editor~Editor} in order to track whether the focus is still within the application,\n * or were used outside of its UI.\n *\n * **Note** `focus` and `blur` listeners use event capturing, so it is only needed to register wrapper `HTMLElement`\n * which contain other `focusable` elements. But note that this wrapper element has to be focusable too\n * (have e.g. `tabindex=\"-1\"`).\n *\n * Check out the {@glink framework/guides/deep-dive/ui/focus-tracking \"Deep dive into focus tracking\" guide} to learn more.\n *\n * @mixes module:utils/dom/emittermixin~EmitterMixin\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class FocusTracker {\n\tconstructor() {\n\t\t/**\n\t\t * True when one of the registered elements is focused.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * The currently focused element.\n\t\t *\n\t\t * While {@link #isFocused `isFocused`} remains `true`, the focus can\n\t\t * move between different UI elements. This property tracks those\n\t\t * elements and tells which one is currently focused.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {HTMLElement|null} #focusedElement\n\t\t */\n\t\tthis.set( 'focusedElement', null );\n\n\t\t/**\n\t\t * List of registered elements.\n\t\t *\n\t\t * @private\n\t\t * @member {Set.<HTMLElement>}\n\t\t */\n\t\tthis._elements = new Set();\n\n\t\t/**\n\t\t * Event loop timeout.\n\t\t *\n\t\t * @private\n\t\t * @member {Number}\n\t\t */\n\t\tthis._nextEventLoopTimeout = null;\n\t}\n\n\t/**\n\t * Starts tracking the specified element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tadd( element ) {\n\t\tif ( this._elements.has( element ) ) {\n\t\t\tthrow new CKEditorError( 'focusTracker-add-element-already-exist', this );\n\t\t}\n\n\t\tthis.listenTo( element, 'focus', () => this._focus( element ), { useCapture: true } );\n\t\tthis.listenTo( element, 'blur', () => this._blur(), { useCapture: true } );\n\t\tthis._elements.add( element );\n\t}\n\n\t/**\n\t * Stops tracking the specified element and stops listening on this element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tremove( element ) {\n\t\tif ( element === this.focusedElement ) {\n\t\t\tthis._blur( element );\n\t\t}\n\n\t\tif ( this._elements.has( element ) ) {\n\t\t\tthis.stopListening( element );\n\t\t\tthis._elements.delete( element );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys the focus tracker by:\n\t * - Disabling all event listeners attached to tracked elements.\n\t * - Removing all tracked elements that were previously added.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Stores currently focused element and set {#isFocused} as `true`.\n\t *\n\t * @private\n\t * @param {HTMLElement} element Element which has been focused.\n\t */\n\t_focus( element ) {\n\t\tclearTimeout( this._nextEventLoopTimeout );\n\n\t\tthis.focusedElement = element;\n\t\tthis.isFocused = true;\n\t}\n\n\t/**\n\t * Clears currently focused element and set {@link #isFocused} as `false`.\n\t * This method uses `setTimeout` to change order of fires `blur` and `focus` events.\n\t *\n\t * @private\n\t * @fires blur\n\t */\n\t_blur() {\n\t\tclearTimeout( this._nextEventLoopTimeout );\n\n\t\tthis._nextEventLoopTimeout = setTimeout( () => {\n\t\t\tthis.focusedElement = null;\n\t\t\tthis.isFocused = false;\n\t\t}, 0 );\n\t}\n\n\t/**\n\t * @event focus\n\t */\n\n\t/**\n\t * @event blur\n\t */\n}\n\nmix( FocusTracker, DomEmitterMixin );\nmix( FocusTracker, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editor/editorui\n */\n\n/* globals console */\n\nimport ComponentFactory from '@ckeditor/ckeditor5-ui/src/componentfactory';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * A class providing the minimal interface that is required to successfully bootstrap any editor UI.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class EditorUI {\n\t/**\n\t * Creates an instance of the editor UI class.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * The editor that the UI belongs to.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor} #editor\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * An instance of the {@link module:ui/componentfactory~ComponentFactory}, a registry used by plugins\n\t\t * to register factories of specific UI components.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/componentfactory~ComponentFactory} #componentFactory\n\t\t */\n\t\tthis.componentFactory = new ComponentFactory( editor );\n\n\t\t/**\n\t\t * Stores the information about the editor UI focus and propagates it so various plugins and components\n\t\t * are unified as a focus group.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker} #focusTracker\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Stores all editable elements used by the editor instance.\n\t\t *\n\t\t * @private\n\t\t * @member {Map.<String,HTMLElement>}\n\t\t */\n\t\tthis._editableElementsMap = new Map();\n\n\t\t// Informs UI components that should be refreshed after layout change.\n\t\tthis.listenTo( editor.editing.view.document, 'layoutChanged', () => this.update() );\n\t}\n\n\t/**\n\t * The main (outermost) DOM element of the editor UI.\n\t *\n\t * For example, in {@link module:editor-classic/classiceditor~ClassicEditor} it is a `<div>` which\n\t * wraps the editable element and the toolbar. In {@link module:editor-inline/inlineeditor~InlineEditor}\n\t * it is the editable element itself (as there is no other wrapper). However, in\n\t * {@link module:editor-decoupled/decouplededitor~DecoupledEditor} it is set to `null` because this editor does not\n\t * come with a single \"main\" HTML element (its editable element and toolbar are separate).\n\t *\n\t * This property can be understood as a shorthand for retrieving the element that a specific editor integration\n\t * considers to be its main DOM element.\n\t *\n\t * @readonly\n\t * @member {HTMLElement|null} #element\n\t */\n\tget element() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Fires the {@link module:core/editor/editorui~EditorUI#event:update `update`} event.\n\t *\n\t * This method should be called when the editor UI (e.g. positions of its balloons) needs to be updated due to\n\t * some environmental change which CKEditor 5 is not aware of (e.g. resize of a container in which it is used).\n\t */\n\tupdate() {\n\t\tthis.fire( 'update' );\n\t}\n\n\t/**\n\t * Destroys the UI.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\n\t\tthis.focusTracker.destroy();\n\n\t\t// Clean–up the references to the CKEditor instance stored in the native editable DOM elements.\n\t\tfor ( const domElement of this._editableElementsMap.values() ) {\n\t\t\tdomElement.ckeditorInstance = null;\n\t\t}\n\n\t\tthis._editableElementsMap = new Map();\n\t}\n\n\t/**\n\t * Store the native DOM editable element used by the editor under\n\t * a unique name.\n\t *\n\t * @param {String} rootName The unique name of the editable element.\n\t * @param {HTMLElement} domElement The native DOM editable element.\n\t */\n\tsetEditableElement( rootName, domElement ) {\n\t\tthis._editableElementsMap.set( rootName, domElement );\n\n\t\t// Put a reference to the CKEditor instance in the editable native DOM element.\n\t\t// It helps 3rd–party software (browser extensions, other libraries) access and recognize\n\t\t// CKEditor 5 instances (editing roots) and use their API (there is no global editor\n\t\t// instance registry).\n\t\tif ( !domElement.ckeditorInstance ) {\n\t\t\tdomElement.ckeditorInstance = this.editor;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the editable editor element with the given name or null if editable does not exist.\n\t *\n\t * @param {String} [rootName=main] The editable name.\n\t * @returns {HTMLElement|undefined}\n\t */\n\tgetEditableElement( rootName = 'main' ) {\n\t\treturn this._editableElementsMap.get( rootName );\n\t}\n\n\t/**\n\t * Returns array of names of all editor editable elements.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetEditableElementsNames() {\n\t\treturn this._editableElementsMap.keys();\n\t}\n\n\t/**\n\t * Stores all editable elements used by the editor instance.\n\t *\n\t * @protected\n\t * @deprecated\n\t * @member {Map.<String,HTMLElement>}\n\t */\n\tget _editableElements() {\n\t\t/**\n\t\t * The {@link module:core/editor/editorui~EditorUI#_editableElements `EditorUI#_editableElements`} property has been\n\t\t * deprecated and will be removed in the near future. Please use {@link #setEditableElement `setEditableElement()`} and\n\t\t * {@link #getEditableElement `getEditableElement()`} methods instead.\n\t\t *\n\t\t * @error editor-ui-deprecated-editable-elements\n\t\t * @param {module:core/editor/editorui~EditorUI} editorUI Editor UI instance the deprecated property belongs to.\n\t\t */\n\t\tconsole.warn(\n\t\t\t'editor-ui-deprecated-editable-elements: ' +\n\t\t\t'The EditorUI#_editableElements property has been deprecated and will be removed in the near future.',\n\t\t\t{ editorUI: this } );\n\n\t\treturn this._editableElementsMap;\n\t}\n\n\t/**\n\t * Fired when the editor UI is ready.\n\t *\n\t * Fired before {@link module:engine/controller/datacontroller~DataController#event:ready}.\n\t *\n\t * @event ready\n\t */\n\n\t/**\n\t * Fired whenever the UI (all related components) should be refreshed.\n\t *\n\t * **Note:**: The event is fired after each {@link module:engine/view/document~Document#event:layoutChanged}.\n\t * It can also be fired manually via the {@link module:core/editor/editorui~EditorUI#update} method.\n\t *\n\t * @event update\n\t */\n}\n\nmix( EditorUI, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/enabletoolbarkeyboardfocus\n */\n\n/**\n * Enables focus/blur toolbar navigation using `Alt+F10` and `Esc` keystrokes.\n *\n * @param {Object} options Options of the utility.\n * @param {*} options.origin A view to which the focus will return when `Esc` is pressed and\n * `options.toolbar` is focused.\n * @param {module:utils/keystrokehandler~KeystrokeHandler} options.originKeystrokeHandler A keystroke\n * handler to register `Alt+F10` keystroke.\n * @param {module:utils/focustracker~FocusTracker} options.originFocusTracker A focus tracker\n * for `options.origin`.\n * @param {module:ui/toolbar/toolbarview~ToolbarView} options.toolbar A toolbar which is to gain\n * focus when `Alt+F10` is pressed.\n * @param {Function} [options.beforeFocus] A callback executed before the `options.toolbar` gains focus\n * upon the `Alt+F10` keystroke.\n * @param {Function} [options.afterBlur] A callback executed after `options.toolbar` loses focus upon\n * `Esc` keystroke but before the focus goes back to `options.origin`.\n */\nexport default function enableToolbarKeyboardFocus( {\n\torigin,\n\toriginKeystrokeHandler,\n\toriginFocusTracker,\n\ttoolbar,\n\tbeforeFocus,\n\tafterBlur\n} ) {\n\t// Because toolbar items can get focus, the overall state of the toolbar must\n\t// also be tracked.\n\toriginFocusTracker.add( toolbar.element );\n\n\t// Focus the toolbar on the keystroke, if not already focused.\n\toriginKeystrokeHandler.set( 'Alt+F10', ( data, cancel ) => {\n\t\tif ( originFocusTracker.isFocused && !toolbar.focusTracker.isFocused ) {\n\t\t\tif ( beforeFocus ) {\n\t\t\t\tbeforeFocus();\n\t\t\t}\n\n\t\t\ttoolbar.focus();\n\n\t\t\tcancel();\n\t\t}\n\t} );\n\n\t// Blur the toolbar and bring the focus back to origin.\n\ttoolbar.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\tif ( toolbar.focusTracker.isFocused ) {\n\t\t\torigin.focus();\n\n\t\t\tif ( afterBlur ) {\n\t\t\t\tafterBlur();\n\t\t\t}\n\n\t\t\tcancel();\n\t\t}\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/normalizetoolbarconfig\n */\n\n/**\n * Normalizes the toolbar configuration (`config.toolbar`), which:\n *\n * * may be defined as an `Array`:\n *\n * \t\ttoolbar: [ 'heading', 'bold', 'italic', 'link', ... ]\n *\n * * or an `Object`:\n *\n *\t\ttoolbar: {\n *\t\t\titems: [ 'heading', 'bold', 'italic', 'link', ... ],\n *\t\t\t...\n *\t\t}\n *\n * * or may not be defined at all (`undefined`)\n *\n * and returns it in the object form.\n *\n * @param {Array|Object|undefined} config The value of `config.toolbar`.\n * @returns {Object} A normalized toolbar config object.\n */\nexport default function normalizeToolbarConfig( config ) {\n\tif ( Array.isArray( config ) ) {\n\t\treturn {\n\t\t\titems: config\n\t\t};\n\t}\n\n\tif ( !config ) {\n\t\treturn {\n\t\t\titems: []\n\t\t};\n\t}\n\n\treturn Object.assign( {\n\t\titems: []\n\t}, config );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/placeholder\n */\n\nimport '../../theme/placeholder.css';\n\n// Each document stores information about its placeholder elements and check functions.\nconst documentPlaceholders = new WeakMap();\n\n/**\n * A helper that enables a placeholder on the provided view element (also updates its visibility).\n * The placeholder is a CSS pseudo–element (with a text content) attached to the element.\n *\n * To change the placeholder text, simply call this method again with new options.\n *\n * To disable the placeholder, use {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} helper.\n *\n * @param {Object} [options] Configuration options of the placeholder.\n * @param {module:engine/view/view~View} options.view Editing view instance.\n * @param {module:engine/view/element~Element} options.element Element that will gain a placeholder.\n * See `options.isDirectHost` to learn more.\n * @param {String} options.text Placeholder text.\n * @param {Boolean} [options.isDirectHost=true] If set `false`, the placeholder will not be enabled directly\n * in the passed `element` but in one of its children (selected automatically, i.e. a first empty child element).\n * Useful when attaching placeholders to elements that can host other elements (not just text), for instance,\n * editable root elements.\n */\nexport function enablePlaceholder( options ) {\n\tconst { view, element, text, isDirectHost = true } = options;\n\tconst doc = view.document;\n\n\t// Use a single a single post fixer per—document to update all placeholders.\n\tif ( !documentPlaceholders.has( doc ) ) {\n\t\tdocumentPlaceholders.set( doc, new Map() );\n\n\t\t// If a post-fixer callback makes a change, it should return `true` so other post–fixers\n\t\t// can re–evaluate the document again.\n\t\tdoc.registerPostFixer( writer => updateDocumentPlaceholders( doc, writer ) );\n\t}\n\n\t// Store information about the element placeholder under its document.\n\tdocumentPlaceholders.get( doc ).set( element, {\n\t\ttext,\n\t\tisDirectHost\n\t} );\n\n\t// Update the placeholders right away.\n\tview.change( writer => updateDocumentPlaceholders( doc, writer ) );\n}\n\n/**\n * Disables the placeholder functionality from a given element.\n *\n * See {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} to learn more.\n *\n * @param {module:engine/view/view~View} view\n * @param {module:engine/view/element~Element} element\n */\nexport function disablePlaceholder( view, element ) {\n\tconst doc = element.document;\n\n\tview.change( writer => {\n\t\tif ( !documentPlaceholders.has( doc ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst placeholders = documentPlaceholders.get( doc );\n\t\tconst config = placeholders.get( element );\n\n\t\twriter.removeAttribute( 'data-placeholder', config.hostElement );\n\t\thidePlaceholder( writer, config.hostElement );\n\n\t\tplaceholders.delete( element );\n\t} );\n}\n\n/**\n * Shows a placeholder in the provided element by changing related attributes and CSS classes.\n *\n * **Note**: This helper will not update the placeholder visibility nor manage the\n * it in any way in the future. What it does is a one–time state change of an element. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\n * placeholder functionality.\n *\n * **Note**: This helper will blindly show the placeholder directly in the root editable element if\n * one is passed, which could result in a visual clash if the editable element has some children\n * (for instance, an empty paragraph). Use {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`}\n * in that case or make sure the correct element is passed to the helper.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean} `true`, if any changes were made to the `element`.\n */\nexport function showPlaceholder( writer, element ) {\n\tif ( !element.hasClass( 'ck-placeholder' ) ) {\n\t\twriter.addClass( 'ck-placeholder', element );\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Hides a placeholder in the element by changing related attributes and CSS classes.\n *\n * **Note**: This helper will not update the placeholder visibility nor manage the\n * it in any way in the future. What it does is a one–time state change of an element. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\n * placeholder functionality.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean} `true`, if any changes were made to the `element`.\n */\nexport function hidePlaceholder( writer, element ) {\n\tif ( element.hasClass( 'ck-placeholder' ) ) {\n\t\twriter.removeClass( 'ck-placeholder', element );\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Checks if a placeholder should be displayed in the element.\n *\n * **Note**: This helper will blindly check the possibility of showing a placeholder directly in the\n * root editable element if one is passed, which may not be the expected result. If an element can\n * host other elements (not just text), most likely one of its children should be checked instead\n * because it will be the final host for the placeholder. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} in that case or make\n * sure the correct element is passed to the helper.\n *\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean}\n */\nexport function needsPlaceholder( element ) {\n\tif ( !element.isAttached() ) {\n\t\treturn false;\n\t}\n\n\t// The element is empty only as long as it contains nothing but uiElements.\n\tconst isEmptyish = !Array.from( element.getChildren() )\n\t\t.some( element => !element.is( 'uiElement' ) );\n\n\tconst doc = element.document;\n\n\t// If the element is empty and the document is blurred.\n\tif ( !doc.isFocused && isEmptyish ) {\n\t\treturn true;\n\t}\n\n\tconst viewSelection = doc.selection;\n\tconst selectionAnchor = viewSelection.anchor;\n\n\t// If document is focused and the element is empty but the selection is not anchored inside it.\n\tif ( isEmptyish && selectionAnchor && selectionAnchor.parent !== element ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// Updates all placeholders associated with a document in a post–fixer callback.\n//\n// @private\n// @param { module:engine/view/document~Document} doc\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @returns {Boolean} True if any changes were made to the view document.\nfunction updateDocumentPlaceholders( doc, writer ) {\n\tconst placeholders = documentPlaceholders.get( doc );\n\tlet wasViewModified = false;\n\n\tfor ( const [ element, config ] of placeholders ) {\n\t\tif ( updatePlaceholder( writer, element, config ) ) {\n\t\t\twasViewModified = true;\n\t\t}\n\t}\n\n\treturn wasViewModified;\n}\n\n// Updates a single placeholder in a post–fixer callback.\n//\n// @private\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @param {module:engine/view/element~Element} element\n// @param {Object} config Configuration of the placeholder\n// @param {String} config.text\n// @param {Boolean} config.isDirectHost\n// @returns {Boolean} True if any changes were made to the view document.\nfunction updatePlaceholder( writer, element, config ) {\n\tconst { text, isDirectHost } = config;\n\n\tconst hostElement = isDirectHost ? element : getChildPlaceholderHostSubstitute( element );\n\tlet wasViewModified = false;\n\n\t// When not a direct host, it could happen that there is no child element\n\t// capable of displaying a placeholder.\n\tif ( !hostElement ) {\n\t\treturn false;\n\t}\n\n\t// Cache the host element. It will be necessary for disablePlaceholder() to know\n\t// which element should have class and attribute removed because, depending on\n\t// the config.isDirectHost value, it could be the element or one of its descendants.\n\tconfig.hostElement = hostElement;\n\n\t// This may be necessary when updating the placeholder text to something else.\n\tif ( hostElement.getAttribute( 'data-placeholder' ) !== text ) {\n\t\twriter.setAttribute( 'data-placeholder', text, hostElement );\n\t\twasViewModified = true;\n\t}\n\n\tif ( needsPlaceholder( hostElement ) ) {\n\t\tif ( showPlaceholder( writer, hostElement ) ) {\n\t\t\twasViewModified = true;\n\t\t}\n\t} else if ( hidePlaceholder( writer, hostElement ) ) {\n\t\twasViewModified = true;\n\t}\n\n\treturn wasViewModified;\n}\n\n// Gets a child element capable of displaying a placeholder if a parent element can host more\n// than just text (for instance, when it is a root editable element). The child element\n// can then be used in other placeholder helpers as a substitute of its parent.\n//\n// @private\n// @param {module:engine/view/element~Element} parent\n// @returns {module:engine/view/element~Element|null}\nfunction getChildPlaceholderHostSubstitute( parent ) {\n\tif ( parent.childCount === 1 ) {\n\t\tconst firstChild = parent.getChild( 0 );\n\n\t\tif ( firstChild.is( 'element' ) && !firstChild.is( 'uiElement' ) ) {\n\t\t\treturn firstChild;\n\t\t}\n\t}\n\n\treturn null;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/elementreplacer\n */\n\n/**\n * Utility class allowing to hide existing HTML elements or replace them with given ones in a way that doesn't remove\n * the original elements from the DOM.\n */\nexport default class ElementReplacer {\n\tconstructor() {\n\t\t/**\n\t\t * The elements replaced by {@link #replace} and their replacements.\n\t\t *\n\t\t * @private\n\t\t * @member {Array.<Object>}\n\t\t */\n\t\tthis._replacedElements = [];\n\t}\n\n\t/**\n\t * Hides the `element` and, if specified, inserts the the given element next to it.\n\t *\n\t * The effect of this method can be reverted by {@link #restore}.\n\t *\n\t * @param {HTMLElement} element The element to replace.\n\t * @param {HTMLElement} [newElement] The replacement element. If not passed, then the `element` will just be hidden.\n\t */\n\treplace( element, newElement ) {\n\t\tthis._replacedElements.push( { element, newElement } );\n\n\t\telement.style.display = 'none';\n\n\t\tif ( newElement ) {\n\t\t\telement.parentNode.insertBefore( newElement, element.nextSibling );\n\t\t}\n\t}\n\n\t/**\n\t * Restores what {@link #replace} did.\n\t */\n\trestore() {\n\t\tthis._replacedElements.forEach( ( { element, newElement } ) => {\n\t\t\telement.style.display = '';\n\n\t\t\tif ( newElement ) {\n\t\t\t\tnewElement.remove();\n\t\t\t}\n\t\t} );\n\n\t\tthis._replacedElements = [];\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editor-classic/classiceditorui\n */\n\nimport EditorUI from '@ckeditor/ckeditor5-core/src/editor/editorui';\nimport enableToolbarKeyboardFocus from '@ckeditor/ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus';\nimport normalizeToolbarConfig from '@ckeditor/ckeditor5-ui/src/toolbar/normalizetoolbarconfig';\nimport { enablePlaceholder } from '@ckeditor/ckeditor5-engine/src/view/placeholder';\nimport ElementReplacer from '@ckeditor/ckeditor5-utils/src/elementreplacer';\n\n/**\n * The classic editor UI class.\n *\n * @extends module:core/editor/editorui~EditorUI\n */\nexport default class ClassicEditorUI extends EditorUI {\n\t/**\n\t * Creates an instance of the classic editor UI class.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t * @param {module:ui/editorui/editoruiview~EditorUIView} view The view of the UI.\n\t */\n\tconstructor( editor, view ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The main (top–most) view of the editor UI.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/editorui/editoruiview~EditorUIView} #view\n\t\t */\n\t\tthis.view = view;\n\n\t\t/**\n\t\t * A normalized `config.toolbar` object.\n\t\t *\n\t\t * @private\n\t\t * @member {Object}\n\t\t */\n\t\tthis._toolbarConfig = normalizeToolbarConfig( editor.config.get( 'toolbar' ) );\n\n\t\t/**\n\t\t * The element replacer instance used to hide the editor's source element.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:utils/elementreplacer~ElementReplacer}\n\t\t */\n\t\tthis._elementReplacer = new ElementReplacer();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget element() {\n\t\treturn this.view.element;\n\t}\n\n\t/**\n\t * Initializes the UI.\n\t *\n\t * @param {HTMLElement|null} replacementElement The DOM element that will be the source for the created editor.\n\t */\n\tinit( replacementElement ) {\n\t\tconst editor = this.editor;\n\t\tconst view = this.view;\n\t\tconst editingView = editor.editing.view;\n\t\tconst editable = view.editable;\n\t\tconst editingRoot = editingView.document.getRoot();\n\n\t\t// The editable UI and editing root should share the same name. Then name is used\n\t\t// to recognize the particular editable, for instance in ARIA attributes.\n\t\teditable.name = editingRoot.rootName;\n\n\t\tview.render();\n\n\t\t// The editable UI element in DOM is available for sure only after the editor UI view has been rendered.\n\t\t// But it can be available earlier if a DOM element has been passed to BalloonEditor.create().\n\t\tconst editableElement = editable.element;\n\n\t\t// Register the editable UI view in the editor. A single editor instance can aggregate multiple\n\t\t// editable areas (roots) but the classic editor has only one.\n\t\tthis.setEditableElement( editable.name, editableElement );\n\n\t\t// Let the global focus tracker know that the editable UI element is focusable and\n\t\t// belongs to the editor. From now on, the focus tracker will sustain the editor focus\n\t\t// as long as the editable is focused (e.g. the user is typing).\n\t\tthis.focusTracker.add( editableElement );\n\n\t\t// Let the editable UI element respond to the changes in the global editor focus\n\t\t// tracker. It has been added to the same tracker a few lines above but, in reality, there are\n\t\t// many focusable areas in the editor, like balloons, toolbars or dropdowns and as long\n\t\t// as they have focus, the editable should act like it is focused too (although technically\n\t\t// it isn't), e.g. by setting the proper CSS class, visually announcing focus to the user.\n\t\t// Doing otherwise will result in editable focus styles disappearing, once e.g. the\n\t\t// toolbar gets focused.\n\t\tview.editable.bind( 'isFocused' ).to( this.focusTracker );\n\n\t\t// Bind the editable UI element to the editing view, making it an end– and entry–point\n\t\t// of the editor's engine. This is where the engine meets the UI.\n\t\teditingView.attachDomRoot( editableElement );\n\n\t\t// If an element containing the initial data of the editor was provided, replace it with\n\t\t// an editor instance's UI in DOM until the editor is destroyed. For instance, a <textarea>\n\t\t// can be such element.\n\t\tif ( replacementElement ) {\n\t\t\tthis._elementReplacer.replace( replacementElement, this.element );\n\t\t}\n\n\t\tthis._initPlaceholder();\n\t\tthis._initToolbar();\n\t\tthis.fire( 'ready' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tconst view = this.view;\n\t\tconst editingView = this.editor.editing.view;\n\n\t\tthis._elementReplacer.restore();\n\t\teditingView.detachDomRoot( view.editable.name );\n\t\tview.destroy();\n\n\t\tsuper.destroy();\n\t}\n\n\t/**\n\t * Initializes the editor toolbar.\n\t *\n\t * @private\n\t */\n\t_initToolbar() {\n\t\tconst editor = this.editor;\n\t\tconst view = this.view;\n\t\tconst editingView = editor.editing.view;\n\n\t\t// Set–up the sticky panel with toolbar.\n\t\tview.stickyPanel.bind( 'isActive' ).to( this.focusTracker, 'isFocused' );\n\t\tview.stickyPanel.limiterElement = view.element;\n\n\t\tif ( this._toolbarConfig.viewportTopOffset ) {\n\t\t\tview.stickyPanel.viewportTopOffset = this._toolbarConfig.viewportTopOffset;\n\t\t}\n\n\t\tview.toolbar.fillFromConfig( this._toolbarConfig.items, this.componentFactory );\n\n\t\tenableToolbarKeyboardFocus( {\n\t\t\torigin: editingView,\n\t\t\toriginFocusTracker: this.focusTracker,\n\t\t\toriginKeystrokeHandler: editor.keystrokes,\n\t\t\ttoolbar: view.toolbar\n\t\t} );\n\t}\n\n\t/**\n\t * Enable the placeholder text on the editing root, if any was configured.\n\t *\n\t * @private\n\t */\n\t_initPlaceholder() {\n\t\tconst editor = this.editor;\n\t\tconst editingView = editor.editing.view;\n\t\tconst editingRoot = editingView.document.getRoot();\n\t\tconst sourceElement = editor.sourceElement;\n\n\t\tconst placeholderText = editor.config.get( 'placeholder' ) ||\n\t\t\tsourceElement && sourceElement.tagName.toLowerCase() === 'textarea' && sourceElement.getAttribute( 'placeholder' );\n\n\t\tif ( placeholderText ) {\n\t\t\tenablePlaceholder( {\n\t\t\t\tview: editingView,\n\t\t\t\telement: editingRoot,\n\t\t\t\ttext: placeholderText,\n\t\t\t\tisDirectHost: false\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/viewcollection\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\n\n/**\n * Collects {@link module:ui/view~View} instances.\n *\n *\t\tconst parentView = new ParentView( locale );\n *\t\tconst collection = new ViewCollection( locale );\n *\n *\t\tcollection.setParent( parentView.element );\n *\n *\t\tconst viewA = new ChildView( locale );\n *\t\tconst viewB = new ChildView( locale );\n *\n * View collection renders and manages view {@link module:ui/view~View#element elements}:\n *\n *\t\tcollection.add( viewA );\n *\t\tcollection.add( viewB );\n *\n *\t\tconsole.log( parentView.element.firsChild ); // -> viewA.element\n *\t\tconsole.log( parentView.element.lastChild ); // -> viewB.element\n *\n * It {@link module:ui/viewcollection~ViewCollection#delegate propagates} DOM events too:\n *\n *\t\t// Delegate #click and #keydown events from viewA and viewB to the parentView.\n *\t\tcollection.delegate( 'click' ).to( parentView );\n *\n *\t\tparentView.on( 'click', ( evt ) => {\n *\t\t\tconsole.log( `${ evt.source } has been clicked.` );\n *\t\t} );\n *\n *\t\t// This event will be delegated to the parentView.\n *\t\tviewB.fire( 'click' );\n *\n * **Note**: A view collection can be used directly in the {@link module:ui/template~TemplateDefinition definition}\n * of a {@link module:ui/template~Template template}.\n *\n * @extends module:utils/collection~Collection\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class ViewCollection extends Collection {\n\t/**\n\t * Creates a new instance of the {@link module:ui/viewcollection~ViewCollection}.\n\t *\n\t * @param {Iterable.<module:ui/view~View>} [initialItems] The initial items of the collection.\n\t */\n\tconstructor( initialItems = [] ) {\n\t\tsuper( initialItems, {\n\t\t\t// An #id Number attribute should be legal and not break the `ViewCollection` instance.\n\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/93\n\t\t\tidProperty: 'viewUid'\n\t\t} );\n\n\t\t// Handle {@link module:ui/view~View#element} in DOM when a new view is added to the collection.\n\t\tthis.on( 'add', ( evt, view, index ) => {\n\t\t\tthis._renderViewIntoCollectionParent( view, index );\n\t\t} );\n\n\t\t// Handle {@link module:ui/view~View#element} in DOM when a view is removed from the collection.\n\t\tthis.on( 'remove', ( evt, view ) => {\n\t\t\tif ( view.element && this._parentElement ) {\n\t\t\t\tview.element.remove();\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * A parent element within which child views are rendered and managed in DOM.\n\t\t *\n\t\t * @protected\n\t\t * @member {HTMLElement}\n\t\t */\n\t\tthis._parentElement = null;\n\t}\n\n\t/**\n\t * Destroys the view collection along with child views.\n\t * See the view {@link module:ui/view~View#destroy} method.\n\t */\n\tdestroy() {\n\t\tthis.map( view => view.destroy() );\n\t}\n\n\t/**\n\t * Sets the parent HTML element of this collection. When parent is set, {@link #add adding} and\n\t * {@link #remove removing} views in the collection synchronizes their\n\t * {@link module:ui/view~View#element elements} in the parent element.\n\t *\n\t * @param {HTMLElement} element A new parent element.\n\t */\n\tsetParent( elementOrDocFragment ) {\n\t\tthis._parentElement = elementOrDocFragment;\n\n\t\t// Take care of the initial collection items passed to the constructor.\n\t\tfor ( const view of this ) {\n\t\t\tthis._renderViewIntoCollectionParent( view );\n\t\t}\n\t}\n\n\t/**\n\t * Delegates selected events coming from within views in the collection to any\n\t * {@link module:utils/emittermixin~Emitter}.\n\t *\n\t * For the following views and collection:\n\t *\n\t *\t\tconst viewA = new View();\n\t *\t\tconst viewB = new View();\n\t *\t\tconst viewC = new View();\n\t *\n\t *\t\tconst views = parentView.createCollection();\n\t *\n\t *\t\tviews.delegate( 'eventX' ).to( viewB );\n\t *\t\tviews.delegate( 'eventX', 'eventY' ).to( viewC );\n\t *\n\t *\t\tviews.add( viewA );\n\t *\n\t * the `eventX` is delegated (fired by) `viewB` and `viewC` along with `customData`:\n\t *\n\t *\t\tviewA.fire( 'eventX', customData );\n\t *\n\t * and `eventY` is delegated (fired by) `viewC` along with `customData`:\n\t *\n\t *\t\tviewA.fire( 'eventY', customData );\n\t *\n\t * See {@link module:utils/emittermixin~Emitter#delegate}.\n\t *\n\t * @param {...String} events {@link module:ui/view~View} event names to be delegated to another\n\t * {@link module:utils/emittermixin~Emitter}.\n\t * @returns {Object}\n\t * @returns {Function} return.to A function which accepts the destination of\n\t * {@link module:utils/emittermixin~Emitter#delegate delegated} events.\n\t */\n\tdelegate( ...events ) {\n\t\tif ( !events.length || !isStringArray( events ) ) {\n\t\t\t/**\n\t\t\t * All event names must be strings.\n\t\t\t *\n\t\t\t * @error ui-viewcollection-delegate-wrong-events\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-viewcollection-delegate-wrong-events: All event names must be strings.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Selects destination for {@link module:utils/emittermixin~Emitter#delegate} events.\n\t\t\t *\n\t\t\t * @memberOf module:ui/viewcollection~ViewCollection#delegate\n\t\t\t * @function module:ui/viewcollection~ViewCollection#delegate.to\n\t\t\t * @param {module:utils/emittermixin~Emitter} dest An `Emitter` instance which is\n\t\t\t * the destination for delegated events.\n\t\t\t */\n\t\t\tto: dest => {\n\t\t\t\t// Activate delegating on existing views in this collection.\n\t\t\t\tfor ( const view of this ) {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.delegate( evtName ).to( dest );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Activate delegating on future views in this collection.\n\t\t\t\tthis.on( 'add', ( evt, view ) => {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.delegate( evtName ).to( dest );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\t// Deactivate delegating when view is removed from this collection.\n\t\t\t\tthis.on( 'remove', ( evt, view ) => {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.stopDelegating( evtName, dest );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * This method {@link module:ui/view~View#render renders} a new view added to the collection.\n\t *\n\t * If the {@link #_parentElement parent element} of the collection is set, this method also adds\n\t * the view's {@link module:ui/view~View#element} as a child of the parent in DOM at a specified index.\n\t *\n\t * **Note**: If index is not specified, the view's element is pushed as the last child\n\t * of the parent element.\n\t *\n\t * @private\n\t * @param {module:ui/view~View} view A new view added to the collection.\n\t * @param {Number} [index] An index the view holds in the collection. When not specified,\n\t * the view is added at the end.\n\t */\n\t_renderViewIntoCollectionParent( view, index ) {\n\t\tif ( !view.isRendered ) {\n\t\t\tview.render();\n\t\t}\n\n\t\tif ( view.element && this._parentElement ) {\n\t\t\tthis._parentElement.insertBefore( view.element, this._parentElement.children[ index ] );\n\t\t}\n\t}\n\n\t/**\n\t * Removes a child view from the collection. If the {@link #setParent parent element} of the\n\t * collection has been set, the {@link module:ui/view~View#element element} of the view is also removed\n\t * in DOM, reflecting the order of the collection.\n\t *\n\t * See the {@link #add} method.\n\t *\n\t * @method #remove\n\t * @param {module:ui/view~View|Number|String} subject The view to remove, its id or index in the collection.\n\t * @returns {Object} The removed view.\n\t */\n}\n\n// Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\nfunction isStringArray( arr ) {\n\treturn arr.every( a => typeof a == 'string' );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/template\n */\n\n/* global document */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport View from './view';\nimport ViewCollection from './viewcollection';\nimport isNode from '@ckeditor/ckeditor5-utils/src/dom/isnode';\nimport { isObject, cloneDeepWith } from 'lodash-es';\n\nconst xhtmlNs = 'http://www.w3.org/1999/xhtml';\n\n/**\n * A basic Template class. It renders a DOM HTML element or text from a\n * {@link module:ui/template~TemplateDefinition definition} and supports element attributes, children,\n * bindings to {@link module:utils/observablemixin~Observable observables} and DOM event propagation.\n *\n * A simple template can look like this:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\tclass: 'foo',\n *\t\t\t\tstyle: {\n *\t\t\t\t\tbackgroundColor: 'yellow'\n *\t\t\t\t}\n *\t\t\t},\n *\t\t\ton: {\n *\t\t\t\tclick: bind.to( 'clicked' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t'A paragraph.'\n *\t\t\t]\n *\t\t} ).render();\n *\n * and it will render the following HTML element:\n *\n *\t\t<p class=\"foo\" style=\"background-color: yellow;\">A paragraph.</p>\n *\n * Additionally, the `observable` will always fire `clicked` upon clicking `<p>` in the DOM.\n *\n * See {@link module:ui/template~TemplateDefinition} to know more about templates and complex\n * template definitions.\n *\n* @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class Template {\n\t/**\n\t * Creates an instance of the {@link ~Template} class.\n\t *\n\t * @param {module:ui/template~TemplateDefinition} def The definition of the template.\n\t */\n\tconstructor( def ) {\n\t\tObject.assign( this, normalize( clone( def ) ) );\n\n\t\t/**\n\t\t * Indicates whether this particular Template instance has been\n\t\t * {@link #render rendered}.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._isRendered = false;\n\n\t\t/**\n\t\t * The tag (`tagName`) of this template, e.g. `div`. It also indicates that the template\n\t\t * renders to an HTML element.\n\t\t *\n\t\t * @member {String} #tag\n\t\t */\n\n\t\t/**\n\t\t * The text of the template. It also indicates that the template renders to a DOM text node.\n\t\t *\n\t\t * @member {Array.<String|module:ui/template~TemplateValueSchema>} #text\n\t\t */\n\n\t\t/**\n\t\t * The attributes of the template, e.g. `{ id: [ 'ck-id' ] }`, corresponding with\n\t\t * the attributes of an HTML element.\n\t\t *\n\t\t * **Note**: This property only makes sense when {@link #tag} is defined.\n\t\t *\n\t\t * @member {Object} #attributes\n\t\t */\n\n\t\t/**\n\t\t * The children of the template. They can be either:\n\t\t * * independent instances of {@link ~Template} (sub–templates),\n\t\t * * native DOM Nodes.\n\t\t *\n\t\t * **Note**: This property only makes sense when {@link #tag} is defined.\n\t\t *\n\t\t * @member {Array.<module:ui/template~Template|Node>} #children\n\t\t */\n\n\t\t/**\n\t\t * The DOM event listeners of the template.\n\t\t *\n\t\t * @member {Object} #eventListeners\n\t\t */\n\n\t\t/**\n\t\t * The data used by the {@link #revert} method to restore a node to its original state.\n\t\t *\n\t\t * See: {@link #apply}.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/template~RenderData}\n\t\t */\n\t\tthis._revertData = null;\n\t}\n\n\t/**\n\t * Renders a DOM Node (an HTML element or text) out of the template.\n\t *\n\t *\t\tconst domNode = new Template( { ... } ).render();\n\t *\n\t * See: {@link #apply}.\n\t *\n\t * @returns {HTMLElement|Text}\n\t */\n\trender() {\n\t\tconst node = this._renderNode( {\n\t\t\tintoFragment: true\n\t\t} );\n\n\t\tthis._isRendered = true;\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Applies the template to an existing DOM Node, either HTML element or text.\n\t *\n\t * **Note:** No new DOM nodes will be created. Applying extends:\n\t *\n\t * {@link module:ui/template~TemplateDefinition attributes},\n\t * {@link module:ui/template~TemplateDefinition event listeners}, and\n\t * `textContent` of {@link module:ui/template~TemplateDefinition children} only.\n\t *\n\t * **Note:** Existing `class` and `style` attributes are extended when a template\n\t * is applied to an HTML element, while other attributes and `textContent` are overridden.\n\t *\n\t * **Note:** The process of applying a template can be easily reverted using the\n\t * {@link module:ui/template~Template#revert} method.\n\t *\n\t *\t\tconst element = document.createElement( 'div' );\n\t *\t\tconst observable = new Model( { divClass: 'my-div' } );\n\t *\t\tconst emitter = Object.create( EmitterMixin );\n\t *\t\tconst bind = Template.bind( observable, emitter );\n\t *\n\t *\t\tnew Template( {\n\t *\t\t\tattributes: {\n\t *\t\t\t\tid: 'first-div',\n\t *\t\t\t\tclass: bind.to( 'divClass' )\n\t *\t\t\t},\n\t *\t\t\ton: {\n\t *\t\t\t\tclick: bind( 'elementClicked' ) // Will be fired by the observable.\n\t *\t\t\t},\n\t *\t\t\tchildren: [\n\t *\t\t\t\t'Div text.'\n\t *\t\t\t]\n\t *\t\t} ).apply( element );\n\t *\n\t *\t\tconsole.log( element.outerHTML ); // -> '<div id=\"first-div\" class=\"my-div\"></div>'\n\t *\n\t * @see module:ui/template~Template#render\n\t * @see module:ui/template~Template#revert\n\t * @param {Node} node Root node for the template to apply.\n\t */\n\tapply( node ) {\n\t\tthis._revertData = getEmptyRevertData();\n\n\t\tthis._renderNode( {\n\t\t\tnode,\n\t\t\tisApplying: true,\n\t\t\trevertData: this._revertData\n\t\t} );\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Reverts a template {@link module:ui/template~Template#apply applied} to a DOM node.\n\t *\n\t * @param {Node} node The root node for the template to revert. In most of the cases, it is the\n\t * same node used by {@link module:ui/template~Template#apply}.\n\t */\n\trevert( node ) {\n\t\tif ( !this._revertData ) {\n\t\t\t/**\n\t\t\t * Attempting to revert a template which has not been applied yet.\n\t\t\t *\n\t\t\t * @error ui-template-revert-not-applied\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-template-revert-not-applied: Attempting to revert a template which has not been applied yet.',\n\t\t\t\t[ this, node ]\n\t\t\t);\n\t\t}\n\n\t\tthis._revertTemplateFromNode( node, this._revertData );\n\t}\n\n\t/**\n\t * Returns an iterator which traverses the template in search of {@link module:ui/view~View}\n\t * instances and returns them one by one.\n\t *\n\t *\t\tconst viewFoo = new View();\n\t *\t\tconst viewBar = new View();\n\t *\t\tconst viewBaz = new View();\n\t *\t\tconst template = new Template( {\n\t *\t\t\ttag: 'div',\n\t *\t\t\tchildren: [\n\t *\t\t\t\tviewFoo,\n\t *\t\t\t\t{\n\t *\t\t\t\t\ttag: 'div',\n\t *\t\t\t\t\tchildren: [\n\t *\t\t\t\t\t\tviewBar\n\t *\t\t\t\t\t]\n\t *\t\t\t\t},\n\t *\t\t\t\tviewBaz\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t *\t\t// Logs: viewFoo, viewBar, viewBaz\n\t *\t\tfor ( const view of template.getViews() ) {\n\t *\t\t\tconsole.log( view );\n\t *\t\t}\n\t *\n\t * @returns {Iterable.<module:ui/view~View>}\n\t */\n\t* getViews() {\n\t\tfunction* search( def ) {\n\t\t\tif ( def.children ) {\n\t\t\t\tfor ( const child of def.children ) {\n\t\t\t\t\tif ( isView( child ) ) {\n\t\t\t\t\t\tyield child;\n\t\t\t\t\t} else if ( isTemplate( child ) ) {\n\t\t\t\t\t\tyield* search( child );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tyield* search( this );\n\t}\n\n\t/**\n\t * An entry point to the interface which binds DOM nodes to\n\t * {@link module:utils/observablemixin~Observable observables}.\n\t * There are two types of bindings:\n\t *\n\t * * HTML element attributes or text `textContent` synchronized with attributes of an\n\t * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}\n\t * and {@link module:ui/template~BindChain#if}.\n\t *\n\t *\t\tconst bind = Template.bind( observable, emitter );\n\t *\n\t *\t\tnew Template( {\n\t *\t\t\tattributes: {\n\t *\t\t\t\t// Binds the element \"class\" attribute to observable#classAttribute.\n\t *\t\t\t\tclass: bind.to( 'classAttribute' )\n\t *\t\t\t}\n\t *\t\t} ).render();\n\t *\n\t * * DOM events fired on HTML element propagated through\n\t * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}.\n\t *\n\t *\t\tconst bind = Template.bind( observable, emitter );\n\t *\n\t *\t\tnew Template( {\n\t *\t\t\ton: {\n\t *\t\t\t\t// Will be fired by the observable.\n\t *\t\t\t\tclick: bind( 'elementClicked' )\n\t *\t\t\t}\n\t *\t\t} ).render();\n\t *\n\t * Also see {@link module:ui/view~View#bindTemplate}.\n\t *\n\t * @param {module:utils/observablemixin~Observable} observable An observable which provides boundable attributes.\n\t * @param {module:utils/emittermixin~Emitter} emitter An emitter that listens to observable attribute\n\t * changes or DOM Events (depending on the kind of the binding). Usually, a {@link module:ui/view~View} instance.\n\t * @returns {module:ui/template~BindChain}\n\t */\n\tstatic bind( observable, emitter ) {\n\t\treturn {\n\t\t\tto( eventNameOrFunctionOrAttribute, callback ) {\n\t\t\t\treturn new TemplateToBinding( {\n\t\t\t\t\teventNameOrFunction: eventNameOrFunctionOrAttribute,\n\t\t\t\t\tattribute: eventNameOrFunctionOrAttribute,\n\t\t\t\t\tobservable, emitter, callback\n\t\t\t\t} );\n\t\t\t},\n\n\t\t\tif( attribute, valueIfTrue, callback ) {\n\t\t\t\treturn new TemplateIfBinding( {\n\t\t\t\t\tobservable, emitter, attribute, valueIfTrue, callback\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Extends an existing {@link module:ui/template~Template} instance with some additional content\n\t * from another {@link module:ui/template~TemplateDefinition}.\n\t *\n\t *\t\tconst bind = Template.bind( observable, emitter );\n\t *\n\t *\t\tconst template = new Template( {\n\t *\t\t\ttag: 'p',\n\t *\t\t\tattributes: {\n\t *\t\t\t\tclass: 'a',\n\t *\t\t\t\tdata-x: bind.to( 'foo' )\n\t *\t\t\t},\n\t *\t\t\tchildren: [\n\t *\t\t\t\t{\n\t *\t\t\t\t\ttag: 'span',\n\t *\t\t\t\t\tattributes: {\n\t *\t\t\t\t\t\tclass: 'b'\n\t *\t\t\t\t\t},\n\t *\t\t\t\t\tchildren: [\n\t *\t\t\t\t\t\t'Span'\n\t *\t\t\t\t\t]\n\t *\t\t\t\t}\n\t *\t\t\t]\n\t *\t\t } );\n\t *\n\t *\t\t// Instance-level extension.\n\t *\t\tTemplate.extend( template, {\n\t *\t\t\tattributes: {\n\t *\t\t\t\tclass: 'b',\n\t *\t\t\t\tdata-x: bind.to( 'bar' )\n\t *\t\t\t},\n\t *\t\t\tchildren: [\n\t *\t\t\t\t{\n\t *\t\t\t\t\tattributes: {\n\t *\t\t\t\t\t\tclass: 'c'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t *\t\t// Child extension.\n\t *\t\tTemplate.extend( template.children[ 0 ], {\n\t *\t\t\tattributes: {\n\t *\t\t\t\tclass: 'd'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * the `outerHTML` of `template.render()` is:\n\t *\n\t *\t\t<p class=\"a b\" data-x=\"{ observable.foo } { observable.bar }\">\n\t *\t\t\t<span class=\"b c d\">Span</span>\n\t *\t\t</p>\n\t *\n\t * @param {module:ui/template~Template} template An existing template instance to be extended.\n\t * @param {module:ui/template~TemplateDefinition} def Additional definition to be applied to a template.\n\t */\n\tstatic extend( template, def ) {\n\t\tif ( template._isRendered ) {\n\t\t\t/**\n\t\t\t * Extending a template after rendering may not work as expected. To make sure\n\t\t\t * the {@link module:ui/template~Template.extend extending} works for an element,\n\t\t\t * make sure it happens before {@link #render} is called.\n\t\t\t *\n\t\t\t * @error template-extend-render\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'template-extend-render: Attempting to extend a template which has already been rendered.',\n\t\t\t\t[ this, template ]\n\t\t\t);\n\t\t}\n\n\t\textendTemplate( template, normalize( clone( def ) ) );\n\t}\n\n\t/**\n\t * Renders a DOM Node (either an HTML element or text) out of the template.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderNode( data ) {\n\t\tlet isInvalid;\n\n\t\tif ( data.node ) {\n\t\t\t// When applying, a definition cannot have \"tag\" and \"text\" at the same time.\n\t\t\tisInvalid = this.tag && this.text;\n\t\t} else {\n\t\t\t// When rendering, a definition must have either \"tag\" or \"text\": XOR( this.tag, this.text ).\n\t\t\tisInvalid = this.tag ? this.text : !this.text;\n\t\t}\n\n\t\tif ( isInvalid ) {\n\t\t\t/**\n\t\t\t * Node definition cannot have the \"tag\" and \"text\" properties at the same time.\n\t\t\t * Node definition must have either \"tag\" or \"text\" when rendering a new Node.\n\t\t\t *\n\t\t\t * @error ui-template-wrong-syntax\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-template-wrong-syntax: Node definition must have either \"tag\" or \"text\" when rendering a new Node.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tif ( this.text ) {\n\t\t\treturn this._renderText( data );\n\t\t} else {\n\t\t\treturn this._renderElement( data );\n\t\t}\n\t}\n\n\t/**\n\t * Renders an HTML element out of the template.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderElement( data ) {\n\t\tlet node = data.node;\n\n\t\tif ( !node ) {\n\t\t\tnode = data.node = document.createElementNS( this.ns || xhtmlNs, this.tag );\n\t\t}\n\n\t\tthis._renderAttributes( data );\n\t\tthis._renderElementChildren( data );\n\t\tthis._setUpListeners( data );\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Renders a text node out of {@link module:ui/template~Template#text}.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderText( data ) {\n\t\tlet node = data.node;\n\n\t\t// Save the original textContent to revert it in #revert().\n\t\tif ( node ) {\n\t\t\tdata.revertData.text = node.textContent;\n\t\t} else {\n\t\t\tnode = data.node = document.createTextNode( '' );\n\t\t}\n\n\t\t// Check if this Text Node is bound to Observable. Cases:\n\t\t//\n\t\t//\t\ttext: [ Template.bind( ... ).to( ... ) ]\n\t\t//\n\t\t//\t\ttext: [\n\t\t//\t\t\t'foo',\n\t\t//\t\t\tTemplate.bind( ... ).to( ... ),\n\t\t//\t\t\t...\n\t\t//\t\t]\n\t\t//\n\t\tif ( hasTemplateBinding( this.text ) ) {\n\t\t\tthis._bindToObservable( {\n\t\t\t\tschema: this.text,\n\t\t\t\tupdater: getTextUpdater( node ),\n\t\t\t\tdata\n\t\t\t} );\n\t\t}\n\t\t// Simply set text. Cases:\n\t\t//\n\t\t//\t\ttext: [ 'all', 'are', 'static' ]\n\t\t//\n\t\t//\t\ttext: [ 'foo' ]\n\t\t//\n\t\telse {\n\t\t\tnode.textContent = this.text.join( '' );\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Renders HTML element attributes out of {@link module:ui/template~Template#attributes}.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderAttributes( data ) {\n\t\tlet attrName, attrValue, domAttrValue, attrNs;\n\n\t\tif ( !this.attributes ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst node = data.node;\n\t\tconst revertData = data.revertData;\n\n\t\tfor ( attrName in this.attributes ) {\n\t\t\t// Current attribute value in DOM.\n\t\t\tdomAttrValue = node.getAttribute( attrName );\n\n\t\t\t// The value to be set.\n\t\t\tattrValue = this.attributes[ attrName ];\n\n\t\t\t// Save revert data.\n\t\t\tif ( revertData ) {\n\t\t\t\trevertData.attributes[ attrName ] = domAttrValue;\n\t\t\t}\n\n\t\t\t// Detect custom namespace:\n\t\t\t//\n\t\t\t//\t\tclass: {\n\t\t\t//\t\t\tns: 'abc',\n\t\t\t//\t\t\tvalue: Template.bind( ... ).to( ... )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\tattrNs = ( isObject( attrValue[ 0 ] ) && attrValue[ 0 ].ns ) ? attrValue[ 0 ].ns : null;\n\n\t\t\t// Activate binding if one is found. Cases:\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\tTemplate.bind( ... ).to( ... )\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\t'bar',\n\t\t\t//\t\t\tTemplate.bind( ... ).to( ... ),\n\t\t\t//\t\t\t'baz'\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\t//\t\tclass: {\n\t\t\t//\t\t\tns: 'abc',\n\t\t\t//\t\t\tvalue: Template.bind( ... ).to( ... )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\tif ( hasTemplateBinding( attrValue ) ) {\n\t\t\t\t// Normalize attributes with additional data like namespace:\n\t\t\t\t//\n\t\t\t\t//\t\tclass: {\n\t\t\t\t//\t\t\tns: 'abc',\n\t\t\t\t//\t\t\tvalue: [ ... ]\n\t\t\t\t//\t\t}\n\t\t\t\t//\n\t\t\t\tconst valueToBind = attrNs ? attrValue[ 0 ].value : attrValue;\n\n\t\t\t\t// Extend the original value of attributes like \"style\" and \"class\",\n\t\t\t\t// don't override them.\n\t\t\t\tif ( revertData && shouldExtend( attrName ) ) {\n\t\t\t\t\tvalueToBind.unshift( domAttrValue );\n\t\t\t\t}\n\n\t\t\t\tthis._bindToObservable( {\n\t\t\t\t\tschema: valueToBind,\n\t\t\t\t\tupdater: getAttributeUpdater( node, attrName, attrNs ),\n\t\t\t\t\tdata\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Style attribute could be an Object so it needs to be parsed in a specific way.\n\t\t\t//\n\t\t\t//\t\tstyle: {\n\t\t\t//\t\t\twidth: '100px',\n\t\t\t//\t\t\theight: Template.bind( ... ).to( ... )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\telse if ( attrName == 'style' && typeof attrValue[ 0 ] !== 'string' ) {\n\t\t\t\tthis._renderStyleAttribute( attrValue[ 0 ], data );\n\t\t\t}\n\n\t\t\t// Otherwise simply set the static attribute:\n\t\t\t//\n\t\t\t//\t\tclass: [ 'foo' ]\n\t\t\t//\n\t\t\t//\t\tclass: [ 'all', 'are', 'static' ]\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\t{\n\t\t\t//\t\t\t\tns: 'abc',\n\t\t\t//\t\t\t\tvalue: [ 'foo' ]\n\t\t\t//\t\t\t}\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\telse {\n\t\t\t\t// Extend the original value of attributes like \"style\" and \"class\",\n\t\t\t\t// don't override them.\n\t\t\t\tif ( revertData && domAttrValue && shouldExtend( attrName ) ) {\n\t\t\t\t\tattrValue.unshift( domAttrValue );\n\t\t\t\t}\n\n\t\t\t\tattrValue = attrValue\n\t\t\t\t\t// Retrieve \"values\" from:\n\t\t\t\t\t//\n\t\t\t\t\t//\t\tclass: [\n\t\t\t\t\t//\t\t\t{\n\t\t\t\t\t//\t\t\t\tns: 'abc',\n\t\t\t\t\t//\t\t\t\tvalue: [ ... ]\n\t\t\t\t\t//\t\t\t}\n\t\t\t\t\t//\t\t]\n\t\t\t\t\t//\n\t\t\t\t\t.map( val => val ? ( val.value || val ) : val )\n\t\t\t\t\t// Flatten the array.\n\t\t\t\t\t.reduce( ( prev, next ) => prev.concat( next ), [] )\n\t\t\t\t\t// Convert into string.\n\t\t\t\t\t.reduce( arrayValueReducer, '' );\n\n\t\t\t\tif ( !isFalsy( attrValue ) ) {\n\t\t\t\t\tnode.setAttributeNS( attrNs, attrName, attrValue );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Renders the `style` attribute of an HTML element based on\n\t * {@link module:ui/template~Template#attributes}.\n\t *\n\t * A style attribute is an {Object} with static values:\n\t *\n\t *\t\tattributes: {\n\t *\t\t\tstyle: {\n\t *\t\t\t\tcolor: 'red'\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * or values bound to {@link module:ui/model~Model} properties:\n\t *\n\t *\t\tattributes: {\n\t *\t\t\tstyle: {\n\t *\t\t\t\tcolor: bind.to( ... )\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * Note: The `style` attribute is rendered without setting the namespace. It does not seem to be\n\t * needed.\n\t *\n\t * @private\n\t * @param {Object} styles Styles located in `attributes.style` of {@link module:ui/template~TemplateDefinition}.\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderStyleAttribute( styles, data ) {\n\t\tconst node = data.node;\n\n\t\tfor ( const styleName in styles ) {\n\t\t\tconst styleValue = styles[ styleName ];\n\n\t\t\t// Cases:\n\t\t\t//\n\t\t\t//\t\tstyle: {\n\t\t\t//\t\t\tcolor: bind.to( 'attribute' )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\tif ( hasTemplateBinding( styleValue ) ) {\n\t\t\t\tthis._bindToObservable( {\n\t\t\t\t\tschema: [ styleValue ],\n\t\t\t\t\tupdater: getStyleUpdater( node, styleName ),\n\t\t\t\t\tdata\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Cases:\n\t\t\t//\n\t\t\t//\t\tstyle: {\n\t\t\t//\t\t\tcolor: 'red'\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\telse {\n\t\t\t\tnode.style[ styleName ] = styleValue;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Recursively renders HTML element's children from {@link module:ui/template~Template#children}.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderElementChildren( data ) {\n\t\tconst node = data.node;\n\t\tconst container = data.intoFragment ? document.createDocumentFragment() : node;\n\t\tconst isApplying = data.isApplying;\n\t\tlet childIndex = 0;\n\n\t\tfor ( const child of this.children ) {\n\t\t\tif ( isViewCollection( child ) ) {\n\t\t\t\tif ( !isApplying ) {\n\t\t\t\t\tchild.setParent( node );\n\n\t\t\t\t\t// Note: ViewCollection renders its children.\n\t\t\t\t\tfor ( const view of child ) {\n\t\t\t\t\t\tcontainer.appendChild( view.element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ( isView( child ) ) {\n\t\t\t\tif ( !isApplying ) {\n\t\t\t\t\tif ( !child.isRendered ) {\n\t\t\t\t\t\tchild.render();\n\t\t\t\t\t}\n\n\t\t\t\t\tcontainer.appendChild( child.element );\n\t\t\t\t}\n\t\t\t} else if ( isNode( child ) ) {\n\t\t\t\tcontainer.appendChild( child );\n\t\t\t} else {\n\t\t\t\tif ( isApplying ) {\n\t\t\t\t\tconst revertData = data.revertData;\n\t\t\t\t\tconst childRevertData = getEmptyRevertData();\n\n\t\t\t\t\trevertData.children.push( childRevertData );\n\n\t\t\t\t\tchild._renderNode( {\n\t\t\t\t\t\tnode: container.childNodes[ childIndex++ ],\n\t\t\t\t\t\tisApplying: true,\n\t\t\t\t\t\trevertData: childRevertData\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tcontainer.appendChild( child.render() );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( data.intoFragment ) {\n\t\t\tnode.appendChild( container );\n\t\t}\n\t}\n\n\t/**\n\t * Activates `on` event listeners from the {@link module:ui/template~TemplateDefinition}\n\t * on an HTML element.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_setUpListeners( data ) {\n\t\tif ( !this.eventListeners ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const key in this.eventListeners ) {\n\t\t\tconst revertBindings = this.eventListeners[ key ].map( schemaItem => {\n\t\t\t\tconst [ domEvtName, domSelector ] = key.split( '@' );\n\n\t\t\t\treturn schemaItem.activateDomEventListener( domEvtName, domSelector, data );\n\t\t\t} );\n\n\t\t\tif ( data.revertData ) {\n\t\t\t\tdata.revertData.bindings.push( revertBindings );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * For a given {@link module:ui/template~TemplateValueSchema} containing {@link module:ui/template~TemplateBinding}\n\t * activates the binding and sets its initial value.\n\t *\n\t * Note: {@link module:ui/template~TemplateValueSchema} can be for HTML element attributes or\n\t * text node `textContent`.\n\t *\n\t * @protected\n\t * @param {Object} options Binding options.\n\t * @param {module:ui/template~TemplateValueSchema} options.schema\n\t * @param {Function} options.updater A function which updates the DOM (like attribute or text).\n\t * @param {module:ui/template~RenderData} options.data Rendering data.\n\t */\n\t_bindToObservable( { schema, updater, data } ) {\n\t\tconst revertData = data.revertData;\n\n\t\t// Set initial values.\n\t\tsyncValueSchemaValue( schema, updater, data );\n\n\t\tconst revertBindings = schema\n\t\t\t// Filter \"falsy\" (false, undefined, null, '') value schema components out.\n\t\t\t.filter( item => !isFalsy( item ) )\n\t\t\t// Filter inactive bindings from schema, like static strings ('foo'), numbers (42), etc.\n\t\t\t.filter( item => item.observable )\n\t\t\t// Once only the actual binding are left, let the emitter listen to observable change:attribute event.\n\t\t\t// TODO: Reduce the number of listeners attached as many bindings may listen\n\t\t\t// to the same observable attribute.\n\t\t\t.map( templateBinding => templateBinding.activateAttributeListener( schema, updater, data ) );\n\n\t\tif ( revertData ) {\n\t\t\trevertData.bindings.push( revertBindings );\n\t\t}\n\t}\n\n\t/**\n\t * Reverts {@link module:ui/template~RenderData#revertData template data} from a node to\n\t * return it to the original state.\n\t *\n\t * @protected\n\t * @param {HTMLElement|Text} node A node to be reverted.\n\t * @param {Object} revertData An object that stores information about what changes have been made by\n\t * {@link #apply} to the node. See {@link module:ui/template~RenderData#revertData} for more information.\n\t */\n\t_revertTemplateFromNode( node, revertData ) {\n\t\tfor ( const binding of revertData.bindings ) {\n\t\t\t// Each binding may consist of several observable+observable#attribute.\n\t\t\t// like the following has 2:\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\t'x',\n\t\t\t//\t\t\tbind.to( 'foo' ),\n\t\t\t//\t\t\t'y',\n\t\t\t//\t\t\tbind.to( 'bar' )\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\tfor ( const revertBinding of binding ) {\n\t\t\t\trevertBinding();\n\t\t\t}\n\t\t}\n\n\t\tif ( revertData.text ) {\n\t\t\tnode.textContent = revertData.text;\n\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const attrName in revertData.attributes ) {\n\t\t\tconst attrValue = revertData.attributes[ attrName ];\n\n\t\t\t// When the attribute has **not** been set before #apply().\n\t\t\tif ( attrValue === null ) {\n\t\t\t\tnode.removeAttribute( attrName );\n\t\t\t} else {\n\t\t\t\tnode.setAttribute( attrName, attrValue );\n\t\t\t}\n\t\t}\n\n\t\tfor ( let i = 0; i < revertData.children.length; ++i ) {\n\t\t\tthis._revertTemplateFromNode( node.childNodes[ i ], revertData.children[ i ] );\n\t\t}\n\t}\n}\n\nmix( Template, EmitterMixin );\n\n/**\n * Describes a binding created by the {@link module:ui/template~Template.bind} interface.\n *\n * @protected\n */\nexport class TemplateBinding {\n\t/**\n\t * Creates an instance of the {@link module:ui/template~TemplateBinding} class.\n\t *\n\t * @param {module:ui/template~TemplateDefinition} def The definition of the binding.\n\t */\n\tconstructor( def ) {\n\t\tObject.assign( this, def );\n\n\t\t/**\n\t\t * An observable instance of the binding. It either:\n\t\t *\n\t\t * * provides the attribute with the value,\n\t\t * * or passes the event when a corresponding DOM event is fired.\n\t\t *\n\t\t * @member {module:utils/observablemixin~ObservableMixin} module:ui/template~TemplateBinding#observable\n\t\t */\n\n\t\t/**\n\t\t * An {@link module:utils/emittermixin~Emitter} used by the binding to:\n\t\t *\n\t\t * * listen to the attribute change in the {@link module:ui/template~TemplateBinding#observable},\n\t\t * * or listen to the event in the DOM.\n\t\t *\n\t\t * @member {module:utils/emittermixin~EmitterMixin} module:ui/template~TemplateBinding#emitter\n\t\t */\n\n\t\t/**\n\t\t * The name of the {@link module:ui/template~TemplateBinding#observable observed attribute}.\n\t\t *\n\t\t * @member {String} module:ui/template~TemplateBinding#attribute\n\t\t */\n\n\t\t/**\n\t\t * A custom function to process the value of the {@link module:ui/template~TemplateBinding#attribute}.\n\t\t *\n\t\t * @member {Function} [module:ui/template~TemplateBinding#callback]\n\t\t */\n\t}\n\n\t/**\n\t * Returns the value of the binding. It is the value of the {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}. The value may be processed by the\n\t * {@link module:ui/template~TemplateBinding#callback}, if such has been passed to the binding.\n\t *\n\t * @param {Node} [node] A native DOM node, passed to the custom {@link module:ui/template~TemplateBinding#callback}.\n\t * @returns {*} The value of {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}.\n\t */\n\tgetValue( node ) {\n\t\tconst value = this.observable[ this.attribute ];\n\n\t\treturn this.callback ? this.callback( value, node ) : value;\n\t}\n\n\t/**\n\t * Activates the listener which waits for changes of the {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}, then updates the DOM with the aggregated\n\t * value of {@link module:ui/template~TemplateValueSchema}.\n\t *\n\t * @param {module:ui/template~TemplateValueSchema} schema A full schema to generate an attribute or text in the DOM.\n\t * @param {Function} updater A DOM updater function used to update the native DOM attribute or text.\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t * @returns {Function} A function to sever the listener binding.\n\t */\n\tactivateAttributeListener( schema, updater, data ) {\n\t\tconst callback = () => syncValueSchemaValue( schema, updater, data );\n\n\t\tthis.emitter.listenTo( this.observable, 'change:' + this.attribute, callback );\n\n\t\t// Allows revert of the listener.\n\t\treturn () => {\n\t\t\tthis.emitter.stopListening( this.observable, 'change:' + this.attribute, callback );\n\t\t};\n\t}\n}\n\n/**\n * Describes either:\n *\n * * a binding to an {@link module:utils/observablemixin~Observable},\n * * or a native DOM event binding.\n *\n * It is created by the {@link module:ui/template~BindChain#to} method.\n *\n * @protected\n */\nexport class TemplateToBinding extends TemplateBinding {\n\t/**\n\t * Activates the listener for the native DOM event, which when fired, is propagated by\n\t * the {@link module:ui/template~TemplateBinding#emitter}.\n\t *\n\t * @param {String} domEvtName The name of the native DOM event.\n\t * @param {String} domSelector The selector in the DOM to filter delegated events.\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t * @returns {Function} A function to sever the listener binding.\n\t */\n\tactivateDomEventListener( domEvtName, domSelector, data ) {\n\t\tconst callback = ( evt, domEvt ) => {\n\t\t\tif ( !domSelector || domEvt.target.matches( domSelector ) ) {\n\t\t\t\tif ( typeof this.eventNameOrFunction == 'function' ) {\n\t\t\t\t\tthis.eventNameOrFunction( domEvt );\n\t\t\t\t} else {\n\t\t\t\t\tthis.observable.fire( this.eventNameOrFunction, domEvt );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.emitter.listenTo( data.node, domEvtName, callback );\n\n\t\t// Allows revert of the listener.\n\t\treturn () => {\n\t\t\tthis.emitter.stopListening( data.node, domEvtName, callback );\n\t\t};\n\t}\n}\n\n/**\n * Describes a binding to {@link module:utils/observablemixin~ObservableMixin} created by the {@link module:ui/template~BindChain#if}\n * method.\n *\n * @protected\n */\nexport class TemplateIfBinding extends TemplateBinding {\n\t/**\n\t * @inheritDoc\n\t */\n\tgetValue( node ) {\n\t\tconst value = super.getValue( node );\n\n\t\treturn isFalsy( value ) ? false : ( this.valueIfTrue || true );\n\t}\n\n\t/**\n\t * The value of the DOM attribute or text to be set if the {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable} is `true`.\n\t *\n\t * @member {String} [module:ui/template~TemplateIfBinding#valueIfTrue]\n\t */\n}\n\n// Checks whether given {@link module:ui/template~TemplateValueSchema} contains a\n// {@link module:ui/template~TemplateBinding}.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @returns {Boolean}\nfunction hasTemplateBinding( schema ) {\n\tif ( !schema ) {\n\t\treturn false;\n\t}\n\n\t// Normalize attributes with additional data like namespace:\n\t//\n\t//\t\tclass: {\n\t//\t\t\tns: 'abc',\n\t//\t\t\tvalue: [ ... ]\n\t//\t\t}\n\t//\n\tif ( schema.value ) {\n\t\tschema = schema.value;\n\t}\n\n\tif ( Array.isArray( schema ) ) {\n\t\treturn schema.some( hasTemplateBinding );\n\t} else if ( schema instanceof TemplateBinding ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// Assembles the value using {@link module:ui/template~TemplateValueSchema} and stores it in a form of\n// an Array. Each entry of the Array corresponds to one of {@link module:ui/template~TemplateValueSchema}\n// items.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\n// @returns {Array}\nfunction getValueSchemaValue( schema, node ) {\n\treturn schema.map( schemaItem => {\n\t\t// Process {@link module:ui/template~TemplateBinding} bindings.\n\t\tif ( schemaItem instanceof TemplateBinding ) {\n\t\t\treturn schemaItem.getValue( node );\n\t\t}\n\n\t\t// All static values like strings, numbers, and \"falsy\" values (false, null, undefined, '', etc.) just pass.\n\t\treturn schemaItem;\n\t} );\n}\n\n// A function executed each time the bound Observable attribute changes, which updates the DOM with a value\n// constructed from {@link module:ui/template~TemplateValueSchema}.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @param {Function} updater A function which updates the DOM (like attribute or text).\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\nfunction syncValueSchemaValue( schema, updater, { node } ) {\n\tlet value = getValueSchemaValue( schema, node );\n\n\t// Check if schema is a single Template.bind.if, like:\n\t//\n\t//\t\tclass: Template.bind.if( 'foo' )\n\t//\n\tif ( schema.length == 1 && schema[ 0 ] instanceof TemplateIfBinding ) {\n\t\tvalue = value[ 0 ];\n\t} else {\n\t\tvalue = value.reduce( arrayValueReducer, '' );\n\t}\n\n\tif ( isFalsy( value ) ) {\n\t\tupdater.remove();\n\t} else {\n\t\tupdater.set( value );\n\t}\n}\n\n// Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of DOM Node to set or reset `textContent`.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @returns {Object}\nfunction getTextUpdater( node ) {\n\treturn {\n\t\tset( value ) {\n\t\t\tnode.textContent = value;\n\t\t},\n\n\t\tremove() {\n\t\t\tnode.textContent = '';\n\t\t}\n\t};\n}\n\n// Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of DOM Node to set or reset an attribute.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @param {String} attrName Name of the attribute to be modified.\n// @param {String} [ns=null] Namespace to use.\n// @returns {Object}\nfunction getAttributeUpdater( el, attrName, ns ) {\n\treturn {\n\t\tset( value ) {\n\t\t\tel.setAttributeNS( ns, attrName, value );\n\t\t},\n\n\t\tremove() {\n\t\t\tel.removeAttributeNS( ns, attrName );\n\t\t}\n\t};\n}\n\n// Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of CSSStyleDeclaration to set or remove a style.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @param {String} styleName Name of the style to be modified.\n// @returns {Object}\nfunction getStyleUpdater( el, styleName ) {\n\treturn {\n\t\tset( value ) {\n\t\t\tel.style[ styleName ] = value;\n\t\t},\n\n\t\tremove() {\n\t\t\tel.style[ styleName ] = null;\n\t\t}\n\t};\n}\n\n// Clones definition of the template.\n//\n// @param {module:ui/template~TemplateDefinition} def\n// @returns {module:ui/template~TemplateDefinition}\nfunction clone( def ) {\n\tconst clone = cloneDeepWith( def, value => {\n\t\t// Don't clone the `Template.bind`* bindings because of the references to Observable\n\t\t// and DomEmitterMixin instances inside, which would also be traversed and cloned by greedy\n\t\t// cloneDeepWith algorithm. There's no point in cloning Observable/DomEmitterMixins\n\t\t// along with the definition.\n\t\t//\n\t\t// Don't clone Template instances if provided as a child. They're simply #render()ed\n\t\t// and nothing should interfere.\n\t\t//\n\t\t// Also don't clone View instances if provided as a child of the Template. The template\n\t\t// instance will be extracted from the View during the normalization and there's no need\n\t\t// to clone it.\n\t\tif ( value && ( value instanceof TemplateBinding || isTemplate( value ) || isView( value ) || isViewCollection( value ) ) ) {\n\t\t\treturn value;\n\t\t}\n\t} );\n\n\treturn clone;\n}\n\n// Normalizes given {@link module:ui/template~TemplateDefinition}.\n//\n// See:\n//  * {@link normalizeAttributes}\n//  * {@link normalizeListeners}\n//  * {@link normalizePlainTextDefinition}\n//  * {@link normalizeTextDefinition}\n//\n// @param {module:ui/template~TemplateDefinition} def\n// @returns {module:ui/template~TemplateDefinition} Normalized definition.\nfunction normalize( def ) {\n\tif ( typeof def == 'string' ) {\n\t\tdef = normalizePlainTextDefinition( def );\n\t} else if ( def.text ) {\n\t\tnormalizeTextDefinition( def );\n\t}\n\n\tif ( def.on ) {\n\t\tdef.eventListeners = normalizeListeners( def.on );\n\n\t\t// Template mixes EmitterMixin, so delete #on to avoid collision.\n\t\tdelete def.on;\n\t}\n\n\tif ( !def.text ) {\n\t\tif ( def.attributes ) {\n\t\t\tnormalizeAttributes( def.attributes );\n\t\t}\n\n\t\tconst children = [];\n\n\t\tif ( def.children ) {\n\t\t\tif ( isViewCollection( def.children ) ) {\n\t\t\t\tchildren.push( def.children );\n\t\t\t} else {\n\t\t\t\tfor ( const child of def.children ) {\n\t\t\t\t\tif ( isTemplate( child ) || isView( child ) || isNode( child ) ) {\n\t\t\t\t\t\tchildren.push( child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchildren.push( new Template( child ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdef.children = children;\n\t}\n\n\treturn def;\n}\n\n// Normalizes \"attributes\" section of {@link module:ui/template~TemplateDefinition}.\n//\n//\t\tattributes: {\n//\t\t\ta: 'bar',\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\n//\t\t\tc: {\n//\t\t\t\tvalue: 'bar'\n//\t\t\t}\n//\t\t}\n//\n// becomes\n//\n//\t\tattributes: {\n//\t\t\ta: [ 'bar' ],\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\n//\t\t\tc: {\n//\t\t\t\tvalue: [ 'bar' ]\n//\t\t\t}\n//\t\t}\n//\n// @param {Object} attributes\nfunction normalizeAttributes( attributes ) {\n\tfor ( const a in attributes ) {\n\t\tif ( attributes[ a ].value ) {\n\t\t\tattributes[ a ].value = [].concat( attributes[ a ].value );\n\t\t}\n\n\t\tarrayify( attributes, a );\n\t}\n}\n\n// Normalizes \"on\" section of {@link module:ui/template~TemplateDefinition}.\n//\n//\t\ton: {\n//\t\t\ta: 'bar',\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n//\t\t}\n//\n// becomes\n//\n//\t\ton: {\n//\t\t\ta: [ 'bar' ],\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n//\t\t}\n//\n// @param {Object} listeners\n// @returns {Object} Object containing normalized listeners.\nfunction normalizeListeners( listeners ) {\n\tfor ( const l in listeners ) {\n\t\tarrayify( listeners, l );\n\t}\n\n\treturn listeners;\n}\n\n// Normalizes \"string\" {@link module:ui/template~TemplateDefinition}.\n//\n//\t\t\"foo\"\n//\n// becomes\n//\n//\t\t{ text: [ 'foo' ] },\n//\n// @param {String} def\n// @returns {module:ui/template~TemplateDefinition} Normalized template definition.\nfunction normalizePlainTextDefinition( def ) {\n\treturn {\n\t\ttext: [ def ]\n\t};\n}\n\n// Normalizes text {@link module:ui/template~TemplateDefinition}.\n//\n//\t\tchildren: [\n//\t\t\t{ text: 'def' },\n//\t\t\t{ text: {@link module:ui/template~TemplateBinding} }\n//\t\t]\n//\n// becomes\n//\n//\t\tchildren: [\n//\t\t\t{ text: [ 'def' ] },\n//\t\t\t{ text: [ {@link module:ui/template~TemplateBinding} ] }\n//\t\t]\n//\n// @param {module:ui/template~TemplateDefinition} def\nfunction normalizeTextDefinition( def ) {\n\tif ( !Array.isArray( def.text ) ) {\n\t\tdef.text = [ def.text ];\n\t}\n}\n\n// Wraps an entry in Object in an Array, if not already one.\n//\n//\t\t{\n//\t\t\tx: 'y',\n//\t\t\ta: [ 'b' ]\n//\t\t}\n//\n// becomes\n//\n//\t\t{\n//\t\t\tx: [ 'y' ],\n//\t\t\ta: [ 'b' ]\n//\t\t}\n//\n// @param {Object} obj\n// @param {String} key\nfunction arrayify( obj, key ) {\n\tif ( !Array.isArray( obj[ key ] ) ) {\n\t\tobj[ key ] = [ obj[ key ] ];\n\t}\n}\n\n// A helper which concatenates the value avoiding unwanted\n// leading white spaces.\n//\n// @param {String} prev\n// @param {String} cur\n// @returns {String}\nfunction arrayValueReducer( prev, cur ) {\n\tif ( isFalsy( cur ) ) {\n\t\treturn prev;\n\t} else if ( isFalsy( prev ) ) {\n\t\treturn cur;\n\t} else {\n\t\treturn `${ prev } ${ cur }`;\n\t}\n}\n\n// Extends one object defined in the following format:\n//\n//\t\t{\n//\t\t\tkey1: [Array1],\n//\t\t\tkey2: [Array2],\n//\t\t\t...\n//\t\t\tkeyN: [ArrayN]\n//\t\t}\n//\n// with another object of the same data format.\n//\n// @param {Object} obj Base object.\n// @param {Object} ext Object extending base.\n// @returns {String}\nfunction extendObjectValueArray( obj, ext ) {\n\tfor ( const a in ext ) {\n\t\tif ( obj[ a ] ) {\n\t\t\tobj[ a ].push( ...ext[ a ] );\n\t\t} else {\n\t\t\tobj[ a ] = ext[ a ];\n\t\t}\n\t}\n}\n\n// A helper for {@link module:ui/template~Template#extend}. Recursively extends {@link module:ui/template~Template} instance\n// with content from {@link module:ui/template~TemplateDefinition}. See {@link module:ui/template~Template#extend} to learn more.\n//\n// @param {module:ui/template~Template} def A template instance to be extended.\n// @param {module:ui/template~TemplateDefinition} def A definition which is to extend the template instance.\n// @param {Object} Error context.\nfunction extendTemplate( template, def ) {\n\tif ( def.attributes ) {\n\t\tif ( !template.attributes ) {\n\t\t\ttemplate.attributes = {};\n\t\t}\n\n\t\textendObjectValueArray( template.attributes, def.attributes );\n\t}\n\n\tif ( def.eventListeners ) {\n\t\tif ( !template.eventListeners ) {\n\t\t\ttemplate.eventListeners = {};\n\t\t}\n\n\t\textendObjectValueArray( template.eventListeners, def.eventListeners );\n\t}\n\n\tif ( def.text ) {\n\t\ttemplate.text.push( ...def.text );\n\t}\n\n\tif ( def.children && def.children.length ) {\n\t\tif ( template.children.length != def.children.length ) {\n\t\t\t/**\n\t\t\t * The number of children in extended definition does not match.\n\t\t\t *\n\t\t\t * @error ui-template-extend-children-mismatch\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-template-extend-children-mismatch: The number of children in extended definition does not match.',\n\t\t\t\ttemplate\n\t\t\t);\n\t\t}\n\n\t\tlet childIndex = 0;\n\n\t\tfor ( const childDef of def.children ) {\n\t\t\textendTemplate( template.children[ childIndex++ ], childDef );\n\t\t}\n\t}\n}\n\n// Checks if value is \"falsy\".\n// Note: 0 (Number) is not \"falsy\" in this context.\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isFalsy( value ) {\n\treturn !value && value !== 0;\n}\n\n// Checks if the item is an instance of {@link module:ui/view~View}\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isView( item ) {\n\treturn item instanceof View;\n}\n\n// Checks if the item is an instance of {@link module:ui/template~Template}\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isTemplate( item ) {\n\treturn item instanceof Template;\n}\n\n// Checks if the item is an instance of {@link module:ui/viewcollection~ViewCollection}\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isViewCollection( item ) {\n\treturn item instanceof ViewCollection;\n}\n\n// Creates an empty skeleton for {@link module:ui/template~Template#revert}\n// data.\n//\n// @private\nfunction getEmptyRevertData() {\n\treturn {\n\t\tchildren: [],\n\t\tbindings: [],\n\t\tattributes: {}\n\t};\n}\n\n// Checks whether an attribute should be extended when\n// {@link module:ui/template~Template#apply} is called.\n//\n// @private\n// @param {String} attrName Attribute name to check.\nfunction shouldExtend( attrName ) {\n\treturn attrName == 'class' || attrName == 'style';\n}\n\n/**\n * A definition of the {@link module:ui/template~Template}. It describes what kind of\n * node a template will render (HTML element or text), attributes of an element, DOM event\n * listeners and children.\n *\n * Also see:\n * * {@link module:ui/template~TemplateValueSchema} to learn about HTML element attributes,\n * * {@link module:ui/template~TemplateListenerSchema} to learn about DOM event listeners.\n *\n * A sample definition on an HTML element can look like this:\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tchildren: [\n *\t\t\t\t{\n *\t\t\t\t\ttag: 'span',\n *\t\t\t\t\tattributes: { ... },\n *\t\t\t\t\tchildren: [ ... ],\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\ttext: 'static–text'\n *\t\t\t\t},\n *\t\t\t\t'also-static–text',\n *\t\t\t],\n *\t\t\tattributes: {\n *\t\t\t\tclass: {@link module:ui/template~TemplateValueSchema},\n *\t\t\t\tid: {@link module:ui/template~TemplateValueSchema},\n *\t\t\t\tstyle: {@link module:ui/template~TemplateValueSchema}\n *\n *\t\t\t\t// ...\n *\t\t\t},\n *\t\t\ton: {\n *\t\t\t\t'click': {@link module:ui/template~TemplateListenerSchema}\n *\n *\t\t\t\t// Document.querySelector format is also accepted.\n *\t\t\t\t'keyup@a.some-class': {@link module:ui/template~TemplateListenerSchema}\n *\n *\t\t\t\t// ...\n *\t\t\t}\n *\t\t} );\n *\n * A {@link module:ui/view~View}, another {@link module:ui/template~Template} or a native DOM node\n * can also become a child of a template. When a view is passed, its {@link module:ui/view~View#element} is used:\n *\n *\t\tconst view = new SomeView();\n *\t\tconst childTemplate = new Template( { ... } );\n *\t\tconst childNode = document.createElement( 'b' );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\n *\t\t\tchildren: [\n *\t\t\t\t// view#element will be added as a child of this <p>.\n *\t\t\t\tview,\n *\n * \t\t\t\t// The output of childTemplate.render() will be added here.\n *\t\t\t\tchildTemplate,\n *\n *\t\t\t\t// Native DOM nodes are included directly in the rendered output.\n *\t\t\t\tchildNode\n *\t\t\t]\n *\t\t} );\n *\n * An entire {@link module:ui/viewcollection~ViewCollection} can be used as a child in the definition:\n *\n *\t\tconst collection = new ViewCollection();\n *\t\tcollection.add( someView );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\n *\t\t\tchildren: collection\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateDefinition\n * @type Object\n *\n * @property {String} tag See the template {@link module:ui/template~Template#tag} property.\n *\n * @property {Array.<module:ui/template~TemplateDefinition>} [children]\n * See the template {@link module:ui/template~Template#children} property.\n *\n * @property {Object.<String, module:ui/template~TemplateValueSchema>} [attributes]\n * See the template {@link module:ui/template~Template#attributes} property.\n *\n * @property {String|module:ui/template~TemplateValueSchema|Array.<String|module:ui/template~TemplateValueSchema>} [text]\n * See the template {@link module:ui/template~Template#text} property.\n *\n * @property {Object.<String, module:ui/template~TemplateListenerSchema>} [on]\n * See the template {@link module:ui/template~Template#eventListeners} property.\n */\n\n/**\n * Describes a value of an HTML element attribute or `textContent`. It allows combining multiple\n * data sources like static values and {@link module:utils/observablemixin~Observable} attributes.\n *\n * Also see:\n * * {@link module:ui/template~TemplateDefinition} to learn where to use it,\n * * {@link module:ui/template~Template.bind} to learn how to configure\n * {@link module:utils/observablemixin~Observable} attribute bindings,\n * * {@link module:ui/template~Template#render} to learn how to render a template,\n * * {@link module:ui/template~BindChain#to `to()`} and {@link module:ui/template~BindChain#if `if()`}\n * methods to learn more about bindings.\n *\n * Attribute values can be described in many different ways:\n *\n *\t\t// Bind helper will create bindings to attributes of the observable.\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\t// A plain string schema.\n *\t\t\t\t'class': 'static-text',\n *\n *\t\t\t\t// An object schema, binds to the \"foo\" attribute of the\n *\t\t\t\t// observable and follows its value.\n *\t\t\t\t'class': bind.to( 'foo' ),\n *\n *\t\t\t\t// An array schema, combines the above.\n *\t\t\t\t'class': [\n *\t\t\t\t\t'static-text',\n *\t\t\t\t\tbind.to( 'bar', () => { ... } ),\n *\n * \t\t\t\t\t// Bindings can also be conditional.\n *\t\t\t\t\tbind.if( 'baz', 'class-when-baz-is-true' )\n *\t\t\t\t],\n *\n *\t\t\t\t// An array schema, with a custom namespace, e.g. useful for creating SVGs.\n *\t\t\t\t'class': {\n *\t\t\t\t\tns: 'http://ns.url',\n *\t\t\t\t\tvalue: [\n *\t\t\t\t\t\tbind.if( 'baz', 'value-when-true' ),\n *\t\t\t\t\t\t'static-text'\n *\t\t\t\t\t]\n *\t\t\t\t},\n *\n *\t\t\t\t// An object schema, specific for styles.\n *\t\t\t\tstyle: {\n *\t\t\t\t\tcolor: 'red',\n *\t\t\t\t\tbackgroundColor: bind.to( 'qux', () => { ... } )\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * Text nodes can also have complex values:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\t// Will render a \"foo\" text node.\n *\t\tnew Template( {\n *\t\t\ttext: 'foo'\n *\t\t} );\n *\n *\t\t// Will render a \"static text: {observable.foo}\" text node.\n *\t\t// The text of the node will be updated as the \"foo\" attribute changes.\n *\t\tnew Template( {\n *\t\t\ttext: [\n *\t\t\t\t'static text: ',\n *\t\t\t\tbind.to( 'foo', () => { ... } )\n *\t\t\t]\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateValueSchema\n * @type {Object|String|Array}\n */\n\n/**\n * Describes an event listener attached to an HTML element. Such listener can propagate DOM events\n * through an {@link module:utils/observablemixin~Observable} instance, execute custom callbacks\n * or both, if necessary.\n *\n * Also see:\n * * {@link module:ui/template~TemplateDefinition} to learn more about template definitions,\n * * {@link module:ui/template~BindChain#to `to()`} method to learn more about bindings.\n *\n * Check out different ways of attaching event listeners below:\n *\n *\t\t// Bind helper will propagate events through the observable.\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\ton: {\n *\t\t\t\t// An object schema. The observable will fire the \"clicked\" event upon DOM \"click\".\n *\t\t\t\tclick: bind.to( 'clicked' )\n *\n *\t\t\t\t// An object schema. It will work for \"click\" event on \"a.foo\" children only.\n *\t\t\t\t'click@a.foo': bind.to( 'clicked' )\n *\n *\t\t\t\t// An array schema, makes the observable propagate multiple events.\n *\t\t\t\tclick: [\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\t\t\t\t\tbind.to( 'executed' )\n *\t\t\t\t],\n *\n *\t\t\t\t// An array schema with a custom callback.\n *\t\t\t\t'click@a.foo': {\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\t\t\t\t\tbind.to( evt => {\n *\t\t\t\t\t\tconsole.log( `${ evt.target } has been clicked!` );\n *\t\t\t\t\t} }\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateListenerSchema\n * @type {Object|String|Array}\n */\n\n/**\n * The return value of {@link ~Template.bind `Template.bind()`}. It provides `to()` and `if()`\n * methods to create the {@link module:utils/observablemixin~Observable observable} attribute and event bindings.\n *\n * @interface module:ui/template~BindChain\n */\n\n/**\n * Binds an {@link module:utils/observablemixin~Observable observable} to either:\n *\n * * an HTML element attribute or a text node `textContent`, so it remains in sync with the observable\n * attribute as it changes,\n * * or an HTML element DOM event, so the DOM events are propagated through an observable.\n *\n * Some common use cases of `to()` bindings are presented below:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\t// class=\"...\" attribute gets bound to `observable#a`\n *\t\t\t\tclass: bind.to( 'a' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t// <p>...</p> gets bound to observable#b; always `toUpperCase()`.\n *\t\t\t\t{\n *\t\t\t\t\ttext: bind.to( 'b', ( value, node ) => value.toUpperCase() )\n *\t\t\t\t}\n *\t\t\t],\n *\t\t\ton: {\n *\t\t\t\tclick: [\n *\t\t\t\t\t// An observable will fire \"clicked\" upon \"click\" in the DOM.\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\n *\t\t\t\t\t// A custom callback will be executed upon \"click\" in the DOM.\n *\t\t\t\t\tbind.to( () => {\n *\t\t\t\t\t\t...\n *\t\t\t\t\t} )\n *\t\t\t\t]\n *\t\t\t}\n *\t\t} ).render();\n *\n * Learn more about using `to()` in the {@link module:ui/template~TemplateValueSchema} and\n * {@link module:ui/template~TemplateListenerSchema}.\n *\n * @method #to\n * @param {String|Function} eventNameOrFunctionOrAttribute An attribute name of\n * {@link module:utils/observablemixin~Observable} or a DOM event name or an event callback.\n * @param {Function} [callback] Allows for processing of the value. Accepts `Node` and `value` as arguments.\n * @returns {module:ui/template~TemplateBinding}\n */\n\n/**\n * Binds an {@link module:utils/observablemixin~Observable observable} to an HTML element attribute or a text\n * node `textContent` so it remains in sync with the observable attribute as it changes.\n *\n * Unlike {@link module:ui/template~BindChain#to}, it controls the presence of the attribute or `textContent`\n * depending on the \"falseness\" of an {@link module:utils/observablemixin~Observable} attribute.\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'input',\n *\t\t\tattributes: {\n *\t\t\t\t// <input checked> when `observable#a` is not undefined/null/false/''\n *\t\t\t\t// <input> when `observable#a` is undefined/null/false\n *\t\t\t\tchecked: bind.if( 'a' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t{\n *\t\t\t\t\t// <input>\"b-is-not-set\"</input> when `observable#b` is undefined/null/false/''\n *\t\t\t\t\t// <input></input> when `observable#b` is not \"falsy\"\n *\t\t\t\t\ttext: bind.if( 'b', 'b-is-not-set', ( value, node ) => !value )\n *\t\t\t\t}\n *\t\t\t]\n *\t\t} ).render();\n *\n * Learn more about using `if()` in the {@link module:ui/template~TemplateValueSchema}.\n *\n * @method #if\n * @param {String} attribute An attribute name of {@link module:utils/observablemixin~Observable} used in the binding.\n * @param {String} [valueIfTrue] Value set when the {@link module:utils/observablemixin~Observable} attribute is not\n * undefined/null/false/'' (empty string).\n * @param {Function} [callback] Allows for processing of the value. Accepts `Node` and `value` as arguments.\n * @returns {module:ui/template~TemplateBinding}\n */\n\n/**\n * The {@link module:ui/template~Template#_renderNode} configuration.\n *\n * @private\n * @interface module:ui/template~RenderData\n */\n\n/**\n * Tells {@link module:ui/template~Template#_renderNode} to render\n * children into `DocumentFragment` first and then append the fragment\n * to the parent element. It is a speed optimization.\n *\n * @member {Boolean} #intoFragment\n */\n\n/**\n * A node which is being rendered.\n *\n * @member {HTMLElement|Text} #node\n */\n\n/**\n * Indicates whether the {@module:ui/template~RenderNodeOptions#node} has\n * been provided by {@module:ui/template~Template#apply}.\n *\n * @member {Boolean} #isApplying\n */\n\n/**\n * An object storing the data that helps {@module:ui/template~Template#revert}\n * bringing back an element to its initial state, i.e. before\n * {@module:ui/template~Template#apply} was called.\n *\n * @member {Object} #revertData\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/view\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ViewCollection from './viewcollection';\nimport Template from './template';\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\nimport '../theme/globals/globals.css';\n\n/**\n * The basic view class, which represents an HTML element created out of a\n * {@link module:ui/view~View#template}. Views are building blocks of the user interface and handle\n * interaction\n *\n * Views {@link module:ui/view~View#registerChild aggregate} children in\n * {@link module:ui/view~View#createCollection collections} and manage the life cycle of DOM\n * listeners e.g. by handling rendering and destruction.\n *\n * See the {@link module:ui/template~TemplateDefinition} syntax to learn more about shaping view\n * elements, attributes and listeners.\n *\n *\t\tclass SampleView extends View {\n *\t\t\tconstructor( locale ) {\n *\t\t\t\tsuper( locale );\n *\n *\t\t\t\tconst bind = this.bindTemplate;\n *\n *\t\t\t\t// Views define their interface (state) using observable attributes.\n *\t\t\t\tthis.set( 'elementClass', 'bar' );\n *\n *\t\t\t\tthis.setTemplate( {\n *\t\t\t\t\ttag: 'p',\n *\n *\t\t\t\t\t// The element of the view can be defined with its children.\n *\t\t\t\t\tchildren: [\n *\t\t\t\t\t\t'Hello',\n *\t\t\t\t\t\t{\n *\t\t\t\t\t\t\ttag: 'b',\n *\t\t\t\t\t\t\tchildren: [ 'world!' ]\n *\t\t\t\t\t\t}\n *\t\t\t\t\t],\n *\t\t\t\t\tattributes: {\n *\t\t\t\t\t\tclass: [\n *\t\t\t\t\t\t\t'foo',\n *\n *\t\t\t\t\t\t\t// Observable attributes control the state of the view in DOM.\n *\t\t\t\t\t\t\tbind.to( 'elementClass' )\n *\t\t\t\t\t\t]\n *\t\t\t\t\t},\n *\t\t\t\t\ton: {\n *\t\t\t\t\t\t// Views listen to DOM events and propagate them.\n *\t\t\t\t\t\tclick: bind.to( 'clicked' )\n *\t\t\t\t\t}\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n *\t\tconst view = new SampleView( locale );\n *\n *\t\tview.render();\n *\n *\t\t// Append <p class=\"foo bar\">Hello<b>world</b></p> to the <body>\n *\t\tdocument.body.appendChild( view.element );\n *\n *\t\t// Change the class attribute to <p class=\"foo baz\">Hello<b>world</b></p>\n *\t\tview.elementClass = 'baz';\n *\n *\t\t// Respond to the \"click\" event in DOM by executing a custom action.\n *\t\tview.on( 'clicked', () => {\n *\t\t\tconsole.log( 'The view has been clicked!' );\n *\t\t} );\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class View {\n\t/**\n\t * Creates an instance of the {@link module:ui/view~View} class.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t */\n\tconstructor( locale ) {\n\t\t/**\n\t\t * An HTML element of the view. `null` until {@link #render rendered}\n\t\t * from the {@link #template}.\n\t\t *\n\t\t *\t\tclass SampleView extends View {\n\t\t *\t\t\tconstructor() {\n\t\t *\t\t\t\tsuper();\n\t\t *\n\t\t *\t\t\t\t// A template instance the #element will be created from.\n\t\t *\t\t\t\tthis.setTemplate( {\n\t\t *\t\t\t\t\ttag: 'p'\n\t\t *\n\t\t *\t\t\t\t\t// ...\n\t\t *\t\t\t\t} );\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\n\t\t *\t\tconst view = new SampleView();\n\t\t *\n\t\t *\t\t// Renders the #template.\n\t\t *\t\tview.render();\n\t\t *\n\t\t *\t\t// Append the HTML element of the view to <body>.\n\t\t *\t\tdocument.body.appendChild( view.element );\n\t\t *\n\t\t * **Note**: The element of the view can also be assigned directly:\n\t\t *\n\t\t *\t\tview.element = document.querySelector( '#my-container' );\n\t\t *\n\t\t * @member {HTMLElement}\n\t\t */\n\t\tthis.element = null;\n\n\t\t/**\n\t\t * Set `true` when the view has already been {@link module:ui/view~View#render rendered}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isRendered\n\t\t */\n\t\tthis.isRendered = false;\n\n\t\t/**\n\t\t * A set of tools to localize the user interface.\n\t\t *\n\t\t * Also see {@link module:core/editor/editor~Editor#locale}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = locale;\n\n\t\t/**\n\t\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t\t *\n\t\t * Note: If {@link #locale} instance hasn't been passed to the view this method may not\n\t\t * be available.\n\t\t *\n\t\t * @see module:utils/locale~Locale#t\n\t\t * @method\n\t\t */\n\t\tthis.t = locale && locale.t;\n\n\t\t/**\n\t\t * Collections registered with {@link #createCollection}.\n\t\t *\n\t\t * @protected\n\t\t * @member {Set.<module:ui/viewcollection~ViewCollection>}\n\t\t */\n\t\tthis._viewCollections = new Collection();\n\n\t\t/**\n\t\t * A collection of view instances, which have been added directly\n\t\t * into the {@link module:ui/template~Template#children}.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis._unboundChildren = this.createCollection();\n\n\t\t// Pass parent locale to its children.\n\t\tthis._viewCollections.on( 'add', ( evt, collection ) => {\n\t\t\tcollection.locale = locale;\n\t\t} );\n\n\t\t/**\n\t\t * Template of this view. It provides the {@link #element} representing\n\t\t * the view in DOM, which is {@link #render rendered}.\n\t\t *\n\t\t * @member {module:ui/template~Template} #template\n\t\t */\n\n\t\t/**\n\t\t * Cached {@link module:ui/template~BindChain bind chain} object created by the\n\t\t * {@link #template}. See {@link #bindTemplate}.\n\t\t *\n\t\t * @private\n\t\t * @member {Object} #_bindTemplate\n\t\t */\n\n\t\tthis.decorate( 'render' );\n\t}\n\n\t/**\n\t * Shorthand for {@link module:ui/template~Template.bind}, a binding\n\t * {@link module:ui/template~BindChain interface} pre–configured for the view instance.\n\t *\n\t * It provides {@link module:ui/template~BindChain#to `to()`} and\n\t * {@link module:ui/template~BindChain#if `if()`} methods that initialize bindings with\n\t * observable attributes and attach DOM listeners.\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor( locale ) {\n\t *\t\t\t\tsuper( locale );\n\t *\n\t *\t\t\t\tconst bind = this.bindTemplate;\n\t *\n\t *\t\t\t\t// These {@link module:utils/observablemixin~Observable observable} attributes will control\n\t *\t\t\t\t// the state of the view in DOM.\n\t *\t\t\t\tthis.set( {\n\t *\t\t\t\t\telementClass: 'foo',\n\t *\t\t\t\t \tisEnabled: true\n\t *\t\t\t\t } );\n\t *\n\t *\t\t\t\tthis.setTemplate( {\n\t *\t\t\t\t\ttag: 'p',\n\t *\n\t *\t\t\t\t\tattributes: {\n\t *\t\t\t\t\t\t// The class HTML attribute will follow elementClass\n\t *\t\t\t\t\t\t// and isEnabled view attributes.\n\t *\t\t\t\t\t\tclass: [\n\t *\t\t\t\t\t\t\tbind.to( 'elementClass' )\n\t *\t\t\t\t\t\t\tbind.if( 'isEnabled', 'present-when-enabled' )\n\t *\t\t\t\t\t\t]\n\t *\t\t\t\t\t},\n\t *\n\t *\t\t\t\t\ton: {\n\t *\t\t\t\t\t\t// The view will fire the \"clicked\" event upon clicking <p> in DOM.\n\t *\t\t\t\t\t\tclick: bind.to( 'clicked' )\n\t *\t\t\t\t\t}\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * @method #bindTemplate\n\t */\n\tget bindTemplate() {\n\t\tif ( this._bindTemplate ) {\n\t\t\treturn this._bindTemplate;\n\t\t}\n\n\t\treturn ( this._bindTemplate = Template.bind( this, this ) );\n\t}\n\n\t/**\n\t * Creates a new collection of views, which can be used as\n\t * {@link module:ui/template~Template#children} of this view.\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor( locale ) {\n\t *\t\t\t\tsuper( locale );\n\t *\n\t *\t\t\t\tconst child = new ChildView( locale );\n\t *\t\t\t\tthis.items = this.createCollection( [ child ] );\n \t *\n\t *\t\t\t\tthis.setTemplate( {\n\t *\t\t\t\t\ttag: 'p',\n\t *\n\t *\t\t\t\t\t// `items` collection will render here.\n\t *\t\t\t\t\tchildren: this.items\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst view = new SampleView( locale );\n\t *\t\tview.render();\n\t *\n\t *\t\t// It will append <p><child#element></p> to the <body>.\n\t *\t\tdocument.body.appendChild( view.element );\n\t *\n\t * @param {Iterable.<module:ui/view~View>} [views] Initial views of the collection.\n\t * @returns {module:ui/viewcollection~ViewCollection} A new collection of view instances.\n\t */\n\tcreateCollection( views ) {\n\t\tconst collection = new ViewCollection( views );\n\n\t\tthis._viewCollections.add( collection );\n\n\t\treturn collection;\n\t}\n\n\t/**\n\t * Registers a new child view under the view instance. Once registered, a child\n\t * view is managed by its parent, including {@link #render rendering}\n\t * and {@link #destroy destruction}.\n\t *\n\t * To revert this, use {@link #deregisterChild}.\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor( locale ) {\n\t *\t\t\t\tsuper( locale );\n\t *\n\t *\t\t\t\tthis.childA = new SomeChildView( locale );\n\t *\t\t\t\tthis.childB = new SomeChildView( locale );\n\t *\n\t *\t\t\t\tthis.setTemplate( { tag: 'p' } );\n\t *\n\t *\t\t\t\t// Register the children.\n\t *\t\t\t\tthis.registerChild( [ this.childA, this.childB ] );\n\t *\t\t\t}\n\t *\n\t *\t\t\trender() {\n\t *\t\t\t\tsuper.render();\n\t *\n\t *\t\t\t\tthis.element.appendChild( this.childA.element );\n\t *\t\t\t\tthis.element.appendChild( this.childB.element );\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst view = new SampleView( locale );\n\t *\n\t *\t\tview.render();\n\t *\n\t *\t\t// Will append <p><childA#element><b></b><childB#element></p>.\n\t *\t\tdocument.body.appendChild( view.element );\n\t *\n\t * **Note**: There's no need to add child views if they're already referenced in the\n\t * {@link #template}:\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor( locale ) {\n\t *\t\t\t\tsuper( locale );\n\t *\n\t *\t\t\t\tthis.childA = new SomeChildView( locale );\n\t *\t\t\t\tthis.childB = new SomeChildView( locale );\n\t *\n\t *\t\t\t\tthis.setTemplate( {\n\t *\t\t\t\t\ttag: 'p',\n\t *\n \t *\t\t\t\t\t// These children will be added automatically. There's no\n \t *\t\t\t\t\t// need to call {@link #registerChild} for any of them.\n\t *\t\t\t\t\tchildren: [ this.childA, this.childB ]\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\n\t *\t\t\t// ...\n\t *\t\t}\n\t *\n\t * @param {module:ui/view~View|Iterable.<module:ui/view~View>} children Children views to be registered.\n\t */\n\tregisterChild( children ) {\n\t\tif ( !isIterable( children ) ) {\n\t\t\tchildren = [ children ];\n\t\t}\n\n\t\tfor ( const child of children ) {\n\t\t\tthis._unboundChildren.add( child );\n\t\t}\n\t}\n\n\t/**\n\t * The opposite of {@link #registerChild}. Removes a child view from this view instance.\n\t * Once removed, the child is no longer managed by its parent, e.g. it can safely\n\t * become a child of another parent view.\n\t *\n\t * @see #registerChild\n\t * @param {module:ui/view~View|Iterable.<module:ui/view~View>} children Child views to be removed.\n\t */\n\tderegisterChild( children ) {\n\t\tif ( !isIterable( children ) ) {\n\t\t\tchildren = [ children ];\n\t\t}\n\n\t\tfor ( const child of children ) {\n\t\t\tthis._unboundChildren.remove( child );\n\t\t}\n\t}\n\n\t/**\n\t * Sets the {@link #template} of the view with with given definition.\n\t *\n\t * A shorthand for:\n\t *\n\t *\t\tview.setTemplate( definition );\n\t *\n\t * @param {module:ui/template~TemplateDefinition} definition Definition of view's template.\n\t */\n\tsetTemplate( definition ) {\n\t\tthis.template = new Template( definition );\n\t}\n\n\t/**\n\t * {@link module:ui/template~Template.extend Extends} the {@link #template} of the view with\n\t * with given definition.\n\t *\n\t * A shorthand for:\n\t *\n\t *\t\tTemplate.extend( view.template, definition );\n\t *\n\t * **Note**: Is requires the {@link #template} to be already set. See {@link #setTemplate}.\n\t *\n\t * @param {module:ui/template~TemplateDefinition} definition Definition which\n\t * extends the {@link #template}.\n\t */\n\textendTemplate( definition ) {\n\t\tTemplate.extend( this.template, definition );\n\t}\n\n\t/**\n\t * Recursively renders the view.\n\t *\n\t * Once the view is rendered:\n\t * * the {@link #element} becomes an HTML element out of {@link #template},\n\t * * the {@link #isRendered} flag is set `true`.\n\t *\n\t * **Note**: The children of the view:\n\t * * defined directly in the {@link #template}\n\t * * residing in collections created by the {@link #createCollection} method,\n\t * * and added by {@link #registerChild}\n\t * are also rendered in the process.\n\t *\n\t * In general, `render()` method is the right place to keep the code which refers to the\n\t * {@link #element} and should be executed at the very beginning of the view's life cycle.\n\t *\n\t * It is possible to {@link module:ui/template~Template.extend} the {@link #template} before\n\t * the view is rendered. To allow an early customization of the view (e.g. by its parent),\n\t * such references should be done in `render()`.\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor() {\n\t *\t\t\t\tthis.setTemplate( {\n\t *\t\t\t\t\t// ...\n\t *\t\t\t\t} );\n\t *\t\t\t},\n\t *\n\t *\t\t\trender() {\n\t *\t\t\t\t// View#element becomes available.\n\t *\t\t\t\tsuper.render();\n\t *\n\t *\t\t\t\t// The \"scroll\" listener depends on #element.\n\t *\t\t\t\tthis.listenTo( window, 'scroll', () => {\n\t *\t\t\t\t\t// A reference to #element would render the #template and make it non-extendable.\n\t *\t\t\t\t\tif ( window.scrollY > 0 ) {\n\t *\t\t\t\t\t\tthis.element.scrollLeft = 100;\n\t *\t\t\t\t\t} else {\n\t *\t\t\t\t\t\tthis.element.scrollLeft = 0;\n\t *\t\t\t\t\t}\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst view = new SampleView();\n\t *\n\t *\t\t// Let's customize the view before it gets rendered.\n\t *\t\tview.extendTemplate( {\n\t *\t\t\tattributes: {\n\t *\t\t\t\tclass: [\n\t *\t\t\t\t\t'additional-class'\n\t *\t\t\t\t]\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Late rendering allows customization of the view.\n\t *\t\tview.render();\n\t */\n\trender() {\n\t\tif ( this.isRendered ) {\n\t\t\t/**\n\t\t\t * This View has already been rendered.\n\t\t\t *\n\t\t\t * @error ui-view-render-rendered\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-view-render-already-rendered: This View has already been rendered.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\t// Render #element of the view.\n\t\tif ( this.template ) {\n\t\t\tthis.element = this.template.render();\n\n\t\t\t// Auto–register view children from #template.\n\t\t\tthis.registerChild( this.template.getViews() );\n\t\t}\n\n\t\tthis.isRendered = true;\n\t}\n\n\t/**\n\t * Recursively destroys the view instance and child views added by {@link #registerChild} and\n\t * residing in collections created by the {@link #createCollection}.\n\t *\n\t * Destruction disables all event listeners:\n\t * * created on the view, e.g. `view.on( 'event', () => {} )`,\n\t * * defined in the {@link #template} for DOM events.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\n\t\tthis._viewCollections.map( c => c.destroy() );\n\n\t\t// Template isn't obligatory for views.\n\t\tif ( this.template && this.template._revertData ) {\n\t\t\tthis.template.revert( this.element );\n\t\t}\n\t}\n\n\t/**\n\t * Event fired by the {@link #render} method. Actual rendering is executed as a listener to\n\t * this event with the default priority.\n\t *\n\t * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\n\t *\n\t * @event render\n\t */\n}\n\nmix( View, DomEmitterMixin );\nmix( View, ObservableMixin );\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/createelement\n */\n\nimport isIterable from '../isiterable';\nimport { isString } from 'lodash-es';\n\n/**\n * Creates element with attributes and children.\n *\n *\t\tcreateElement( document, 'p' ); // <p>\n *\t\tcreateElement( document, 'p', { class: 'foo' } ); // <p class=\"foo\">\n *\t\tcreateElement( document, 'p', null, 'foo' ); // <p>foo</p>\n *\t\tcreateElement( document, 'p', null, [ 'foo', createElement( document, 'img' ) ] ); // <p>foo<img></p>\n *\n * @param {Document} doc Document used to create element.\n * @param {String} name Name of the element.\n * @param {Object} [attributes] Object keys will become attributes keys and object values will became attributes values.\n * @param {Node|String|Array.<Node|String>} [children] Child or array of children. Strings will be automatically turned\n * into Text nodes.\n * @returns {Element} Created element.\n */\nexport default function createElement( doc, name, attributes = {}, children = [] ) {\n\tconst namespace = attributes && attributes.xmlns;\n\tconst element = namespace ? doc.createElementNS( namespace, name ) : doc.createElement( name );\n\n\tfor ( const key in attributes ) {\n\t\telement.setAttribute( key, attributes[ key ] );\n\t}\n\n\tif ( isString( children ) || !isIterable( children ) ) {\n\t\tchildren = [ children ];\n\t}\n\n\tfor ( let child of children ) {\n\t\tif ( isString( child ) ) {\n\t\t\tchild = doc.createTextNode( child );\n\t\t}\n\n\t\telement.appendChild( child );\n\t}\n\n\treturn element;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editorui/bodycollection\n */\n\n/* globals document */\n\nimport Template from '../template';\nimport ViewCollection from '../viewcollection';\n\nimport createElement from '@ckeditor/ckeditor5-utils/src/dom/createelement';\n\n/**\n * This is a special {@link module:ui/viewcollection~ViewCollection} dedicated to elements that are detached\n * from the DOM structure of the editor, like panels, icons, etc.\n *\n * The body collection is available in the {@link module:ui/editorui/editoruiview~EditorUIView#body `editor.ui.view.body`} property.\n * Any plugin can add a {@link module:ui/view~View view} to this collection.\n * These views will render in a container placed directly in the `<body>` element.\n * The editor will detach and destroy this collection when the editor will be {@link module:core/editor/editor~Editor#destroy destroyed}.\n *\n * If you need to control the life cycle of the body collection on your own, you can create your own instance of this class.\n *\n * A body collection will render itself automatically in the DOM body element as soon as you call {@link ~BodyCollection#attachToDom}.\n * If you create multiple body collections, this class will create a special wrapper element in the DOM to limit the number of\n * elements created directly in the body and remove it when the last body collection will be\n * {@link ~BodyCollection#detachFromDom detached}.\n *\n * @extends module:ui/viewcollection~ViewCollection\n */\nexport default class BodyCollection extends ViewCollection {\n\t/**\n\t * Creates a new instance of the {@link module:ui/editorui/bodycollection~BodyCollection}.\n\t *\n\t * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor editor's locale} instance.\n\t * @param {Iterable.<module:ui/view~View>} [initialItems] The initial items of the collection.\n\t */\n\tconstructor( locale, initialItems = [] ) {\n\t\tsuper( initialItems );\n\n\t\t/**\n\t\t * The {@link module:core/editor/editor~Editor#locale editor's locale} instance.\n\t\t * See the view {@link module:ui/view~View#locale locale} property.\n\t\t *\n\t\t * @member {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = locale;\n\t}\n\n\t/**\n\t * Attaches the body collection to the DOM body element. You need to execute this method to render the content of\n\t * the body collection.\n\t */\n\tattachToDom() {\n\t\t/**\n\t\t * The element holding elements of the body region.\n\t\t *\n\t\t * @protected\n\t\t * @member {HTMLElement} #_bodyCollectionContainer\n\t\t */\n\t\tthis._bodyCollectionContainer = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset_all',\n\t\t\t\t\t'ck-body',\n\t\t\t\t\t'ck-rounded-corners'\n\t\t\t\t],\n\t\t\t\tdir: this.locale.uiLanguageDirection\n\t\t\t},\n\t\t\tchildren: this\n\t\t} ).render();\n\n\t\tlet wrapper = document.querySelector( '.ck-body-wrapper' );\n\n\t\tif ( !wrapper ) {\n\t\t\twrapper = createElement( document, 'div', { class: 'ck-body-wrapper' } );\n\t\t\tdocument.body.appendChild( wrapper );\n\t\t}\n\n\t\twrapper.appendChild( this._bodyCollectionContainer );\n\t}\n\n\t/**\n\t * Detaches the collection from the DOM structure. Use this method when you do not need to use the body collection\n\t * anymore to clean-up the DOM structure.\n\t */\n\tdetachFromDom() {\n\t\tsuper.destroy();\n\n\t\tif ( this._bodyCollectionContainer ) {\n\t\t\tthis._bodyCollectionContainer.remove();\n\t\t}\n\n\t\tconst wrapper = document.querySelector( '.ck-body-wrapper' );\n\n\t\tif ( wrapper && wrapper.childElementCount == 0 ) {\n\t\t\twrapper.remove();\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editorui/editoruiview\n */\n\nimport View from '../view';\nimport BodyCollection from './bodycollection';\n\nimport '../../theme/components/editorui/editorui.css';\n\n/**\n * The editor UI view class. Base class for the editor main views.\n *\n * @extends module:ui/view~View\n */\nexport default class EditorUIView extends View {\n\t/**\n\t * Creates an instance of the editor UI view class.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The locale instance.\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Collection of the child views, detached from the DOM\n\t\t * structure of the editor, like panels, icons etc.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection} #body\n\t\t */\n\t\tthis.body = new BodyCollection( locale );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.body.attachToDom();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tthis.body.detachFromDom();\n\n\t\treturn super.destroy();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/label/labelview\n */\n\nimport View from '../view';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\n\nimport '../../theme/components/label/label.css';\n\n/**\n * The label view class.\n *\n * @extends module:ui/view~View\n */\nexport default class LabelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * The text of the label.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #text\n\t\t */\n\t\tthis.set( 'text' );\n\n\t\t/**\n\t\t * The `for` attribute of the label (i.e. to pair with an `<input>` element).\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #for\n\t\t */\n\t\tthis.set( 'for' );\n\n\t\t/**\n\t\t * An unique id of the label. It can be used by other UI components to reference\n\t\t * the label, for instance, using the `aria-describedby` DOM attribute.\n\t\t *\n\t\t * @member {String} #id\n\t\t */\n\t\tthis.id = `ck-editor__label_${ uid() }`;\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'label',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-label'\n\t\t\t\t],\n\t\t\t\tid: this.id,\n\t\t\t\tfor: bind.to( 'for' )\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: bind.to( 'text' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editorui/boxed/boxededitoruiview\n */\n\nimport EditorUIView from '../../editorui/editoruiview';\nimport LabelView from '../../label/labelview';\n\n/**\n * The boxed editor UI view class. This class represents an editor interface\n * consisting of a toolbar and an editable area, enclosed within a box.\n *\n * @extends module:ui/editorui/editoruiview~EditorUIView\n */\nexport default class BoxedEditorUIView extends EditorUIView {\n\t/**\n\t * Creates an instance of the boxed editor UI view class.\n\t *\n\t * @param {module:utils/locale~Locale} locale The locale instance..\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Collection of the child views located in the top (`.ck-editor__top`)\n\t\t * area of the UI.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.top = this.createCollection();\n\n\t\t/**\n\t\t * Collection of the child views located in the main (`.ck-editor__main`)\n\t\t * area of the UI.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.main = this.createCollection();\n\n\t\t/**\n\t\t * Voice label of the UI.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @member {module:ui/view~View} #_voiceLabelView\n\t\t */\n\t\tthis._voiceLabelView = this._createVoiceLabel();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-editor',\n\t\t\t\t\t'ck-rounded-corners'\n\t\t\t\t],\n\t\t\t\trole: 'application',\n\t\t\t\tdir: locale.uiLanguageDirection,\n\t\t\t\tlang: locale.uiLanguage,\n\t\t\t\t'aria-labelledby': this._voiceLabelView.id\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tthis._voiceLabelView,\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-editor__top',\n\t\t\t\t\t\t\t'ck-reset_all'\n\t\t\t\t\t\t],\n\t\t\t\t\t\trole: 'presentation'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.top\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-editor__main'\n\t\t\t\t\t\t],\n\t\t\t\t\t\trole: 'presentation'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.main\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * Creates a voice label view instance.\n\t *\n\t * @private\n\t * @returns {module:ui/label/labelview~LabelView}\n\t */\n\t_createVoiceLabel() {\n\t\tconst t = this.t;\n\t\tconst voiceLabel = new LabelView();\n\n\t\tvoiceLabel.text = t( 'Rich Text Editor' );\n\n\t\tvoiceLabel.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-voice-label'\n\t\t\t}\n\t\t} );\n\n\t\treturn voiceLabel;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editableui/editableuiview\n */\n\nimport View from '../view';\n\n/**\n * The editable UI view class.\n *\n * @extends module:ui/view~View\n */\nexport default class EditableUIView extends View {\n\t/**\n\t * Creates an instance of EditableUIView class.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The locale instance.\n\t * @param {module:engine/view/view~View} editingView The editing view instance the editable is related to.\n\t * @param {HTMLElement} [editableElement] The editable element. If not specified, this view\n\t * should create it. Otherwise, the existing element should be used.\n\t */\n\tconstructor( locale, editingView, editableElement ) {\n\t\tsuper( locale );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-content',\n\t\t\t\t\t'ck-editor__editable',\n\t\t\t\t\t'ck-rounded-corners'\n\t\t\t\t],\n\t\t\t\tlang: locale.contentLanguage,\n\t\t\t\tdir: locale.contentLanguageDirection\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * The name of the editable UI view.\n\t\t *\n\t\t * @member {String} #name\n\t\t */\n\t\tthis.name = null;\n\n\t\t/**\n\t\t * Controls whether the editable is focused, i.e. the user is typing in it.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * The element which is the main editable element (usually the one with `contentEditable=\"true\"`).\n\t\t *\n\t\t * @private\n\t\t * @member {HTMLElement} #_editableElement\n\t\t */\n\t\tthis._editableElement = editableElement;\n\n\t\t/**\n\t\t * Whether an external {@link #_editableElement} was passed into the constructor, which also means\n\t\t * the view will not render its {@link #template}.\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean} #_hasExternalElement\n\t\t */\n\t\tthis._hasExternalElement = !!this._editableElement;\n\n\t\t/**\n\t\t * The editing view instance the editable is related to. Editable uses the editing\n\t\t * view to dynamically modify its certain DOM attributes after {@link #render rendering}.\n\t\t *\n\t\t * **Note**: The DOM attributes are performed by the editing view and not UI\n\t\t * {@link module:ui/view~View#bindTemplate template bindings} because once rendered,\n\t\t * the editable DOM element must remain under the full control of the engine to work properly.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:engine/view/view~View} #isFocused\n\t\t */\n\t\tthis._editingView = editingView;\n\t}\n\n\t/**\n\t * Renders the view by either applying the {@link #template} to the existing\n\t * {@link #_editableElement} or assigning {@link #element} as {@link #_editableElement}.\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tif ( this._hasExternalElement ) {\n\t\t\tthis.template.apply( this.element = this._editableElement );\n\t\t} else {\n\t\t\tthis._editableElement = this.element;\n\t\t}\n\n\t\tthis.on( 'change:isFocused', () => this._updateIsFocusedClasses() );\n\t\tthis._updateIsFocusedClasses();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tif ( this._hasExternalElement ) {\n\t\t\tthis.template.revert( this._editableElement );\n\t\t}\n\n\t\tsuper.destroy();\n\t}\n\n\t/**\n\t * Updates the `ck-focused` and `ck-blurred` CSS classes on the {@link #element} according to\n\t * the {@link #isFocused} property value using the {@link #_editingView editing view} API.\n\t *\n\t * @private\n\t */\n\t_updateIsFocusedClasses() {\n\t\tconst editingView = this._editingView;\n\n\t\tif ( editingView.isRenderingInProgress ) {\n\t\t\tupdateAfterRender( this );\n\t\t} else {\n\t\t\tupdate( this );\n\t\t}\n\n\t\tfunction update( view ) {\n\t\t\teditingView.change( writer => {\n\t\t\t\tconst viewRoot = editingView.document.getRoot( view.name );\n\n\t\t\t\twriter.addClass( view.isFocused ? 'ck-focused' : 'ck-blurred', viewRoot );\n\t\t\t\twriter.removeClass( view.isFocused ? 'ck-blurred' : 'ck-focused', viewRoot );\n\t\t\t} );\n\t\t}\n\n\t\t// In a case of a multi-root editor, a callback will be attached more than once (one callback for each root).\n\t\t// While executing one callback the `isRenderingInProgress` observable is changing what causes executing another\n\t\t// callback and render is called inside the already pending render.\n\t\t// We need to be sure that callback is executed only when the value has changed from `true` to `false`.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/1676.\n\t\tfunction updateAfterRender( view ) {\n\t\t\teditingView.once( 'change:isRenderingInProgress', ( evt, name, value ) => {\n\t\t\t\tif ( !value ) {\n\t\t\t\t\tupdate( view );\n\t\t\t\t} else {\n\t\t\t\t\tupdateAfterRender( view );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editableui/inline/inlineeditableuiview\n */\n\nimport EditableUIView from '../../editableui/editableuiview';\n\n/**\n * The inline editable UI class implementing an inline {@link module:ui/editableui/editableuiview~EditableUIView}.\n *\n * @extends module:ui/editableui/editableuiview~EditableUIView\n */\nexport default class InlineEditableUIView extends EditableUIView {\n\t/**\n\t * Creates an instance of the InlineEditableUIView class.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The locale instance.\n\t * @param {module:engine/view/view~View} editingView The editing view instance the editable is related to.\n\t * @param {HTMLElement} [editableElement] The editable element. If not specified, the\n\t * {@link module:ui/editableui/editableuiview~EditableUIView}\n\t * will create it. Otherwise, the existing element will be used.\n\t */\n\tconstructor( locale, editingView, editableElement ) {\n\t\tsuper( locale, editingView, editableElement );\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\trole: 'textbox',\n\t\t\t\tclass: 'ck-editor__editable_inline'\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tconst editingView = this._editingView;\n\t\tconst t = this.t;\n\n\t\teditingView.change( writer => {\n\t\t\tconst viewRoot = editingView.document.getRoot( this.name );\n\n\t\t\twriter.setAttribute( 'aria-label', t( 'Rich Text Editor, %0', [ this.name ] ), viewRoot );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/tounit\n */\n\n/**\n * Returns a helper function, which adds a desired trailing\n * `unit` to the passed value.\n *\n * @param {String} unit An unit like \"px\" or \"em\".\n * @returns {module:utils/dom/tounit~helper}\n */\nexport default function toUnit( unit ) {\n\t/**\n\t * A function, which adds a pre–defined trailing `unit`\n\t * to the passed `value`.\n\t *\n\t * @function helper\n \t * @param {*} value A value to be given the unit.\n \t * @returns {String} A value with the trailing unit.\n\t */\n\treturn value => value + unit;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/panel/sticky/stickypanelview\n */\n\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport View from '../../view';\nimport Template from '../../template';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\n\nimport '../../../theme/components/panel/stickypanel.css';\n\nconst toPx = toUnit( 'px' );\n\n/**\n * The sticky panel view class.\n */\nexport default class StickyPanelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Controls whether the sticky panel should be active.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #isActive\n\t\t */\n\t\tthis.set( 'isActive', false );\n\n\t\t/**\n\t\t * Controls whether the sticky panel is in the \"sticky\" state.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #isSticky\n\t\t */\n\t\tthis.set( 'isSticky', false );\n\n\t\t/**\n\t\t * The limiter element for the sticky panel instance. Its bounding rect limits\n\t\t * the \"stickyness\" of the panel, i.e. when the panel reaches the bottom\n\t\t * edge of the limiter, it becomes sticky to that edge and does not float\n\t\t * off the limiter. It is mandatory for the panel to work properly and once\n\t\t * set, it cannot be changed.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {HTMLElement} #limiterElement\n\t\t */\n\t\tthis.set( 'limiterElement', null );\n\n\t\t/**\n\t\t * The offset from the bottom edge of {@link #limiterElement}\n\t\t * which stops the panel from stickying any further to prevent limiter's content\n\t\t * from being completely covered.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @default 50\n\t\t * @member {Number} #limiterBottomOffset\n\t\t */\n\t\tthis.set( 'limiterBottomOffset', 50 );\n\n\t\t/**\n\t\t * The offset from the top edge of the web browser's viewport which makes the\n\t\t * panel become sticky. The default value is `0`, which means the panel becomes\n\t\t * sticky when it's upper edge touches the top of the page viewport.\n\t\t *\n\t\t * This attribute is useful when the web page has UI elements positioned to the top\n\t\t * either using `position: fixed` or `position: sticky`, which would cover the\n\t\t * sticky panel or vice–versa (depending on the `z-index` hierarchy).\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @default 0\n\t\t * @member {Number} #viewportTopOffset\n\t\t */\n\t\tthis.set( 'viewportTopOffset', 0 );\n\n\t\t/**\n\t\t * Controls the `margin-left` CSS style of the panel.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {String} #_marginLeft\n\t\t */\n\t\tthis.set( '_marginLeft', null );\n\n\t\t/**\n\t\t * Set `true` if the sticky panel reached the bottom edge of the\n\t\t * {@link #limiterElement}.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #_isStickyToTheLimiter\n\t\t */\n\t\tthis.set( '_isStickyToTheLimiter', false );\n\n\t\t/**\n\t\t * Set `true` if the sticky panel uses the {@link #viewportTopOffset},\n\t\t * i.e. not {@link #_isStickyToTheLimiter} and the {@link #viewportTopOffset}\n\t\t * is not `0`.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #_hasViewportTopOffset\n\t\t */\n\t\tthis.set( '_hasViewportTopOffset', false );\n\n\t\t/**\n\t\t * Collection of the child views which creates balloon panel contents.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.content = this.createCollection();\n\n\t\t/**\n\t\t * The DOM bounding client rect of the {@link module:ui/view~View#element} of the panel.\n\t\t *\n\t\t * @protected\n\t\t * @member {Object} #_panelRect\n\t\t */\n\n\t\t/**\n\t\t * The DOM bounding client rect of the {@link #limiterElement}\n\t\t * of the panel.\n\t\t *\n\t\t * @protected\n\t\t * @member {Object} #_limiterRect\n\t\t */\n\n\t\t/**\n\t\t * A dummy element which visually fills the space as long as the\n\t\t * actual panel is sticky. It prevents flickering of the UI.\n\t\t *\n\t\t * @protected\n\t\t * @property {HTMLElement}\n\t\t */\n\t\tthis._contentPanelPlaceholder = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-sticky-panel__placeholder'\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\tdisplay: bind.to( 'isSticky', isSticky => isSticky ? 'block' : 'none' ),\n\t\t\t\t\theight: bind.to( 'isSticky', isSticky => {\n\t\t\t\t\t\treturn isSticky ? toPx( this._panelRect.height ) : null;\n\t\t\t\t\t} )\n\t\t\t\t}\n\t\t\t}\n\t\t} ).render();\n\n\t\t/**\n\t\t * The panel which accepts children into {@link #content} collection.\n\t\t * Also an element which is positioned when {@link #isSticky}.\n\t\t *\n\t\t * @protected\n\t\t * @property {HTMLElement}\n\t\t */\n\t\tthis._contentPanel = new Template( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-sticky-panel__content',\n\t\t\t\t\t// Toggle class of the panel when \"sticky\" state changes in the view.\n\t\t\t\t\tbind.if( 'isSticky', 'ck-sticky-panel__content_sticky' ),\n\t\t\t\t\tbind.if( '_isStickyToTheLimiter', 'ck-sticky-panel__content_sticky_bottom-limit' )\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: bind.to( 'isSticky', isSticky => {\n\t\t\t\t\t\treturn isSticky ? toPx( this._contentPanelPlaceholder.getBoundingClientRect().width ) : null;\n\t\t\t\t\t} ),\n\n\t\t\t\t\ttop: bind.to( '_hasViewportTopOffset', _hasViewportTopOffset => {\n\t\t\t\t\t\treturn _hasViewportTopOffset ? toPx( this.viewportTopOffset ) : null;\n\t\t\t\t\t} ),\n\n\t\t\t\t\tbottom: bind.to( '_isStickyToTheLimiter', _isStickyToTheLimiter => {\n\t\t\t\t\t\treturn _isStickyToTheLimiter ? toPx( this.limiterBottomOffset ) : null;\n\t\t\t\t\t} ),\n\n\t\t\t\t\tmarginLeft: bind.to( '_marginLeft' )\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tchildren: this.content\n\t\t} ).render();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-sticky-panel'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis._contentPanelPlaceholder,\n\t\t\t\tthis._contentPanel\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Check if the panel should go into the sticky state immediately.\n\t\tthis._checkIfShouldBeSticky();\n\n\t\t// Update sticky state of the panel as the window is being scrolled.\n\t\tthis.listenTo( global.window, 'scroll', () => {\n\t\t\tthis._checkIfShouldBeSticky();\n\t\t} );\n\n\t\t// Synchronize with `model.isActive` because sticking an inactive panel is pointless.\n\t\tthis.listenTo( this, 'change:isActive', () => {\n\t\t\tthis._checkIfShouldBeSticky();\n\t\t} );\n\t}\n\n\t/**\n\t * Analyzes the environment to decide whether the panel should\n\t * be sticky or not.\n\t *\n\t * @protected\n\t */\n\t_checkIfShouldBeSticky() {\n\t\tconst panelRect = this._panelRect = this._contentPanel.getBoundingClientRect();\n\t\tlet limiterRect;\n\n\t\tif ( !this.limiterElement ) {\n\t\t\tthis.isSticky = false;\n\t\t} else {\n\t\t\tlimiterRect = this._limiterRect = this.limiterElement.getBoundingClientRect();\n\n\t\t\t// The panel must be active to become sticky.\n\t\t\tthis.isSticky = this.isActive &&\n\t\t\t\t// The limiter's top edge must be beyond the upper edge of the visible viewport (+the viewportTopOffset).\n\t\t\t\tlimiterRect.top < this.viewportTopOffset &&\n\t\t\t\t// The model#limiterElement's height mustn't be smaller than the panel's height and model#limiterBottomOffset.\n\t\t\t\t// There's no point in entering the sticky mode if the model#limiterElement is very, very small, because\n\t\t\t\t// it would immediately set model#_isStickyToTheLimiter true and, given model#limiterBottomOffset, the panel\n\t\t\t\t// would be positioned before the model#limiterElement.\n\t\t\t\tthis._panelRect.height + this.limiterBottomOffset < limiterRect.height;\n\t\t}\n\n\t\t// Stick the panel to the top edge of the viewport simulating CSS position:sticky.\n\t\t// TODO: Possibly replaced by CSS in the future http://caniuse.com/#feat=css-sticky\n\t\tif ( this.isSticky ) {\n\t\t\tthis._isStickyToTheLimiter =\n\t\t\t\tlimiterRect.bottom < panelRect.height + this.limiterBottomOffset + this.viewportTopOffset;\n\t\t\tthis._hasViewportTopOffset = !this._isStickyToTheLimiter && !!this.viewportTopOffset;\n\t\t\tthis._marginLeft = this._isStickyToTheLimiter ? null : toPx( -global.window.scrollX );\n\t\t}\n\t\t// Detach the panel from the top edge of the viewport.\n\t\telse {\n\t\t\tthis._isStickyToTheLimiter = false;\n\t\t\tthis._hasViewportTopOffset = false;\n\t\t\tthis._marginLeft = null;\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/focuscycler\n */\n\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\n\n/**\n * A utility class that helps cycling over focusable {@link module:ui/view~View views} in a\n * {@link module:ui/viewcollection~ViewCollection} when the focus is tracked by the\n * {@link module:utils/focustracker~FocusTracker} instance. It helps implementing keyboard\n * navigation in HTML forms, toolbars, lists and the like.\n *\n * To work properly it requires:\n * * a collection of focusable (HTML `tabindex` attribute) views that implement the `focus()` method,\n * * an associated focus tracker to determine which view is focused.\n *\n * A simple cycler setup can look like this:\n *\n *\t\tconst focusables = new ViewCollection();\n *\t\tconst focusTracker = new FocusTracker();\n *\n *\t\t// Add focusable views to the focus tracker.\n *\t\tfocusTracker.add( ... );\n *\n * Then, the cycler can be used manually:\n *\n *\t\tconst cycler = new FocusCycler( { focusables, focusTracker } );\n *\n *\t\t// Will focus the first focusable view in #focusables.\n *\t\tcycler.focusFirst();\n *\n *\t\t// Will log the next focusable item in #focusables.\n *\t\tconsole.log( cycler.next );\n *\n * Alternatively, it can work side by side with the {@link module:utils/keystrokehandler~KeystrokeHandler}:\n *\n *\t\tconst keystrokeHandler = new KeystrokeHandler();\n *\n *\t\t// Activate the keystroke handler.\n *\t\tkeystrokeHandler.listenTo( sourceOfEvents );\n *\n *\t\tconst cycler = new FocusCycler( {\n *\t\t\tfocusables, focusTracker, keystrokeHandler,\n *\t\t\tactions: {\n *\t\t\t\t// When arrowup of arrowleft is detected by the #keystrokeHandler,\n *\t\t\t\t// focusPrevious() will be called on the cycler.\n *\t\t\t\tfocusPrevious: [ 'arrowup', 'arrowleft' ],\n *\t\t\t}\n *\t\t} );\n *\n * Check out the {@glink framework/guides/deep-dive/ui/focus-tracking \"Deep dive into focus tracking\" guide} to learn more.\n */\nexport default class FocusCycler {\n\t/**\n\t * Creates an instance of the focus cycler utility.\n\t *\n\t * @param {Object} options Configuration options.\n\t * @param {module:utils/collection~Collection|Object} options.focusables\n\t * @param {module:utils/focustracker~FocusTracker} options.focusTracker\n\t * @param {module:utils/keystrokehandler~KeystrokeHandler} [options.keystrokeHandler]\n\t * @param {Object} [options.actions]\n\t */\n\tconstructor( options ) {\n\t\tObject.assign( this, options );\n\n\t\t/**\n\t\t * A {@link module:ui/view~View view} collection that the cycler operates on.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/collection~Collection} #focusables\n\t\t */\n\n\t\t/**\n\t\t * A focus tracker instance that the cycler uses to determine the current focus\n\t\t * state in {@link #focusables}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker} #focusTracker\n\t\t */\n\n\t\t/**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}\n\t\t * which can respond to certain keystrokes and cycle the focus.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler} #keystrokeHandler\n\t\t */\n\n\t\t/**\n\t\t * Actions that the cycler can take when a keystroke is pressed. Requires\n\t\t * `options.keystrokeHandler` to be passed and working. When an action is\n\t\t * performed, `preventDefault` and `stopPropagation` will be called on the event\n\t\t * the keystroke fired in the DOM.\n\t\t *\n\t\t *\t\tactions: {\n\t\t *\t\t\t// Will call #focusPrevious() when arrowleft or arrowup is pressed.\n\t\t *\t\t\tfocusPrevious: [ 'arrowleft', 'arrowup' ],\n\t\t *\n\t\t *\t\t\t// Will call #focusNext() when arrowdown is pressed.\n\t\t *\t\t\tfocusNext: 'arrowdown'\n\t\t *\t\t}\n\t\t *\n\t\t * @readonly\n\t\t * @member {Object} #actions\n\t\t */\n\n\t\tif ( options.actions && options.keystrokeHandler ) {\n\t\t\tfor ( const methodName in options.actions ) {\n\t\t\t\tlet actions = options.actions[ methodName ];\n\n\t\t\t\tif ( typeof actions == 'string' ) {\n\t\t\t\t\tactions = [ actions ];\n\t\t\t\t}\n\n\t\t\t\tfor ( const keystroke of actions ) {\n\t\t\t\t\toptions.keystrokeHandler.set( keystroke, ( data, cancel ) => {\n\t\t\t\t\t\tthis[ methodName ]();\n\t\t\t\t\t\tcancel();\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the first focusable view in {@link #focusables}.\n\t * Returns `null` if there is none.\n\t *\n\t * @readonly\n\t * @member {module:ui/view~View|null} #first\n\t */\n\tget first() {\n\t\treturn this.focusables.find( isFocusable ) || null;\n\t}\n\n\t/**\n\t * Returns the last focusable view in {@link #focusables}.\n\t * Returns `null` if there is none.\n\t *\n\t * @readonly\n\t * @member {module:ui/view~View|null} #last\n\t */\n\tget last() {\n\t\treturn this.focusables.filter( isFocusable ).slice( -1 )[ 0 ] || null;\n\t}\n\n\t/**\n\t * Returns the next focusable view in {@link #focusables} based on {@link #current}.\n\t * Returns `null` if there is none.\n\t *\n\t * @readonly\n\t * @member {module:ui/view~View|null} #next\n\t */\n\tget next() {\n\t\treturn this._getFocusableItem( 1 );\n\t}\n\n\t/**\n\t * Returns the previous focusable view in {@link #focusables} based on {@link #current}.\n\t * Returns `null` if there is none.\n\t *\n\t * @readonly\n\t * @member {module:ui/view~View|null} #previous\n\t */\n\tget previous() {\n\t\treturn this._getFocusableItem( -1 );\n\t}\n\n\t/**\n\t * An index of the view in the {@link #focusables} which is focused according\n\t * to {@link #focusTracker}. Returns `null` when there is no such view.\n\t *\n\t * @readonly\n\t * @member {Number|null} #current\n\t */\n\tget current() {\n\t\tlet index = null;\n\n\t\t// There's no focused view in the focusables.\n\t\tif ( this.focusTracker.focusedElement === null ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.focusables.find( ( view, viewIndex ) => {\n\t\t\tconst focused = view.element === this.focusTracker.focusedElement;\n\n\t\t\tif ( focused ) {\n\t\t\t\tindex = viewIndex;\n\t\t\t}\n\n\t\t\treturn focused;\n\t\t} );\n\n\t\treturn index;\n\t}\n\n\t/**\n\t * Focuses the {@link #first} item in {@link #focusables}.\n\t */\n\tfocusFirst() {\n\t\tthis._focus( this.first );\n\t}\n\n\t/**\n\t * Focuses the {@link #last} item in {@link #focusables}.\n\t */\n\tfocusLast() {\n\t\tthis._focus( this.last );\n\t}\n\n\t/**\n\t * Focuses the {@link #next} item in {@link #focusables}.\n\t */\n\tfocusNext() {\n\t\tthis._focus( this.next );\n\t}\n\n\t/**\n\t * Focuses the {@link #previous} item in {@link #focusables}.\n\t */\n\tfocusPrevious() {\n\t\tthis._focus( this.previous );\n\t}\n\n\t/**\n\t * Focuses the given view if it exists.\n\t *\n\t * @protected\n\t * @param {module:ui/view~View} view\n\t */\n\t_focus( view ) {\n\t\tif ( view ) {\n\t\t\tview.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Returns the next or previous focusable view in {@link #focusables} with respect\n\t * to {@link #current}.\n\t *\n\t * @protected\n\t * @param {Number} step Either `1` for checking forward from {@link #current} or\n\t * `-1` for checking backwards.\n\t * @returns {module:ui/view~View|null}\n\t */\n\t_getFocusableItem( step ) {\n\t\t// Cache for speed.\n\t\tconst current = this.current;\n\t\tconst collectionLength = this.focusables.length;\n\n\t\tif ( !collectionLength ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Start from the beginning if no view is focused.\n\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/206\n\t\tif ( current === null ) {\n\t\t\treturn this[ step === 1 ? 'first' : 'last' ];\n\t\t}\n\n\t\t// Cycle in both directions.\n\t\tlet index = ( current + collectionLength + step ) % collectionLength;\n\n\t\tdo {\n\t\t\tconst view = this.focusables.get( index );\n\n\t\t\t// TODO: Check if view is visible.\n\t\t\tif ( isFocusable( view ) ) {\n\t\t\t\treturn view;\n\t\t\t}\n\n\t\t\t// Cycle in both directions.\n\t\t\tindex = ( index + collectionLength + step ) % collectionLength;\n\t\t} while ( index !== current );\n\n\t\treturn null;\n\t}\n}\n\n// Checks whether a view is focusable.\n//\n// @private\n// @param {module:ui/view~View} view A view to be checked.\n// @returns {Boolean}\nfunction isFocusable( view ) {\n\treturn !!( view.focus && global.window.getComputedStyle( view.element ).display != 'none' );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/toolbarseparatorview\n */\n\nimport View from '../view';\n\n/**\n * The toolbar separator view class.\n *\n * @extends module:ui/view~View\n */\nexport default class ToolbarSeparatorView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-toolbar__separator'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/resizeobserver\n */\n\n/* globals setTimeout, clearTimeout */\n\nimport mix from '../mix';\nimport global from './global';\nimport Rect from './rect';\nimport DomEmitterMixin from './emittermixin';\n\nconst RESIZE_CHECK_INTERVAL = 100;\n\n/**\n * A helper class which instances allow performing custom actions when native DOM elements are resized.\n *\n *\t\tconst editableElement = editor.editing.view.getDomRoot();\n *\n *\t\tconst observer = new ResizeObserver( editableElement, entry => {\n *\t\t\tconsole.log( 'The editable element has been resized in DOM.' );\n *\t\t\tconsole.log( entry.target ); // -> editableElement\n *\t\t\tconsole.log( entry.contentRect.width ); // -> e.g. '423px'\n *\t\t} );\n *\n * By default, it uses the [native DOM resize observer](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver)\n * under the hood and in browsers that do not support the native API yet, a polyfilled observer is\n * used instead.\n */\nexport default class ResizeObserver {\n\t/**\n\t * Creates an instance of the `ResizeObserver` class.\n\t *\n\t * @param {HTMLElement} element A DOM element that is to be observed for resizing. Note that\n\t * the element must be visible (i.e. not detached from DOM) for the observer to work.\n\t * @param {Function} callback A function called when the observed element was resized. It passes\n\t * the [`ResizeObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry)\n\t * object with information about the resize event.\n\t */\n\tconstructor( element, callback ) {\n\t\t// **Note**: For the maximum performance, this class ensures only a single instance of the native\n\t\t// (or polyfilled) observer is used no matter how many instances of this class were created.\n\t\tif ( !ResizeObserver._observerInstance ) {\n\t\t\tResizeObserver._createObserver();\n\t\t}\n\n\t\t/**\n\t\t * The element observer by this observer.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {HTMLElement}\n\t\t */\n\t\tthis._element = element;\n\n\t\t/**\n\t\t * The callback executed each time {@link #_element} is resized.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {Function}\n\t\t */\n\t\tthis._callback = callback;\n\n\t\tResizeObserver._addElementCallback( element, callback );\n\t\tResizeObserver._observerInstance.observe( element );\n\t}\n\n\t/**\n\t * Destroys the observer which disables the `callback` passed to the {@link #constructor}.\n\t */\n\tdestroy() {\n\t\tResizeObserver._deleteElementCallback( this._element, this._callback );\n\t}\n\n\t/**\n\t * Registers a new resize callback for the DOM element.\n\t *\n\t * @private\n\t * @static\n\t * @param {HTMLElement} element\n\t * @param {Function} callback\n\t */\n\tstatic _addElementCallback( element, callback ) {\n\t\tif ( !ResizeObserver._elementCallbacks ) {\n\t\t\tResizeObserver._elementCallbacks = new Map();\n\t\t}\n\n\t\tlet callbacks = ResizeObserver._elementCallbacks.get( element );\n\n\t\tif ( !callbacks ) {\n\t\t\tcallbacks = new Set();\n\t\t\tResizeObserver._elementCallbacks.set( element, callbacks );\n\t\t}\n\n\t\tcallbacks.add( callback );\n\t}\n\n\t/**\n\t * Removes a resize callback from the DOM element. If no callbacks are left\n\t * for the element, it removes the element from the native observer.\n\t *\n\t * @private\n\t * @static\n\t * @param {HTMLElement} element\n\t * @param {Function} callback\n\t */\n\tstatic _deleteElementCallback( element, callback ) {\n\t\tconst callbacks = ResizeObserver._getElementCallbacks( element );\n\n\t\t// Remove the element callback. Check if exist first in case someone\n\t\t// called destroy() twice.\n\t\tif ( callbacks ) {\n\t\t\tcallbacks.delete( callback );\n\n\t\t\t// If no callbacks left for the element, also remove the element.\n\t\t\tif ( !callbacks.size ) {\n\t\t\t\tResizeObserver._elementCallbacks.delete( element );\n\t\t\t\tResizeObserver._observerInstance.unobserve( element );\n\t\t\t}\n\t\t}\n\n\t\tif ( ResizeObserver._elementCallbacks && !ResizeObserver._elementCallbacks.size ) {\n\t\t\tResizeObserver._observerInstance = null;\n\t\t\tResizeObserver._elementCallbacks = null;\n\t\t}\n\t}\n\n\t/**\n\t * Returns are registered resize callbacks for the DOM element.\n\t *\n\t * @private\n\t * @static\n\t * @param {HTMLElement} element\n\t * @returns {Set.<HTMLElement>|null}\n\t */\n\tstatic _getElementCallbacks( element ) {\n\t\tif ( !ResizeObserver._elementCallbacks ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn ResizeObserver._elementCallbacks.get( element );\n\t}\n\n\t/**\n\t * Creates the single native observer shared across all `ResizeObserver` instances.\n\t * If the browser does not support the native API, it creates a polyfill.\n\t *\n\t * @private\n\t * @static\n\t */\n\tstatic _createObserver() {\n\t\tlet ObserverConstructor;\n\n\t\t// TODO: One day, the `ResizeObserver` API will be supported in all modern web browsers.\n\t\t// When it happens, this module will no longer make sense and should be removed and\n\t\t// the native implementation should be used across the project to save bytes.\n\t\t// Check out https://caniuse.com/#feat=resizeobserver.\n\t\tif ( typeof global.window.ResizeObserver === 'function' ) {\n\t\t\tObserverConstructor = global.window.ResizeObserver;\n\t\t} else {\n\t\t\tObserverConstructor = ResizeObserverPolyfill;\n\t\t}\n\n\t\tResizeObserver._observerInstance = new ObserverConstructor( entries => {\n\t\t\tfor ( const entry of entries ) {\n\t\t\t\t// Do not execute callbacks for elements that are invisible.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5/issues/6570\n\t\t\t\tif ( !entry.target.offsetParent ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst callbacks = ResizeObserver._getElementCallbacks( entry.target );\n\n\t\t\t\tif ( callbacks ) {\n\t\t\t\t\tfor ( const callback of callbacks ) {\n\t\t\t\t\t\tcallback( entry );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n\n/**\n * The single native observer instance (or polyfill in browsers that do not support the API)\n * shared across all {@link module:utils/dom/resizeobserver~ResizeObserver} instances.\n *\n * @static\n * @protected\n * @readonly\n * @property {Object|null} module:utils/dom/resizeobserver~ResizeObserver#_observerInstance\n */\nResizeObserver._observerInstance = null;\n\n/**\n * A mapping of native DOM elements and their callbacks shared across all\n * {@link module:utils/dom/resizeobserver~ResizeObserver} instances.\n *\n * @static\n * @private\n * @readonly\n * @property {Map.<HTMLElement,Set>|null} module:utils/dom/resizeobserver~ResizeObserver#_elementCallbacks\n */\nResizeObserver._elementCallbacks = null;\n\n/**\n * A polyfill class for the native [`ResizeObserver`](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver).\n *\n * @private\n * @mixes module:utils/domemittermixin~DomEmitterMixin\n */\nclass ResizeObserverPolyfill {\n\t/**\n\t * Creates an instance of the {@link module:utils/dom/resizeobserver~ResizeObserverPolyfill} class.\n\t *\n\t * It synchronously reacts to resize of the window to check if observed elements' geometry changed.\n\t *\n\t * Additionally, the polyfilled observer uses a timeout to check if observed elements' geometry has changed\n\t * in some other way (dynamic layouts, scrollbars showing up, etc.), so its response can also be asynchronous.\n\t *\n\t * @param {Function} callback A function called when any observed element was resized. Refer to the\n\t * native [`ResizeObserver`](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver) API to\n\t * learn more.\n\t */\n\tconstructor( callback ) {\n\t\t/**\n\t\t * A function called when any observed {@link #_elements element} was resized.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Function}\n\t\t */\n\t\tthis._callback = callback;\n\n\t\t/**\n\t\t * DOM elements currently observed by the observer instance.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Set}\n\t\t */\n\t\tthis._elements = new Set();\n\n\t\t/**\n\t\t * Cached DOM {@link #_elements elements} bounding rects to compare to upon the next check.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Map.<HTMLElement,module:utils/dom/rect~Rect>}\n\t\t */\n\t\tthis._previousRects = new Map();\n\n\t\t/**\n\t\t * An UID of the current timeout upon which the observed elements rects\n\t\t * will be compared to the {@link #_previousRects previous rects} from the past.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Map.<HTMLElement,module:utils/dom/rect~Rect>}\n\t\t */\n\t\tthis._periodicCheckTimeout = null;\n\t}\n\n\t/**\n\t * Starts observing a DOM element.\n\t *\n\t * Learn more in the\n\t * [native method documentation](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe).\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tobserve( element ) {\n\t\tthis._elements.add( element );\n\n\t\tthis._checkElementRectsAndExecuteCallback();\n\n\t\tif ( this._elements.size === 1 ) {\n\t\t\tthis._startPeriodicCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Stops observing a DOM element.\n\t *\n\t * Learn more in the\n\t * [native method documentation](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/unobserve).\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tunobserve( element ) {\n\t\tthis._elements.delete( element );\n\t\tthis._previousRects.delete( element );\n\n\t\tif ( !this._elements.size ) {\n\t\t\tthis._stopPeriodicCheck();\n\t\t}\n\t}\n\n\t/**\n\t * When called, the observer calls the {@link #_callback resize callback} for all observed\n\t * {@link #_elements elements} but also starts checking periodically for changes in the elements' geometry.\n\t * If some are detected, {@link #_callback resize callback} is called for relevant elements that were resized.\n\t *\n\t * @protected\n\t */\n\t_startPeriodicCheck() {\n\t\tconst periodicCheck = () => {\n\t\t\tthis._checkElementRectsAndExecuteCallback();\n\t\t\tthis._periodicCheckTimeout = setTimeout( periodicCheck, RESIZE_CHECK_INTERVAL );\n\t\t};\n\n\t\tthis.listenTo( global.window, 'resize', () => {\n\t\t\tthis._checkElementRectsAndExecuteCallback();\n\t\t} );\n\n\t\tthis._periodicCheckTimeout = setTimeout( periodicCheck, RESIZE_CHECK_INTERVAL );\n\t}\n\n\t/**\n\t * Stops checking for changes in all observed {@link #_elements elements} geometry.\n\t *\n\t * @protected\n\t */\n\t_stopPeriodicCheck() {\n\t\tclearTimeout( this._periodicCheckTimeout );\n\t\tthis.stopListening();\n\t\tthis._previousRects.clear();\n\t}\n\n\t/**\n\t * Checks if the geometry of any of the {@link #_elements element} has changed. If so, executes\n\t * the {@link #_callback resize callback} with element geometry data.\n\t *\n\t * @protected\n\t */\n\t_checkElementRectsAndExecuteCallback() {\n\t\tconst entries = [];\n\n\t\tfor ( const element of this._elements ) {\n\t\t\tif ( this._hasRectChanged( element ) ) {\n\t\t\t\tentries.push( {\n\t\t\t\t\ttarget: element,\n\t\t\t\t\tcontentRect: this._previousRects.get( element )\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\tif ( entries.length ) {\n\t\t\tthis._callback( entries );\n\t\t}\n\t}\n\n\t/**\n\t * Compares the DOM element geometry to the {@link #_previousRects cached geometry} from the past.\n\t * Returns `true` if geometry has changed or the element is checked for the first time.\n\t *\n\t * @protected\n\t * @param {HTMLElement} element\n\t * @returns {Boolean}\n\t */\n\t_hasRectChanged( element ) {\n\t\tif ( !element.ownerDocument.body.contains( element ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst currentRect = new Rect( element );\n\t\tconst previousRect = this._previousRects.get( element );\n\n\t\t// The first check should always yield true despite no Previous rect to compare to.\n\t\t// The native ResizeObserver does that and... that makes sense. Sort of.\n\t\tconst hasChanged = !previousRect || !previousRect.isEqual( currentRect );\n\n\t\tthis._previousRects.set( element, currentRect );\n\n\t\treturn hasChanged;\n\t}\n}\n\nmix( ResizeObserverPolyfill, DomEmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/bindings/preventdefault\n */\n\n/**\n * A helper which executes a native `Event.preventDefault()` if the target of an event equals the\n * {@link module:ui/view~View#element element of the view}. It shortens the definition of a\n * {@link module:ui/view~View#template template}.\n *\n *\t\t// In a class extending View.\n *\t\timport preventDefault from '@ckeditor/ckeditor5-ui/src/bindings/preventdefault';\n *\n *\t\t// ...\n *\n *\t\tthis.setTemplate( {\n *\t\t\ttag: 'div',\n *\n *\t\t\ton: {\n *\t\t\t\t// Prevent the default mousedown action on this view.\n *\t\t\t\tmousedown: preventDefault( this )\n *\t\t\t}\n *\t\t} );\n *\n * @param {module:ui/view~View} view View instance that defines the template.\n * @returns {module:ui/template~TemplateToBinding}\n */\nexport default function preventDefault( view ) {\n\treturn view.bindTemplate.to( evt => {\n\t\tif ( evt.target === view.element ) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/dropdownpanelview\n */\n\nimport View from '../view';\n\n/**\n * The dropdown panel view class.\n *\n * See {@link module:ui/dropdown/dropdownview~DropdownView} to learn about the common usage.\n *\n * @extends module:ui/view~View\n */\nexport default class DropdownPanelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Controls whether the panel is visible.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isVisible\n\t\t */\n\t\tthis.set( 'isVisible', false );\n\n\t\t/**\n\t\t * The position of the panel, relative to the parent.\n\t\t *\n\t\t * This property is reflected in the CSS class set to {@link #element} that controls\n\t\t * the position of the panel.\n\t\t *\n\t\t * @observable\n\t\t * @default 'se'\n\t\t * @member {'se'|'sw'|'ne'|'nw'} #position\n\t\t */\n\t\tthis.set( 'position', 'se' );\n\n\t\t/**\n\t\t * Collection of the child views in this panel.\n\t\t *\n\t\t * A common child type is the {@link module:ui/list/listview~ListView} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\n\t\t * See {@link module:ui/dropdown/utils~addListToDropdown} and\n\t\t * {@link module:ui/dropdown/utils~addToolbarToDropdown} to learn more about child views of dropdowns.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-dropdown__panel',\n\t\t\t\t\tbind.to( 'position', value => `ck-dropdown__panel_${ value }` ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-dropdown__panel-visible' )\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.children,\n\n\t\t\ton: {\n\t\t\t\t// Drag and drop in the panel should not break the selection in the editor.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/228\n\t\t\t\tselectstart: bind.to( evt => evt.preventDefault() )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the view element or first item in view collection on opening dropdown's panel.\n\t *\n\t * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\n\t */\n\tfocus() {\n\t\tif ( this.children.length ) {\n\t\t\tthis.children.first.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the view element or last item in view collection on opening dropdown's panel.\n\t *\n\t * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\n\t */\n\tfocusLast() {\n\t\tif ( this.children.length ) {\n\t\t\tconst lastChild = this.children.last;\n\n\t\t\tif ( typeof lastChild.focusLast === 'function' ) {\n\t\t\t\tlastChild.focusLast();\n\t\t\t} else {\n\t\t\t\tlastChild.focus();\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/getpositionedancestor\n */\n\nimport global from './global';\n\n/**\n * For a given element, returns the nearest ancestor element which CSS position is not \"static\".\n *\n * @param {HTMLElement} element The native DOM element to be checked.\n * @returns {HTMLElement|null}\n */\nexport default function getPositionedAncestor( element ) {\n\tif ( !element || !element.parentNode ) {\n\t\treturn null;\n\t}\n\n\tif ( element.offsetParent === global.document.body ) {\n\t\treturn null;\n\t}\n\n\treturn element.offsetParent;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/position\n */\n\nimport global from './global';\nimport Rect from './rect';\nimport getPositionedAncestor from './getpositionedancestor';\nimport getBorderWidths from './getborderwidths';\nimport { isFunction } from 'lodash-es';\n\n/**\n * Calculates the `position: absolute` coordinates of a given element so it can be positioned with respect to the\n * target in the visually most efficient way, taking various restrictions like viewport or limiter geometry\n * into consideration.\n *\n *\t\t// The element which is to be positioned.\n *\t\tconst element = document.body.querySelector( '#toolbar' );\n *\n *\t\t// A target to which the element is positioned relatively.\n *\t\tconst target = document.body.querySelector( '#container' );\n *\n *\t\t// Finding the optimal coordinates for the positioning.\n *\t\tconst { left, top, name } = getOptimalPosition( {\n *\t\t\telement: element,\n *\t\t\ttarget: target,\n *\n * \t\t\t// The algorithm will chose among these positions to meet the requirements such\n * \t\t\t// as \"limiter\" element or \"fitInViewport\", set below. The positions are considered\n * \t\t\t// in the order of the array.\n *\t\t\tpositions: [\n *\t\t\t\t//\n *\t\t\t \t//\t[ Target ]\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\n *\t\t\t\ttargetRect => ( {\n *\t\t\t\t\ttop: targetRect.bottom,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'mySouthEastPosition'\n *\t\t\t\t} ),\n *\n *\t\t\t\t//\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t[ Target ]\n *\t\t\t\t//\n *\t\t\t\t( targetRect, elementRect ) => ( {\n *\t\t\t\t\ttop: targetRect.top - elementRect.height,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'myNorthEastPosition'\n *\t\t\t\t} )\n *\t\t\t],\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of <body>.\n *\t\t\tlimiter: document.body,\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of the browser viewport.\n *\t\t\tfitInViewport: true\n *\t\t} );\n *\n *\t\t// The best position which fits into document.body and the viewport. May be useful\n *\t\t// to set proper class on the `element`.\n *\t\tconsole.log( name ); // -> \"myNorthEastPosition\"\n *\n *\t\t// Using the absolute coordinates which has been found to position the element\n *\t\t// as in the diagram depicting the \"myNorthEastPosition\" position.\n *\t\telement.style.top = top;\n *\t\telement.style.left = left;\n *\n * @param {module:utils/dom/position~Options} options Positioning options object.\n * @returns {module:utils/dom/position~Position}\n */\nexport function getOptimalPosition( { element, target, positions, limiter, fitInViewport } ) {\n\t// If the {@link module:utils/dom/position~Options#target} is a function, use what it returns.\n\t// https://github.com/ckeditor/ckeditor5-utils/issues/157\n\tif ( isFunction( target ) ) {\n\t\ttarget = target();\n\t}\n\n\t// If the {@link module:utils/dom/position~Options#limiter} is a function, use what it returns.\n\t// https://github.com/ckeditor/ckeditor5-ui/issues/260\n\tif ( isFunction( limiter ) ) {\n\t\tlimiter = limiter();\n\t}\n\n\tconst positionedElementAncestor = getPositionedAncestor( element );\n\tconst elementRect = new Rect( element );\n\tconst targetRect = new Rect( target );\n\n\tlet bestPositionRect;\n\tlet bestPositionName;\n\n\t// If there are no limits, just grab the very first position and be done with that drama.\n\tif ( !limiter && !fitInViewport ) {\n\t\t[ bestPositionName, bestPositionRect ] = getPositionNameAndRect( positions[ 0 ], targetRect, elementRect );\n\t} else {\n\t\tconst limiterRect = limiter && new Rect( limiter ).getVisible();\n\t\tconst viewportRect = fitInViewport && new Rect( global.window );\n\t\tconst bestPosition = getBestPositionNameAndRect( positions, { targetRect, elementRect, limiterRect, viewportRect } );\n\n\t\t// If there's no best position found, i.e. when all intersections have no area because\n\t\t// rects have no width or height, then just use the first available position.\n\t\t[ bestPositionName, bestPositionRect ] = bestPosition || getPositionNameAndRect( positions[ 0 ], targetRect, elementRect );\n\t}\n\n\tlet absoluteRectCoordinates = getAbsoluteRectCoordinates( bestPositionRect );\n\n\tif ( positionedElementAncestor ) {\n\t\tabsoluteRectCoordinates = shiftRectCoordinatesDueToPositionedAncestor( absoluteRectCoordinates, positionedElementAncestor );\n\t}\n\n\treturn {\n\t\tleft: absoluteRectCoordinates.left,\n\t\ttop: absoluteRectCoordinates.top,\n\t\tname: bestPositionName\n\t};\n}\n\n// For given position function, returns a corresponding `Rect` instance.\n//\n// @private\n// @param {Function} position A function returning {@link module:utils/dom/position~Position}.\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned element.\n// @returns {Array|null} An array containing position name and its Rect (or null if position should be ignored).\nfunction getPositionNameAndRect( position, targetRect, elementRect ) {\n\tconst positionData = position( targetRect, elementRect );\n\n\tif ( !positionData ) {\n\t\treturn null;\n\t}\n\n\tconst { left, top, name } = positionData;\n\n\treturn [ name, elementRect.clone().moveTo( left, top ) ];\n}\n\n// For a given array of positioning functions, returns such that provides the best\n// fit of the `elementRect` into the `limiterRect` and `viewportRect`.\n//\n// @private\n//\n// @param {Object} options\n// @param {module:utils/dom/position~Options#positions} positions Functions returning {@link module:utils/dom/position~Position}\n// to be checked, in the order of preference.\n// @param {Object} options\n// @param {utils/dom/rect~Rect} options.targetRect A rect of the {@link module:utils/dom/position~Options#target}.\n// @param {utils/dom/rect~Rect} options.elementRect A rect of positioned {@link module:utils/dom/position~Options#element}.\n// @param {utils/dom/rect~Rect} options.limiterRect A rect of the {@link module:utils/dom/position~Options#limiter}.\n// @param {utils/dom/rect~Rect} options.viewportRect A rect of the viewport.\n//\n// @returns {Array} An array containing the name of the position and it's rect.\nfunction getBestPositionNameAndRect( positions, options ) {\n\tconst { elementRect, viewportRect } = options;\n\n\t// This is when element is fully visible.\n\tconst elementRectArea = elementRect.getArea();\n\n\t// Let's calculate intersection areas for positions. It will end early if best match is found.\n\tconst processedPositions = processPositionsToAreas( positions, options );\n\n\t// First let's check all positions that fully fit in the viewport.\n\tif ( viewportRect ) {\n\t\tconst processedPositionsInViewport = processedPositions.filter( ( { viewportIntersectArea } ) => {\n\t\t\treturn viewportIntersectArea === elementRectArea;\n\t\t} );\n\n\t\t// Try to find best position from those which fit completely in viewport.\n\t\tconst bestPositionData = getBestOfProcessedPositions( processedPositionsInViewport, elementRectArea );\n\n\t\tif ( bestPositionData ) {\n\t\t\treturn bestPositionData;\n\t\t}\n\t}\n\n\t// Either there is no viewportRect or there is no position that fits completely in the viewport.\n\treturn getBestOfProcessedPositions( processedPositions, elementRectArea );\n}\n\n// For a given array of positioning functions, calculates intersection areas for them.\n//\n// Note: If some position fully fits into the `limiterRect`, it will be returned early, without further consideration\n// of other positions.\n//\n// @private\n//\n// @param {module:utils/dom/position~Options#positions} positions Functions returning {@link module:utils/dom/position~Position}\n// to be checked, in the order of preference.\n// @param {Object} options\n// @param {utils/dom/rect~Rect} options.targetRect A rect of the {@link module:utils/dom/position~Options#target}.\n// @param {utils/dom/rect~Rect} options.elementRect A rect of positioned {@link module:utils/dom/position~Options#element}.\n// @param {utils/dom/rect~Rect} options.limiterRect A rect of the {@link module:utils/dom/position~Options#limiter}.\n// @param {utils/dom/rect~Rect} options.viewportRect A rect of the viewport.\n//\n// @returns {Array.<Object>} Array of positions with calculated intersection areas. Each item is an object containing:\n// * {String} positionName Name of position.\n// * {utils/dom/rect~Rect} positionRect Rect of position.\n// * {Number} limiterIntersectArea Area of intersection of the position with limiter part that is in the viewport.\n// * {Number} viewportIntersectArea Area of intersection of the position with viewport.\nfunction processPositionsToAreas( positions, { targetRect, elementRect, limiterRect, viewportRect } ) {\n\tconst processedPositions = [];\n\n\t// This is when element is fully visible.\n\tconst elementRectArea = elementRect.getArea();\n\n\tfor ( const position of positions ) {\n\t\tconst positionData = getPositionNameAndRect( position, targetRect, elementRect );\n\n\t\tif ( !positionData ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst [ positionName, positionRect ] = positionData;\n\t\tlet limiterIntersectArea = 0;\n\t\tlet viewportIntersectArea = 0;\n\n\t\tif ( limiterRect ) {\n\t\t\tif ( viewportRect ) {\n\t\t\t\t// Consider only the part of the limiter which is visible in the viewport. So the limiter is getting limited.\n\t\t\t\tconst limiterViewportIntersectRect = limiterRect.getIntersection( viewportRect );\n\n\t\t\t\tif ( limiterViewportIntersectRect ) {\n\t\t\t\t\t// If the limiter is within the viewport, then check the intersection between that part of the\n\t\t\t\t\t// limiter and actual position.\n\t\t\t\t\tlimiterIntersectArea = limiterViewportIntersectRect.getIntersectionArea( positionRect );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlimiterIntersectArea = limiterRect.getIntersectionArea( positionRect );\n\t\t\t}\n\t\t}\n\n\t\tif ( viewportRect ) {\n\t\t\tviewportIntersectArea = viewportRect.getIntersectionArea( positionRect );\n\t\t}\n\n\t\tconst processedPosition = {\n\t\t\tpositionName,\n\t\t\tpositionRect,\n\t\t\tlimiterIntersectArea,\n\t\t\tviewportIntersectArea\n\t\t};\n\n\t\t// If a such position is found that element is fully contained by the limiter then, obviously,\n\t\t// there will be no better one, so finishing.\n\t\tif ( limiterIntersectArea === elementRectArea ) {\n\t\t\treturn [ processedPosition ];\n\t\t}\n\n\t\tprocessedPositions.push( processedPosition );\n\t}\n\n\treturn processedPositions;\n}\n\n// For a given array of processed position data (with calculated Rects for positions and intersection areas)\n// returns such that provides the best fit of the `elementRect` into the `limiterRect` and `viewportRect` at the same time.\n//\n// **Note**: It will return early if some position fully fits into the `limiterRect`.\n//\n// @private\n// @param {Array.<Object>} Array of positions with calculated intersection areas (in order of preference).\n// Each item is an object containing:\n//\n//\t* {String} positionName Name of position.\n//\t* {utils/dom/rect~Rect} positionRect Rect of position.\n//\t* {Number} limiterIntersectArea Area of intersection of the position with limiter part that is in the viewport.\n//\t* {Number} viewportIntersectArea Area of intersection of the position with viewport.\n//\n// @param {Number} elementRectArea Area of positioned {@link module:utils/dom/position~Options#element}.\n// @returns {Array|null} An array containing the name of the position and it's rect, or null if not found.\nfunction getBestOfProcessedPositions( processedPositions, elementRectArea ) {\n\tlet maxFitFactor = 0;\n\tlet bestPositionRect;\n\tlet bestPositionName;\n\n\tfor ( const { positionName, positionRect, limiterIntersectArea, viewportIntersectArea } of processedPositions ) {\n\t\t// If a such position is found that element is fully container by the limiter then, obviously,\n\t\t// there will be no better one, so finishing.\n\t\tif ( limiterIntersectArea === elementRectArea ) {\n\t\t\treturn [ positionName, positionRect ];\n\t\t}\n\n\t\t// To maximize both viewport and limiter intersection areas we use distance on viewportIntersectArea\n\t\t// and limiterIntersectArea plane (without sqrt because we are looking for max value).\n\t\tconst fitFactor = viewportIntersectArea ** 2 + limiterIntersectArea ** 2;\n\n\t\tif ( fitFactor > maxFitFactor ) {\n\t\t\tmaxFitFactor = fitFactor;\n\t\t\tbestPositionRect = positionRect;\n\t\t\tbestPositionName = positionName;\n\t\t}\n\t}\n\n\treturn bestPositionRect ? [ bestPositionName, bestPositionRect ] : null;\n}\n\n// For a given absolute Rect coordinates object and a positioned element ancestor, it returns an object with\n// new Rect coordinates that make up for the position and the scroll of the ancestor.\n//\n// This is necessary because while Rects (and DOMRects) are relative to the browser's viewport, their coordinates\n// are used in real–life to position elements with `position: absolute`, which are scoped by any positioned\n// (and scrollable) ancestors.\n//\n// @private\n//\n// @param {Object} absoluteRectCoordinates An object with absolute rect coordinates.\n// @param {Object} absoluteRectCoordinates.top\n// @param {Object} absoluteRectCoordinates.left\n// @param {HTMLElement} positionedElementAncestor An ancestor element that should be considered.\n//\n// @returns {Object} An object corresponding to `absoluteRectCoordinates` input but with values shifted\n// to make up for the positioned element ancestor.\nfunction shiftRectCoordinatesDueToPositionedAncestor( { left, top }, positionedElementAncestor ) {\n\tconst ancestorPosition = getAbsoluteRectCoordinates( new Rect( positionedElementAncestor ) );\n\tconst ancestorBorderWidths = getBorderWidths( positionedElementAncestor );\n\n\t// (https://github.com/ckeditor/ckeditor5-ui-default/issues/126)\n\t// If there's some positioned ancestor of the panel, then its `Rect` must be taken into\n\t// consideration. `Rect` is always relative to the viewport while `position: absolute` works\n\t// with respect to that positioned ancestor.\n\tleft -= ancestorPosition.left;\n\ttop -= ancestorPosition.top;\n\n\t// (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n\t// If there's some positioned ancestor of the panel, not only its position must be taken into\n\t// consideration (see above) but also its internal scrolls. Scroll have an impact here because `Rect`\n\t// is relative to the viewport (it doesn't care about scrolling), while `position: absolute`\n\t// must compensate that scrolling.\n\tleft += positionedElementAncestor.scrollLeft;\n\ttop += positionedElementAncestor.scrollTop;\n\n\t// (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n\t// If there's some positioned ancestor of the panel, then its `Rect` includes its CSS `borderWidth`\n\t// while `position: absolute` positioning does not consider it.\n\t// E.g. `{ position: absolute, top: 0, left: 0 }` means upper left corner of the element,\n\t// not upper-left corner of its border.\n\tleft -= ancestorBorderWidths.left;\n\ttop -= ancestorBorderWidths.top;\n\n\treturn { left, top };\n}\n\n// DOMRect (also Rect) works in a scroll–independent geometry but `position: absolute` doesn't.\n// This function converts Rect to `position: absolute` coordinates.\n//\n// @private\n// @param {utils/dom/rect~Rect} rect A rect to be converted.\n// @returns {Object} Object containing `left` and `top` properties, in absolute coordinates.\nfunction getAbsoluteRectCoordinates( { left, top } ) {\n\tconst { scrollX, scrollY } = global.window;\n\n\treturn {\n\t\tleft: left + scrollX,\n\t\ttop: top + scrollY\n\t};\n}\n\n/**\n * The `getOptimalPosition()` helper options.\n *\n * @interface module:utils/dom/position~Options\n */\n\n/**\n * Element that is to be positioned.\n *\n * @member {HTMLElement} #element\n */\n\n/**\n * Target with respect to which the `element` is to be positioned.\n *\n * @member {HTMLElement|Range|ClientRect|Rect|Function} #target\n */\n\n/**\n * An array of functions which return {@link module:utils/dom/position~Position} relative\n * to the `target`, in the order of preference.\n *\n * **Note**: If a function returns `null`, it is ignored by the `getOptimalPosition()`.\n *\n * @member {Array.<Function>} #positions\n */\n\n/**\n * When set, the algorithm will chose position which fits the most in the\n * limiter's bounding rect.\n *\n * @member {HTMLElement|Range|ClientRect|Rect|Function} #limiter\n */\n\n/**\n * When set, the algorithm will chose such a position which fits `element`\n * the most inside visible viewport.\n *\n * @member {Boolean} #fitInViewport\n */\n\n/**\n * An object describing a position in `position: absolute` coordinate\n * system, along with position name.\n *\n * @typedef {Object} module:utils/dom/position~Position\n *\n * @property {Number} top Top position offset.\n * @property {Number} left Left position offset.\n * @property {String} name Name of the position.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/dropdownview\n */\n\nimport View from '../view';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\nimport '../../theme/components/dropdown/dropdown.css';\n\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\n\n/**\n * The dropdown view class. It manages the dropdown button and dropdown panel.\n *\n * In most cases, the easiest way to create a dropdown is by using the {@link module:ui/dropdown/utils~createDropdown}\n * util:\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\tdropdown.panelView.element.textContent = 'Content of the panel';\n *\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * If you want to add a richer content to the dropdown panel, you can use the {@link module:ui/dropdown/utils~addListToDropdown}\n * and {@link module:ui/dropdown/utils~addToolbarToDropdown} helpers. See more examples in\n * {@link module:ui/dropdown/utils~createDropdown} documentation.\n *\n * If you want to create a completely custom dropdown, then you can compose it manually:\n *\n *\t\tconst button = new DropdownButtonView( locale );\n *\t\tconst panel = new DropdownPanelView( locale );\n *\t\tconst dropdown = new DropdownView( locale, button, panel );\n *\n *\t\tbutton.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\tpanel.element.textContent = 'Content of the panel';\n *\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * However, dropdown created this way will contain little behavior. You will need to implement handlers for actions\n * such as {@link module:ui/bindings/clickoutsidehandler~clickOutsideHandler clicking outside an open dropdown}\n * (which should close it) and support for arrow keys inside the panel. Therefore, unless you really know what\n * you do and you really need to do it, it is recommended to use the {@link module:ui/dropdown/utils~createDropdown} helper.\n *\n * @extends module:ui/view~View\n */\nexport default class DropdownView extends View {\n\t/**\n\t * Creates an instance of the dropdown.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t * @param {module:ui/dropdown/button/dropdownbutton~DropdownButton} buttonView\n\t * @param {module:ui/dropdown/dropdownpanelview~DropdownPanelView} panelView\n\t */\n\tconstructor( locale, buttonView, panelView ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Button of the dropdown view. Clicking the button opens the {@link #panelView}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/button/buttonview~ButtonView} #buttonView\n\t\t */\n\t\tthis.buttonView = buttonView;\n\n\t\t/**\n\t\t * Panel of the dropdown. It opens when the {@link #buttonView} is\n\t\t * {@link module:ui/button/buttonview~ButtonView#event:execute executed} (i.e. clicked).\n\t\t *\n\t\t * Child views can be added to the panel's `children` collection:\n\t\t *\n\t\t *\t\tdropdown.panelView.children.add( childView );\n\t\t *\n\t\t * See {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#children} and\n\t\t * {@link module:ui/viewcollection~ViewCollection#add}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/dropdown/dropdownpanelview~DropdownPanelView} #panelView\n\t\t */\n\t\tthis.panelView = panelView;\n\n\t\t/**\n\t\t * Controls whether the dropdown view is open, i.e. shows or hides the {@link #panelView panel}.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isOpen\n\t\t */\n\t\tthis.set( 'isOpen', false );\n\n\t\t/**\n\t\t * Controls whether the dropdown is enabled, i.e. it can be clicked and execute an action.\n\t\t *\n\t\t * See {@link module:ui/button/buttonview~ButtonView#isEnabled}.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isEnabled\n\t\t */\n\t\tthis.set( 'isEnabled', true );\n\n\t\t/**\n\t\t * (Optional) The additional CSS class set on the dropdown {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n\t\tthis.set( 'class' );\n\n\t\t/**\n\t\t * (Optional) The `id` attribute of the dropdown (i.e. to pair with a `<label>` element).\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #id\n\t\t */\n\t\tthis.set( 'id' );\n\n\t\t/**\n\t\t * The position of the panel, relative to the dropdown.\n\t\t *\n\t\t * **Note**: When `'auto'`, the panel will use one of the remaining positions to stay\n\t\t * in the viewport, visible to the user. The positions correspond directly to\n\t\t * {@link module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions default panel positions}.\n\t\t *\n\t\t * **Note**: This value has an impact on the\n\t\t * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#position} property\n\t\t * each time the panel becomes {@link #isOpen open}.\n\t\t *\n\t\t * @observable\n\t\t * @default 'auto'\n\t\t * @member {'auto'|'se'|'sw'|'ne'|'nw'} #panelPosition\n\t\t */\n\t\tthis.set( 'panelPosition', 'auto' );\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n\t\t * keystrokes of the dropdown:\n\t\t *\n\t\t * * <kbd>▼</kbd> opens the dropdown,\n\t\t * * <kbd>◀</kbd> and <kbd>Esc</kbd> closes the dropdown.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-dropdown',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value )\n\t\t\t\t],\n\t\t\t\tid: bind.to( 'id' ),\n\t\t\t\t'aria-describedby': bind.to( 'ariaDescribedById' )\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tbuttonView,\n\t\t\t\tpanelView\n\t\t\t]\n\t\t} );\n\n\t\tbuttonView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-dropdown__button'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * A child {@link module:ui/list/listview~ListView list view} of the dropdown located\n\t\t * in its {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n\t\t *\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/list/listview~ListView} #listView\n\t\t */\n\n\t\t/**\n\t\t * A child toolbar of the dropdown located in the\n\t\t * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n\t\t *\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarView} #toolbarView\n\t\t */\n\n\t\t/**\n\t\t * Fired when the toolbar button or list item is executed.\n\t\t *\n\t\t * For {@link #listView} It fires when a child of some {@link module:ui/list/listitemview~ListItemView}\n\t\t * fired `execute`.\n\t\t *\n\t\t * For {@link #toolbarView} It fires when one of the buttons has been\n\t\t * {@link module:ui/button/buttonview~ButtonView#event:execute executed}.\n\t\t *\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}\n\t\t * or {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n\t\t *\n\t\t * @event execute\n\t\t */\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Toggle the dropdown when its button has been clicked.\n\t\tthis.listenTo( this.buttonView, 'open', () => {\n\t\t\tthis.isOpen = !this.isOpen;\n\t\t} );\n\n\t\t// Toggle the visibility of the panel when the dropdown becomes open.\n\t\tthis.panelView.bind( 'isVisible' ).to( this, 'isOpen' );\n\n\t\t// Let the dropdown control the position of the panel. The position must\n\t\t// be updated every time the dropdown is open.\n\t\tthis.on( 'change:isOpen', () => {\n\t\t\tif ( !this.isOpen ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If \"auto\", find the best position of the panel to fit into the viewport.\n\t\t\t// Otherwise, simply assign the static position.\n\t\t\tif ( this.panelPosition === 'auto' ) {\n\t\t\t\tthis.panelView.position = DropdownView._getOptimalPosition( {\n\t\t\t\t\telement: this.panelView.element,\n\t\t\t\t\ttarget: this.buttonView.element,\n\t\t\t\t\tfitInViewport: true,\n\t\t\t\t\tpositions: this._panelPositions\n\t\t\t\t} ).name;\n\t\t\t} else {\n\t\t\t\tthis.panelView.position = this.panelPosition;\n\t\t\t}\n\t\t} );\n\n\t\t// Listen for keystrokes coming from within #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\tconst closeDropdown = ( data, cancel ) => {\n\t\t\tif ( this.isOpen ) {\n\t\t\t\tthis.buttonView.focus();\n\t\t\t\tthis.isOpen = false;\n\t\t\t\tcancel();\n\t\t\t}\n\t\t};\n\n\t\t// Open the dropdown panel using the arrow down key, just like with return or space.\n\t\tthis.keystrokes.set( 'arrowdown', ( data, cancel ) => {\n\t\t\t// Don't open if the dropdown is disabled or already open.\n\t\t\tif ( this.buttonView.isEnabled && !this.isOpen ) {\n\t\t\t\tthis.isOpen = true;\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Block the right arrow key (until nested dropdowns are implemented).\n\t\tthis.keystrokes.set( 'arrowright', ( data, cancel ) => {\n\t\t\tif ( this.isOpen ) {\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Close the dropdown using the arrow left/escape key.\n\t\tthis.keystrokes.set( 'arrowleft', closeDropdown );\n\t\tthis.keystrokes.set( 'esc', closeDropdown );\n\t}\n\n\t/**\n\t * Focuses the {@link #buttonView}.\n\t */\n\tfocus() {\n\t\tthis.buttonView.focus();\n\t}\n\n\t/**\n\t * Returns {@link #panelView panel} positions to be used by the\n\t * {@link module:utils/dom/position~getOptimalPosition `getOptimalPosition()`}\n\t * utility considering the direction of the language the UI of the editor is displayed in.\n\t *\n\t * @type {module:utils/dom/position~Options#positions}\n\t * @private\n\t */\n\tget _panelPositions() {\n\t\tconst { southEast, southWest, northEast, northWest } = DropdownView.defaultPanelPositions;\n\n\t\tif ( this.locale.uiLanguageDirection === 'ltr' ) {\n\t\t\treturn [ southEast, southWest, northEast, northWest ];\n\t\t} else {\n\t\t\treturn [ southWest, southEast, northWest, northEast ];\n\t\t}\n\t}\n}\n\n/**\n * A set of positioning functions used by the dropdown view to determine\n * the optimal position (i.e. fitting into the browser viewport) of its\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel} when\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition} is set to 'auto'`.\n *\n * The available positioning functions are as follow:\n *\n * **South**\n *\n * * `southEast`\n *\n *\t\t[ Button ]\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\n * * `southWest`\n *\n *\t\t         [ Button ]\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\n * **North**\n *\n * * `northEast`\n *\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\t\t[ Button ]\n *\n * * `northWest`\n *\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\t\t         [ Button ]\n *\n * Positioning functions are compatible with {@link module:utils/dom/position~Position}.\n *\n * The name that position function returns will be reflected in dropdown panel's class that\n * controls its placement. See {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition}\n * to learn more.\n *\n * @member {Object} module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions\n */\nDropdownView.defaultPanelPositions = {\n\tsouthEast: buttonRect => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom,\n\t\t\tleft: buttonRect.left,\n\t\t\tname: 'se'\n\t\t};\n\t},\n\tsouthWest: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom,\n\t\t\tleft: buttonRect.left - panelRect.width + buttonRect.width,\n\t\t\tname: 'sw'\n\t\t};\n\t},\n\tnorthEast: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.top - panelRect.height,\n\t\t\tleft: buttonRect.left,\n\t\t\tname: 'ne'\n\t\t};\n\t},\n\tnorthWest: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom - panelRect.height,\n\t\t\tleft: buttonRect.left - panelRect.width + buttonRect.width,\n\t\t\tname: 'nw'\n\t\t};\n\t}\n};\n\n/**\n * A function used to calculate the optimal position for the dropdown panel.\n *\n * @protected\n * @member {Function} module:ui/dropdown/dropdownview~DropdownView._getOptimalPosition\n */\nDropdownView._getOptimalPosition = getOptimalPosition;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* global DOMParser */\n\n/**\n * @module ui/icon/iconview\n */\n\nimport View from '../view';\n\nimport '../../theme/components/icon/icon.css';\n\n/**\n * The icon view class.\n *\n * @extends module:ui/view~View\n */\nexport default class IconView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * The SVG source of the icon.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #content\n\t\t */\n\t\tthis.set( 'content', '' );\n\n\t\t/**\n\t\t * This attribute specifies the boundaries to which the\n\t\t * icon content should stretch.\n\t\t *\n\t\t * @observable\n\t\t * @default '0 0 20 20'\n\t\t * @member {String} #viewBox\n\t\t */\n\t\tthis.set( 'viewBox', '0 0 20 20' );\n\n\t\t/**\n\t\t * The fill color of the child `path.ck-icon__fill`.\n\t\t *\n\t\t * @observable\n\t\t * @default ''\n\t\t * @member {String} #fillColor\n\t\t */\n\t\tthis.set( 'fillColor', '' );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'svg',\n\t\t\tns: 'http://www.w3.org/2000/svg',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-icon'\n\t\t\t\t],\n\t\t\t\tviewBox: bind.to( 'viewBox' )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis._updateXMLContent();\n\t\tthis._colorFillPaths();\n\n\t\t// This is a hack for lack of innerHTML binding.\n\t\t// See: https://github.com/ckeditor/ckeditor5-ui/issues/99.\n\t\tthis.on( 'change:content', () => {\n\t\t\tthis._updateXMLContent();\n\t\t\tthis._colorFillPaths();\n\t\t} );\n\n\t\tthis.on( 'change:fillColor', () => {\n\t\t\tthis._colorFillPaths();\n\t\t} );\n\t}\n\n\t/**\n\t * Updates the {@link #element} with the value of {@link #content}.\n\t *\n\t * @private\n\t */\n\t_updateXMLContent() {\n\t\tif ( this.content ) {\n\t\t\tconst parsed = new DOMParser().parseFromString( this.content.trim(), 'image/svg+xml' );\n\t\t\tconst svg = parsed.querySelector( 'svg' );\n\t\t\tconst viewBox = svg.getAttribute( 'viewBox' );\n\n\t\t\tif ( viewBox ) {\n\t\t\t\tthis.viewBox = viewBox;\n\t\t\t}\n\n\t\t\tthis.element.innerHTML = '';\n\n\t\t\twhile ( svg.childNodes.length > 0 ) {\n\t\t\t\tthis.element.appendChild( svg.childNodes[ 0 ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Fills all child `path.ck-icon__fill` with the `#fillColor`.\n\t *\n\t * @private\n\t */\n\t_colorFillPaths() {\n\t\tif ( this.fillColor ) {\n\t\t\tthis.element.querySelectorAll( '.ck-icon__fill' ).forEach( path => {\n\t\t\t\tpath.style.fill = this.fillColor;\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/tooltip/tooltipview\n */\n\nimport View from '../view';\n\nimport '../../theme/components/tooltip/tooltip.css';\n\n/**\n * The tooltip view class.\n *\n * @extends module:ui/view~View\n */\nexport default class TooltipView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * The text of the tooltip visible to the user.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #text\n\t\t */\n\t\tthis.set( 'text', '' );\n\n\t\t/**\n\t\t * The position of the tooltip (south or north).\n\t\t *\n\t\t *\t\t+-----------+\n\t\t *\t\t|   north   |\n\t\t *\t\t+-----------+\n\t\t *\t\t      V\n\t\t *\t\t  [element]\n\t\t *\n\t\t *\t\t  [element]\n\t\t *\t\t      ^\n\t\t *\t\t+-----------+\n\t\t *\t\t|   south   |\n\t\t *\t\t+-----------+\n\t\t *\n\t\t * @observable\n\t\t * @default 's'\n\t\t * @member {'s'|'n'} #position\n\t\t */\n\t\tthis.set( 'position', 's' );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-tooltip',\n\t\t\t\t\tbind.to( 'position', position => 'ck-tooltip_' + position ),\n\t\t\t\t\tbind.if( 'text', 'ck-hidden', value => !value.trim() )\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'span',\n\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-tooltip__text'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: bind.to( 'text' )\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/button/buttonview\n */\n\nimport View from '../view';\nimport IconView from '../icon/iconview';\nimport TooltipView from '../tooltip/tooltipview';\n\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\nimport { getEnvKeystrokeText } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\nimport '../../theme/components/button/button.css';\n\n/**\n * The button view class.\n *\n *\t\tconst view = new ButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true,\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * @extends module:ui/view~View\n * @implements module:ui/button/button~Button\n */\nexport default class ButtonView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\t\tconst ariaLabelUid = uid();\n\n\t\t// Implement the Button interface.\n\t\tthis.set( 'class' );\n\t\tthis.set( 'labelStyle' );\n\t\tthis.set( 'icon' );\n\t\tthis.set( 'isEnabled', true );\n\t\tthis.set( 'isOn', false );\n\t\tthis.set( 'isVisible', true );\n\t\tthis.set( 'isToggleable', false );\n\t\tthis.set( 'keystroke' );\n\t\tthis.set( 'label' );\n\t\tthis.set( 'tabindex', -1 );\n\t\tthis.set( 'tooltip' );\n\t\tthis.set( 'tooltipPosition', 's' );\n\t\tthis.set( 'type', 'button' );\n\t\tthis.set( 'withText', false );\n\t\tthis.set( 'withKeystroke', false );\n\n\t\t/**\n\t\t * Collection of the child views inside of the button {@link #element}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\t/**\n\t\t * Tooltip of the button view. It is configurable using the {@link #tooltip tooltip attribute}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/tooltip/tooltipview~TooltipView} #tooltipView\n\t\t */\n\t\tthis.tooltipView = this._createTooltipView();\n\n\t\t/**\n\t\t * Label of the button view. It is configurable using the {@link #label label attribute}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/view~View} #labelView\n\t\t */\n\t\tthis.labelView = this._createLabelView( ariaLabelUid );\n\n\t\t/**\n\t\t * The icon view of the button. Will be added to {@link #children} when the\n\t\t * {@link #icon icon attribute} is defined.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/icon/iconview~IconView} #iconView\n\t\t */\n\t\tthis.iconView = new IconView();\n\n\t\tthis.iconView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-button__icon'\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * A view displaying the keystroke of the button next to the {@link #labelView label}.\n\t\t * Added to {@link #children} when the {@link #withKeystroke `withKeystroke` attribute}\n\t\t * is defined.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/view/view~View} #keystrokeView\n\t\t */\n\t\tthis.keystrokeView = this._createKeystrokeView();\n\n\t\t/**\n\t\t * Tooltip of the button bound to the template.\n\t\t *\n\t\t * @see #tooltip\n\t\t * @see #_getTooltipString\n\t\t * @private\n\t\t * @observable\n\t\t * @member {Boolean} #_tooltipString\n\t\t */\n\t\tthis.bind( '_tooltipString' ).to(\n\t\t\tthis, 'tooltip',\n\t\t\tthis, 'label',\n\t\t\tthis, 'keystroke',\n\t\t\tthis._getTooltipString.bind( this )\n\t\t);\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'button',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value ),\n\t\t\t\t\tbind.to( 'isOn', value => value ? 'ck-on' : 'ck-off' ),\n\t\t\t\t\tbind.if( 'withText', 'ck-button_with-text' ),\n\t\t\t\t\tbind.if( 'withKeystroke', 'ck-button_with-keystroke' )\n\t\t\t\t],\n\t\t\t\ttype: bind.to( 'type', value => value ? value : 'button' ),\n\t\t\t\ttabindex: bind.to( 'tabindex' ),\n\t\t\t\t'aria-labelledby': `ck-editor__aria-label_${ ariaLabelUid }`,\n\t\t\t\t'aria-disabled': bind.if( 'isEnabled', true, value => !value ),\n\t\t\t\t'aria-pressed': bind.to( 'isOn', value => this.isToggleable ? String( value ) : false )\n\t\t\t},\n\n\t\t\tchildren: this.children,\n\n\t\t\ton: {\n\t\t\t\tmousedown: bind.to( evt => {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t} ),\n\n\t\t\t\tclick: bind.to( evt => {\n\t\t\t\t\t// We can't make the button disabled using the disabled attribute, because it won't be focusable.\n\t\t\t\t\t// Though, shouldn't this condition be moved to the button controller?\n\t\t\t\t\tif ( this.isEnabled ) {\n\t\t\t\t\t\tthis.fire( 'execute' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Prevent the default when button is disabled, to block e.g.\n\t\t\t\t\t\t// automatic form submitting. See ckeditor/ckeditor5-link#74.\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tif ( this.icon ) {\n\t\t\tthis.iconView.bind( 'content' ).to( this, 'icon' );\n\t\t\tthis.children.add( this.iconView );\n\t\t}\n\n\t\tthis.children.add( this.tooltipView );\n\t\tthis.children.add( this.labelView );\n\n\t\tif ( this.withKeystroke ) {\n\t\t\tthis.children.add( this.keystrokeView );\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the {@link #element} of the button.\n\t */\n\tfocus() {\n\t\tthis.element.focus();\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/tooltip/tooltipview~TooltipView} instance and binds it with button\n\t * attributes.\n\t *\n\t * @private\n\t * @returns {module:ui/tooltip/tooltipview~TooltipView}\n\t */\n\t_createTooltipView() {\n\t\tconst tooltipView = new TooltipView();\n\n\t\ttooltipView.bind( 'text' ).to( this, '_tooltipString' );\n\t\ttooltipView.bind( 'position' ).to( this, 'tooltipPosition' );\n\n\t\treturn tooltipView;\n\t}\n\n\t/**\n\t * Creates a label view instance and binds it with button attributes.\n\t *\n\t * @private\n\t * @param {String} ariaLabelUid The aria label UID.\n\t * @returns {module:ui/view~View}\n\t */\n\t_createLabelView( ariaLabelUid ) {\n\t\tconst labelView = new View();\n\t\tconst bind = this.bindTemplate;\n\n\t\tlabelView.setTemplate( {\n\t\t\ttag: 'span',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button__label'\n\t\t\t\t],\n\t\t\t\tstyle: bind.to( 'labelStyle' ),\n\t\t\t\tid: `ck-editor__aria-label_${ ariaLabelUid }`\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: this.bindTemplate.to( 'label' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn labelView;\n\t}\n\n\t/**\n\t * Creates a view that displays a keystroke next to a {@link #labelView label }\n\t * and binds it with button attributes.\n\t *\n\t * @private\n\t * @returns {module:ui/view~View}\n\t */\n\t_createKeystrokeView() {\n\t\tconst keystrokeView = new View();\n\n\t\tkeystrokeView.setTemplate( {\n\t\t\ttag: 'span',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button__keystroke'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: this.bindTemplate.to( 'keystroke', text => getEnvKeystrokeText( text ) )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn keystrokeView;\n\t}\n\n\t/**\n\t * Gets the text for the {@link #tooltipView} from the combination of\n\t * {@link #tooltip}, {@link #label} and {@link #keystroke} attributes.\n\t *\n\t * @private\n\t * @see #tooltip\n\t * @see #_tooltipString\n\t * @param {Boolean|String|Function} tooltip Button tooltip.\n\t * @param {String} label Button label.\n\t * @param {String} keystroke Button keystroke.\n\t * @returns {String}\n\t */\n\t_getTooltipString( tooltip, label, keystroke ) {\n\t\tif ( tooltip ) {\n\t\t\tif ( typeof tooltip == 'string' ) {\n\t\t\t\treturn tooltip;\n\t\t\t} else {\n\t\t\t\tif ( keystroke ) {\n\t\t\t\t\tkeystroke = getEnvKeystrokeText( keystroke );\n\t\t\t\t}\n\n\t\t\t\tif ( tooltip instanceof Function ) {\n\t\t\t\t\treturn tooltip( label, keystroke );\n\t\t\t\t} else {\n\t\t\t\t\treturn `${ label }${ keystroke ? ` (${ keystroke })` : '' }`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn '';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/button/dropdownbuttonview\n */\n\nimport ButtonView from '../../button/buttonview';\n\nimport dropdownArrowIcon from '../../../theme/icons/dropdown-arrow.svg';\nimport IconView from '../../icon/iconview';\n\n/**\n * The default dropdown button view class.\n *\n *\t\tconst view = new DropdownButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\n *\n * @implements module:ui/dropdown/button/dropdownbutton~DropdownButton\n * @extends module:ui/button/buttonview~ButtonView\n */\nexport default class DropdownButtonView extends ButtonView {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * An icon that displays arrow to indicate a dropdown button.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/icon/iconview~IconView}\n\t\t */\n\t\tthis.arrowView = this._createArrowView();\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\t'aria-haspopup': true\n\t\t\t}\n\t\t} );\n\n\t\t// The DropdownButton interface expects the open event upon which will open the dropdown.\n\t\tthis.delegate( 'execute' ).to( this, 'open' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.children.add( this.arrowView );\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/icon/iconview~IconView} instance as {@link #arrowView}.\n\t *\n\t * @private\n\t * @returns {module:ui/icon/iconview~IconView}\n\t */\n\t_createArrowView() {\n\t\tconst arrowView = new IconView();\n\n\t\tarrowView.content = dropdownArrowIcon;\n\n\t\tarrowView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-dropdown__arrow'\n\t\t\t}\n\t\t} );\n\n\t\treturn arrowView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/list/listview\n */\n\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\nimport '../../theme/components/list/list.css';\n\n/**\n * The list view class.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\nexport default class ListView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Collection of the child list views.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * Helps cycling over focusable {@link #items} in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.items,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate list items backwards using the arrowup key.\n\t\t\t\tfocusPrevious: 'arrowup',\n\n\t\t\t\t// Navigate toolbar items forwards using the arrowdown key.\n\t\t\t\tfocusNext: 'arrowdown'\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'ul',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-list'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.items\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Items added before rendering should be known to the #focusTracker.\n\t\tfor ( const item of this.items ) {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t}\n\n\t\tthis.items.on( 'add', ( evt, item ) => {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t} );\n\n\t\tthis.items.on( 'remove', ( evt, item ) => {\n\t\t\tthis.focusTracker.remove( item.element );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link #items}.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Focuses the last focusable in {@link #items}.\n\t */\n\tfocusLast() {\n\t\tthis._focusCycler.focusLast();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/list/listitemview\n */\n\nimport View from '../view';\n\n/**\n * The list item view class.\n *\n * @extends module:ui/view~View\n */\nexport default class ListItemView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Collection of the child views inside of the list item {@link #element}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'li',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-list__item'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the list item.\n\t */\n\tfocus() {\n\t\tthis.children.first.focus();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/list/listseparatorview\n */\n\nimport View from '../view';\n\n/**\n * The list separator view class.\n *\n * @extends module:ui/view~View\n */\nexport default class ListSeparatorView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'li',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-list__separator'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/button/switchbuttonview\n */\n\nimport View from '../view';\nimport ButtonView from './buttonview';\n\nimport '../../theme/components/button/switchbutton.css';\n\n/**\n * The switch button view class.\n *\n *\t\tconst view = new SwitchButtonView();\n *\n *\t\tview.set( {\n *\t\t\twithText: true,\n *\t\t\tlabel: 'Switch me!'\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * @extends module:ui/button/buttonview~ButtonView\n */\nexport default class SwitchButtonView extends ButtonView {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tthis.isToggleable = true;\n\n\t\t/**\n\t\t * The toggle switch of the button.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/view~View} #toggleSwitchView\n\t\t */\n\t\tthis.toggleSwitchView = this._createToggleView();\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-switchbutton'\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.children.add( this.toggleSwitchView );\n\t}\n\n\t/**\n\t * Creates a toggle child view.\n\t *\n\t * @private\n\t * @returns {module:ui/view~View}\n\t */\n\t_createToggleView() {\n\t\tconst toggleSwitchView = new View();\n\n\t\ttoggleSwitchView.setTemplate( {\n\t\t\ttag: 'span',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button__toggle'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'span',\n\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-button__toggle__inner'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn toggleSwitchView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/bindings/clickoutsidehandler\n */\n\n/* global document */\n\n/**\n * Handles clicking **outside** of a specified set of elements, then fires an action.\n *\n * **Note**: Actually, the action is executed upon `mousedown`, not `click`. It prevents\n * certain issues when the user keeps holding the mouse button and the UI cannot react\n * properly.\n *\n * @param {Object} options Configuration options.\n * @param {module:utils/dom/emittermixin~Emitter} options.emitter The emitter to which this behavior\n * should be added.\n * @param {Function} options.activator Function returning a `Boolean`, to determine whether the handler is active.\n * @param {Array.<HTMLElement>} options.contextElements HTML elements that determine the scope of the\n * handler. Clicking any of them or their descendants will **not** fire the callback.\n * @param {Function} options.callback An action executed by the handler.\n */\nexport default function clickOutsideHandler( { emitter, activator, callback, contextElements } ) {\n\temitter.listenTo( document, 'mousedown', ( evt, { target } ) => {\n\t\tif ( !activator() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const contextElement of contextElements ) {\n\t\t\tif ( contextElement.contains( target ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tcallback();\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/utils\n */\n\nimport DropdownPanelView from './dropdownpanelview';\nimport DropdownView from './dropdownview';\nimport DropdownButtonView from './button/dropdownbuttonview';\nimport ToolbarView from '../toolbar/toolbarview';\nimport ListView from '../list/listview';\nimport ListItemView from '../list/listitemview';\nimport ListSeparatorView from '../list/listseparatorview';\nimport ButtonView from '../button/buttonview';\nimport SwitchButtonView from '../button/switchbuttonview';\n\nimport clickOutsideHandler from '../bindings/clickoutsidehandler';\n\nimport '../../theme/components/dropdown/toolbardropdown.css';\nimport '../../theme/components/dropdown/listdropdown.css';\n\n/**\n * A helper for creating dropdowns. It creates an instance of a {@link module:ui/dropdown/dropdownview~DropdownView dropdown},\n * with a {@link module:ui/dropdown/button/dropdownbutton~DropdownButton button},\n * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView panel} and all standard dropdown's behaviors.\n *\n * # Creating dropdowns\n *\n * By default, the default {@link module:ui/dropdown/button/dropdownbuttonview~DropdownButtonView} class is used as\n * definition of the button:\n *\n *\t\tconst dropdown = createDropdown( model );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\t// Will render a dropdown labeled \"A dropdown\" with an empty panel.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * You can also provide other button views (they need to implement the\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface). For instance, you can use\n * {@link module:ui/dropdown/button/splitbuttonview~SplitButtonView} to create a dropdown with a split button.\n *\n *\t\tconst dropdown = createDropdown( model, SplitButtonView );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.buttonView.on( 'execute', () => {\n *\t\t\t// Add the behavior of the \"action part\" of the split button.\n *\t\t\t// Split button consists of the \"action part\" and \"arrow part\".\n *\t\t\t// The arrow opens the dropdown while the action part can have some other behavior.\n * \t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\t// Will render a dropdown labeled \"A dropdown\" with an empty panel.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * # Adding content to the dropdown's panel\n *\n * The content of the panel can be inserted directly into the `dropdown.panelView.element`:\n *\n *\t\tdropdown.panelView.element.textContent = 'Content of the panel';\n *\n * However, most of the time you will want to add there either a {@link module:ui/list/listview~ListView list of options}\n * or a list of buttons (i.e. a {@link module:ui/toolbar/toolbarview~ToolbarView toolbar}).\n * To simplify the task, you can use, respectively, {@link module:ui/dropdown/utils~addListToDropdown} or\n * {@link module:ui/dropdown/utils~addToolbarToDropdown} utils.\n *\n * @param {module:utils/locale~Locale} locale The locale instance.\n * @param {Function} ButtonClass The dropdown button view class. Needs to implement the\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface.\n * @returns {module:ui/dropdown/dropdownview~DropdownView} The dropdown view instance.\n */\nexport function createDropdown( locale, ButtonClass = DropdownButtonView ) {\n\tconst buttonView = new ButtonClass( locale );\n\n\tconst panelView = new DropdownPanelView( locale );\n\tconst dropdownView = new DropdownView( locale, buttonView, panelView );\n\n\tbuttonView.bind( 'isEnabled' ).to( dropdownView );\n\n\tif ( buttonView instanceof DropdownButtonView ) {\n\t\tbuttonView.bind( 'isOn' ).to( dropdownView, 'isOpen' );\n\t} else {\n\t\tbuttonView.arrowView.bind( 'isOn' ).to( dropdownView, 'isOpen' );\n\t}\n\n\taddDefaultBehavior( dropdownView );\n\n\treturn dropdownView;\n}\n\n/**\n * Adds an instance of {@link module:ui/toolbar/toolbarview~ToolbarView} to a dropdown.\n *\n *\t\tconst buttons = [];\n *\n *\t\t// Either create a new ButtonView instance or create existing.\n *\t\tbuttons.push( new ButtonView() );\n *\t\tbuttons.push( editor.ui.componentFactory.get( 'someButton' ) );\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\taddToolbarToDropdown( dropdown, buttons );\n *\n *\t\tdropdown.toolbarView.isVertical = true;\n *\n *\t\t// Will render a vertical button dropdown labeled \"A button dropdown\"\n *\t\t// with a button group in the panel containing two buttons.\n *\t\tdropdown.render()\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\n *\n * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView A dropdown instance to which `ToolbarView` will be added.\n * @param {Iterable.<module:ui/button/buttonview~ButtonView>} buttons\n */\nexport function addToolbarToDropdown( dropdownView, buttons ) {\n\tconst locale = dropdownView.locale;\n\tconst t = locale.t;\n\tconst toolbarView = dropdownView.toolbarView = new ToolbarView( locale );\n\n\ttoolbarView.set( 'ariaLabel', t( 'Dropdown toolbar' ) );\n\n\tdropdownView.extendTemplate( {\n\t\tattributes: {\n\t\t\tclass: [ 'ck-toolbar-dropdown' ]\n\t\t}\n\t} );\n\n\tbuttons.map( view => toolbarView.items.add( view ) );\n\n\tdropdownView.panelView.children.add( toolbarView );\n\ttoolbarView.items.delegate( 'execute' ).to( dropdownView );\n}\n\n/**\n * Adds an instance of {@link module:ui/list/listview~ListView} to a dropdown.\n *\n *\t\tconst items = new Collection();\n *\n *\t\titems.add( {\n *\t\t\ttype: 'button',\n *\t\t\tmodel: new Model( {\n *\t\t\t\twithText: true,\n *\t\t\t\tlabel: 'First item',\n *\t\t\t\tlabelStyle: 'color: red'\n *\t\t\t} )\n *\t\t} );\n *\n *\t\titems.add( {\n *\t\t\t type: 'button',\n *\t\t\t model: new Model( {\n *\t\t\t\twithText: true,\n *\t\t\t\tlabel: 'Second item',\n *\t\t\t\tlabelStyle: 'color: green',\n *\t\t\t\tclass: 'foo'\n *\t\t\t} )\n *\t\t} );\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\taddListToDropdown( dropdown, items );\n *\n *\t\t// Will render a dropdown with a list in the panel containing two items.\n *\t\tdropdown.render()\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * The `items` collection passed to this methods controls the presence and attributes of respective\n * {@link module:ui/list/listitemview~ListItemView list items}.\n *\n *\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:list/list~List}.\n *\n * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView A dropdown instance to which `ListVIew` will be added.\n * @param {Iterable.<module:ui/dropdown/utils~ListDropdownItemDefinition>} items\n * A collection of the list item definitions to populate the list.\n */\nexport function addListToDropdown( dropdownView, items ) {\n\tconst locale = dropdownView.locale;\n\tconst listView = dropdownView.listView = new ListView( locale );\n\n\tlistView.items.bindTo( items ).using( ( { type, model } ) => {\n\t\tif ( type === 'separator' ) {\n\t\t\treturn new ListSeparatorView( locale );\n\t\t} else if ( type === 'button' || type === 'switchbutton' ) {\n\t\t\tconst listItemView = new ListItemView( locale );\n\t\t\tlet buttonView;\n\n\t\t\tif ( type === 'button' ) {\n\t\t\t\tbuttonView = new ButtonView( locale );\n\t\t\t} else {\n\t\t\t\tbuttonView = new SwitchButtonView( locale );\n\t\t\t}\n\n\t\t\t// Bind all model properties to the button view.\n\t\t\tbuttonView.bind( ...Object.keys( model ) ).to( model );\n\t\t\tbuttonView.delegate( 'execute' ).to( listItemView );\n\n\t\t\tlistItemView.children.add( buttonView );\n\n\t\t\treturn listItemView;\n\t\t}\n\t} );\n\n\tdropdownView.panelView.children.add( listView );\n\n\tlistView.items.delegate( 'execute' ).to( dropdownView );\n}\n\n// Add a set of default behaviors to dropdown view.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\nfunction addDefaultBehavior( dropdownView ) {\n\tcloseDropdownOnBlur( dropdownView );\n\tcloseDropdownOnExecute( dropdownView );\n\tfocusDropdownContentsOnArrows( dropdownView );\n}\n\n// Adds a behavior to a dropdownView that closes opened dropdown when user clicks outside the dropdown.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\nfunction closeDropdownOnBlur( dropdownView ) {\n\tdropdownView.on( 'render', () => {\n\t\tclickOutsideHandler( {\n\t\t\temitter: dropdownView,\n\t\t\tactivator: () => dropdownView.isOpen,\n\t\t\tcallback: () => {\n\t\t\t\tdropdownView.isOpen = false;\n\t\t\t},\n\t\t\tcontextElements: [ dropdownView.element ]\n\t\t} );\n\t} );\n}\n\n// Adds a behavior to a dropdownView that closes the dropdown view on \"execute\" event.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\nfunction closeDropdownOnExecute( dropdownView ) {\n\t// Close the dropdown when one of the list items has been executed.\n\tdropdownView.on( 'execute', evt => {\n\t\t// Toggling a switch button view should not close the dropdown.\n\t\tif ( evt.source instanceof SwitchButtonView ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdropdownView.isOpen = false;\n\t} );\n}\n\n// Adds a behavior to a dropdownView that focuses the dropdown's panel view contents on keystrokes.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\nfunction focusDropdownContentsOnArrows( dropdownView ) {\n\t// If the dropdown panel is already open, the arrow down key should focus the first child of the #panelView.\n\tdropdownView.keystrokes.set( 'arrowdown', ( data, cancel ) => {\n\t\tif ( dropdownView.isOpen ) {\n\t\t\tdropdownView.panelView.focus();\n\t\t\tcancel();\n\t\t}\n\t} );\n\n\t// If the dropdown panel is already open, the arrow up key should focus the last child of the #panelView.\n\tdropdownView.keystrokes.set( 'arrowup', ( data, cancel ) => {\n\t\tif ( dropdownView.isOpen ) {\n\t\t\tdropdownView.panelView.focusLast();\n\t\t\tcancel();\n\t\t}\n\t} );\n}\n\n/**\n * A definition of the list item used by the {@link module:ui/dropdown/utils~addListToDropdown}\n * utility.\n *\n * @typedef {Object} module:ui/dropdown/utils~ListDropdownItemDefinition\n *\n * @property {String} type Either `'separator'`, `'button'` or `'switchbutton'`.\n * @property {module:ui/model~Model} [model] Model of the item (when **not** `'separator'`).\n * Its properties fuel the newly created list item (or its children, depending on the `type`).\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/toolbarview\n */\n\n/* globals console */\n\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport ToolbarSeparatorView from './toolbarseparatorview';\nimport ResizeObserver from '@ckeditor/ckeditor5-utils/src/dom/resizeobserver';\nimport preventDefault from '../bindings/preventdefault.js';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport { createDropdown, addToolbarToDropdown } from '../dropdown/utils';\nimport { attachLinkToDocumentation } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport verticalDotsIcon from '@ckeditor/ckeditor5-core/theme/icons/three-vertical-dots.svg';\n\nimport '../../theme/components/toolbar/toolbar.css';\n\n/**\n * The toolbar view class.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\nexport default class ToolbarView extends View {\n\t/**\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~ToolbarView} class.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param {module:utils/locale~Locale} locale The localization services instance.\n\t * @param {module:ui/toolbar/toolbarview~ToolbarOptions} [options] Configuration options of the toolbar.\n\t */\n\tconstructor( locale, options ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\t\tconst t = this.t;\n\n\t\t/**\n\t\t * A reference to the options object passed to the constructor.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarOptions}\n\t\t */\n\t\tthis.options = options || {};\n\n\t\t/**\n\t\t * Label used by assistive technologies to describe this toolbar element.\n\t\t *\n\t\t * @default 'Editor toolbar'\n\t\t * @member {String} #ariaLabel\n\t\t */\n\t\tthis.set( 'ariaLabel', t( 'Editor toolbar' ) );\n\n\t\t/**\n\t\t * The maximum width of the toolbar element.\n\t\t *\n\t\t * **Note**: When set to a specific value (e.g. `'200px'`), the value will affect the behavior of the\n\t\t * {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull}\n\t\t * option by changing the number of {@link #items} that will be displayed in the toolbar at a time.\n\t\t *\n\t\t * @observable\n\t\t * @default 'auto'\n\t\t * @member {String} #maxWidth\n\t\t */\n\t\tthis.set( 'maxWidth', 'auto' );\n\n\t\t/**\n\t\t * A collection of toolbar items (buttons, dropdowns, etc.).\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * Tracks information about the DOM focus in the toolbar.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}\n\t\t * to handle keyboard navigation in the toolbar.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * An additional CSS class added to the {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n\t\tthis.set( 'class' );\n\n\t\t/**\n\t\t * When set true, makes the toolbar look compact with {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @default false\n\t\t * @member {String} #isCompact\n\t\t */\n\t\tthis.set( 'isCompact', false );\n\n\t\t/**\n\t\t * A (child) view containing {@link #items toolbar items}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ItemsView}\n\t\t */\n\t\tthis.itemsView = new ItemsView( locale );\n\n\t\t/**\n\t\t * A top–level collection aggregating building blocks of the toolbar.\n\t\t *\n\t\t *\t┌───────────────── ToolbarView ─────────────────┐\n\t\t *\t| ┌──────────────── #children ────────────────┐ |\n\t\t *\t| |   ┌──────────── #itemsView ───────────┐   | |\n\t\t *\t| |   | [ item1 ] [ item2 ] ... [ itemN ] |   | |\n\t\t *\t| |   └──────────────────────────────────-┘   | |\n\t\t *\t| └───────────────────────────────────────────┘ |\n\t\t *\t└───────────────────────────────────────────────┘\n\t\t *\n\t\t * By default, it contains the {@link #itemsView} but it can be extended with additional\n\t\t * UI elements when necessary.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\t\tthis.children.add( this.itemsView );\n\n\t\t/**\n\t\t * A collection of {@link #items} that take part in the focus cycling\n\t\t * (i.e. navigation using the keyboard). Usually, it contains a subset of {@link #items} with\n\t\t * some optional UI elements that also belong to the toolbar and should be focusable\n\t\t * by the user.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.focusables = this.createCollection();\n\n\t\t/**\n\t\t * Controls the orientation of toolbar items. Only available when\n\t\t * {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull dynamic items grouping}\n\t\t * is **disabled**.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isVertical\n\t\t */\n\n\t\t/**\n\t\t * Helps cycling over {@link #focusables focusable items} in the toolbar.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate toolbar items backwards using the arrow[left,up] keys.\n\t\t\t\tfocusPrevious: [ 'arrowleft', 'arrowup' ],\n\n\t\t\t\t// Navigate toolbar items forwards using the arrow[right,down] keys.\n\t\t\t\tfocusNext: [ 'arrowright', 'arrowdown' ]\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-toolbar',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isCompact', 'ck-toolbar_compact' )\n\t\t\t\t],\n\t\t\t\trole: 'toolbar',\n\t\t\t\t'aria-label': bind.to( 'ariaLabel' ),\n\t\t\t\tstyle: {\n\t\t\t\t\tmaxWidth: bind.to( 'maxWidth' )\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tchildren: this.children,\n\n\t\t\ton: {\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/206\n\t\t\t\tmousedown: preventDefault( this )\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * An instance of the active toolbar behavior that shapes its look and functionality.\n\t\t *\n\t\t * See {@link module:ui/toolbar/toolbarview~ToolbarBehavior} to learn more.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarBehavior}\n\t\t */\n\t\tthis._behavior = this.options.shouldGroupWhenFull ? new DynamicGrouping( this ) : new StaticLayout( this );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Children added before rendering should be known to the #focusTracker.\n\t\tfor ( const item of this.items ) {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t}\n\n\t\tthis.items.on( 'add', ( evt, item ) => {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t} );\n\n\t\tthis.items.on( 'remove', ( evt, item ) => {\n\t\t\tthis.focusTracker.remove( item.element );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\tthis._behavior.render( this );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tthis._behavior.destroy();\n\n\t\treturn super.destroy();\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link #focusables}.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Focuses the last focusable in {@link #focusables}.\n\t */\n\tfocusLast() {\n\t\tthis._focusCycler.focusLast();\n\t}\n\n\t/**\n\t * A utility that expands the plain toolbar configuration into\n\t * {@link module:ui/toolbar/toolbarview~ToolbarView#items} using a given component factory.\n\t *\n\t * @param {Array.<String>} config The toolbar items configuration.\n\t * @param {module:ui/componentfactory~ComponentFactory} factory A factory producing toolbar items.\n\t */\n\tfillFromConfig( config, factory ) {\n\t\tconfig.map( name => {\n\t\t\tif ( name == '|' ) {\n\t\t\t\tthis.items.add( new ToolbarSeparatorView() );\n\t\t\t} else if ( factory.has( name ) ) {\n\t\t\t\tthis.items.add( factory.create( name ) );\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * There was a problem processing the configuration of the toolbar. The item with the given\n\t\t\t\t * name does not exist so it was omitted when rendering the toolbar.\n\t\t\t\t *\n\t\t\t\t * This warning usually shows up when the {@link module:core/plugin~Plugin} which is supposed\n\t\t\t\t * to provide a toolbar item has not been loaded or there is a typo in the configuration.\n\t\t\t\t *\n\t\t\t\t * Make sure the plugin responsible for this toolbar item is loaded and the toolbar configuration\n\t\t\t\t * is correct, e.g. {@link module:basic-styles/bold~Bold} is loaded for the `'bold'` toolbar item.\n\t\t\t\t *\n\t\t\t\t * You can use the following snippet to retrieve all available toolbar items:\n\t\t\t\t *\n\t\t\t\t *\t\tArray.from( editor.ui.componentFactory.names() );\n\t\t\t\t *\n\t\t\t\t * @error toolbarview-item-unavailable\n\t\t\t\t * @param {String} name The name of the component.\n\t\t\t\t */\n\t\t\t\tconsole.warn( attachLinkToDocumentation(\n\t\t\t\t\t'toolbarview-item-unavailable: The requested toolbar item is unavailable.' ), { name } );\n\t\t\t}\n\t\t} );\n\t}\n}\n\n/**\n * An inner block of the {@link module:ui/toolbar/toolbarview~ToolbarView} hosting its\n * {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\n *\n * @private\n * @extends module:ui/view~View\n */\nclass ItemsView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * A collection of items (buttons, dropdowns, etc.).\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-toolbar__items'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n}\n\n/**\n * A toolbar behavior that makes it static and unresponsive to the changes of the environment.\n * At the same time, it also makes it possible to display a toolbar with a vertical layout\n * using the {@link module:ui/toolbar/toolbarview~ToolbarView#isVertical} property.\n *\n * @private\n * @implements module:ui/toolbar/toolbarview~ToolbarBehavior\n */\nclass StaticLayout {\n\t/**\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~StaticLayout} toolbar\n\t * behavior.\n\t *\n\t * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar that this behavior\n\t * is added to.\n\t */\n\tconstructor( view ) {\n\t\tconst bind = view.bindTemplate;\n\n\t\t// Static toolbar can be vertical when needed.\n\t\tview.set( 'isVertical', false );\n\n\t\t// 1:1 pass–through binding, all ToolbarView#items are visible.\n\t\tview.itemsView.children.bindTo( view.items ).using( item => item );\n\n\t\t// 1:1 pass–through binding, all ToolbarView#items are focusable.\n\t\tview.focusables.bindTo( view.items ).using( item => item );\n\n\t\tview.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t// When vertical, the toolbar has an additional CSS class.\n\t\t\t\t\tbind.if( 'isVertical', 'ck-toolbar_vertical' )\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {}\n}\n\n/**\n * A toolbar behavior that makes the items respond to changes in the geometry.\n *\n * In a nutshell, it groups {@link module:ui/toolbar/toolbarview~ToolbarView#items}\n * that do not fit visually into a single row of the toolbar (due to limited space).\n * Items that do not fit are aggregated in a dropdown displayed at the end of the toolbar.\n *\n *\t┌──────────────────────────────────────── ToolbarView ──────────────────────────────────────────┐\n *\t| ┌─────────────────────────────────────── #children ─────────────────────────────────────────┐ |\n *\t| |   ┌─────── #itemsView ────────┐ ┌──────────────────────┐ ┌── #groupedItemsDropdown ───┐   | |\n *\t| |   |       #ungroupedItems     | | ToolbarSeparatorView | |        #groupedItems       |   | |\n *\t| |   └──────────────────────────-┘ └──────────────────────┘ └────────────────────────────┘   | |\n *\t| |                                  \\---------- only when toolbar items overflow --------/    | |\n *\t| └───────────────────────────────────────────────────────────────────────────────────────────┘ |\n *\t└───────────────────────────────────────────────────────────────────────────────────────────────┘\n *\n * @private\n * @implements module:ui/toolbar/toolbarview~ToolbarBehavior\n */\nclass DynamicGrouping {\n\t/**\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~DynamicGrouping} toolbar\n\t * behavior.\n\t *\n\t * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar that this behavior\n\t * is added to.\n\t */\n\tconstructor( view ) {\n\t\t/**\n\t\t * A collection of toolbar children.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.viewChildren = view.children;\n\n\t\t/**\n\t\t * A collection of focusable toolbar elements.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.viewFocusables = view.focusables;\n\n\t\t/**\n\t\t * A view containing toolbar items.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ItemsView}\n\t\t */\n\t\tthis.viewItemsView = view.itemsView;\n\n\t\t/**\n\t\t * Toolbar focus tracker.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.viewFocusTracker = view.focusTracker;\n\n\t\t/**\n\t\t * Toolbar locale.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/locale~Locale}\n\t\t */\n\t\tthis.viewLocale = view.locale;\n\n\t\t/**\n\t\t * Toolbar element.\n\t\t *\n\t\t * @readonly\n\t\t * @member {HTMLElement} #viewElement\n\t\t */\n\n\t\t/**\n\t\t * A subset of toolbar {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\n\t\t * Aggregates items that fit into a single row of the toolbar and were not {@link #groupedItems grouped}\n\t\t * into a {@link #groupedItemsDropdown dropdown}. Items of this collection are displayed in the\n\t\t * {@link module:ui/toolbar/toolbarview~ToolbarView#itemsView}.\n\t\t *\n\t\t * When none of the {@link module:ui/toolbar/toolbarview~ToolbarView#items} were grouped, it\n\t\t * matches the {@link module:ui/toolbar/toolbarview~ToolbarView#items} collection in size and order.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.ungroupedItems = view.createCollection();\n\n\t\t/**\n\t\t * A subset of toolbar {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\n\t\t * A collection of the toolbar items that do not fit into a single row of the toolbar.\n\t\t * Grouped items are displayed in a dedicated {@link #groupedItemsDropdown dropdown}.\n\t\t *\n\t\t * When none of the {@link module:ui/toolbar/toolbarview~ToolbarView#items} were grouped,\n\t\t * this collection is empty.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.groupedItems = view.createCollection();\n\n\t\t/**\n\t\t * The dropdown that aggregates {@link #groupedItems grouped items} that do not fit into a single\n\t\t * row of the toolbar. It is displayed on demand as the last of\n\t\t * {@link module:ui/toolbar/toolbarview~ToolbarView#children toolbar children} and offers another\n\t\t * (nested) toolbar which displays items that would normally overflow.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/dropdown/dropdownview~DropdownView}\n\t\t */\n\t\tthis.groupedItemsDropdown = this._createGroupedItemsDropdown();\n\n\t\t/**\n\t\t * An instance of the resize observer that helps dynamically determine the geometry of the toolbar\n\t\t * and manage items that do not fit into a single row.\n\t\t *\n\t\t * **Note:** Created in {@link #_enableGroupingOnResize}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/dom/resizeobserver~ResizeObserver}\n\t\t */\n\t\tthis.resizeObserver = null;\n\n\t\t/**\n\t\t * A cached value of the horizontal padding style used by {@link #_updateGrouping}\n\t\t * to manage the {@link module:ui/toolbar/toolbarview~ToolbarView#items} that do not fit into\n\t\t * a single toolbar line. This value can be reused between updates because it is unlikely that\n\t\t * the padding will change and re–using `Window.getComputedStyle()` is expensive.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n\t\tthis.cachedPadding = null;\n\n\t\t/**\n\t\t * A flag indicating that an items grouping update has been queued (e.g. due to the toolbar being visible)\n\t\t * and should be executed immediately the next time the toolbar shows up.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.shouldUpdateGroupingOnNextResize = false;\n\n\t\t// Only those items that were not grouped are visible to the user.\n\t\tview.itemsView.children.bindTo( this.ungroupedItems ).using( item => item );\n\n\t\t// Make sure all #items visible in the main space of the toolbar are \"focuscycleable\".\n\t\tthis.ungroupedItems.on( 'add', this._updateFocusCycleableItems.bind( this ) );\n\t\tthis.ungroupedItems.on( 'remove', this._updateFocusCycleableItems.bind( this ) );\n\n\t\t// Make sure the #groupedItemsDropdown is also included in cycling when it appears.\n\t\tview.children.on( 'add', this._updateFocusCycleableItems.bind( this ) );\n\t\tview.children.on( 'remove', this._updateFocusCycleableItems.bind( this ) );\n\n\t\t// ToolbarView#items is dynamic. When an item is added, it should be automatically\n\t\t// represented in either grouped or ungrouped items at the right index.\n\t\t// In other words #items == concat( #ungroupedItems, #groupedItems )\n\t\t// (in length and order).\n\t\tview.items.on( 'add', ( evt, item, index ) => {\n\t\t\tif ( index > this.ungroupedItems.length ) {\n\t\t\t\tthis.groupedItems.add( item, index - this.ungroupedItems.length );\n\t\t\t} else {\n\t\t\t\tthis.ungroupedItems.add( item, index );\n\t\t\t}\n\n\t\t\t// When a new ungrouped item joins in and lands in #ungroupedItems, there's a chance it causes\n\t\t\t// the toolbar to overflow.\n\t\t\tthis._updateGrouping();\n\t\t} );\n\n\t\t// When an item is removed from ToolbarView#items, it should be automatically\n\t\t// removed from either grouped or ungrouped items.\n\t\tview.items.on( 'remove', ( evt, item, index ) => {\n\t\t\tif ( index > this.ungroupedItems.length ) {\n\t\t\t\tthis.groupedItems.remove( item );\n\t\t\t} else {\n\t\t\t\tthis.ungroupedItems.remove( item );\n\t\t\t}\n\n\t\t\t// Whether removed from grouped or ungrouped items, there is a chance\n\t\t\t// some new space is available and we could do some ungrouping.\n\t\t\tthis._updateGrouping();\n\t\t} );\n\n\t\tview.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t// To group items dynamically, the toolbar needs a dedicated CSS class.\n\t\t\t\t\t'ck-toolbar_grouping'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Enables dynamic items grouping based on the dimensions of the toolbar.\n\t *\n\t * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar that this behavior\n\t * is added to.\n\t */\n\trender( view ) {\n\t\tthis.viewElement = view.element;\n\n\t\tthis._enableGroupingOnResize();\n\t\tthis._enableGroupingOnMaxWidthChange( view );\n\t}\n\n\t/**\n\t * Cleans up the internals used by this behavior.\n\t */\n\tdestroy() {\n\t\t// The dropdown may not be in ToolbarView#children at the moment of toolbar destruction\n\t\t// so let's make sure it's actually destroyed along with the toolbar.\n\t\tthis.groupedItemsDropdown.destroy();\n\n\t\tthis.resizeObserver.destroy();\n\t}\n\n\t/**\n\t * When called, it will check if any of the {@link #ungroupedItems} do not fit into a single row of the toolbar,\n\t * and it will move them to the {@link #groupedItems} when it happens.\n\t *\n\t * At the same time, it will also check if there is enough space in the toolbar for the first of the\n\t * {@link #groupedItems} to be returned back to {@link #ungroupedItems} and still fit into a single row\n\t * without the toolbar wrapping.\n\t *\n\t * @protected\n\t */\n\t_updateGrouping() {\n\t\t// Do no grouping–related geometry analysis when the toolbar is detached from visible DOM,\n\t\t// for instance before #render(), or after render but without a parent or a parent detached\n\t\t// from DOM. DOMRects won't work anyway and there will be tons of warning in the console and\n\t\t// nothing else. This happens, for instance, when the toolbar is detached from DOM and\n\t\t// some logic adds or removes its #items.\n\t\tif ( !this.viewElement.ownerDocument.body.contains( this.viewElement ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not update grouping when the element is invisible. Such toolbar has DOMRect filled with zeros\n\t\t// and that would cause all items to be grouped. Instead, queue the grouping so it runs next time\n\t\t// the toolbar is visible (the next ResizeObserver callback execution). This is handy because\n\t\t// the grouping could be caused by increasing the #maxWidth when the toolbar was invisible and the next\n\t\t// time it shows up, some items could actually be ungrouped (https://github.com/ckeditor/ckeditor5/issues/6575).\n\t\tif ( !this.viewElement.offsetParent ) {\n\t\t\tthis.shouldUpdateGroupingOnNextResize = true;\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet wereItemsGrouped;\n\n\t\t// Group #items as long as some wrap to the next row. This will happen, for instance,\n\t\t// when the toolbar is getting narrow and there is not enough space to display all items in\n\t\t// a single row.\n\t\twhile ( this._areItemsOverflowing ) {\n\t\t\tthis._groupLastItem();\n\n\t\t\twereItemsGrouped = true;\n\t\t}\n\n\t\t// If none were grouped now but there were some items already grouped before,\n\t\t// then, what the hell, maybe let's see if some of them can be ungrouped. This happens when,\n\t\t// for instance, the toolbar is stretching and there's more space in it than before.\n\t\tif ( !wereItemsGrouped && this.groupedItems.length ) {\n\t\t\t// Ungroup items as long as none are overflowing or there are none to ungroup left.\n\t\t\twhile ( this.groupedItems.length && !this._areItemsOverflowing ) {\n\t\t\t\tthis._ungroupFirstItem();\n\t\t\t}\n\n\t\t\t// If the ungrouping ended up with some item wrapping to the next row,\n\t\t\t// put it back to the group toolbar (\"undo the last ungroup\"). We don't know whether\n\t\t\t// an item will wrap or not until we ungroup it (that's a DOM/CSS thing) so this\n\t\t\t// clean–up is vital for the algorithm.\n\t\t\tif ( this._areItemsOverflowing ) {\n\t\t\t\tthis._groupLastItem();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` when {@link module:ui/toolbar/toolbarview~ToolbarView#element} children visually overflow,\n\t * for instance if the toolbar is narrower than its members. Returns `false` otherwise.\n\t *\n\t * @private\n\t * @type {Boolean}\n\t */\n\tget _areItemsOverflowing() {\n\t\t// An empty toolbar cannot overflow.\n\t\tif ( !this.ungroupedItems.length ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst element = this.viewElement;\n\t\tconst uiLanguageDirection = this.viewLocale.uiLanguageDirection;\n\t\tconst lastChildRect = new Rect( element.lastChild );\n\t\tconst toolbarRect = new Rect( element );\n\n\t\tif ( !this.cachedPadding ) {\n\t\t\tconst computedStyle = global.window.getComputedStyle( element );\n\t\t\tconst paddingProperty = uiLanguageDirection === 'ltr' ? 'paddingRight' : 'paddingLeft';\n\n\t\t\t// parseInt() is essential because of quirky floating point numbers logic and DOM.\n\t\t\t// If the padding turned out too big because of that, the grouped items dropdown would\n\t\t\t// always look (from the Rect perspective) like it overflows (while it's not).\n\t\t\tthis.cachedPadding = Number.parseInt( computedStyle[ paddingProperty ] );\n\t\t}\n\n\t\tif ( uiLanguageDirection === 'ltr' ) {\n\t\t\treturn lastChildRect.right > toolbarRect.right - this.cachedPadding;\n\t\t} else {\n\t\t\treturn lastChildRect.left < toolbarRect.left + this.cachedPadding;\n\t\t}\n\t}\n\n\t/**\n\t * Enables the functionality that prevents {@link #ungroupedItems} from overflowing (wrapping to the next row)\n\t * upon resize when there is little space available. Instead, the toolbar items are moved to the\n\t * {@link #groupedItems} collection and displayed in a dropdown at the end of the row (which has its own nested toolbar).\n\t *\n\t * When called, the toolbar will automatically analyze the location of its {@link #ungroupedItems} and \"group\"\n\t * them in the dropdown if necessary. It will also observe the browser window for size changes in\n\t * the future and respond to them by grouping more items or reverting already grouped back, depending\n\t * on the visual space available.\n\t *\n\t * @private\n\t */\n\t_enableGroupingOnResize() {\n\t\tlet previousWidth;\n\n\t\t// TODO: Consider debounce.\n\t\tthis.resizeObserver = new ResizeObserver( this.viewElement, entry => {\n\t\t\tif ( !previousWidth || previousWidth !== entry.contentRect.width || this.shouldUpdateGroupingOnNextResize ) {\n\t\t\t\tthis.shouldUpdateGroupingOnNextResize = false;\n\n\t\t\t\tthis._updateGrouping();\n\n\t\t\t\tpreviousWidth = entry.contentRect.width;\n\t\t\t}\n\t\t} );\n\n\t\tthis._updateGrouping();\n\t}\n\n\t/**\n\t * Enables the grouping functionality, just like {@link #_enableGroupingOnResize} but the difference is that\n\t * it listens to the changes of {@link module:ui/toolbar/toolbarview~ToolbarView#maxWidth} instead.\n\t *\n\t * @private\n\t */\n\t_enableGroupingOnMaxWidthChange( view ) {\n\t\tview.on( 'change:maxWidth', () => {\n\t\t\tthis._updateGrouping();\n\t\t} );\n\t}\n\n\t/**\n\t * When called, it will remove the last item from {@link #ungroupedItems} and move it back\n\t * to the {@link #groupedItems} collection.\n\t *\n\t * The opposite of {@link #_ungroupFirstItem}.\n\t *\n\t * @private\n\t */\n\t_groupLastItem() {\n\t\tif ( !this.groupedItems.length ) {\n\t\t\tthis.viewChildren.add( new ToolbarSeparatorView() );\n\t\t\tthis.viewChildren.add( this.groupedItemsDropdown );\n\t\t\tthis.viewFocusTracker.add( this.groupedItemsDropdown.element );\n\t\t}\n\n\t\tthis.groupedItems.add( this.ungroupedItems.remove( this.ungroupedItems.last ), 0 );\n\t}\n\n\t/**\n\t * Moves the very first item belonging to {@link #groupedItems} back\n\t * to the {@link #ungroupedItems} collection.\n\t *\n\t * The opposite of {@link #_groupLastItem}.\n\t *\n\t * @private\n\t */\n\t_ungroupFirstItem() {\n\t\tthis.ungroupedItems.add( this.groupedItems.remove( this.groupedItems.first ) );\n\n\t\tif ( !this.groupedItems.length ) {\n\t\t\tthis.viewChildren.remove( this.groupedItemsDropdown );\n\t\t\tthis.viewChildren.remove( this.viewChildren.last );\n\t\t\tthis.viewFocusTracker.remove( this.groupedItemsDropdown.element );\n\t\t}\n\t}\n\n\t/**\n\t * Creates the {@link #groupedItemsDropdown} that hosts the members of the {@link #groupedItems}\n\t * collection when there is not enough space in the toolbar to display all items in a single row.\n\t *\n\t * @private\n\t * @returns {module:ui/dropdown/dropdownview~DropdownView}\n\t */\n\t_createGroupedItemsDropdown() {\n\t\tconst locale = this.viewLocale;\n\t\tconst t = locale.t;\n\t\tconst dropdown = createDropdown( locale );\n\n\t\tdropdown.class = 'ck-toolbar__grouped-dropdown';\n\n\t\t// Make sure the dropdown never sticks out to the left/right. It should be under the main toolbar.\n\t\t// (https://github.com/ckeditor/ckeditor5/issues/5608)\n\t\tdropdown.panelPosition = locale.uiLanguageDirection === 'ltr' ? 'sw' : 'se';\n\n\t\taddToolbarToDropdown( dropdown, [] );\n\n\t\tdropdown.buttonView.set( {\n\t\t\tlabel: t( 'Show more items' ),\n\t\t\ttooltip: true,\n\t\t\ticon: verticalDotsIcon\n\t\t} );\n\n\t\t// 1:1 pass–through binding.\n\t\tdropdown.toolbarView.items.bindTo( this.groupedItems ).using( item => item );\n\n\t\treturn dropdown;\n\t}\n\n\t/**\n\t * Updates the {@link module:ui/toolbar/toolbarview~ToolbarView#focusables focus–cycleable items}\n\t * collection so it represents the up–to–date state of the UI from the perspective of the user.\n\t *\n\t * For instance, the {@link #groupedItemsDropdown} can show up and hide but when it is visible,\n\t * it must be subject to focus cycling in the toolbar.\n\t *\n\t * See the {@link module:ui/toolbar/toolbarview~ToolbarView#focusables collection} documentation\n\t * to learn more about the purpose of this method.\n\t *\n\t * @private\n\t */\n\t_updateFocusCycleableItems() {\n\t\tthis.viewFocusables.clear();\n\n\t\tthis.ungroupedItems.map( item => {\n\t\t\tthis.viewFocusables.add( item );\n\t\t} );\n\n\t\tif ( this.groupedItems.length ) {\n\t\t\tthis.viewFocusables.add( this.groupedItemsDropdown );\n\t\t}\n\t}\n}\n\n/**\n * Options passed to the {@link module:ui/toolbar/toolbarview~ToolbarView#constructor} of the toolbar.\n *\n * @interface module:ui/toolbar/toolbarview~ToolbarOptions\n */\n\n/**\n * When set to `true`, the toolbar will automatically group {@link module:ui/toolbar/toolbarview~ToolbarView#items} that\n * would normally wrap to the next line when there is not enough space to display them in a single row, for\n * instance, if the parent container of the toolbar is narrow.\n *\n * Also see: {@link module:ui/toolbar/toolbarview~ToolbarView#maxWidth}.\n *\n * @member {Boolean} module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull\n */\n\n/**\n * A class interface defining the behavior of the {@link module:ui/toolbar/toolbarview~ToolbarView}.\n *\n * Toolbar behaviors extend its look and functionality and have an impact on the\n * {@link module:ui/toolbar/toolbarview~ToolbarView#element} template or\n * {@link module:ui/toolbar/toolbarview~ToolbarView#render rendering}. They can be enabled\n * conditionally, e.g. depending on the configuration of the toolbar.\n *\n * @private\n * @interface module:ui/toolbar/toolbarview~ToolbarBehavior\n */\n\n/**\n * Creates a new toolbar behavior instance.\n *\n * The instance is created in the {@link module:ui/toolbar/toolbarview~ToolbarView#constructor} of the toolbar.\n * This is the right place to extend the {@link module:ui/toolbar/toolbarview~ToolbarView#template} of\n * the toolbar, define extra toolbar properties, etc.\n *\n * @method #constructor\n * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar that this behavior is added to.\n */\n\n/**\n * A method called after the toolbar has been {@link module:ui/toolbar/toolbarview~ToolbarView#render rendered}.\n * It can be used to, for example, customize the behavior of the toolbar when its {@link module:ui/toolbar/toolbarview~ToolbarView#element}\n * is available.\n *\n * @readonly\n * @member {Function} #render\n * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar being rendered.\n */\n\n/**\n * A method called after the toolbar has been {@link module:ui/toolbar/toolbarview~ToolbarView#destroy destroyed}.\n * It allows cleaning up after the toolbar behavior, for instance, this is the right place to detach\n * event listeners, free up references, etc.\n *\n * @readonly\n * @member {Function} #destroy\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editor-classic/classiceditoruiview\n */\n\nimport BoxedEditorUIView from '@ckeditor/ckeditor5-ui/src/editorui/boxed/boxededitoruiview';\nimport InlineEditableUIView from '@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview';\nimport StickyPanelView from '@ckeditor/ckeditor5-ui/src/panel/sticky/stickypanelview';\nimport ToolbarView from '@ckeditor/ckeditor5-ui/src/toolbar/toolbarview';\n\nimport '../theme/classiceditor.css';\n\n/**\n * Classic editor UI view. Uses an inline editable and a sticky toolbar, all\n * enclosed in a boxed UI view.\n *\n * @extends module:ui/editorui/boxed/boxededitoruiview~BoxedEditorUIView\n */\nexport default class ClassicEditorUIView extends BoxedEditorUIView {\n\t/**\n\t * Creates an instance of the classic editor UI view.\n\t *\n\t * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t * @param {module:engine/view/view~View} editingView The editing view instance this view is related to.\n\t * @param {Object} [options={}] Configuration options fo the view instance.\n\t * @param {Boolean} [options.shouldToolbarGroupWhenFull] When set `true` enables automatic items grouping\n\t * in the main {@link module:editor-classic/classiceditoruiview~ClassicEditorUIView#toolbar toolbar}.\n\t * See {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull} to learn more.\n\t */\n\tconstructor( locale, editingView, options = {} ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Sticky panel view instance. This is a parent view of a {@link #toolbar}\n\t\t * that makes toolbar sticky.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/panel/sticky/stickypanelview~StickyPanelView}\n\t\t */\n\t\tthis.stickyPanel = new StickyPanelView( locale );\n\n\t\t/**\n\t\t * Toolbar view instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarView}\n\t\t */\n\t\tthis.toolbar = new ToolbarView( locale, {\n\t\t\tshouldGroupWhenFull: options.shouldToolbarGroupWhenFull\n\t\t} );\n\n\t\t/**\n\t\t * Editable UI view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/editableui/inline/inlineeditableuiview~InlineEditableUIView}\n\t\t */\n\t\tthis.editable = new InlineEditableUIView( locale, editingView );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Set toolbar as a child of a stickyPanel and makes toolbar sticky.\n\t\tthis.stickyPanel.content.add( this.toolbar );\n\n\t\tthis.top.add( this.stickyPanel );\n\t\tthis.main.add( this.editable );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * @module utils/dom/getdatafromelement\n */\n\n/**\n * Gets data from a given source element.\n *\n * @param {HTMLElement} el The element from which the data will be retrieved.\n * @returns {String} The data string.\n */\nexport default function getDataFromElement( el ) {\n\tif ( el instanceof HTMLTextAreaElement ) {\n\t\treturn el.value;\n\t}\n\n\treturn el.innerHTML;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editor-classic/classiceditor\n */\n\nimport Editor from '@ckeditor/ckeditor5-core/src/editor/editor';\nimport DataApiMixin from '@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin';\nimport ElementApiMixin from '@ckeditor/ckeditor5-core/src/editor/utils/elementapimixin';\nimport attachToForm from '@ckeditor/ckeditor5-core/src/editor/utils/attachtoform';\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\nimport ClassicEditorUI from './classiceditorui';\nimport ClassicEditorUIView from './classiceditoruiview';\nimport getDataFromElement from '@ckeditor/ckeditor5-utils/src/dom/getdatafromelement';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { isElement } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * The {@glink builds/guides/overview#classic-editor classic editor} implementation.\n * It uses an inline editable and a sticky toolbar, all enclosed in a boxed UI.\n * See the {@glink examples/builds/classic-editor demo}.\n *\n * In order to create a classic editor instance, use the static\n * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`} method.\n *\n * # Classic editor and classic build\n *\n * The classic editor can be used directly from source (if you installed the\n * [`@ckeditor/ckeditor5-editor-classic`](https://www.npmjs.com/package/@ckeditor/ckeditor5-editor-classic) package)\n * but it is also available in the {@glink builds/guides/overview#classic-editor classic build}.\n *\n * {@glink builds/guides/overview Builds} are ready-to-use editors with plugins bundled in. When using the editor from\n * source you need to take care of loading all plugins by yourself\n * (through the {@link module:core/editor/editorconfig~EditorConfig#plugins `config.plugins`} option).\n * Using the editor from source gives much better flexibility and allows easier customization.\n *\n * Read more about initializing the editor from source or as a build in\n * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}.\n *\n * @mixes module:core/editor/utils/dataapimixin~DataApiMixin\n * @mixes module:core/editor/utils/elementapimixin~ElementApiMixin\n * @implements module:core/editor/editorwithui~EditorWithUI\n * @extends module:core/editor/editor~Editor\n */\nexport default class ClassicEditor extends Editor {\n\t/**\n\t * Creates an instance of the classic editor.\n\t *\n\t * **Note:** do not use the constructor to create editor instances. Use the static\n\t * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`} method instead.\n\t *\n\t * @protected\n\t * @param {HTMLElement|String} sourceElementOrData The DOM element that will be the source for the created editor\n\t * or the editor's initial data. For more information see\n\t * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}.\n\t * @param {module:core/editor/editorconfig~EditorConfig} config The editor configuration.\n\t */\n\tconstructor( sourceElementOrData, config ) {\n\t\tsuper( config );\n\n\t\tif ( isElement( sourceElementOrData ) ) {\n\t\t\tthis.sourceElement = sourceElementOrData;\n\t\t}\n\n\t\tthis.data.processor = new HtmlDataProcessor( this.data.viewDocument );\n\n\t\tthis.model.document.createRoot();\n\n\t\tconst shouldToolbarGroupWhenFull = !this.config.get( 'toolbar.shouldNotGroupWhenFull' );\n\t\tconst view = new ClassicEditorUIView( this.locale, this.editing.view, {\n\t\t\tshouldToolbarGroupWhenFull\n\t\t} );\n\n\t\tthis.ui = new ClassicEditorUI( this, view );\n\n\t\tattachToForm( this );\n\t}\n\n\t/**\n\t * Destroys the editor instance, releasing all resources used by it.\n\t *\n\t * Updates the editor's source element with the data.\n\t *\n\t * @returns {Promise}\n\t */\n\tdestroy() {\n\t\tif ( this.sourceElement ) {\n\t\t\tthis.updateSourceElement();\n\t\t}\n\n\t\tthis.ui.destroy();\n\n\t\treturn super.destroy();\n\t}\n\n\t/**\n\t * Creates a new classic editor instance.\n\t *\n\t * There are three ways how the editor can be initialized.\n\t *\n\t * # Replacing a DOM element (and loading data from it)\n\t *\n\t * You can initialize the editor using an existing DOM element:\n\t *\n\t *\t\tClassicEditor\n\t *\t\t\t.create( document.querySelector( '#editor' ) )\n\t *\t\t\t.then( editor => {\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n\t *\t\t\t} )\n\t *\t\t\t.catch( err => {\n\t *\t\t\t\tconsole.error( err.stack );\n\t *\t\t\t} );\n\t *\n\t * The element's content will be used as the editor data and the element will be replaced by the editor UI.\n\t *\n\t * # Creating a detached editor\n\t *\n\t * Alternatively, you can initialize the editor by passing the initial data directly as a string.\n\t * In this case, the editor will render an element that must be inserted into the DOM:\n\t *\n\t *\t\tClassicEditor\n\t *\t\t\t.create( '<p>Hello world!</p>' )\n\t *\t\t\t.then( editor => {\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n\t *\n\t *\t\t\t\t// Initial data was provided so the editor UI element needs to be added manually to the DOM.\n\t *\t\t\t\tdocument.body.appendChild( editor.ui.element );\n\t *\t\t\t} )\n\t *\t\t\t.catch( err => {\n\t *\t\t\t\tconsole.error( err.stack );\n\t *\t\t\t} );\n\t *\n\t * This lets you dynamically append the editor to your web page whenever it is convenient for you. You may use this method if your\n\t * web page content is generated on the client side and the DOM structure is not ready at the moment when you initialize the editor.\n\t *\n\t * # Replacing a DOM element (and data provided in `config.initialData`)\n\t *\n\t * You can also mix these two ways by providing a DOM element to be used and passing the initial data through the configuration:\n\t *\n\t *\t\tClassicEditor\n\t *\t\t\t.create( document.querySelector( '#editor' ), {\n\t *\t\t\t\tinitialData: '<h2>Initial data</h2><p>Foo bar.</p>'\n\t *\t\t\t} )\n\t *\t\t\t.then( editor => {\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n\t *\t\t\t} )\n\t *\t\t\t.catch( err => {\n\t *\t\t\t\tconsole.error( err.stack );\n\t *\t\t\t} );\n\t *\n\t * This method can be used to initialize the editor on an existing element with the specified content in case if your integration\n\t * makes it difficult to set the content of the source element.\n\t *\n\t * Note that an error will be thrown if you pass the initial data both as the first parameter and also in the configuration.\n\t *\n\t * # Configuring the editor\n\t *\n\t * See the {@link module:core/editor/editorconfig~EditorConfig editor configuration documentation} to learn more about\n\t * customizing plugins, toolbar and more.\n\t *\n\t * # Using the editor from source\n\t *\n\t * The code samples listed in the previous sections of this documentation assume that you are using an\n\t * {@glink builds/guides/overview editor build} (for example – `@ckeditor/ckeditor5-build-classic`).\n\t *\n\t * If you want to use the classic editor from source (`@ckeditor/ckeditor5-editor-classic/src/classiceditor`),\n\t * you need to define the list of\n\t * {@link module:core/editor/editorconfig~EditorConfig#plugins plugins to be initialized} and\n\t * {@link module:core/editor/editorconfig~EditorConfig#toolbar toolbar items}. Read more about using the editor from\n\t * source in the {@glink builds/guides/integration/advanced-setup \"Advanced setup\" guide}.\n\t *\n\t * @param {HTMLElement|String} sourceElementOrData The DOM element that will be the source for the created editor\n\t * or the editor's initial data.\n\t *\n\t * If a DOM element is passed, its content will be automatically loaded to the editor upon initialization\n\t * and the {@link module:editor-classic/classiceditorui~ClassicEditorUI#element editor element} will replace the passed element\n\t * in the DOM (the original one will be hidden and the editor will be injected next to it).\n\t *\n\t * Moreover, the editor data will be set back to the original element once the editor is destroyed and when a form, in which\n\t * this element is contained, is submitted (if the original element is a `<textarea>`). This ensures seamless integration with native\n\t * web forms.\n\t *\n\t * If the initial data is passed, a detached editor will be created. In this case you need to insert it into the DOM manually.\n\t * It is available under the {@link module:editor-classic/classiceditorui~ClassicEditorUI#element `editor.ui.element`} property.\n\t *\n\t * @param {module:core/editor/editorconfig~EditorConfig} [config] The editor configuration.\n\t * @returns {Promise} A promise resolved once the editor is ready. The promise resolves with the created editor instance.\n\t */\n\tstatic create( sourceElementOrData, config = {} ) {\n\t\treturn new Promise( resolve => {\n\t\t\tconst editor = new this( sourceElementOrData, config );\n\n\t\t\tresolve(\n\t\t\t\teditor.initPlugins()\n\t\t\t\t\t.then( () => editor.ui.init( isElement( sourceElementOrData ) ? sourceElementOrData : null ) )\n\t\t\t\t\t.then( () => {\n\t\t\t\t\t\tif ( !isElement( sourceElementOrData ) && config.initialData ) {\n\t\t\t\t\t\t\t// Documented in core/editor/editorconfig.jdoc.\n\t\t\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t\t\t'editor-create-initial-data: ' +\n\t\t\t\t\t\t\t\t'The config.initialData option cannot be used together with initial data passed in Editor.create().',\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst initialData = config.initialData || getInitialData( sourceElementOrData );\n\n\t\t\t\t\t\treturn editor.data.init( initialData );\n\t\t\t\t\t} )\n\t\t\t\t\t.then( () => editor.fire( 'ready' ) )\n\t\t\t\t\t.then( () => editor )\n\t\t\t);\n\t\t} );\n\t}\n}\n\nmix( ClassicEditor, DataApiMixin );\nmix( ClassicEditor, ElementApiMixin );\n\nfunction getInitialData( sourceElementOrData ) {\n\treturn isElement( sourceElementOrData ) ? getDataFromElement( sourceElementOrData ) : sourceElementOrData;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/plugin\n */\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * The base class for CKEditor plugin classes.\n *\n * @implements module:core/plugin~PluginInterface\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * The editor instance.\n\t\t *\n\t\t * Note that most editors implement the {@link module:core/editor/editorwithui~EditorWithUI} interface in addition\n\t\t * to the base {@link module:core/editor/editor~Editor} interface. However, editors with an external UI\n\t\t * (i.e. Bootstrap-based) or a headless editor may not implement the {@link module:core/editor/editorwithui~EditorWithUI}\n\t\t * interface.\n\t\t *\n\t\t * Because of above, to make plugins more universal, it is recommended to split features into:\n\t\t *  - The \"editing\" part that only uses the {@link module:core/editor/editor~Editor} interface.\n\t\t *  - The \"UI\" part that uses both the {@link module:core/editor/editor~Editor} interface and\n\t\t *  the {@link module:core/editor/editorwithui~EditorWithUI} interface.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor} #editor\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * Flag indicating whether a plugin is enabled or disabled.\n\t\t * A disabled plugin will not transform text.\n\t\t *\n\t\t * Plugin can be simply disabled like that:\n\t\t *\n\t\t *\t\t// Disable the plugin so that no toolbars are visible.\n\t\t *\t\teditor.plugins.get( 'TextTransformation' ).isEnabled = false;\n\t\t *\n\t\t * You can also use {@link #forceDisabled} method.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #isEnabled\n\t\t */\n\t\tthis.set( 'isEnabled', true );\n\n\t\t/**\n\t\t * Holds identifiers for {@link #forceDisabled} mechanism.\n\t\t *\n\t\t * @type {Set.<String>}\n\t\t * @private\n\t\t */\n\t\tthis._disableStack = new Set();\n\t}\n\n\t/**\n\t * Disables the plugin.\n\t *\n\t * Plugin may be disabled by multiple features or algorithms (at once). When disabling a plugin, unique id should be passed\n\t * (e.g. feature name). The same identifier should be used when {@link #clearForceDisabled enabling back} the plugin.\n\t * The plugin becomes enabled only after all features {@link #clearForceDisabled enabled it back}.\n\t *\n\t * Disabling and enabling a plugin:\n\t *\n\t *\t\tplugin.isEnabled; // -> true\n\t *\t\tplugin.forceDisabled( 'MyFeature' );\n\t *\t\tplugin.isEnabled; // -> false\n\t *\t\tplugin.clearForceDisabled( 'MyFeature' );\n\t *\t\tplugin.isEnabled; // -> true\n\t *\n\t * Plugin disabled by multiple features:\n\t *\n\t *\t\tplugin.forceDisabled( 'MyFeature' );\n\t *\t\tplugin.forceDisabled( 'OtherFeature' );\n\t *\t\tplugin.clearForceDisabled( 'MyFeature' );\n\t *\t\tplugin.isEnabled; // -> false\n\t *\t\tplugin.clearForceDisabled( 'OtherFeature' );\n\t *\t\tplugin.isEnabled; // -> true\n\t *\n\t * Multiple disabling with the same identifier is redundant:\n\t *\n\t *\t\tplugin.forceDisabled( 'MyFeature' );\n\t *\t\tplugin.forceDisabled( 'MyFeature' );\n\t *\t\tplugin.clearForceDisabled( 'MyFeature' );\n\t *\t\tplugin.isEnabled; // -> true\n\t *\n\t * **Note:** some plugins or algorithms may have more complex logic when it comes to enabling or disabling certain plugins,\n\t * so the plugin might be still disabled after {@link #clearForceDisabled} was used.\n\t *\n\t * @param {String} id Unique identifier for disabling. Use the same id when {@link #clearForceDisabled enabling back} the plugin.\n\t */\n\tforceDisabled( id ) {\n\t\tthis._disableStack.add( id );\n\n\t\tif ( this._disableStack.size == 1 ) {\n\t\t\tthis.on( 'set:isEnabled', forceDisable, { priority: 'highest' } );\n\t\t\tthis.isEnabled = false;\n\t\t}\n\t}\n\n\t/**\n\t * Clears forced disable previously set through {@link #forceDisabled}. See {@link #forceDisabled}.\n\t *\n\t * @param {String} id Unique identifier, equal to the one passed in {@link #forceDisabled} call.\n\t */\n\tclearForceDisabled( id ) {\n\t\tthis._disableStack.delete( id );\n\n\t\tif ( this._disableStack.size == 0 ) {\n\t\t\tthis.off( 'set:isEnabled', forceDisable );\n\t\t\tthis.isEnabled = true;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get isContextPlugin() {\n\t\treturn false;\n\t}\n}\n\nmix( Plugin, ObservableMixin );\n\n/**\n * The base interface for CKEditor plugins.\n *\n * In its minimal form a plugin can be a simple function that accepts {@link module:core/editor/editor~Editor the editor}\n * as a parameter:\n *\n *\t\t// A simple plugin that enables a data processor.\n *\t\tfunction MyPlugin( editor ) {\n *\t\t\teditor.data.processor = new MyDataProcessor();\n *\t\t}\n *\n * In most cases however, you will want to inherit from the {@link module:core/plugin~Plugin} class which implements the\n * {@link module:utils/observablemixin~ObservableMixin} and is, therefore, more convenient:\n *\n *\t\tclass MyPlugin extends Plugin {\n *\t\t\tinit() {\n *\t\t\t\t// `listenTo()` and `editor` are available thanks to `Plugin`.\n *\t\t\t\t// By using `listenTo()` you will ensure that the listener is removed when\n *\t\t\t\t// the plugin is destroyed.\n *\t\t\t\tthis.listenTo( this.editor.data, 'ready', () => {\n *\t\t\t\t\t// Do something when the data is ready.\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n * The plugin can also implement methods (e.g. {@link module:core/plugin~PluginInterface#init `init()`} or\n * {@link module:core/plugin~PluginInterface#destroy `destroy()`}) which, when present, will be used to properly\n * initialize and destroy the plugin.\n *\n * **Note:** When defined as a plain function, the plugin acts as a constructor and will be\n * called in parallel with other plugins' {@link module:core/plugin~PluginInterface#constructor constructors}.\n * This means the code of that plugin will be executed **before** {@link module:core/plugin~PluginInterface#init `init()`} and\n * {@link module:core/plugin~PluginInterface#afterInit `afterInit()`} methods of other plugins and, for instance,\n * you cannot use it to extend other plugins' {@glink framework/guides/architecture/editing-engine#schema schema}\n * rules as they are defined later on during the `init()` stage.\n *\n * @interface PluginInterface\n */\n\n/**\n * Creates a new plugin instance. This is the first step of the plugin initialization.\n * See also {@link #init} and {@link #afterInit}.\n *\n * A plugin is always instantiated after its {@link module:core/plugin~PluginInterface.requires dependencies} and the\n * {@link #init} and {@link #afterInit} methods are called in the same order.\n *\n * Usually, you will want to put your plugin's initialization code in the {@link #init} method.\n * The constructor can be understood as \"before init\" and used in special cases, just like\n * {@link #afterInit} serves the special \"after init\" scenarios (e.g.the code which depends on other\n * plugins, but which does not {@link module:core/plugin~PluginInterface.requires explicitly require} them).\n *\n * @method #constructor\n * @param {module:core/editor/editor~Editor} editor\n */\n\n/**\n * An array of plugins required by this plugin.\n *\n * To keep the plugin class definition tight it is recommended to define this property as a static getter:\n *\n *\t\timport Image from './image.js';\n *\n *\t\texport default class ImageCaption {\n *\t\t\tstatic get requires() {\n *\t\t\t\treturn [ Image ];\n *\t\t\t}\n *\t\t}\n *\n * @static\n * @readonly\n * @member {Array.<Function>|undefined} module:core/plugin~PluginInterface.requires\n */\n\n/**\n * An optional name of the plugin. If set, the plugin will be available in\n * {@link module:core/plugincollection~PluginCollection#get} by its\n * name and its constructor. If not, then only by its constructor.\n *\n * The name should reflect the constructor name.\n *\n * To keep the plugin class definition tight, it is recommended to define this property as a static getter:\n *\n *\t\texport default class ImageCaption {\n *\t\t\tstatic get pluginName() {\n *\t\t\t\treturn 'ImageCaption';\n *\t\t\t}\n *\t\t}\n *\n * Note: The native `Function.name` property could not be used to keep the plugin name because\n * it will be mangled during code minification.\n *\n * Naming a plugin is necessary to enable removing it through the\n * {@link module:core/editor/editorconfig~EditorConfig#removePlugins `config.removePlugins`} option.\n *\n * @static\n * @readonly\n * @member {String|undefined} module:core/plugin~PluginInterface.pluginName\n */\n\n/**\n * The second stage (after plugin {@link #constructor}) of the plugin initialization.\n * Unlike the plugin constructor this method can be asynchronous.\n *\n * A plugin's `init()` method is called after its {@link module:core/plugin~PluginInterface.requires dependencies} are initialized,\n * so in the same order as the constructors of these plugins.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #init\n * @returns {null|Promise}\n */\n\n/**\n * The third (and last) stage of the plugin initialization. See also {@link #constructor} and {@link #init}.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #afterInit\n * @returns {null|Promise}\n */\n\n/**\n * Destroys the plugin.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #destroy\n * @returns {null|Promise}\n */\n\n/**\n * A flag which defines if a plugin is allowed or not allowed to be used directly by a {@link module:core/context~Context}.\n *\n * @static\n * @readonly\n * @member {Boolean} module:core/plugin~PluginInterface.isContextPlugin\n */\n\n/**\n * An array of loaded plugins.\n *\n * @typedef {Array.<module:core/plugin~PluginInterface>} module:core/plugin~LoadedPlugins\n */\n\n// Helper function that forces plugin to be disabled.\nfunction forceDisable( evt ) {\n\tevt.return = false;\n\tevt.stop();\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/datatransfer\n */\n\n/**\n * Facade over the native [`DataTransfer`](https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer) object.\n */\nexport default class DataTransfer {\n\tconstructor( nativeDataTransfer ) {\n\t\t/**\n\t\t * The array of files created from the native `DataTransfer#files` or `DataTransfer#items`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<File>} #files\n\t\t */\n\t\tthis.files = getFiles( nativeDataTransfer );\n\n\t\t/**\n\t\t * The native DataTransfer object.\n\t\t *\n\t\t * @private\n\t\t * @member {DataTransfer} #_native\n\t\t */\n\t\tthis._native = nativeDataTransfer;\n\t}\n\n\t/**\n\t * Returns an array of available native content types.\n\t *\n\t * @returns {Array.<String>}\n\t */\n\tget types() {\n\t\treturn this._native.types;\n\t}\n\n\t/**\n\t * Gets data from the data transfer by its mime type.\n\t *\n\t *\t\tdataTransfer.getData( 'text/plain' );\n\t *\n\t * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\n\t * @returns {String}\n\t */\n\tgetData( type ) {\n\t\treturn this._native.getData( type );\n\t}\n\n\t/**\n\t * Sets data in the data transfer.\n\t *\n\t * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\n\t * @param {String} data\n\t */\n\tsetData( type, data ) {\n\t\tthis._native.setData( type, data );\n\t}\n}\n\nfunction getFiles( nativeDataTransfer ) {\n\t// DataTransfer.files and items are Array-like and might not have an iterable interface.\n\tconst files = nativeDataTransfer.files ? Array.from( nativeDataTransfer.files ) : [];\n\tconst items = nativeDataTransfer.items ? Array.from( nativeDataTransfer.items ) : [];\n\n\tif ( files.length ) {\n\t\treturn files;\n\t}\n\t// Chrome have empty DataTransfer.files, but let get files through the items interface.\n\treturn items\n\t\t.filter( item => item.kind === 'file' )\n\t\t.map( item => item.getAsFile() );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/clipboardobserver\n */\n\nimport DomEventObserver from '@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver';\nimport EventInfo from '@ckeditor/ckeditor5-utils/src/eventinfo';\nimport DataTransfer from './datatransfer';\n\n/**\n * Clipboard events observer.\n *\n * Fires the following events:\n *\n * * {@link module:engine/view/document~Document#event:clipboardInput}\n * * {@link module:engine/view/document~Document#event:dragover}\n * * {@link module:engine/view/document~Document#event:drop}\n * * {@link module:engine/view/document~Document#event:paste}\n * * {@link module:engine/view/document~Document#event:copy}\n * * {@link module:engine/view/document~Document#event:cut}\n *\n * Note that this observer is not available by default (it is not added by the engine).\n * To make it available it needs to be added to {@link module:engine/view/document~Document} by\n * the {@link module:engine/view/view~View#addObserver `View#addObserver()`} method. You can also load the\n * {@link module:clipboard/clipboard~Clipboard} plugin which adds this observer automatically (because it uses it).\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class ClipboardObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tconst viewDocument = this.document;\n\n\t\tthis.domEventType = [ 'paste', 'copy', 'cut', 'drop', 'dragover' ];\n\n\t\tthis.listenTo( viewDocument, 'paste', handleInput, { priority: 'low' } );\n\t\tthis.listenTo( viewDocument, 'drop', handleInput, { priority: 'low' } );\n\n\t\tfunction handleInput( evt, data ) {\n\t\t\tdata.preventDefault();\n\n\t\t\tconst targetRanges = data.dropRange ? [ data.dropRange ] : Array.from( viewDocument.selection.getRanges() );\n\n\t\t\tconst eventInfo = new EventInfo( viewDocument, 'clipboardInput' );\n\n\t\t\tviewDocument.fire( eventInfo, {\n\t\t\t\tdataTransfer: data.dataTransfer,\n\t\t\t\ttargetRanges\n\t\t\t} );\n\n\t\t\t// If CKEditor handled the input, do not bubble the original event any further.\n\t\t\t// This helps external integrations recognize that fact and act accordingly.\n\t\t\t// https://github.com/ckeditor/ckeditor5-upload/issues/92\n\t\t\tif ( eventInfo.stop.called ) {\n\t\t\t\tdata.stopPropagation();\n\t\t\t}\n\t\t}\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tconst evtData = {\n\t\t\tdataTransfer: new DataTransfer( domEvent.clipboardData ? domEvent.clipboardData : domEvent.dataTransfer )\n\t\t};\n\n\t\tif ( domEvent.type == 'drop' ) {\n\t\t\tevtData.dropRange = getDropViewRange( this.view, domEvent );\n\t\t}\n\n\t\tthis.fire( domEvent.type, domEvent, evtData );\n\t}\n}\n\nfunction getDropViewRange( view, domEvent ) {\n\tconst domDoc = domEvent.target.ownerDocument;\n\tconst x = domEvent.clientX;\n\tconst y = domEvent.clientY;\n\tlet domRange;\n\n\t// Webkit & Blink.\n\tif ( domDoc.caretRangeFromPoint && domDoc.caretRangeFromPoint( x, y ) ) {\n\t\tdomRange = domDoc.caretRangeFromPoint( x, y );\n\t}\n\t// FF.\n\telse if ( domEvent.rangeParent ) {\n\t\tdomRange = domDoc.createRange();\n\t\tdomRange.setStart( domEvent.rangeParent, domEvent.rangeOffset );\n\t\tdomRange.collapse( true );\n\t}\n\n\tif ( domRange ) {\n\t\treturn view.domConverter.domRangeToView( domRange );\n\t} else {\n\t\treturn view.document.selection.getFirstRange();\n\t}\n}\n\n/**\n * Fired as a continuation of {@link #event:paste} and {@link #event:drop} events.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#input-pipeline \"clipboard input pipeline\"}.\n *\n * Fired with a `dataTransfer` which comes from the clipboard and which content should be processed\n * and inserted into the editor.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardInput\n * @param {Object} data Event data.\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\n * @param {Array.<module:engine/view/range~Range>} data.targetRanges Ranges which are the target of the operation\n * (usually – into which the content should be inserted).\n * If clipboard input was triggered by a paste operation, then these are the selection ranges. If by a drop operation,\n * then it's the drop position (which can be different than the selection at the moment of drop).\n */\n\n/**\n * Fired when user drags content over one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:dragover\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user dropped content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:drop\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n * @param {module:engine/view/range~Range} dropRange The position into which the content is dropped.\n */\n\n/**\n * Fired when user pasted content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:paste\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user copied content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:copy\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user cut content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:cut\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:paste},\n * {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut} events.\n *\n * In order to access clipboard data use `dataTransfer` property.\n *\n * @class module:clipboard/clipboardobserver~ClipboardEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboardobserver~ClipboardEventData#dataTransfer\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/plaintexttohtml\n */\n\n/**\n * Converts plain text to its HTML-ized version.\n *\n * @param {String} text The plain text to convert.\n * @returns {String} HTML generated from the plain text.\n */\nexport default function plainTextToHtml( text ) {\n\ttext = text\n\t\t// Encode <>.\n\t\t.replace( /</g, '&lt;' )\n\t\t.replace( />/g, '&gt;' )\n\t\t// Creates paragraphs for every line breaks.\n\t\t.replace( /\\n/g, '</p><p>' )\n\t\t// Preserve trailing spaces (only the first and last one – the rest is handled below).\n\t\t.replace( /^\\s/, '&nbsp;' )\n\t\t.replace( /\\s$/, '&nbsp;' )\n\t\t// Preserve other subsequent spaces now.\n\t\t.replace( /\\s\\s/g, ' &nbsp;' );\n\n\tif ( text.indexOf( '</p><p>' ) > -1 ) {\n\t\t// If we created paragraphs above, add the trailing ones.\n\t\ttext = `<p>${ text }</p>`;\n\t}\n\n\t// TODO:\n\t// * What about '\\nfoo' vs ' foo'?\n\n\treturn text;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/normalizeclipboarddata\n */\n\n/**\n * Removes some popular browser quirks out of the clipboard data (HTML).\n *\n * @param {String} data The HTML data to normalize.\n * @returns {String} Normalized HTML.\n */\nexport default function normalizeClipboardData( data ) {\n\treturn data\n\t\t.replace( /<span(?: class=\"Apple-converted-space\"|)>(\\s+)<\\/span>/g, ( fullMatch, spaces ) => {\n\t\t\t// Handle the most popular and problematic case when even a single space becomes an nbsp;.\n\t\t\t// Decode those to normal spaces. Read more in https://github.com/ckeditor/ckeditor5-clipboard/issues/2.\n\t\t\tif ( spaces.length == 1 ) {\n\t\t\t\treturn ' ';\n\t\t\t}\n\n\t\t\treturn spaces;\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/viewtoplaintext\n */\n\n// Elements which should not have empty-line padding.\n// Most `view.ContainerElement` want to be separate by new-line, but some are creating one structure\n// together (like `<li>`) so it is better to separate them by only one \"\\n\".\nconst smallPaddingElements = [ 'figcaption', 'li' ];\n\n/**\n * Converts {@link module:engine/view/item~Item view item} and all of its children to plain text.\n *\n * @param {module:engine/view/item~Item} viewItem View item to convert.\n * @returns {String} Plain text representation of `viewItem`.\n */\nexport default function viewToPlainText( viewItem ) {\n\tlet text = '';\n\n\tif ( viewItem.is( 'text' ) || viewItem.is( 'textProxy' ) ) {\n\t\t// If item is `Text` or `TextProxy` simple take its text data.\n\t\ttext = viewItem.data;\n\t} else if ( viewItem.is( 'img' ) && viewItem.hasAttribute( 'alt' ) ) {\n\t\t// Special case for images - use alt attribute if it is provided.\n\t\ttext = viewItem.getAttribute( 'alt' );\n\t} else {\n\t\t// Other elements are document fragments, attribute elements or container elements.\n\t\t// They don't have their own text value, so convert their children.\n\t\tlet prev = null;\n\n\t\tfor ( const child of viewItem.getChildren() ) {\n\t\t\tconst childText = viewToPlainText( child );\n\n\t\t\t// Separate container element children with one or more new-line characters.\n\t\t\tif ( prev && ( prev.is( 'containerElement' ) || child.is( 'containerElement' ) ) ) {\n\t\t\t\tif ( smallPaddingElements.includes( prev.name ) || smallPaddingElements.includes( child.name ) ) {\n\t\t\t\t\ttext += '\\n';\n\t\t\t\t} else {\n\t\t\t\t\ttext += '\\n\\n';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext += childText;\n\t\t\tprev = child;\n\t\t}\n\t}\n\n\treturn text;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/clipboard\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport ClipboardObserver from './clipboardobserver';\n\nimport plainTextToHtml from './utils/plaintexttohtml';\nimport normalizeClipboardHtml from './utils/normalizeclipboarddata';\nimport viewToPlainText from './utils/viewtoplaintext.js';\n\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\nimport EventInfo from '@ckeditor/ckeditor5-utils/src/eventinfo';\n\n/**\n * The clipboard feature. It is responsible for intercepting the `paste` and `drop` events and\n * passing the pasted content through the clipboard pipeline in order to insert it into the editor's content.\n * It also handles the `cut` and `copy` events to fill the native clipboard with serialized editor's data.\n *\n * Read more about the clipboard integration in {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive} guide.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Clipboard extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Clipboard';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst modelDocument = editor.model.document;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\t/**\n\t\t * Data processor used to convert pasted HTML to a view structure.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/dataprocessor/htmldataprocessor~HtmlDataProcessor} #_htmlDataProcessor\n\t\t */\n\t\tthis._htmlDataProcessor = new HtmlDataProcessor( viewDocument );\n\n\t\tview.addObserver( ClipboardObserver );\n\n\t\t// The clipboard paste pipeline.\n\n\t\t// Pasting and dropping is disabled when editor is read-only.\n\t\t// See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\n\t\tthis.listenTo( viewDocument, 'clipboardInput', evt => {\n\t\t\tif ( editor.isReadOnly ) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.listenTo( viewDocument, 'clipboardInput', ( evt, data ) => {\n\t\t\tconst dataTransfer = data.dataTransfer;\n\t\t\tlet content = '';\n\n\t\t\tif ( dataTransfer.getData( 'text/html' ) ) {\n\t\t\t\tcontent = normalizeClipboardHtml( dataTransfer.getData( 'text/html' ) );\n\t\t\t} else if ( dataTransfer.getData( 'text/plain' ) ) {\n\t\t\t\tcontent = plainTextToHtml( dataTransfer.getData( 'text/plain' ) );\n\t\t\t}\n\n\t\t\tcontent = this._htmlDataProcessor.toView( content );\n\n\t\t\tconst eventInfo = new EventInfo( this, 'inputTransformation' );\n\t\t\tthis.fire( eventInfo, { content, dataTransfer } );\n\n\t\t\t// If CKEditor handled the input, do not bubble the original event any further.\n\t\t\t// This helps external integrations recognize that fact and act accordingly.\n\t\t\t// https://github.com/ckeditor/ckeditor5-upload/issues/92\n\t\t\tif ( eventInfo.stop.called ) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\n\t\t\tview.scrollToTheSelection();\n\t\t}, { priority: 'low' } );\n\n\t\tthis.listenTo( this, 'inputTransformation', ( evt, data ) => {\n\t\t\tif ( !data.content.isEmpty ) {\n\t\t\t\tconst dataController = this.editor.data;\n\t\t\t\tconst model = this.editor.model;\n\n\t\t\t\t// Convert the pasted content to a model document fragment.\n\t\t\t\t// Conversion is contextual, but in this case we need an \"all allowed\" context and for that\n\t\t\t\t// we use the $clipboardHolder item.\n\t\t\t\tconst modelFragment = dataController.toModel( data.content, '$clipboardHolder' );\n\n\t\t\t\tif ( modelFragment.childCount == 0 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmodel.insertContent( modelFragment );\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\t// The clipboard copy/cut pipeline.\n\n\t\tfunction onCopyCut( evt, data ) {\n\t\t\tconst dataTransfer = data.dataTransfer;\n\n\t\t\tdata.preventDefault();\n\n\t\t\tconst content = editor.data.toView( editor.model.getSelectedContent( modelDocument.selection ) );\n\n\t\t\tviewDocument.fire( 'clipboardOutput', { dataTransfer, content, method: evt.name } );\n\t\t}\n\n\t\tthis.listenTo( viewDocument, 'copy', onCopyCut, { priority: 'low' } );\n\t\tthis.listenTo( viewDocument, 'cut', ( evt, data ) => {\n\t\t\t// Cutting is disabled when editor is read-only.\n\t\t\t// See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\n\t\t\tif ( editor.isReadOnly ) {\n\t\t\t\tdata.preventDefault();\n\t\t\t} else {\n\t\t\t\tonCopyCut( evt, data );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\tthis.listenTo( viewDocument, 'clipboardOutput', ( evt, data ) => {\n\t\t\tif ( !data.content.isEmpty ) {\n\t\t\t\tdata.dataTransfer.setData( 'text/html', this._htmlDataProcessor.toData( data.content ) );\n\t\t\t\tdata.dataTransfer.setData( 'text/plain', viewToPlainText( data.content ) );\n\t\t\t}\n\n\t\t\tif ( data.method == 'cut' ) {\n\t\t\t\teditor.model.deleteContent( modelDocument.selection );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\t}\n}\n\n/**\n * Fired with a `content` and `dataTransfer` objects. The `content` which comes from the clipboard (was pasted or dropped)\n * should be processed in order to be inserted into the editor. The `dataTransfer` object is available\n * in case the transformation functions needs access to a raw clipboard data.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#input-pipeline \"clipboard input pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:clipboard/clipboard~Clipboard#event:inputTransformation\n * @param {Object} data Event data.\n * @param {module:engine/view/documentfragment~DocumentFragment} data.content Event data. Content to be inserted into the editor.\n * It can be modified by the event listeners. Read more about the clipboard pipelines in\n * {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive}.\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\n */\n\n/**\n * Fired on {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut}\n * with a copy of selected content. The content can be processed before it ends up in the clipboard.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#output-pipeline \"clipboard output pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardOutput\n * @param {module:clipboard/clipboard~ClipboardOutputEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:clipboardOutput} event.\n *\n * @class module:clipboard/clipboard~ClipboardOutputEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboard~ClipboardOutputEventData#dataTransfer\n */\n\n/**\n * Content to be put into the clipboard. It can be modified by the event listeners.\n * Read more about the clipboard pipelines in {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive}.\n *\n * @member {module:engine/view/documentfragment~DocumentFragment} module:clipboard/clipboard~ClipboardOutputEventData#content\n */\n\n/**\n * Whether the event was triggered by copy or cut operation.\n *\n * @member {'copy'|'cut'} module:clipboard/clipboard~ClipboardOutputEventData#method\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/command\n */\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * The base class for CKEditor commands.\n *\n * Commands are the main way to manipulate editor contents and state. They are mostly used by UI elements (or by other\n * commands) to make changes in the model. Commands are available in every part of code that has access to\n * the {@link module:core/editor/editor~Editor editor} instance.\n *\n * Instances of registered commands can be retrieved from {@link module:core/editor/editor~Editor#commands `editor.commands`}.\n * The easiest way to execute a command is through {@link module:core/editor/editor~Editor#execute `editor.execute()`}.\n *\n * By default commands are disabled when the editor is in {@link module:core/editor/editor~Editor#isReadOnly read-only} mode.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Command {\n\t/**\n\t * Creates a new `Command` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor Editor on which this command will be used.\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * The editor on which this command will be used.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor}\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * The value of the command. A concrete command class should define what it represents for it.\n\t\t *\n\t\t * For example, the `'bold'` command's value indicates whether the selection starts in a bolded text.\n\t\t * And the value of the `'link'` command may be an object with links details.\n\t\t *\n\t\t * It is possible for a command to have no value (e.g. for stateless actions such as `'imageUpload'`).\n\t\t *\n\t\t * A concrete command class should control this value by overriding the {@link #refresh `refresh()`} method.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member #value\n\t\t */\n\t\tthis.set( 'value', undefined );\n\n\t\t/**\n\t\t * Flag indicating whether a command is enabled or disabled.\n\t\t * A disabled command will do nothing when executed.\n\t\t *\n\t\t * A concrete command class should control this value by overriding the {@link #refresh `refresh()`} method.\n\t\t *\n\t\t * It is possible to disable a command from \"outside\". For instance, in your integration you may want to disable\n\t\t * a certain set of commands for the time being. To do that, you can use the fact that `isEnabled` is observable\n\t\t * and it fires the `set:isEnabled` event every time anyone tries to modify its value:\n\t\t *\n\t\t *\t\tfunction disableCommand( cmd ) {\n\t\t *\t\t\tcmd.on( 'set:isEnabled', forceDisable, { priority: 'highest' } );\n\t\t *\n\t\t *\t\t\tcmd.isEnabled = false;\n\t\t *\n\t\t *\t\t\t// Make it possible to enable the command again.\n\t\t *\t\t\treturn () => {\n\t\t *\t\t\t\tcmd.off( 'set:isEnabled', forceDisable );\n\t\t *\t\t\t\tcmd.refresh();\n\t\t *\t\t\t};\n\t\t *\n\t\t *\t\t\tfunction forceDisable( evt ) {\n\t\t *\t\t\t\tevt.return = false;\n\t\t *\t\t\t\tevt.stop();\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\n\t\t *\t\t// Usage:\n\t\t *\n\t\t *\t\t// Disabling the command.\n\t\t *\t\tconst enableBold = disableCommand( editor.commands.get( 'bold' ) );\n\t\t *\n\t\t *\t\t// Enabling the command again.\n\t\t *\t\tenableBold();\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #isEnabled\n\t\t */\n\t\tthis.set( 'isEnabled', false );\n\n\t\t/**\n\t\t * Holds identifiers for {@link #forceDisabled} mechanism.\n\t\t *\n\t\t * @type {Set.<String>}\n\t\t * @private\n\t\t */\n\t\tthis._disableStack = new Set();\n\n\t\tthis.decorate( 'execute' );\n\n\t\t// By default every command is refreshed when changes are applied to the model.\n\t\tthis.listenTo( this.editor.model.document, 'change', () => {\n\t\t\tthis.refresh();\n\t\t} );\n\n\t\tthis.on( 'execute', evt => {\n\t\t\tif ( !this.isEnabled ) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\n\t\t// By default commands are disabled when the editor is in read-only mode.\n\t\tthis.listenTo( editor, 'change:isReadOnly', ( evt, name, value ) => {\n\t\t\tif ( value ) {\n\t\t\t\tthis.forceDisabled( 'readOnlyMode' );\n\t\t\t} else {\n\t\t\t\tthis.clearForceDisabled( 'readOnlyMode' );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Refreshes the command. The command should update its {@link #isEnabled} and {@link #value} properties\n\t * in this method.\n\t *\n\t * This method is automatically called when\n\t * {@link module:engine/model/document~Document#event:change any changes are applied to the document}.\n\t */\n\trefresh() {\n\t\tthis.isEnabled = true;\n\t}\n\n\t/**\n\t * Disables the command.\n\t *\n\t * Command may be disabled by multiple features or algorithms (at once). When disabling a command, unique id should be passed\n\t * (e.g. feature name). The same identifier should be used when {@link #clearForceDisabled enabling back} the command.\n\t * The command becomes enabled only after all features {@link #clearForceDisabled enabled it back}.\n\t *\n\t * Disabling and enabling a command:\n\t *\n\t *\t\tcommand.isEnabled; // -> true\n\t *\t\tcommand.forceDisabled( 'MyFeature' );\n\t *\t\tcommand.isEnabled; // -> false\n\t *\t\tcommand.clearForceDisabled( 'MyFeature' );\n\t *\t\tcommand.isEnabled; // -> true\n\t *\n\t * Command disabled by multiple features:\n\t *\n\t *\t\tcommand.forceDisabled( 'MyFeature' );\n\t *\t\tcommand.forceDisabled( 'OtherFeature' );\n\t *\t\tcommand.clearForceDisabled( 'MyFeature' );\n\t *\t\tcommand.isEnabled; // -> false\n\t *\t\tcommand.clearForceDisabled( 'OtherFeature' );\n\t *\t\tcommand.isEnabled; // -> true\n\t *\n\t * Multiple disabling with the same identifier is redundant:\n\t *\n\t *\t\tcommand.forceDisabled( 'MyFeature' );\n\t *\t\tcommand.forceDisabled( 'MyFeature' );\n\t *\t\tcommand.clearForceDisabled( 'MyFeature' );\n\t *\t\tcommand.isEnabled; // -> true\n\t *\n\t * **Note:** some commands or algorithms may have more complex logic when it comes to enabling or disabling certain commands,\n\t * so the command might be still disabled after {@link #clearForceDisabled} was used.\n\t *\n\t * @param {String} id Unique identifier for disabling. Use the same id when {@link #clearForceDisabled enabling back} the command.\n\t */\n\tforceDisabled( id ) {\n\t\tthis._disableStack.add( id );\n\n\t\tif ( this._disableStack.size == 1 ) {\n\t\t\tthis.on( 'set:isEnabled', forceDisable, { priority: 'highest' } );\n\t\t\tthis.isEnabled = false;\n\t\t}\n\t}\n\n\t/**\n\t * Clears forced disable previously set through {@link #forceDisabled}. See {@link #forceDisabled}.\n\t *\n\t * @param {String} id Unique identifier, equal to the one passed in {@link #forceDisabled} call.\n\t */\n\tclearForceDisabled( id ) {\n\t\tthis._disableStack.delete( id );\n\n\t\tif ( this._disableStack.size == 0 ) {\n\t\t\tthis.off( 'set:isEnabled', forceDisable );\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * A command may accept parameters. They will be passed from {@link module:core/editor/editor~Editor#execute `editor.execute()`}\n\t * to the command.\n\t *\n\t * The `execute()` method will automatically abort when the command is disabled ({@link #isEnabled} is `false`).\n\t * This behavior is implemented by a high priority listener to the {@link #event:execute} event.\n\t *\n\t * In order to see how to disable a command from \"outside\" see the {@link #isEnabled} documentation.\n\t *\n\t * @fires execute\n\t */\n\texecute() {}\n\n\t/**\n\t * Destroys the command.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Event fired by the {@link #execute} method. The command action is a listener to this event so it's\n\t * possible to change/cancel the behavior of the command by listening to this event.\n\t *\n\t * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\n\t *\n\t * **Note:** This event is fired even if command is disabled. However, it is automatically blocked\n\t * by a high priority listener in order to prevent command execution.\n\t *\n\t * @event execute\n\t */\n}\n\nmix( Command, ObservableMixin );\n\n// Helper function that forces command to be disabled.\nfunction forceDisable( evt ) {\n\tevt.return = false;\n\tevt.stop();\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/utils\n */\n\n/**\n * Returns attributes that should be preserved on the enter key.\n *\n * Filtering is realized based on `copyOnEnter` attribute property. Read more about attribute properties\n * {@link module:engine/model/schema~Schema#setAttributeProperties here}.\n *\n * @param {module:engine/model/schema~Schema} schema\n * @param {Iterable.<*>} allAttributes attributes to filter.\n * @returns {Iterable.<*>}\n */\nexport function* getCopyOnEnterAttributes( schema, allAttributes ) {\n\tfor ( const attribute of allAttributes ) {\n\t\tif ( attribute && schema.getAttributeProperties( attribute[ 0 ] ).copyOnEnter ) {\n\t\t\tyield attribute;\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/entercommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { getCopyOnEnterAttributes } from './utils';\n\n/**\n * Enter command. It is used by the {@link module:enter/enter~Enter Enter feature} to handle the <kbd>Enter</kbd> key.\n *\n * @extends module:core/command~Command\n */\nexport default class EnterCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tmodel.change( writer => {\n\t\t\tenterBlock( this.editor.model, writer, doc.selection, model.schema );\n\t\t\tthis.fire( 'afterExecute', { writer } );\n\t\t} );\n\t}\n}\n\n// Creates a new block in the way that the <kbd>Enter</kbd> key is expected to work.\n//\n// @param {module:engine/model~Model} model\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// Selection on which the action should be performed.\n// @param {module:engine/model/schema~Schema} schema\nfunction enterBlock( model, writer, selection, schema ) {\n\tconst isSelectionEmpty = selection.isCollapsed;\n\tconst range = selection.getFirstRange();\n\tconst startElement = range.start.parent;\n\tconst endElement = range.end.parent;\n\n\t// Don't touch the roots and other limit elements.\n\tif ( schema.isLimit( startElement ) || schema.isLimit( endElement ) ) {\n\t\t// Delete the selected content but only if inside a single limit element.\n\t\t// Abort, when crossing limit elements boundary (e.g. <limit1>x[x</limit1>donttouchme<limit2>y]y</limit2>).\n\t\t// This is an edge case and it's hard to tell what should actually happen because such a selection\n\t\t// is not entirely valid.\n\t\tif ( !isSelectionEmpty && startElement == endElement ) {\n\t\t\tmodel.deleteContent( selection );\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif ( isSelectionEmpty ) {\n\t\tconst attributesToCopy = getCopyOnEnterAttributes( writer.model.schema, selection.getAttributes() );\n\t\tsplitBlock( writer, range.start );\n\t\twriter.setSelectionAttribute( attributesToCopy );\n\t} else {\n\t\tconst leaveUnmerged = !( range.start.isAtStart && range.end.isAtEnd );\n\t\tconst isContainedWithinOneElement = ( startElement == endElement );\n\n\t\tmodel.deleteContent( selection, { leaveUnmerged } );\n\n\t\tif ( leaveUnmerged ) {\n\t\t\t// Partially selected elements.\n\t\t\t//\n\t\t\t// <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x</h><h>^x</h>\n\t\t\tif ( isContainedWithinOneElement ) {\n\t\t\t\tsplitBlock( writer, selection.focus );\n\t\t\t}\n\t\t\t// Selection over multiple elements.\n\t\t\t//\n\t\t\t// <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n\t\t\telse {\n\t\t\t\twriter.setSelection( endElement, 0 );\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction splitBlock( writer, splitPos ) {\n\twriter.split( splitPos );\n\twriter.setSelection( splitPos.parent.nextSibling, 0 );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/enterobserver\n */\n\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\nimport DomEventData from '@ckeditor/ckeditor5-engine/src/view/observer/domeventdata';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * Enter observer introduces the {@link module:engine/view/document~Document#event:enter} event.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class EnterObserver extends Observer {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tconst doc = this.document;\n\n\t\tdoc.on( 'keydown', ( evt, data ) => {\n\t\t\tif ( this.isEnabled && data.keyCode == keyCodes.enter ) {\n\t\t\t\t// Save the event object to check later if it was stopped or not.\n\t\t\t\tlet event;\n\t\t\t\tdoc.once( 'enter', evt => ( event = evt ), { priority: 'highest' } );\n\n\t\t\t\tdoc.fire( 'enter', new DomEventData( doc, data.domEvent, {\n\t\t\t\t\tisSoft: data.shiftKey\n\t\t\t\t} ) );\n\n\t\t\t\t// Stop `keydown` event if `enter` event was stopped.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5/issues/753\n\t\t\t\tif ( event && event.stop.called ) {\n\t\t\t\t\tevt.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve() {}\n}\n\n/**\n * Event fired when the user presses the <kbd>Enter</kbd> key.\n *\n * Note: This event is fired by the {@link module:enter/enterobserver~EnterObserver observer}\n * (usually registered by the {@link module:enter/enter~Enter Enter feature} and\n * {@link module:enter/shiftenter~ShiftEnter ShiftEnter feature}).\n *\n * @event module:engine/view/document~Document#event:enter\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n * @param {Boolean} data.isSoft Whether it's a soft enter (<kbd>Shift</kbd>+<kbd>Enter</kbd>) or hard enter (<kbd>Enter</kbd>).\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/enter\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport EnterCommand from './entercommand';\nimport EnterObserver from './enterobserver';\n\n/**\n * This plugin handles the <kbd>Enter</kbd> key (hard line break) in the editor.\n *\n * See also the {@link module:enter/shiftenter~ShiftEnter} plugin.\n *\n * For more information about this feature see the {@glink api/enter package page}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Enter extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Enter';\n\t}\n\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\tview.addObserver( EnterObserver );\n\n\t\teditor.commands.add( 'enter', new EnterCommand( editor ) );\n\n\t\tthis.listenTo( viewDocument, 'enter', ( evt, data ) => {\n\t\t\tdata.preventDefault();\n\n\t\t\t// The soft enter key is handled by the ShiftEnter plugin.\n\t\t\tif ( data.isSoft ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditor.execute( 'enter' );\n\t\t\tview.scrollToTheSelection();\n\t\t}, { priority: 'low' } );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/shiftentercommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { getCopyOnEnterAttributes } from './utils';\n\n/**\n * ShiftEnter command. It is used by the {@link module:enter/shiftenter~ShiftEnter ShiftEnter feature} to handle\n * the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke.\n *\n * @extends module:core/command~Command\n */\nexport default class ShiftEnterCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tmodel.change( writer => {\n\t\t\tsoftBreakAction( model, writer, doc.selection );\n\t\t\tthis.fire( 'afterExecute', { writer } );\n\t\t} );\n\t}\n\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tthis.isEnabled = isEnabled( model.schema, doc.selection );\n\t}\n}\n\n// Checks whether the ShiftEnter command should be enabled in the specified selection.\n//\n// @param {module:engine/model/schema~Schema} schema\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\nfunction isEnabled( schema, selection ) {\n\t// At this moment it is okay to support single range selections only.\n\t// But in the future we may need to change that.\n\tif ( selection.rangeCount > 1 ) {\n\t\treturn false;\n\t}\n\n\tconst anchorPos = selection.anchor;\n\n\t// Check whether the break element can be inserted in the current selection anchor.\n\tif ( !anchorPos || !schema.checkChild( anchorPos, 'softBreak' ) ) {\n\t\treturn false;\n\t}\n\n\tconst range = selection.getFirstRange();\n\tconst startElement = range.start.parent;\n\tconst endElement = range.end.parent;\n\n\t// Do not modify the content if selection is cross-limit elements.\n\tif ( ( isInsideLimitElement( startElement, schema ) || isInsideLimitElement( endElement, schema ) ) && startElement !== endElement ) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n// Creates a break in the way that the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke is expected to work.\n//\n// @param {module:engine/model~Model} model\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// Selection on which the action should be performed.\nfunction softBreakAction( model, writer, selection ) {\n\tconst isSelectionEmpty = selection.isCollapsed;\n\tconst range = selection.getFirstRange();\n\tconst startElement = range.start.parent;\n\tconst endElement = range.end.parent;\n\tconst isContainedWithinOneElement = ( startElement == endElement );\n\n\tif ( isSelectionEmpty ) {\n\t\tconst attributesToCopy = getCopyOnEnterAttributes( model.schema, selection.getAttributes() );\n\t\tinsertBreak( model, writer, range.end );\n\n\t\twriter.removeSelectionAttribute( selection.getAttributeKeys() );\n\t\twriter.setSelectionAttribute( attributesToCopy );\n\t} else {\n\t\tconst leaveUnmerged = !( range.start.isAtStart && range.end.isAtEnd );\n\t\tmodel.deleteContent( selection, { leaveUnmerged } );\n\n\t\t// Selection within one element:\n\t\t//\n\t\t// <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x<br>^x</h>\n\t\tif ( isContainedWithinOneElement ) {\n\t\t\tinsertBreak( model, writer, selection.focus );\n\t\t}\n\t\t// Selection over multiple elements.\n\t\t//\n\t\t// <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n\t\t//\n\t\t// We chose not to insert a line break in this case because:\n\t\t//\n\t\t// * it's not a very common scenario,\n\t\t// * it actually surprised me when I saw the \"expected behavior\" in real life.\n\t\t//\n\t\t// It's ok if the user will need to be more specific where they want the <br> to be inserted.\n\t\telse {\n\t\t\t// Move the selection to the 2nd element (last step of the example above).\n\t\t\tif ( leaveUnmerged ) {\n\t\t\t\twriter.setSelection( endElement, 0 );\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction insertBreak( model, writer, position ) {\n\tconst breakLineElement = writer.createElement( 'softBreak' );\n\n\tmodel.insertContent( breakLineElement, position );\n\twriter.setSelection( breakLineElement, 'after' );\n}\n\n// Checks whether the specified `element` is a child of the limit element.\n//\n// Checking whether the `<p>` element is inside a limit element:\n//   - <$root><p>Text.</p></$root> => false\n//   - <$root><limitElement><p>Text</p></limitElement></$root> => true\n//\n// @param {module:engine/model/element~Element} element\n// @param {module:engine/schema~Schema} schema\n// @returns {Boolean}\nfunction isInsideLimitElement( element, schema ) {\n\t// `$root` is a limit element but in this case is an invalid element.\n\tif ( element.is( 'rootElement' ) ) {\n\t\treturn false;\n\t}\n\n\treturn schema.isLimit( element ) || isInsideLimitElement( element.parent, schema );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/shiftenter\n */\n\nimport ShiftEnterCommand from './shiftentercommand';\nimport EnterObserver from './enterobserver';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * This plugin handles the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke (soft line break) in the editor.\n *\n * See also the {@link module:enter/enter~Enter} plugin.\n *\n * For more information about this feature see the {@glink api/enter package page}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ShiftEnter extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ShiftEnter';\n\t}\n\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\t\tconst conversion = editor.conversion;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\t// Configure the schema.\n\t\tschema.register( 'softBreak', {\n\t\t\tallowWhere: '$text',\n\t\t\tisInline: true\n\t\t} );\n\n\t\t// Configure converters.\n\t\tconversion.for( 'upcast' )\n\t\t\t.elementToElement( {\n\t\t\t\tmodel: 'softBreak',\n\t\t\t\tview: 'br'\n\t\t\t} );\n\n\t\tconversion.for( 'downcast' )\n\t\t\t.elementToElement( {\n\t\t\t\tmodel: 'softBreak',\n\t\t\t\tview: ( modelElement, viewWriter ) => viewWriter.createEmptyElement( 'br' )\n\t\t\t} );\n\n\t\tview.addObserver( EnterObserver );\n\n\t\teditor.commands.add( 'shiftEnter', new ShiftEnterCommand( editor ) );\n\n\t\tthis.listenTo( viewDocument, 'enter', ( evt, data ) => {\n\t\t\tdata.preventDefault();\n\n\t\t\t// The hard enter key is handled by the Enter plugin.\n\t\t\tif ( !data.isSoft ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditor.execute( 'shiftEnter' );\n\t\t\tview.scrollToTheSelection();\n\t\t}, { priority: 'low' } );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module select-all/selectallcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\n/**\n * The select all command.\n *\n * It is used by the {@link module:select-all/selectallediting~SelectAllEditing select all editing feature} to handle\n * the <kbd>Ctrl/⌘</kbd>+<kbd>A</kbd> keystroke.\n *\n * Executing this command changes the {@glink framework/guides/architecture/editing-engine#model model}\n * selection so it contains the entire content of the editable root of the editor the selection is\n * {@link module:engine/model/selection~Selection#anchor anchored} in.\n *\n * If the selection was anchored in a {@glink framework/guides/tutorials/implementing-a-block-widget nested editable}\n * (e.g. a caption of an image), the new selection will contain its entire content.\n *\n * @extends module:core/command~Command\n */\nexport default class SelectAllCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst limitElement = model.schema.getLimitElement( model.document.selection );\n\n\t\tmodel.change( writer => {\n\t\t\twriter.setSelection( limitElement, 'in' );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module select-all/selectallediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport { getCode, parseKeystroke } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport SelectAllCommand from './selectallcommand';\n\nconst SELECT_ALL_KEYSTROKE = parseKeystroke( 'Ctrl+A' );\n\n/**\n * The select all editing feature.\n *\n * It registers the `'selectAll'` {@link module:select-all/selectallcommand~SelectAllCommand command}\n * and the <kbd>Ctrl/⌘</kbd>+<kbd>A</kbd> keystroke listener which executes it.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class SelectAllEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'SelectAllEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\teditor.commands.add( 'selectAll', new SelectAllCommand( editor ) );\n\n\t\tthis.listenTo( viewDocument, 'keydown', ( eventInfo, domEventData ) => {\n\t\t\tif ( getCode( domEventData ) === SELECT_ALL_KEYSTROKE ) {\n\t\t\t\teditor.execute( 'selectAll' );\n\t\t\t\tdomEventData.preventDefault();\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module select-all/selectallui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport selectAllIcon from '../theme/icons/select-all.svg';\n\n/**\n * The select all UI feature.\n *\n * It registers the `'selectAll'` UI button in the editor's\n * {@link module:ui/componentfactory~ComponentFactory component factory}. When clicked, the button\n * executes the {@link module:select-all/selectallcommand~SelectAllCommand select all command}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class SelectAllUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'SelectAllUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\teditor.ui.componentFactory.add( 'selectAll', locale => {\n\t\t\tconst command = editor.commands.get( 'selectAll' );\n\t\t\tconst view = new ButtonView( locale );\n\t\t\tconst t = locale.t;\n\n\t\t\tview.set( {\n\t\t\t\tlabel: t( 'Select all' ),\n\t\t\t\ticon: selectAllIcon,\n\t\t\t\tkeystroke: 'Ctrl+A',\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t\t// Execute the command.\n\t\t\tthis.listenTo( view, 'execute', () => {\n\t\t\t\teditor.execute( 'selectAll' );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module select-all/selectall\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport SelectAllEditing from './selectallediting';\nimport SelectAllUI from './selectallui';\n\n/**\n * The select all feature.\n *\n * This is a \"glue\" plugin which loads the {@link module:select-all/selectallediting~SelectAllEditing select all editing feature}\n * and the {@link module:select-all/selectallui~SelectAllUI select all UI feature}.\n *\n * Please refer to the documentation of individual features to learn more.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class SelectAll extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ SelectAllEditing, SelectAllUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'SelectAll';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/changebuffer\n */\n\n/**\n * Change buffer allows to group atomic changes (like characters that have been typed) into\n * {@link module:engine/model/batch~Batch batches}.\n *\n * Batches represent single undo steps, hence changes added to one single batch are undone together.\n *\n * The buffer has a configurable limit of atomic changes that it can accommodate. After the limit was\n * exceeded (see {@link ~ChangeBuffer#input}), a new batch is created in {@link ~ChangeBuffer#batch}.\n *\n * To use the change buffer you need to let it know about the number of changes that were added to the batch:\n *\n *\t\tconst buffer = new ChangeBuffer( model, LIMIT );\n *\n *\t\t// Later on in your feature:\n *\t\tbuffer.batch.insert( pos, insertedCharacters );\n *\t\tbuffer.input( insertedCharacters.length );\n *\n */\nexport default class ChangeBuffer {\n\t/**\n\t * Creates a new instance of the change buffer.\n\t *\n\t * @param {module:engine/model/model~Model} model\n\t * @param {Number} [limit=20] The maximum number of atomic changes which can be contained in one batch.\n\t */\n\tconstructor( model, limit = 20 ) {\n\t\t/**\n\t\t * The model instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model} #model\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * The number of atomic changes in the buffer. Once it exceeds the {@link #limit},\n\t\t * the {@link #batch batch} is set to a new one.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #size\n\t\t */\n\t\tthis.size = 0;\n\n\t\t/**\n\t\t * The maximum number of atomic changes which can be contained in one batch.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #limit\n\t\t */\n\t\tthis.limit = limit;\n\n\t\t/**\n\t\t * Whether the buffer is locked. A locked buffer cannot be reset unless it gets unlocked.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isLocked\n\t\t */\n\t\tthis.isLocked = false;\n\n\t\t// The function to be called in order to notify the buffer about batches which appeared in the document.\n\t\t// The callback will check whether it is a new batch and in that case the buffer will be flushed.\n\t\t//\n\t\t// The reason why the buffer needs to be flushed whenever a new batch appears is that the changes added afterwards\n\t\t// should be added to a new batch. For instance, when the  user types, then inserts an image, and then types again,\n\t\t// the characters typed after inserting the image should be added to a different batch than the characters typed before.\n\t\tthis._changeCallback = ( evt, batch ) => {\n\t\t\tif ( batch.type != 'transparent' && batch !== this._batch ) {\n\t\t\t\tthis._reset( true );\n\t\t\t}\n\t\t};\n\n\t\tthis._selectionChangeCallback = () => {\n\t\t\tthis._reset();\n\t\t};\n\n\t\tthis.model.document.on( 'change', this._changeCallback );\n\n\t\tthis.model.document.selection.on( 'change:range', this._selectionChangeCallback );\n\t\tthis.model.document.selection.on( 'change:attribute', this._selectionChangeCallback );\n\n\t\t/**\n\t\t * The current batch instance.\n\t\t *\n\t\t * @private\n\t\t * @member #_batch\n\t\t */\n\n\t\t/**\n\t\t * The callback to document the change event which later needs to be removed.\n\t\t *\n\t\t * @private\n\t\t * @member #_changeCallback\n\t\t */\n\n\t\t/**\n\t\t * The callback to document selection `change:attribute` and `change:range` events which resets the buffer.\n\t\t *\n\t\t * @private\n\t\t * @member #_selectionChangeCallback\n\t\t */\n\t}\n\n\t/**\n\t * The current batch to which a feature should add its operations. Once the {@link #size}\n\t * is reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n\t *\n\t * @type {module:engine/model/batch~Batch}\n\t */\n\tget batch() {\n\t\tif ( !this._batch ) {\n\t\t\tthis._batch = this.model.createBatch();\n\t\t}\n\n\t\treturn this._batch;\n\t}\n\n\t/**\n\t * The input number of changes into the buffer. Once the {@link #size} is\n\t * reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n\t *\n\t * @param {Number} changeCount The number of atomic changes to input.\n\t */\n\tinput( changeCount ) {\n\t\tthis.size += changeCount;\n\n\t\tif ( this.size >= this.limit ) {\n\t\t\tthis._reset( true );\n\t\t}\n\t}\n\n\t/**\n\t * Locks the buffer.\n\t */\n\tlock() {\n\t\tthis.isLocked = true;\n\t}\n\n\t/**\n\t * Unlocks the buffer.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t}\n\n\t/**\n\t * Destroys the buffer.\n\t */\n\tdestroy() {\n\t\tthis.model.document.off( 'change', this._changeCallback );\n\t\tthis.model.document.selection.off( 'change:range', this._selectionChangeCallback );\n\t\tthis.model.document.selection.off( 'change:attribute', this._selectionChangeCallback );\n\t}\n\n\t/**\n\t * Resets the change buffer.\n\t *\n\t * @private\n\t * @param {Boolean} [ignoreLock] Whether internal lock {@link #isLocked} should be ignored.\n\t */\n\t_reset( ignoreLock ) {\n\t\tif ( !this.isLocked || ignoreLock ) {\n\t\t\tthis._batch = null;\n\t\t\tthis.size = 0;\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/inputcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\nimport ChangeBuffer from './utils/changebuffer';\n\n/**\n * The input command. Used by the {@link module:typing/input~Input input feature} to handle typing.\n *\n * @extends module:core/command~Command\n */\nexport default class InputCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {Number} undoStepSize The maximum number of atomic changes\n\t * which can be contained in one batch in the command buffer.\n\t */\n\tconstructor( editor, undoStepSize ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Typing's change buffer used to group subsequent changes into batches.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {module:typing/utils/changebuffer~ChangeBuffer} #_buffer\n\t\t */\n\t\tthis._buffer = new ChangeBuffer( editor.model, undoStepSize );\n\n\t\t/**\n\t\t * Stores batches created by the input command. The batches are used to differentiate input batches from other batches using\n\t\t * {@link module:typing/input~Input#isInput} method.\n\t\t *\n\t\t * @type {WeakSet<module:engine/model/batch~Batch>}\n\t\t * @protected\n\t\t */\n\t\tthis._batches = new WeakSet();\n\t}\n\n\t/**\n\t * The current change buffer.\n\t *\n\t * @type {module:typing/utils/changebuffer~ChangeBuffer}\n\t */\n\tget buffer() {\n\t\treturn this._buffer;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis._buffer.destroy();\n\t}\n\n\t/**\n\t * Executes the input command. It replaces the content within the given range with the given text.\n\t * Replacing is a two step process, first the content within the range is removed and then the new text is inserted\n\t * at the beginning of the range (which after the removal is a collapsed range).\n\t *\n\t * @fires execute\n\t * @param {Object} [options] The command options.\n\t * @param {String} [options.text=''] The text to be inserted.\n\t * @param {module:engine/model/range~Range} [options.range] The range in which the text is inserted. Defaults\n\t * to the first range in the current selection.\n\t * @param {module:engine/model/range~Range} [options.resultRange] The range where the selection\n\t * should be placed after the insertion. If not specified, the selection will be placed right after\n\t * the inserted text.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst text = options.text || '';\n\t\tconst textInsertions = text.length;\n\t\tconst selection = options.range ? model.createSelection( options.range ) : doc.selection;\n\t\tconst resultRange = options.resultRange;\n\n\t\tmodel.enqueueChange( this._buffer.batch, writer => {\n\t\t\tthis._buffer.lock();\n\n\t\t\tmodel.deleteContent( selection );\n\n\t\t\tif ( text ) {\n\t\t\t\tmodel.insertContent( writer.createText( text, doc.selection.getAttributes() ), selection );\n\t\t\t}\n\n\t\t\tif ( resultRange ) {\n\t\t\t\twriter.setSelection( resultRange );\n\t\t\t} else if ( !selection.is( 'documentSelection' ) ) {\n\t\t\t\twriter.setSelection( selection );\n\t\t\t}\n\n\t\t\tthis._buffer.unlock();\n\n\t\t\tthis._buffer.input( textInsertions );\n\n\t\t\t// Store the batch as an 'input' batch for the Input.isInput( batch ) check.\n\t\t\tthis._batches.add( this._buffer.batch );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/injectunsafekeystrokeshandling\n */\n\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * Handles keystrokes which are unsafe for typing. This handler's logic is explained\n * in https://github.com/ckeditor/ckeditor5-typing/issues/83#issuecomment-398690251.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\nexport default function injectUnsafeKeystrokesHandling( editor ) {\n\tlet latestCompositionSelection = null;\n\n\tconst model = editor.model;\n\tconst view = editor.editing.view;\n\tconst inputCommand = editor.commands.get( 'input' );\n\n\t// For Android, we want to handle keystrokes on `beforeinput` to be sure that code in `DeleteObserver` already had a chance to be fired.\n\tif ( env.isAndroid ) {\n\t\tview.document.on( 'beforeinput', ( evt, evtData ) => handleUnsafeKeystroke( evtData ), { priority: 'lowest' } );\n\t} else {\n\t\tview.document.on( 'keydown', ( evt, evtData ) => handleUnsafeKeystroke( evtData ), { priority: 'lowest' } );\n\t}\n\n\tview.document.on( 'compositionstart', handleCompositionStart, { priority: 'lowest' } );\n\n\tview.document.on( 'compositionend', () => {\n\t\tlatestCompositionSelection = model.createSelection( model.document.selection );\n\t}, { priority: 'lowest' } );\n\n\t// Handles the keydown event. We need to guess whether such keystroke is going to result\n\t// in typing. If so, then before character insertion happens, any selected content needs\n\t// to be deleted. Otherwise the default browser deletion mechanism would be\n\t// triggered, resulting in:\n\t//\n\t// * Hundreds of mutations which could not be handled.\n\t// * But most importantly, loss of control over how the content is being deleted.\n\t//\n\t// The method is used in a low-priority listener, hence allowing other listeners (e.g. delete or enter features)\n\t// to handle the event.\n\t//\n\t// @param {module:engine/view/observer/keyobserver~KeyEventData} evtData\n\tfunction handleUnsafeKeystroke( evtData ) {\n\t\tconst doc = model.document;\n\t\tconst isComposing = view.document.isComposing;\n\t\tconst isSelectionUnchanged = latestCompositionSelection && latestCompositionSelection.isEqual( doc.selection );\n\n\t\t// Reset stored composition selection.\n\t\tlatestCompositionSelection = null;\n\n\t\t// By relying on the state of the input command we allow disabling the entire input easily\n\t\t// by just disabling the input command. We could’ve used here the delete command but that\n\t\t// would mean requiring the delete feature which would block loading one without the other.\n\t\t// We could also check the editor.isReadOnly property, but that wouldn't allow to block\n\t\t// the input without blocking other features.\n\t\tif ( !inputCommand.isEnabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isSafeKeystroke( evtData ) || doc.selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If during composition, deletion should be prevented as it may remove composed sequence (#83).\n\t\tif ( isComposing && evtData.keyCode === 229 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there is a `keydown` event fired with '229' keycode it might be related\n\t\t// to recent composition. Check if selection is the same as upon ending recent composition,\n\t\t// if so do not remove selected content as it will remove composed sequence (#83).\n\t\tif ( !isComposing && evtData.keyCode === 229 && isSelectionUnchanged ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdeleteSelectionContent();\n\t}\n\n\t// Handles the `compositionstart` event. It is used only in special cases to remove the contents\n\t// of a non-collapsed selection so composition itself does not result in complex mutations.\n\t//\n\t// The special case mentioned above is a situation in which the `keydown` event is fired after\n\t// `compositionstart` event. In such cases {@link #handleKeydown} cannot clear current selection\n\t// contents (because it is too late and will break the composition) so the composition handler takes care of it.\n\tfunction handleCompositionStart() {\n\t\tconst doc = model.document;\n\t\tconst isFlatSelection = doc.selection.rangeCount === 1 ? doc.selection.getFirstRange().isFlat : true;\n\n\t\t// If on `compositionstart` there is a non-collapsed selection which start and end have different parents\n\t\t// it means the `handleKeydown()` method did not remove its contents. It happens usually because\n\t\t// of different order of events (`compositionstart` before `keydown` - in Safari). In such cases\n\t\t// we need to remove selection contents on composition start (#83).\n\t\tif ( doc.selection.isCollapsed || isFlatSelection ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdeleteSelectionContent();\n\t}\n\n\tfunction deleteSelectionContent() {\n\t\tconst buffer = inputCommand.buffer;\n\n\t\tbuffer.lock();\n\n\t\tmodel.enqueueChange( buffer.batch, () => {\n\t\t\tmodel.deleteContent( model.document.selection );\n\t\t} );\n\n\t\tbuffer.unlock();\n\t}\n}\n\nconst safeKeycodes = [\n\tgetCode( 'arrowUp' ),\n\tgetCode( 'arrowRight' ),\n\tgetCode( 'arrowDown' ),\n\tgetCode( 'arrowLeft' ),\n\t9, // Tab\n\t16, // Shift\n\t17, // Ctrl\n\t18, // Alt\n\t19, // Pause\n\t20, // CapsLock\n\t27, // Escape\n\t33, // PageUp\n\t34, // PageDown\n\t35, // Home\n\t36, // End,\n\t45, // Insert,\n\t91, // Windows,\n\t93, // Menu key,\n\t144, // NumLock\n\t145, // ScrollLock,\n\t173, // Mute/Unmute\n\t174, // Volume up\n\t175, // Volume down,\n\t176, // Next song,\n\t177, // Previous song,\n\t178, // Stop,\n\t179, // Play/Pause,\n\t255 // Display brightness (increase and decrease)\n];\n\n// Function keys.\nfor ( let code = 112; code <= 135; code++ ) {\n\tsafeKeycodes.push( code );\n}\n\n// Returns `true` if a keystroke should not cause any content change caused by \"typing\".\n//\n// Note: This implementation is very simple and will need to be refined with time.\n//\n// @private\n// @param {engine.view.observer.keyObserver.KeyEventData} keyData\n// @returns {Boolean}\nfunction isSafeKeystroke( keyData ) {\n\t// Keystrokes which contain Ctrl don't represent typing.\n\tif ( keyData.ctrlKey ) {\n\t\treturn true;\n\t}\n\n\treturn safeKeycodes.includes( keyData.keyCode );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/difftochanges\n */\n\n/**\n * Creates a set of changes which need to be applied to the input in order to transform\n * it into the output. This function can be used with strings or arrays.\n *\n *\t\tconst input = Array.from( 'abc' );\n *\t\tconst output = Array.from( 'xaby' );\n *\t\tconst changes = diffToChanges( diff( input, output ), output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput.splice( change.index, 0, ...change.values );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput.splice( change.index, change.howMany );\n *\t\t\t}\n *\t\t} );\n *\n *\t\tinput.join( '' ) == output.join( '' ); // -> true\n *\n * @param {Array.<'equal'|'insert'|'delete'>} diff Result of {@link module:utils/diff~diff}.\n * @param {String|Array} output The string or array which was passed as diff's output.\n * @returns {Array.<Object>} Set of changes (insert or delete) which need to be applied to the input\n * in order to transform it into the output.\n */\nexport default function diffToChanges( diff, output ) {\n\tconst changes = [];\n\tlet index = 0;\n\tlet lastOperation;\n\n\tdiff.forEach( change => {\n\t\tif ( change == 'equal' ) {\n\t\t\tpushLast();\n\n\t\t\tindex++;\n\t\t} else if ( change == 'insert' ) {\n\t\t\tif ( isContinuationOf( 'insert' ) ) {\n\t\t\t\tlastOperation.values.push( output[ index ] );\n\t\t\t} else {\n\t\t\t\tpushLast();\n\n\t\t\t\tlastOperation = {\n\t\t\t\t\ttype: 'insert',\n\t\t\t\t\tindex,\n\t\t\t\t\tvalues: [ output[ index ] ]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tindex++;\n\t\t} else /* if ( change == 'delete' ) */ {\n\t\t\tif ( isContinuationOf( 'delete' ) ) {\n\t\t\t\tlastOperation.howMany++;\n\t\t\t} else {\n\t\t\t\tpushLast();\n\n\t\t\t\tlastOperation = {\n\t\t\t\t\ttype: 'delete',\n\t\t\t\t\tindex,\n\t\t\t\t\thowMany: 1\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t} );\n\n\tpushLast();\n\n\treturn changes;\n\n\tfunction pushLast() {\n\t\tif ( lastOperation ) {\n\t\t\tchanges.push( lastOperation );\n\t\t\tlastOperation = null;\n\t\t}\n\t}\n\n\tfunction isContinuationOf( expected ) {\n\t\treturn lastOperation && lastOperation.type == expected;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/utils\n */\n\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport diffToChanges from '@ckeditor/ckeditor5-utils/src/difftochanges';\n\n/**\n * Returns true if container children have mutated or more than a single text node was changed.\n *\n * @private\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n * @returns {Boolean}\n */\nexport function containerChildrenMutated( mutations ) {\n\tif ( mutations.length == 0 ) {\n\t\treturn false;\n\t}\n\n\t// Check if there is any mutation of `children` type or any mutation that changes more than one text node.\n\tfor ( const mutation of mutations ) {\n\t\tif ( mutation.type === 'children' && !getSingleTextNodeChange( mutation ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * Returns change made to a single text node.\n *\n * @private\n * @param {module:engine/view/observer/mutationobserver~MutatedText|\n * module:engine/view/observer/mutationobserver~MutatedChildren} mutation\n * @returns {Object|undefined} Change object (see {@link module:utils/difftochanges~diffToChanges} output)\n * or undefined if more than a single text node was changed.\n */\nexport function getSingleTextNodeChange( mutation ) {\n\t// One new node.\n\tif ( mutation.newChildren.length - mutation.oldChildren.length != 1 ) {\n\t\treturn;\n\t}\n\n\t// Which is text.\n\tconst diffResult = diff( mutation.oldChildren, mutation.newChildren, compareChildNodes );\n\tconst changes = diffToChanges( diffResult, mutation.newChildren );\n\n\t// In case of [ delete, insert, insert ] the previous check will not exit.\n\tif ( changes.length > 1 ) {\n\t\treturn;\n\t}\n\n\tconst change = changes[ 0 ];\n\n\t// Which is text.\n\tif ( !( !!change.values[ 0 ] && change.values[ 0 ].is( 'text' ) ) ) {\n\t\treturn;\n\t}\n\n\treturn change;\n}\n\n/**\n * Checks whether two view nodes are identical, which means they are the same object\n * or contain exactly same data (in case of text nodes).\n *\n * @private\n * @param {module:engine/view/node~Node} oldChild\n * @param {module:engine/view/node~Node} newChild\n * @returns {Boolean}\n */\nexport function compareChildNodes( oldChild, newChild ) {\n\tif ( !!oldChild && oldChild.is( 'text' ) && !!newChild && newChild.is( 'text' ) ) {\n\t\treturn oldChild.data === newChild.data;\n\t} else {\n\t\treturn oldChild === newChild;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/injecttypingmutationshandling\n */\n\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport DomConverter from '@ckeditor/ckeditor5-engine/src/view/domconverter';\n\nimport { getSingleTextNodeChange, containerChildrenMutated } from './utils';\n\n/**\n * Handles mutations caused by normal typing.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\nexport default function injectTypingMutationsHandling( editor ) {\n\teditor.editing.view.document.on( 'mutations', ( evt, mutations, viewSelection ) => {\n\t\tnew MutationHandler( editor ).handle( mutations, viewSelection );\n\t} );\n}\n\n/**\n * Helper class for translating DOM mutations into model changes.\n *\n * @private\n */\nclass MutationHandler {\n\t/**\n\t * Creates an instance of the mutation handler.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * Editor instance for which mutations are handled.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor} #editor\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * The editing controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/controller/editingcontroller~EditingController} #editing\n\t\t */\n\t\tthis.editing = this.editor.editing;\n\t}\n\n\t/**\n\t * Handles given mutations.\n\t *\n\t * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n\t * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n\t * @param {module:engine/view/selection~Selection|null} viewSelection\n\t */\n\thandle( mutations, viewSelection ) {\n\t\tif ( containerChildrenMutated( mutations ) ) {\n\t\t\tthis._handleContainerChildrenMutations( mutations, viewSelection );\n\t\t} else {\n\t\t\tfor ( const mutation of mutations ) {\n\t\t\t\t// Fortunately it will never be both.\n\t\t\t\tthis._handleTextMutation( mutation, viewSelection );\n\t\t\t\tthis._handleTextNodeInsertion( mutation );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handles situations when container's children mutated during input. This can happen when\n\t * the browser is trying to \"fix\" DOM in certain situations. For example, when the user starts to type\n\t * in `<p><a href=\"\"><i>Link{}</i></a></p>`, the browser might change the order of elements\n\t * to `<p><i><a href=\"\">Link</a>x{}</i></p>`. A similar situation happens when the spell checker\n\t * replaces a word wrapped with `<strong>` with a word wrapped with a `<b>` element.\n\t *\n\t * To handle such situations, the common DOM ancestor of all mutations is converted to the model representation\n\t * and then compared with the current model to calculate the proper text change.\n\t *\n\t * Note: Single text node insertion is handled in {@link #_handleTextNodeInsertion} and text node mutation is handled\n\t * in {@link #_handleTextMutation}).\n\t *\n\t * @private\n\t * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n\t * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n\t * @param {module:engine/view/selection~Selection|null} viewSelection\n\t */\n\t_handleContainerChildrenMutations( mutations, viewSelection ) {\n\t\t// Get common ancestor of all mutations.\n\t\tconst mutationsCommonAncestor = getMutationsContainer( mutations );\n\n\t\t// Quit if there is no common ancestor.\n\t\tif ( !mutationsCommonAncestor ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domConverter = this.editor.editing.view.domConverter;\n\n\t\t// Get common ancestor in DOM.\n\t\tconst domMutationCommonAncestor = domConverter.mapViewToDom( mutationsCommonAncestor );\n\n\t\t// Create fresh DomConverter so it will not use existing mapping and convert current DOM to model.\n\t\t// This wouldn't be needed if DomConverter would allow to create fresh view without checking any mappings.\n\t\tconst freshDomConverter = new DomConverter( this.editor.editing.view.document );\n\t\tconst modelFromCurrentDom = this.editor.data.toModel(\n\t\t\tfreshDomConverter.domToView( domMutationCommonAncestor )\n\t\t).getChild( 0 );\n\n\t\t// Current model.\n\t\tconst currentModel = this.editor.editing.mapper.toModelElement( mutationsCommonAncestor );\n\n\t\t// If common ancestor is not mapped, do not do anything. It probably is a parent of another view element.\n\t\t// That means that we would need to diff model elements (see `if` below). Better return early instead of\n\t\t// trying to get a reasonable model ancestor. It will fell into the `if` below anyway.\n\t\t// This situation happens for example for lists. If `<ul>` is a common ancestor, `currentModel` is `undefined`\n\t\t// because `<ul>` is not mapped (`<li>`s are).\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/718.\n\t\tif ( !currentModel ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get children from both ancestors.\n\t\tconst modelFromDomChildren = Array.from( modelFromCurrentDom.getChildren() );\n\t\tconst currentModelChildren = Array.from( currentModel.getChildren() );\n\n\t\t// Remove the last `<softBreak>` from the end of `modelFromDomChildren` if there is no `<softBreak>` in current model.\n\t\t// If the described scenario happened, it means that this is a bogus `<br />` added by a browser.\n\t\tconst lastDomChild = modelFromDomChildren[ modelFromDomChildren.length - 1 ];\n\t\tconst lastCurrentChild = currentModelChildren[ currentModelChildren.length - 1 ];\n\n\t\tif ( lastDomChild && lastDomChild.is( 'softBreak' ) && lastCurrentChild && !lastCurrentChild.is( 'softBreak' ) ) {\n\t\t\tmodelFromDomChildren.pop();\n\t\t}\n\n\t\tconst schema = this.editor.model.schema;\n\n\t\t// Skip situations when common ancestor has any container elements.\n\t\tif ( !isSafeForTextMutation( modelFromDomChildren, schema ) || !isSafeForTextMutation( currentModelChildren, schema ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Replace &nbsp; inserted by the browser with normal space. See comment in `_handleTextMutation`.\n\t\t// Replace non-texts with any character. This is potentially dangerous but passes in manual tests. The thing is\n\t\t// that we need to take care of proper indexes so we cannot simply remove non-text elements from the content.\n\t\t// By inserting a character we keep all the real texts on their indexes.\n\t\tconst newText = modelFromDomChildren.map( item => item.is( 'text' ) ? item.data : '@' ).join( '' ).replace( /\\u00A0/g, ' ' );\n\t\tconst oldText = currentModelChildren.map( item => item.is( 'text' ) ? item.data : '@' ).join( '' ).replace( /\\u00A0/g, ' ' );\n\n\t\t// Do nothing if mutations created same text.\n\t\tif ( oldText === newText ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst diffResult = diff( oldText, newText );\n\n\t\tconst { firstChangeAt, insertions, deletions } = calculateChanges( diffResult );\n\n\t\t// Try setting new model selection according to passed view selection.\n\t\tlet modelSelectionRange = null;\n\n\t\tif ( viewSelection ) {\n\t\t\tmodelSelectionRange = this.editing.mapper.toModelRange( viewSelection.getFirstRange() );\n\t\t}\n\n\t\tconst insertText = newText.substr( firstChangeAt, insertions );\n\t\tconst removeRange = this.editor.model.createRange(\n\t\t\tthis.editor.model.createPositionAt( currentModel, firstChangeAt ),\n\t\t\tthis.editor.model.createPositionAt( currentModel, firstChangeAt + deletions )\n\t\t);\n\n\t\tthis.editor.execute( 'input', {\n\t\t\ttext: insertText,\n\t\t\trange: removeRange,\n\t\t\tresultRange: modelSelectionRange\n\t\t} );\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleTextMutation( mutation, viewSelection ) {\n\t\tif ( mutation.type != 'text' ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Replace &nbsp; inserted by the browser with normal space.\n\t\t// We want only normal spaces in the model and in the view. Renderer and DOM Converter will be then responsible\n\t\t// for rendering consecutive spaces using &nbsp;, but the model and the view has to be clear.\n\t\t// Other feature may introduce inserting non-breakable space on specific key stroke (for example shift + space).\n\t\t// However then it will be handled outside of mutations, like enter key is.\n\t\t// The replacing is here because it has to be done before `diff` and `diffToChanges` functions, as they\n\t\t// take `newText` and compare it to (cleaned up) view.\n\t\t// It could also be done in mutation observer too, however if any outside plugin would like to\n\t\t// introduce additional events for mutations, they would get already cleaned up version (this may be good or not).\n\t\tconst newText = mutation.newText.replace( /\\u00A0/g, ' ' );\n\t\t// To have correct `diffResult`, we also compare view node text data with &nbsp; replaced by space.\n\t\tconst oldText = mutation.oldText.replace( /\\u00A0/g, ' ' );\n\n\t\t// Do nothing if mutations created same text.\n\t\tif ( oldText === newText ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst diffResult = diff( oldText, newText );\n\n\t\tconst { firstChangeAt, insertions, deletions } = calculateChanges( diffResult );\n\n\t\t// Try setting new model selection according to passed view selection.\n\t\tlet modelSelectionRange = null;\n\n\t\tif ( viewSelection ) {\n\t\t\tmodelSelectionRange = this.editing.mapper.toModelRange( viewSelection.getFirstRange() );\n\t\t}\n\n\t\t// Get the position in view and model where the changes will happen.\n\t\tconst viewPos = this.editing.view.createPositionAt( mutation.node, firstChangeAt );\n\t\tconst modelPos = this.editing.mapper.toModelPosition( viewPos );\n\t\tconst removeRange = this.editor.model.createRange( modelPos, modelPos.getShiftedBy( deletions ) );\n\t\tconst insertText = newText.substr( firstChangeAt, insertions );\n\n\t\tthis.editor.execute( 'input', {\n\t\t\ttext: insertText,\n\t\t\trange: removeRange,\n\t\t\tresultRange: modelSelectionRange\n\t\t} );\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleTextNodeInsertion( mutation ) {\n\t\tif ( mutation.type != 'children' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst change = getSingleTextNodeChange( mutation );\n\t\tconst viewPos = this.editing.view.createPositionAt( mutation.node, change.index );\n\t\tconst modelPos = this.editing.mapper.toModelPosition( viewPos );\n\t\tconst insertedText = change.values[ 0 ].data;\n\n\t\tthis.editor.execute( 'input', {\n\t\t\t// Replace &nbsp; inserted by the browser with normal space.\n\t\t\t// See comment in `_handleTextMutation`.\n\t\t\t// In this case we don't need to do this before `diff` because we diff whole nodes.\n\t\t\t// Just change &nbsp; in case there are some.\n\t\t\ttext: insertedText.replace( /\\u00A0/g, ' ' ),\n\t\t\trange: this.editor.model.createRange( modelPos )\n\t\t} );\n\t}\n}\n\n// Returns first common ancestor of all mutations that is either {@link module:engine/view/containerelement~ContainerElement}\n// or {@link module:engine/view/rootelement~RootElement}.\n//\n// @private\n// @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n// module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n// @returns {module:engine/view/containerelement~ContainerElement|engine/view/rootelement~RootElement|undefined}\nfunction getMutationsContainer( mutations ) {\n\tconst lca = mutations\n\t\t.map( mutation => mutation.node )\n\t\t.reduce( ( commonAncestor, node ) => {\n\t\t\treturn commonAncestor.getCommonAncestor( node, { includeSelf: true } );\n\t\t} );\n\n\tif ( !lca ) {\n\t\treturn;\n\t}\n\n\t// We need to look for container and root elements only, so check all LCA's\n\t// ancestors (starting from itself).\n\treturn lca.getAncestors( { includeSelf: true, parentFirst: true } )\n\t\t.find( element => element.is( 'containerElement' ) || element.is( 'rootElement' ) );\n}\n\n// Returns true if provided array contains content that won't be problematic during diffing and text mutation handling.\n//\n// @param {Array.<module:engine/model/node~Node>} children\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\nfunction isSafeForTextMutation( children, schema ) {\n\treturn children.every( child => schema.isInline( child ) );\n}\n\n// Calculates first change index and number of characters that should be inserted and deleted starting from that index.\n//\n// @private\n// @param diffResult\n// @returns {{insertions: number, deletions: number, firstChangeAt: *}}\nfunction calculateChanges( diffResult ) {\n\t// Index where the first change happens. Used to set the position from which nodes will be removed and where will be inserted.\n\tlet firstChangeAt = null;\n\t// Index where the last change happens. Used to properly count how many characters have to be removed and inserted.\n\tlet lastChangeAt = null;\n\n\t// Get `firstChangeAt` and `lastChangeAt`.\n\tfor ( let i = 0; i < diffResult.length; i++ ) {\n\t\tconst change = diffResult[ i ];\n\n\t\tif ( change != 'equal' ) {\n\t\t\tfirstChangeAt = firstChangeAt === null ? i : firstChangeAt;\n\t\t\tlastChangeAt = i;\n\t\t}\n\t}\n\n\t// How many characters, starting from `firstChangeAt`, should be removed.\n\tlet deletions = 0;\n\t// How many characters, starting from `firstChangeAt`, should be inserted.\n\tlet insertions = 0;\n\n\tfor ( let i = firstChangeAt; i <= lastChangeAt; i++ ) {\n\t\t// If there is no change (equal) or delete, the character is existing in `oldText`. We count it for removing.\n\t\tif ( diffResult[ i ] != 'insert' ) {\n\t\t\tdeletions++;\n\t\t}\n\n\t\t// If there is no change (equal) or insert, the character is existing in `newText`. We count it for inserting.\n\t\tif ( diffResult[ i ] != 'delete' ) {\n\t\t\tinsertions++;\n\t\t}\n\t}\n\n\treturn { insertions, deletions, firstChangeAt };\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/input\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport InputCommand from './inputcommand';\n\nimport injectUnsafeKeystrokesHandling from './utils/injectunsafekeystrokeshandling';\nimport injectTypingMutationsHandling from './utils/injecttypingmutationshandling';\n\n/**\n * Handles text input coming from the keyboard or other input methods.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Input extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Input';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// TODO The above default configuration value should be defined using editor.config.define() once it's fixed.\n\t\tconst inputCommand = new InputCommand( editor, editor.config.get( 'typing.undoStep' ) || 20 );\n\n\t\teditor.commands.add( 'input', inputCommand );\n\n\t\tinjectUnsafeKeystrokesHandling( editor );\n\t\tinjectTypingMutationsHandling( editor );\n\t}\n\n\t/**\n\t * Checks batch if it is a result of user input - e.g. typing.\n\t *\n\t *\t\tconst input = editor.plugins.get( 'Input' );\n\t *\n\t *\t\teditor.model.document.on( 'change:data', ( evt, batch ) => {\n\t *\t\t\tif ( input.isTyping( batch ) ) {\n\t *\t\t\t\tconsole.log( 'The user typed something...' );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * **Note:** This method checks if the batch was created using {@link module:typing/inputcommand~InputCommand 'input'}\n\t * command as typing changes coming from user input are inserted to the document using that command.\n\t *\n\t * @param {module:engine/model/batch~Batch} batch A batch to check.\n\t * @returns {Boolean}\n\t */\n\tisInput( batch ) {\n\t\tconst inputCommand = this.editor.commands.get( 'input' );\n\n\t\treturn inputCommand._batches.has( batch );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/deletecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport count from '@ckeditor/ckeditor5-utils/src/count';\n\nimport ChangeBuffer from './utils/changebuffer';\n\n/**\n * The delete command. Used by the {@link module:typing/delete~Delete delete feature} to handle the <kbd>Delete</kbd> and\n * <kbd>Backspace</kbd> keys.\n *\n * @extends module:core/command~Command\n */\nexport default class DeleteCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {'forward'|'backward'} direction The directionality of the delete describing in what direction it\n\t * should consume the content when the selection is collapsed.\n\t */\n\tconstructor( editor, direction ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The directionality of the delete describing in what direction it should\n\t\t * consume the content when the selection is collapsed.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'forward'|'backward'} #direction\n\t\t */\n\t\tthis.direction = direction;\n\n\t\t/**\n\t\t * Delete's change buffer used to group subsequent changes into batches.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {typing.ChangeBuffer} #buffer\n\t\t */\n\t\tthis._buffer = new ChangeBuffer( editor.model, editor.config.get( 'typing.undoStep' ) );\n\t}\n\n\t/**\n\t * The current change buffer.\n\t *\n\t * @type {module:typing/utils/changebuffer~ChangeBuffer}\n\t */\n\tget buffer() {\n\t\treturn this._buffer;\n\t}\n\n\t/**\n\t * Executes the delete command. Depending on whether the selection is collapsed or not, deletes its content\n\t * or a piece of content in the {@link #direction defined direction}.\n\t *\n\t * @fires execute\n\t * @param {Object} [options] The command options.\n\t * @param {'character'} [options.unit='character'] See {@link module:engine/model/utils/modifyselection~modifySelection}'s options.\n\t * @param {Number} [options.sequence=1] A number describing which subsequent delete event it is without the key being released.\n\t * See the {@link module:engine/view/document~Document#event:delete} event data.\n\t * @param {module:engine/model/selection~Selection} [options.selection] Selection to remove. If not set, current model selection\n\t * will be used.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tmodel.enqueueChange( this._buffer.batch, writer => {\n\t\t\tthis._buffer.lock();\n\n\t\t\tconst selection = writer.createSelection( options.selection || doc.selection );\n\n\t\t\t// Do not replace the whole selected content if selection was collapsed.\n\t\t\t// This prevents such situation:\n\t\t\t//\n\t\t\t// <h1></h1><p>[]</p>\t-->  <h1>[</h1><p>]</p> \t\t-->  <p></p>\n\t\t\t// starting content\t\t-->   after `modifySelection`\t-->  after `deleteContent`.\n\t\t\tconst doNotResetEntireContent = selection.isCollapsed;\n\n\t\t\t// Try to extend the selection in the specified direction.\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tmodel.modifySelection( selection, { direction: this.direction, unit: options.unit } );\n\t\t\t}\n\n\t\t\t// Check if deleting in an empty editor. See #61.\n\t\t\tif ( this._shouldEntireContentBeReplacedWithParagraph( options.sequence || 1 ) ) {\n\t\t\t\tthis._replaceEntireContentWithParagraph( writer );\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If selection is still collapsed, then there's nothing to delete.\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet changeCount = 0;\n\n\t\t\tselection.getFirstRange().getMinimalFlatRanges().forEach( range => {\n\t\t\t\tchangeCount += count(\n\t\t\t\t\trange.getWalker( { singleCharacters: true, ignoreElementEnd: true, shallow: true } )\n\t\t\t\t);\n\t\t\t} );\n\n\t\t\tmodel.deleteContent( selection, {\n\t\t\t\tdoNotResetEntireContent,\n\t\t\t\tdirection: this.direction\n\t\t\t} );\n\n\t\t\tthis._buffer.input( changeCount );\n\n\t\t\twriter.setSelection( selection );\n\n\t\t\tthis._buffer.unlock();\n\t\t} );\n\t}\n\n\t/**\n\t * If the user keeps <kbd>Backspace</kbd> or <kbd>Delete</kbd> key pressed, the content of the current\n\t * editable will be cleared. However, this will not yet lead to resetting the remaining block to a paragraph\n\t * (which happens e.g. when the user does <kbd>Ctrl</kbd> + <kbd>A</kbd>, <kbd>Backspace</kbd>).\n\t *\n\t * But, if the user pressed the key in an empty editable for the first time,\n\t * we want to replace the entire content with a paragraph if:\n\t *\n\t * * the current limit element is empty,\n\t * * the paragraph is allowed in the limit element,\n\t * * the limit doesn't already have a paragraph inside.\n\t *\n\t * See https://github.com/ckeditor/ckeditor5-typing/issues/61.\n\t *\n\t * @private\n\t * @param {Number} sequence A number describing which subsequent delete event it is without the key being released.\n\t * @returns {Boolean}\n\t */\n\t_shouldEntireContentBeReplacedWithParagraph( sequence ) {\n\t\t// Does nothing if user pressed and held the \"Backspace\" or \"Delete\" key.\n\t\tif ( sequence > 1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst selection = doc.selection;\n\t\tconst limitElement = model.schema.getLimitElement( selection );\n\n\t\t// If a collapsed selection contains the whole content it means that the content is empty\n\t\t// (from the user perspective).\n\t\tconst limitElementIsEmpty = selection.isCollapsed && selection.containsEntireContent( limitElement );\n\n\t\tif ( !limitElementIsEmpty ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( !model.schema.checkChild( limitElement, 'paragraph' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst limitElementFirstChild = limitElement.getChild( 0 );\n\n\t\t// Does nothing if the limit element already contains only a paragraph.\n\t\t// We ignore the case when paragraph might have some inline elements (<p><inlineWidget>[]</inlineWidget></p>)\n\t\t// because we don't support such cases yet and it's unclear whether inlineWidget shouldn't be a limit itself.\n\t\tif ( limitElementFirstChild && limitElementFirstChild.name === 'paragraph' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * The entire content is replaced with the paragraph. Selection is moved inside the paragraph.\n\t *\n\t * @private\n\t */\n\t_replaceEntireContentWithParagraph( writer ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst selection = doc.selection;\n\t\tconst limitElement = model.schema.getLimitElement( selection );\n\t\tconst paragraph = writer.createElement( 'paragraph' );\n\n\t\twriter.remove( writer.createRangeIn( limitElement ) );\n\t\twriter.insert( paragraph, limitElement );\n\n\t\twriter.setSelection( paragraph, 0 );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/deleteobserver\n */\n\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\nimport DomEventData from '@ckeditor/ckeditor5-engine/src/view/observer/domeventdata';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * Delete observer introduces the {@link module:engine/view/document~Document#event:delete} event.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class DeleteObserver extends Observer {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tconst document = view.document;\n\t\tlet sequence = 0;\n\n\t\tdocument.on( 'keyup', ( evt, data ) => {\n\t\t\tif ( data.keyCode == keyCodes.delete || data.keyCode == keyCodes.backspace ) {\n\t\t\t\tsequence = 0;\n\t\t\t}\n\t\t} );\n\n\t\tdocument.on( 'keydown', ( evt, data ) => {\n\t\t\tconst deleteData = {};\n\n\t\t\tif ( data.keyCode == keyCodes.delete ) {\n\t\t\t\tdeleteData.direction = 'forward';\n\t\t\t\tdeleteData.unit = 'character';\n\t\t\t} else if ( data.keyCode == keyCodes.backspace ) {\n\t\t\t\tdeleteData.direction = 'backward';\n\t\t\t\tdeleteData.unit = 'codePoint';\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst hasWordModifier = env.isMac ? data.altKey : data.ctrlKey;\n\t\t\tdeleteData.unit = hasWordModifier ? 'word' : deleteData.unit;\n\t\t\tdeleteData.sequence = ++sequence;\n\n\t\t\tfireViewDeleteEvent( evt, data.domEvent, deleteData );\n\t\t} );\n\n\t\t// `beforeinput` is handled only for Android devices. Desktop Chrome and iOS are skipped because they are working fine now.\n\t\tif ( env.isAndroid ) {\n\t\t\tdocument.on( 'beforeinput', ( evt, data ) => {\n\t\t\t\t// If event type is other than `deleteContentBackward` then this is not deleting.\n\t\t\t\tif ( data.domEvent.inputType != 'deleteContentBackward' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst deleteData = {\n\t\t\t\t\tunit: 'codepoint',\n\t\t\t\t\tdirection: 'backward',\n\t\t\t\t\tsequence: 1\n\t\t\t\t};\n\n\t\t\t\t// Android IMEs may change the DOM selection on `beforeinput` event so that the selection contains all the text\n\t\t\t\t// that the IME wants to remove. We will pass this information to `delete` event so proper part of the content is removed.\n\t\t\t\t//\n\t\t\t\t// Sometimes it is only expanding by a one character (in case of collapsed selection). In this case we don't need to\n\t\t\t\t// set a different selection to remove, it will work just fine.\n\t\t\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n\t\t\t\tif ( domSelection.anchorNode == domSelection.focusNode && domSelection.anchorOffset + 1 != domSelection.focusOffset ) {\n\t\t\t\t\tdeleteData.selectionToRemove = view.domConverter.domSelectionToView( domSelection );\n\t\t\t\t}\n\n\t\t\t\tfireViewDeleteEvent( evt, data.domEvent, deleteData );\n\t\t\t} );\n\t\t}\n\n\t\tfunction fireViewDeleteEvent( originalEvent, domEvent, deleteData ) {\n\t\t\t// Save the event object to check later if it was stopped or not.\n\t\t\tlet event;\n\t\t\tdocument.once( 'delete', evt => ( event = evt ), { priority: Number.POSITIVE_INFINITY } );\n\n\t\t\tdocument.fire( 'delete', new DomEventData( document, domEvent, deleteData ) );\n\n\t\t\t// Stop the original event if `delete` event was stopped.\n\t\t\t// https://github.com/ckeditor/ckeditor5/issues/753\n\t\t\tif ( event && event.stop.called ) {\n\t\t\t\toriginalEvent.stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve() {}\n}\n\n/**\n * Event fired when the user tries to delete content (e.g. presses <kbd>Delete</kbd> or <kbd>Backspace</kbd>).\n *\n * Note: This event is fired by the {@link module:typing/deleteobserver~DeleteObserver observer}\n * (usually registered by the {@link module:typing/delete~Delete delete feature}).\n *\n * @event module:engine/view/document~Document#event:delete\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n * @param {'forward'|'delete'} data.direction The direction in which the deletion should happen.\n * @param {'character'|'word'} data.unit The \"amount\" of content that should be deleted.\n * @param {Number} data.sequence A number describing which subsequent delete event it is without the key being released.\n * If it's 2 or more it means that the key was pressed and hold.\n * @param {module:engine/view/selection~Selection} [data.selectionToRemove] View selection which content should be removed. If not set,\n * current selection should be used.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/delete\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport DeleteCommand from './deletecommand';\nimport DeleteObserver from './deleteobserver';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * The delete and backspace feature. Handles the <kbd>Delete</kbd> and <kbd>Backspace</kbd> keys in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Delete extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Delete';\n\t}\n\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\tview.addObserver( DeleteObserver );\n\n\t\teditor.commands.add( 'forwardDelete', new DeleteCommand( editor, 'forward' ) );\n\t\teditor.commands.add( 'delete', new DeleteCommand( editor, 'backward' ) );\n\n\t\tthis.listenTo( viewDocument, 'delete', ( evt, data ) => {\n\t\t\tconst deleteCommandParams = { unit: data.unit, sequence: data.sequence };\n\n\t\t\t// If a specific (view) selection to remove was set, convert it to a model selection and set as a parameter for `DeleteCommand`.\n\t\t\tif ( data.selectionToRemove ) {\n\t\t\t\tconst modelSelection = editor.model.createSelection();\n\t\t\t\tconst ranges = [];\n\n\t\t\t\tfor ( const viewRange of data.selectionToRemove.getRanges() ) {\n\t\t\t\t\tranges.push( editor.editing.mapper.toModelRange( viewRange ) );\n\t\t\t\t}\n\n\t\t\t\tmodelSelection.setTo( ranges );\n\n\t\t\t\tdeleteCommandParams.selection = modelSelection;\n\t\t\t}\n\n\t\t\teditor.execute( data.direction == 'forward' ? 'forwardDelete' : 'delete', deleteCommandParams );\n\n\t\t\tdata.preventDefault();\n\n\t\t\tview.scrollToTheSelection();\n\t\t} );\n\n\t\t// Android IMEs have a quirk - they change DOM selection after the input changes were performed by the browser.\n\t\t// This happens on `keyup` event. Android doesn't know anything about our deletion and selection handling. Even if the selection\n\t\t// was changed during input events, IME remembers the position where the selection \"should\" be placed and moves it there.\n\t\t//\n\t\t// To prevent incorrect selection, we save the selection after deleting here and then re-set it on `keyup`. This has to be done\n\t\t// on DOM selection level, because on `keyup` the model selection is still the same as it was just after deletion, so it\n\t\t// wouldn't be changed and the fix would do nothing.\n\t\t//\n\t\tif ( env.isAndroid ) {\n\t\t\tlet domSelectionAfterDeletion = null;\n\n\t\t\tthis.listenTo( viewDocument, 'delete', ( evt, data ) => {\n\t\t\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n\t\t\t\tdomSelectionAfterDeletion = {\n\t\t\t\t\tanchorNode: domSelection.anchorNode,\n\t\t\t\t\tanchorOffset: domSelection.anchorOffset,\n\t\t\t\t\tfocusNode: domSelection.focusNode,\n\t\t\t\t\tfocusOffset: domSelection.focusOffset\n\t\t\t\t};\n\t\t\t}, { priority: 'lowest' } );\n\n\t\t\tthis.listenTo( viewDocument, 'keyup', ( evt, data ) => {\n\t\t\t\tif ( domSelectionAfterDeletion ) {\n\t\t\t\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n\t\t\t\t\tdomSelection.collapse( domSelectionAfterDeletion.anchorNode, domSelectionAfterDeletion.anchorOffset );\n\t\t\t\t\tdomSelection.extend( domSelectionAfterDeletion.focusNode, domSelectionAfterDeletion.focusOffset );\n\n\t\t\t\t\tdomSelectionAfterDeletion = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/typing\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Input from './input';\nimport Delete from './delete';\n\n/**\n * The typing feature. It handles typing.\n *\n * This is a \"glue\" plugin which loads the {@link module:typing/input~Input} and {@link module:typing/delete~Delete}\n * plugins.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Typing extends Plugin {\n\tstatic get requires() {\n\t\treturn [ Input, Delete ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Typing';\n\t}\n}\n\n/**\n * The configuration of the typing features. Used by the features from the `@ckeditor/ckeditor5-typing` package.\n *\n * Read more in {@link module:typing/typing~TypingConfig}.\n *\n * @member {module:typing/typing~TypingConfig} module:core/editor/editorconfig~EditorConfig#typing\n */\n\n/**\n * The configuration of the typing features. Used by the typing features in `@ckeditor/ckeditor5-typing` package.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\ttyping: ... // Typing feature options.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface TypingConfig\n */\n\n/**\n * The granularity of undo/redo for typing and deleting. The value `20` means (more or less) that a new undo step\n * is created every 20 characters are inserted or deleted.\n *\n * @member {Number} [module:typing/typing~TypingConfig#undoStep=20]\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport InsertOperation from './insertoperation';\nimport AttributeOperation from './attributeoperation';\nimport RenameOperation from './renameoperation';\nimport MarkerOperation from './markeroperation';\nimport MoveOperation from './moveoperation';\nimport RootAttributeOperation from './rootattributeoperation';\nimport MergeOperation from './mergeoperation';\nimport SplitOperation from './splitoperation';\nimport NoOperation from './nooperation';\nimport Range from '../range';\nimport Position from '../position';\n\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\n\nconst transformations = new Map();\n\n/**\n * @module engine/model/operation/transform\n */\n\n/**\n * Sets a transformation function to be be used to transform instances of class `OperationA` by instances of class `OperationB`.\n *\n * The `transformationFunction` is passed three parameters:\n *\n * * `a` - operation to be transformed, an instance of `OperationA`,\n * * `b` - operation to be transformed by, an instance of `OperationB`,\n * * {@link module:engine/model/operation/transform~TransformationContext `context`} - object with additional information about\n * transformation context.\n *\n * The `transformationFunction` should return transformation result, which is an array with one or multiple\n * {@link module:engine/model/operation/operation~Operation operation} instances.\n *\n * @protected\n * @param {Function} OperationA\n * @param {Function} OperationB\n * @param {Function} transformationFunction Function to use for transforming.\n */\nfunction setTransformation( OperationA, OperationB, transformationFunction ) {\n\tlet aGroup = transformations.get( OperationA );\n\n\tif ( !aGroup ) {\n\t\taGroup = new Map();\n\t\ttransformations.set( OperationA, aGroup );\n\t}\n\n\taGroup.set( OperationB, transformationFunction );\n}\n\n/**\n * Returns a previously set transformation function for transforming an instance of `OperationA` by an instance of `OperationB`.\n *\n * If no transformation was set for given pair of operations, {@link module:engine/model/operation/transform~noUpdateTransformation}\n * is returned. This means that if no transformation was set, the `OperationA` instance will not change when transformed\n * by the `OperationB` instance.\n *\n * @private\n * @param {Function} OperationA\n * @param {Function} OperationB\n * @returns {Function} Function set to transform an instance of `OperationA` by an instance of `OperationB`.\n */\nfunction getTransformation( OperationA, OperationB ) {\n\tconst aGroup = transformations.get( OperationA );\n\n\tif ( aGroup && aGroup.has( OperationB ) ) {\n\t\treturn aGroup.get( OperationB );\n\t}\n\n\treturn noUpdateTransformation;\n}\n\n/**\n * A transformation function that only clones operation to transform, without changing it.\n *\n * @private\n * @param {module:engine/model/operation/operation~Operation} a Operation to transform.\n * @returns {Array.<module:engine/model/operation/operation~Operation>}\n */\nfunction noUpdateTransformation( a ) {\n\treturn [ a ];\n}\n\n/**\n * Transforms operation `a` by operation `b`.\n *\n * @param {module:engine/model/operation/operation~Operation} a Operation to be transformed.\n * @param {module:engine/model/operation/operation~Operation} b Operation to transform by.\n * @param {module:engine/model/operation/transform~TransformationContext} context Transformation context for this transformation.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} Transformation result.\n */\nexport function transform( a, b, context = {} ) {\n\tconst transformationFunction = getTransformation( a.constructor, b.constructor );\n\n\ttry {\n\t\ta = a.clone();\n\n\t\treturn transformationFunction( a, b, context );\n\t} catch ( e ) {\n\t\t// @if CK_DEBUG // console.warn( 'Error during operation transformation!', e.message );\n\t\t// @if CK_DEBUG // console.warn( 'Transformed operation', a );\n\t\t// @if CK_DEBUG // console.warn( 'Operation transformed by', b );\n\t\t// @if CK_DEBUG // console.warn( 'context.aIsStrong', context.aIsStrong );\n\t\t// @if CK_DEBUG // console.warn( 'context.aWasUndone', context.aWasUndone );\n\t\t// @if CK_DEBUG // console.warn( 'context.bWasUndone', context.bWasUndone );\n\t\t// @if CK_DEBUG // console.warn( 'context.abRelation', context.abRelation );\n\t\t// @if CK_DEBUG // console.warn( 'context.baRelation', context.baRelation );\n\n\t\tthrow e;\n\t}\n}\n\n/**\n * Performs a transformation of two sets of operations - `operationsA` and `operationsB`. The transformation is two-way -\n * both transformed `operationsA` and transformed `operationsB` are returned.\n *\n * Note, that the first operation in each set should base on the same document state (\n * {@link module:engine/model/document~Document#version document version}).\n *\n * It is assumed that `operationsA` are \"more important\" during conflict resolution between two operations.\n *\n * New copies of both passed arrays and operations inside them are returned. Passed arguments are not altered.\n *\n * Base versions of the transformed operations sets are updated accordingly. For example, assume that base versions are `4`\n * and there are `3` operations in `operationsA` and `5` operations in `operationsB`. Then:\n *\n * * transformed `operationsA` will start from base version `9` (`4` base version + `5` operations B),\n * * transformed `operationsB` will start from base version `7` (`4` base version + `3` operations A).\n *\n * If no operation was broken into two during transformation, then both sets will end up with an operation that bases on version `11`:\n *\n * * transformed `operationsA` start from `9` and there are `3` of them, so the last will have `baseVersion` equal to `11`,\n * * transformed `operationsB` start from `7` and there are `5` of them, so the last will have `baseVersion` equal to `11`.\n *\n * @param {Array.<module:engine/model/operation/operation~Operation>} operationsA\n * @param {Array.<module:engine/model/operation/operation~Operation>} operationsB\n * @param {Object} options Additional transformation options.\n * @param {module:engine/model/document~Document|null} options.document Document which the operations change.\n * @param {Boolean} [options.useRelations=false] Whether during transformation relations should be used (used during undo for\n * better conflict resolution).\n * @param {Boolean} [options.padWithNoOps=false] Whether additional {@link module:engine/model/operation/nooperation~NoOperation}s\n * should be added to the transformation results to force the same last base version for both transformed sets (in case\n * if some operations got broken into multiple operations during transformation).\n * @returns {Object} Transformation result.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} return.operationsA Transformed `operationsA`.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} return.operationsB Transformed `operationsB`.\n * @returns {Map} return.originalOperations A map that links transformed operations to original operations. The keys are the transformed\n * operations and the values are the original operations from the input (`operationsA` and `operationsB`).\n */\nexport function transformSets( operationsA, operationsB, options ) {\n\t// Create new arrays so the originally passed arguments are not changed.\n\t// No need to clone operations, they are cloned as they are transformed.\n\toperationsA = operationsA.slice();\n\toperationsB = operationsB.slice();\n\n\tconst contextFactory = new ContextFactory( options.document, options.useRelations, options.forceWeakRemove );\n\tcontextFactory.setOriginalOperations( operationsA );\n\tcontextFactory.setOriginalOperations( operationsB );\n\n\tconst originalOperations = contextFactory.originalOperations;\n\n\t// If one of sets is empty there is simply nothing to transform, so return sets as they are.\n\tif ( operationsA.length == 0 || operationsB.length == 0 ) {\n\t\treturn { operationsA, operationsB, originalOperations };\n\t}\n\t//\n\t// Following is a description of transformation process:\n\t//\n\t// There are `operationsA` and `operationsB` to be transformed, both by both.\n\t//\n\t// So, suppose we have sets of two operations each: `operationsA` = `[ a1, a2 ]`, `operationsB` = `[ b1, b2 ]`.\n\t//\n\t// Remember, that we can only transform operations that base on the same context. We assert that `a1` and `b1` base on\n\t// the same context and we transform them. Then, we get `a1'` and `b1'`. `a2` bases on a context with `a1` -- `a2`\n\t// is an operation that followed `a1`. Similarly, `b2` bases on a context with `b1`.\n\t//\n\t// However, since `a1'` is a result of transformation by `b1`, `a1'` now also has a context with `b1`. This means that\n\t// we can safely transform `a1'` by `b2`. As we finish transforming `a1`, we also transformed all `operationsB`.\n\t// All `operationsB` also have context including `a1`. Now, we can properly transform `a2` by those operations.\n\t//\n\t// The transformation process can be visualized on a transformation diagram (\"diamond diagram\"):\n\t//\n\t//          [the initial state]\n\t//         [common for a1 and b1]\n\t//\n\t//                   *\n\t//                  / \\\n\t//                 /   \\\n\t//               b1     a1\n\t//               /       \\\n\t//              /         \\\n\t//             *           *\n\t//            / \\         / \\\n\t//           /   \\       /   \\\n\t//         b2    a1'   b1'    a2\n\t//         /       \\   /       \\\n\t//        /         \\ /         \\\n\t//       *           *           *\n\t//        \\         / \\         /\n\t//         \\       /   \\       /\n\t//        a1''   b2'   a2'   b1''\n\t//           \\   /       \\   /\n\t//            \\ /         \\ /\n\t//             *           *\n\t//              \\         /\n\t//               \\       /\n\t//              a2''   b2''\n\t//                 \\   /\n\t//                  \\ /\n\t//                   *\n\t//\n\t//           [the final state]\n\t//\n\t// The final state can be reached from the initial state by applying `a1`, `a2`, `b1''` and `b2''`, as well as by\n\t// applying `b1`, `b2`, `a1''`, `a2''`. Note how the operations get to a proper common state before each pair is\n\t// transformed.\n\t//\n\t// Another thing to consider is that an operation during transformation can be broken into multiple operations.\n\t// Suppose that `a1` * `b1` = `[ a11', a12' ]` (instead of `a1'` that we considered previously).\n\t//\n\t// In that case, we leave `a12'` for later and we continue transforming `a11'` until it is transformed by all `operationsB`\n\t// (in our case it is just `b2`). At this point, `b1` is transformed by \"whole\" `a1`, while `b2` is only transformed\n\t// by `a11'`. Similarly, `a12'` is only transformed by `b1`. This leads to a conclusion that we need to start transforming `a12'`\n\t// from the moment just after it was broken. So, `a12'` is transformed by `b2`. Now, \"the whole\" `a1` is transformed\n\t// by `operationsB`, while all `operationsB` are transformed by \"the whole\" `a1`. This means that we can continue with\n\t// following `operationsA` (in our case it is just `a2`).\n\t//\n\t// Of course, also `operationsB` can be broken. However, since we focus on transforming operation `a` to the end,\n\t// the only thing to do is to store both pieces of operation `b`, so that the next transformed operation `a` will\n\t// be transformed by both of them.\n\t//\n\t//                       *\n\t//                      / \\\n\t//                     /   \\\n\t//                    /     \\\n\t//                  b1       a1\n\t//                  /         \\\n\t//                 /           \\\n\t//                /             \\\n\t//               *               *\n\t//              / \\             / \\\n\t//             /  a11'         /   \\\n\t//            /     \\         /     \\\n\t//          b2       *      b1'      a2\n\t//          /       / \\     /         \\\n\t//         /       /  a12' /           \\\n\t//        /       /     \\ /             \\\n\t//       *       b2'     *               *\n\t//        \\     /       / \\             /\n\t//       a11'' /     b21'' \\           /\n\t//          \\ /       /     \\         /\n\t//           *       *      a2'     b1''\n\t//            \\     / \\       \\     /\n\t//          a12'' b22''\\       \\   /\n\t//              \\ /     \\       \\ /\n\t//               *      a2''     *\n\t//                \\       \\     /\n\t//                 \\       \\  b21'''\n\t//                  \\       \\ /\n\t//                a2'''      *\n\t//                    \\     /\n\t//                     \\  b22'''\n\t//                      \\ /\n\t//                       *\n\t//\n\t// Note, how `a1` is broken and transformed into `a11'` and `a12'`, while `b2'` got broken and transformed into `b21''` and `b22''`.\n\t//\n\t// Having all that on mind, here is an outline for the transformation process algorithm:\n\t//\n\t// 1. We have `operationsA` and `operationsB` array, which we dynamically update as the transformation process goes.\n\t//\n\t// 2. We take next (or first) operation from `operationsA` and check from which operation `b` we need to start transforming it.\n\t// All original `operationsA` are set to be transformed starting from the first operation `b`.\n\t//\n\t// 3. We take operations from `operationsB`, one by one, starting from the correct one, and transform operation `a`\n\t// by operation `b` (and vice versa). We update `operationsA` and `operationsB` by replacing the original operations\n\t// with the transformation results.\n\t//\n\t// 4. If operation is broken into multiple operations, we save all the new operations in the place of the\n\t// original operation.\n\t//\n\t// 5. Additionally, if operation `a` was broken, for the \"new\" operation, we remember from which operation `b` it should\n\t// be transformed by.\n\t//\n\t// 6. We continue transforming \"current\" operation `a` until it is transformed by all `operationsB`. Then, go to 2.\n\t// unless the last operation `a` was transformed.\n\t//\n\t// The actual implementation of the above algorithm is slightly different, as only one loop (while) is used.\n\t// The difference is that we have \"current\" `a` operation to transform and we store the index of the next `b` operation\n\t// to transform by. Each loop operates on two indexes then: index pointing to currently processed `a` operation and\n\t// index pointing to next `b` operation. Each loop is just one `a * b` + `b * a` transformation. After each loop\n\t// operation `b` index is updated. If all `b` operations were visited for the current `a` operation, we change\n\t// current `a` operation index to the next one.\n\t//\n\n\t// For each operation `a`, keeps information what is the index in `operationsB` from which the transformation should start.\n\tconst nextTransformIndex = new WeakMap();\n\n\t// For all the original `operationsA`, set that they should be transformed starting from the first of `operationsB`.\n\tfor ( const op of operationsA ) {\n\t\tnextTransformIndex.set( op, 0 );\n\t}\n\n\t// Additional data that is used for some postprocessing after the main transformation process is done.\n\tconst data = {\n\t\tnextBaseVersionA: operationsA[ operationsA.length - 1 ].baseVersion + 1,\n\t\tnextBaseVersionB: operationsB[ operationsB.length - 1 ].baseVersion + 1,\n\t\toriginalOperationsACount: operationsA.length,\n\t\toriginalOperationsBCount: operationsB.length\n\t};\n\n\t// Index of currently transformed operation `a`.\n\tlet i = 0;\n\n\t// While not all `operationsA` are transformed...\n\twhile ( i < operationsA.length ) {\n\t\t// Get \"current\" operation `a`.\n\t\tconst opA = operationsA[ i ];\n\n\t\t// For the \"current\" operation `a`, get the index of the next operation `b` to transform by.\n\t\tconst indexB = nextTransformIndex.get( opA );\n\n\t\t// If operation `a` was already transformed by every operation `b`, change \"current\" operation `a` to the next one.\n\t\tif ( indexB == operationsB.length ) {\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst opB = operationsB[ indexB ];\n\n\t\t// Transform `a` by `b` and `b` by `a`.\n\t\tconst newOpsA = transform( opA, opB, contextFactory.getContext( opA, opB, true ) );\n\t\tconst newOpsB = transform( opB, opA, contextFactory.getContext( opB, opA, false ) );\n\t\t// As a result we get one or more `newOpsA` and one or more `newOpsB` operations.\n\n\t\t// Update contextual information about operations.\n\t\tcontextFactory.updateRelation( opA, opB );\n\n\t\tcontextFactory.setOriginalOperations( newOpsA, opA );\n\t\tcontextFactory.setOriginalOperations( newOpsB, opB );\n\n\t\t// For new `a` operations, update their index of the next operation `b` to transform them by.\n\t\t//\n\t\t// This is needed even if there was only one result (`a` was not broken) because that information is used\n\t\t// at the beginning of this loop every time.\n\t\tfor ( const newOpA of newOpsA ) {\n\t\t\t// Acknowledge, that operation `b` also might be broken into multiple operations.\n\t\t\t//\n\t\t\t// This is why we raise `indexB` not just by 1. If `newOpsB` are multiple operations, they will be\n\t\t\t// spliced in the place of `opB`. So we need to change `transformBy` accordingly, so that an operation won't\n\t\t\t// be transformed by the same operation (part of it) again.\n\t\t\tnextTransformIndex.set( newOpA, indexB + newOpsB.length );\n\t\t}\n\n\t\t// Update `operationsA` and `operationsB` with the transformed versions.\n\t\toperationsA.splice( i, 1, ...newOpsA );\n\t\toperationsB.splice( indexB, 1, ...newOpsB );\n\t}\n\n\tif ( options.padWithNoOps ) {\n\t\t// If no-operations padding is enabled, count how many extra `a` and `b` operations were generated.\n\t\tconst brokenOperationsACount = operationsA.length - data.originalOperationsACount;\n\t\tconst brokenOperationsBCount = operationsB.length - data.originalOperationsBCount;\n\n\t\t// Then, if that number is not the same, pad `operationsA` or `operationsB` with correct number of no-ops so\n\t\t// that the base versions are equalled.\n\t\t//\n\t\t// Note that only one array will be updated, as only one of those subtractions can be greater than zero.\n\t\tpadWithNoOps( operationsA, brokenOperationsBCount - brokenOperationsACount );\n\t\tpadWithNoOps( operationsB, brokenOperationsACount - brokenOperationsBCount );\n\t}\n\n\t// Finally, update base versions of transformed operations.\n\tupdateBaseVersions( operationsA, data.nextBaseVersionB );\n\tupdateBaseVersions( operationsB, data.nextBaseVersionA );\n\n\treturn { operationsA, operationsB, originalOperations };\n}\n\n// Gathers additional data about operations processed during transformation. Can be used to obtain contextual information\n// about two operations that are about to be transformed. This contextual information can be used for better conflict resolution.\nclass ContextFactory {\n\t// Creates `ContextFactory` instance.\n\t//\n\t// @param {module:engine/model/document~Document} document Document which the operations change.\n\t// @param {Boolean} useRelations Whether during transformation relations should be used (used during undo for\n\t// better conflict resolution).\n\t// @param {Boolean} [forceWeakRemove=false] If set to `false`, remove operation will be always stronger than move operation,\n\t// so the removed nodes won't end up back in the document root. When set to `true`, context data will be used.\n\tconstructor( document, useRelations, forceWeakRemove = false ) {\n\t\t// For each operation that is created during transformation process, we keep a reference to the original operation\n\t\t// which it comes from. The original operation works as a kind of \"identifier\". Every contextual information\n\t\t// gathered during transformation that we want to save for given operation, is actually saved for the original operation.\n\t\t// This way no matter if operation `a` is cloned, then transformed, even breaks, we still have access to the previously\n\t\t// gathered data through original operation reference.\n\t\tthis.originalOperations = new Map();\n\n\t\t// `model.History` instance which information about undone operations will be taken from.\n\t\tthis._history = document.history;\n\n\t\t// Whether additional context should be used.\n\t\tthis._useRelations = useRelations;\n\n\t\tthis._forceWeakRemove = !!forceWeakRemove;\n\n\t\t// Relations is a double-map structure (maps in map) where for two operations we store how those operations were related\n\t\t// to each other. Those relations are evaluated during transformation process. For every transformated pair of operations\n\t\t// we keep relations between them.\n\t\tthis._relations = new Map();\n\t}\n\n\t// Sets \"original operation\" for given operations.\n\t//\n\t// During transformation process, operations are cloned, then changed, then processed again, sometimes broken into two\n\t// or multiple operations. When gathering additional data it is important that all operations can be somehow linked\n\t// so a cloned and transformed \"version\" still kept track of the data assigned earlier to it.\n\t//\n\t// The original operation object will be used as such an universal linking id. Throughout the transformation process\n\t// all cloned operations will refer to \"the original operation\" when storing and reading additional data.\n\t//\n\t// If `takeFrom` is not set, each operation from `operations` array will be assigned itself as \"the original operation\".\n\t// This should be used as an initialization step.\n\t//\n\t// If `takeFrom` is set, each operation from `operations` will be assigned the same original operation as assigned\n\t// for `takeFrom` operation. This should be used to update original operations. It should be used in a way that\n\t// `operations` are the result of `takeFrom` transformation to ensure proper \"original operation propagation\".\n\t//\n\t// @param {Array.<module:engine/model/operation/operation~Operation>} operations\n\t// @param {module:engine/model/operation/operation~Operation|null} [takeFrom=null]\n\tsetOriginalOperations( operations, takeFrom = null ) {\n\t\tconst originalOperation = takeFrom ? this.originalOperations.get( takeFrom ) : null;\n\n\t\tfor ( const operation of operations ) {\n\t\t\tthis.originalOperations.set( operation, originalOperation || operation );\n\t\t}\n\t}\n\n\t// Saves a relation between operations `opA` and `opB`.\n\t//\n\t// Relations are then later used to help solve conflicts when operations are transformed.\n\t//\n\t// @param {module:engine/model/operation/operation~Operation} opA\n\t// @param {module:engine/model/operation/operation~Operation} opB\n\tupdateRelation( opA, opB ) {\n\t\t// The use of relations is described in a bigger detail in transformation functions.\n\t\t//\n\t\t// In brief, this function, for specified pairs of operation types, checks how positions defined in those operations relate.\n\t\t// Then those relations are saved. For example, for two move operations, it is saved if one of those operations target\n\t\t// position is before the other operation source position. This kind of information gives contextual information when\n\t\t// transformation is used during undo. Similar checks are done for other pairs of operations.\n\t\t//\n\t\tswitch ( opA.constructor ) {\n\t\t\tcase MoveOperation: {\n\t\t\t\tswitch ( opB.constructor ) {\n\t\t\t\t\tcase MergeOperation: {\n\t\t\t\t\t\tif ( opA.targetPosition.isEqual( opB.sourcePosition ) || opB.movedRange.containsPosition( opA.targetPosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'insertAtSource' );\n\t\t\t\t\t\t} else if ( opA.targetPosition.isEqual( opB.deletionPosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'insertBetween' );\n\t\t\t\t\t\t} else if ( opA.targetPosition.isAfter( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'moveTargetAfter' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase MoveOperation: {\n\t\t\t\t\t\tif ( opA.targetPosition.isEqual( opB.sourcePosition ) || opA.targetPosition.isBefore( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'insertBefore' );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'insertAfter' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase SplitOperation: {\n\t\t\t\tswitch ( opB.constructor ) {\n\t\t\t\t\tcase MergeOperation: {\n\t\t\t\t\t\tif ( opA.splitPosition.isBefore( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'splitBefore' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase MoveOperation: {\n\t\t\t\t\t\tif ( opA.splitPosition.isEqual( opB.sourcePosition ) || opA.splitPosition.isBefore( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'splitBefore' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase MergeOperation: {\n\t\t\t\tswitch ( opB.constructor ) {\n\t\t\t\t\tcase MergeOperation: {\n\t\t\t\t\t\tif ( !opA.targetPosition.isEqual( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'mergeTargetNotMoved' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( opA.sourcePosition.isEqual( opB.targetPosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'mergeSourceNotMoved' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( opA.sourcePosition.isEqual( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'mergeSameElement' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase SplitOperation: {\n\t\t\t\t\t\tif ( opA.sourcePosition.isEqual( opB.splitPosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'splitAtSource' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase MarkerOperation: {\n\t\t\t\tconst markerRange = opA.newRange;\n\n\t\t\t\tif ( !markerRange ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tswitch ( opB.constructor ) {\n\t\t\t\t\tcase MoveOperation: {\n\t\t\t\t\t\tconst movedRange = Range._createFromPositionAndShift( opB.sourcePosition, opB.howMany );\n\n\t\t\t\t\t\tconst affectedLeft = movedRange.containsPosition( markerRange.start ) ||\n\t\t\t\t\t\t\tmovedRange.start.isEqual( markerRange.start );\n\n\t\t\t\t\t\tconst affectedRight = movedRange.containsPosition( markerRange.end ) ||\n\t\t\t\t\t\t\tmovedRange.end.isEqual( markerRange.end );\n\n\t\t\t\t\t\tif ( ( affectedLeft || affectedRight ) && !movedRange.containsRange( markerRange ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, {\n\t\t\t\t\t\t\t\tside: affectedLeft ? 'left' : 'right',\n\t\t\t\t\t\t\t\tpath: affectedLeft ? markerRange.start.path.slice() : markerRange.end.path.slice()\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase MergeOperation: {\n\t\t\t\t\t\tconst wasInLeftElement = markerRange.start.isEqual( opB.targetPosition );\n\t\t\t\t\t\tconst wasStartBeforeMergedElement = markerRange.start.isEqual( opB.deletionPosition );\n\t\t\t\t\t\tconst wasEndBeforeMergedElement = markerRange.end.isEqual( opB.deletionPosition );\n\t\t\t\t\t\tconst wasInRightElement = markerRange.end.isEqual( opB.sourcePosition );\n\n\t\t\t\t\t\tif ( wasInLeftElement || wasStartBeforeMergedElement || wasEndBeforeMergedElement || wasInRightElement ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, {\n\t\t\t\t\t\t\t\twasInLeftElement,\n\t\t\t\t\t\t\t\twasStartBeforeMergedElement,\n\t\t\t\t\t\t\t\twasEndBeforeMergedElement,\n\t\t\t\t\t\t\t\twasInRightElement\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Evaluates and returns contextual information about two given operations `opA` and `opB` which are about to be transformed.\n\t//\n\t// @param {module:engine/model/operation/operation~Operation} opA\n\t// @param {module:engine/model/operation/operation~Operation} opB\n\t// @returns {module:engine/model/operation/transform~TransformationContext}\n\tgetContext( opA, opB, aIsStrong ) {\n\t\treturn {\n\t\t\taIsStrong,\n\t\t\taWasUndone: this._wasUndone( opA ),\n\t\t\tbWasUndone: this._wasUndone( opB ),\n\t\t\tabRelation: this._useRelations ? this._getRelation( opA, opB ) : null,\n\t\t\tbaRelation: this._useRelations ? this._getRelation( opB, opA ) : null,\n\t\t\tforceWeakRemove: this._forceWeakRemove\n\t\t};\n\t}\n\n\t// Returns whether given operation `op` has already been undone.\n\t//\n\t// Information whether an operation was undone gives more context when making a decision when two operations are in conflict.\n\t//\n\t// @param {module:engine/model/operation/operation~Operation} op\n\t// @returns {Boolean}\n\t_wasUndone( op ) {\n\t\t// For `op`, get its original operation. After all, if `op` is a clone (or even transformed clone) of another\n\t\t// operation, literally `op` couldn't be undone. It was just generated. If anything, it was the operation it origins\n\t\t// from which was undone. So get that original operation.\n\t\tconst originalOp = this.originalOperations.get( op );\n\n\t\t// And check with the document if the original operation was undone.\n\t\treturn originalOp.wasUndone || this._history.isUndoneOperation( originalOp );\n\t}\n\n\t// Returns a relation between `opA` and an operation which is undone by `opB`. This can be `String` value if a relation\n\t// was set earlier or `null` if there was no relation between those operations.\n\t//\n\t// This is a little tricky to understand, so let's compare it to `ContextFactory#_wasUndone`.\n\t//\n\t// When `wasUndone( opB )` is used, we check if the `opB` has already been undone. It is obvious, that the\n\t// undoing operation must happen after the undone operation. So, essentially, we have `opB`, we take document history,\n\t// we look forward in the future and ask if in that future `opB` was undone.\n\t//\n\t// Relations is a backward process to `wasUndone()`.\n\t//\n\t// Long story short - using relations is asking what happened in the past. Looking back. This time we have an undoing\n\t// operation `opB` which has undone some other operation. When there is a transformation `opA` x `opB` and there is\n\t// a conflict to solve and `opB` is an undoing operation, we can look back in the history and see what was a relation\n\t// between `opA` and the operation which `opB` undone. Basing on that relation from the past, we can now make\n\t// a better decision when resolving a conflict between two operations, because we know more about the context of\n\t// those two operations.\n\t//\n\t// This is why this function does not return a relation directly between `opA` and `opB` because we need to look\n\t// back to search for a meaningful contextual information.\n\t//\n\t// @param {module:engine/model/operation/operation~Operation} opA\n\t// @param {module:engine/model/operation/operation~Operation} opB\n\t// @returns {String|null}\n\t_getRelation( opA, opB ) {\n\t\t// Get the original operation. Similarly as in `wasUndone()` it is used as an universal identifier for stored data.\n\t\tconst origB = this.originalOperations.get( opB );\n\t\tconst undoneB = this._history.getUndoneOperation( origB );\n\n\t\t// If `opB` is not undoing any operation, there is no relation.\n\t\tif ( !undoneB ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst origA = this.originalOperations.get( opA );\n\t\tconst relationsA = this._relations.get( origA );\n\n\t\t// Get all relations for `opA`, and check if there is a relation with `opB`-undone-counterpart. If so, return it.\n\t\tif ( relationsA ) {\n\t\t\treturn relationsA.get( undoneB ) || null;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t// Helper function for `ContextFactory#updateRelations`.\n\t//\n\t// @private\n\t// @param {module:engine/model/operation/operation~Operation} opA\n\t// @param {module:engine/model/operation/operation~Operation} opB\n\t// @param {String} relation\n\t_setRelation( opA, opB, relation ) {\n\t\t// As always, setting is for original operations, not the clones/transformed operations.\n\t\tconst origA = this.originalOperations.get( opA );\n\t\tconst origB = this.originalOperations.get( opB );\n\n\t\tlet relationsA = this._relations.get( origA );\n\n\t\tif ( !relationsA ) {\n\t\t\trelationsA = new Map();\n\t\t\tthis._relations.set( origA, relationsA );\n\t\t}\n\n\t\trelationsA.set( origB, relation );\n\t}\n}\n\n/**\n * Holds additional contextual information about a transformed pair of operations (`a` and `b`). Those information\n * can be used for better conflict resolving.\n *\n * @typedef {Object} module:engine/model/operation/transform~TransformationContext\n *\n * @property {Boolean} aIsStrong Whether `a` is strong operation in this transformation, or weak.\n * @property {Boolean} aWasUndone Whether `a` operation was undone.\n * @property {Boolean} bWasUndone Whether `b` operation was undone.\n * @property {String|null} abRelation The relation between `a` operation and an operation undone by `b` operation.\n * @property {String|null} baRelation The relation between `b` operation and an operation undone by `a` operation.\n */\n\n/**\n * An utility function that updates {@link module:engine/model/operation/operation~Operation#baseVersion base versions}\n * of passed operations.\n *\n * The function simply sets `baseVersion` as a base version of the first passed operation and then increments it for\n * each following operation in `operations`.\n *\n * @private\n * @param {Array.<module:engine/model/operation/operation~Operation>} operations Operations to update.\n * @param {Number} baseVersion Base version to set for the first operation in `operations`.\n */\nfunction updateBaseVersions( operations, baseVersion ) {\n\tfor ( const operation of operations ) {\n\t\toperation.baseVersion = baseVersion++;\n\t}\n}\n\n/**\n * Adds `howMany` instances of {@link module:engine/model/operation/nooperation~NoOperation} to `operations` set.\n *\n * @private\n * @param {Array.<module:engine/model/operation/operation~Operation>} operations\n * @param {Number} howMany\n */\nfunction padWithNoOps( operations, howMany ) {\n\tfor ( let i = 0; i < howMany; i++ ) {\n\t\toperations.push( new NoOperation( 0 ) );\n\t}\n}\n\n// -----------------------\n\nsetTransformation( AttributeOperation, AttributeOperation, ( a, b, context ) => {\n\t// If operations in conflict, check if their ranges intersect and manage them properly.\n\t//\n\t// Operations can be in conflict only if:\n\t//\n\t// * their key is the same (they change the same attribute), and\n\t// * they are in the same parent (operations for ranges [ 1 ] - [ 3 ] and [ 2, 0 ] - [ 2, 5 ] change different\n\t// elements and can't be in conflict).\n\tif ( a.key === b.key && a.range.start.hasSameParentAs( b.range.start ) ) {\n\t\t// First, we want to apply change to the part of a range that has not been changed by the other operation.\n\t\tconst operations = a.range.getDifference( b.range ).map( range => {\n\t\t\treturn new AttributeOperation( range, a.key, a.oldValue, a.newValue, 0 );\n\t\t} );\n\n\t\t// Then we take care of the common part of ranges.\n\t\tconst common = a.range.getIntersection( b.range );\n\n\t\tif ( common ) {\n\t\t\t// If this operation is more important, we also want to apply change to the part of the\n\t\t\t// original range that has already been changed by the other operation. Since that range\n\t\t\t// got changed we also have to update `oldValue`.\n\t\t\tif ( context.aIsStrong ) {\n\t\t\t\toperations.push( new AttributeOperation( common, b.key, b.newValue, a.newValue, 0 ) );\n\t\t\t}\n\t\t}\n\n\t\tif ( operations.length == 0 ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\n\t\treturn operations;\n\t} else {\n\t\t// If operations don't conflict, simply return an array containing just a clone of this operation.\n\t\treturn [ a ];\n\t}\n} );\n\nsetTransformation( AttributeOperation, InsertOperation, ( a, b ) => {\n\t// Case 1:\n\t//\n\t// The attribute operation range includes the position where nodes were inserted.\n\t// There are two possible scenarios: the inserted nodes were text and they should receive attributes or\n\t// the inserted nodes were elements and they should not receive attributes.\n\t//\n\tif ( a.range.start.hasSameParentAs( b.position ) && a.range.containsPosition( b.position ) ) {\n\t\t// If new nodes should not receive attributes, two separated ranges will be returned.\n\t\t// Otherwise, one expanded range will be returned.\n\t\tconst range = a.range._getTransformedByInsertion( b.position, b.howMany, !b.shouldReceiveAttributes );\n\t\tconst result = range.map( r => {\n\t\t\treturn new AttributeOperation( r, a.key, a.oldValue, a.newValue, a.baseVersion );\n\t\t} );\n\n\t\tif ( b.shouldReceiveAttributes ) {\n\t\t\t// `AttributeOperation#range` includes some newly inserted text.\n\t\t\t// The operation should also change the attribute of that text. An example:\n\t\t\t//\n\t\t\t// Bold should be applied on the following range:\n\t\t\t// <p>Fo[zb]ar</p>\n\t\t\t//\n\t\t\t// In meantime, new text is typed:\n\t\t\t// <p>Fozxxbar</p>\n\t\t\t//\n\t\t\t// Bold should be applied also on the new text:\n\t\t\t// <p>Fo[zxxb]ar</p>\n\t\t\t// <p>Fo<$text bold=\"true\">zxxb</$text>ar</p>\n\t\t\t//\n\t\t\t// There is a special case to consider here to consider.\n\t\t\t//\n\t\t\t// Consider setting an attribute with multiple possible values, for example `highlight`. The inserted text might\n\t\t\t// have already an attribute value applied and the `oldValue` property of the attribute operation might be wrong:\n\t\t\t//\n\t\t\t// Attribute `highlight=\"yellow\"` should be applied on the following range:\n\t\t\t// <p>Fo[zb]ar<p>\n\t\t\t//\n\t\t\t// In meantime, character `x` with `highlight=\"red\"` is typed:\n\t\t\t// <p>Fo[z<$text highlight=\"red\">x</$text>b]ar</p>\n\t\t\t//\n\t\t\t// In this case we cannot simply apply operation changing the attribute value from `null` to `\"yellow\"` for the whole range\n\t\t\t// because that would lead to an exception (`oldValue` is incorrect for `x`).\n\t\t\t//\n\t\t\t// We also cannot break the original range as this would mess up a scenario when there are multiple following\n\t\t\t// insert operations, because then only the first inserted character is included in those ranges:\n\t\t\t// <p>Fo[z][x][b]ar</p>   -->   <p>Fo[z][x]x[b]ar</p>   -->   <p>Fo[z][x]xx[b]ar</p>\n\t\t\t//\n\t\t\t// So, the attribute range needs be expanded, no matter what attributes are set on the inserted nodes:\n\t\t\t//\n\t\t\t// <p>Fo[z<$text highlight=\"red\">x</$text>b]ar</p>      <--- Change from `null` to `yellow`, throwing an exception.\n\t\t\t//\n\t\t\t// But before that operation would be applied, we will add an additional attribute operation that will change\n\t\t\t// attributes on the inserted nodes in a way which would make the original operation correct:\n\t\t\t//\n\t\t\t// <p>Fo[z{<$text highlight=\"red\">}x</$text>b]ar</p>    <--- Change range `{}` from `red` to `null`.\n\t\t\t// <p>Fo[zxb]ar</p>                                     <--- Now change from `null` to `yellow` is completely fine.\n\t\t\t//\n\n\t\t\t// Generate complementary attribute operation. Be sure to add it before the original operation.\n\t\t\tconst op = _getComplementaryAttributeOperations( b, a.key, a.oldValue );\n\n\t\t\tif ( op ) {\n\t\t\t\tresult.unshift( op );\n\t\t\t}\n\t\t}\n\n\t\t// If nodes should not receive new attribute, we are done here.\n\t\treturn result;\n\t}\n\n\t// If insert operation is not expanding the attribute operation range, simply transform the range.\n\ta.range = a.range._getTransformedByInsertion( b.position, b.howMany, false )[ 0 ];\n\n\treturn [ a ];\n} );\n\n/**\n * Helper function for `AttributeOperation` x `InsertOperation` (and reverse) transformation.\n *\n * For given `insertOperation` it checks the inserted node if it has an attribute `key` set to a value different\n * than `newValue`. If so, it generates an `AttributeOperation` which changes the value of `key` attribute to `newValue`.\n *\n * @private\n * @param {module:engine/model/operation/insertoperation~InsertOperation} insertOperation\n * @param {String} key\n * @param {*} newValue\n * @returns {module:engine/model/operation/attributeoperation~AttributeOperation|null}\n */\nfunction _getComplementaryAttributeOperations( insertOperation, key, newValue ) {\n\tconst nodes = insertOperation.nodes;\n\n\t// At the beginning we store the attribute value from the first node.\n\tconst insertValue = nodes.getNode( 0 ).getAttribute( key );\n\n\tif ( insertValue == newValue ) {\n\t\treturn null;\n\t}\n\n\tconst range = new Range( insertOperation.position, insertOperation.position.getShiftedBy( insertOperation.howMany ) );\n\n\treturn new AttributeOperation( range, key, insertValue, newValue, 0 );\n}\n\nsetTransformation( AttributeOperation, MergeOperation, ( a, b ) => {\n\tconst ranges = [];\n\n\t// Case 1:\n\t//\n\t// Attribute change on the merged element. In this case, the merged element was moved to the graveyard.\n\t// An additional attribute operation that will change the (re)moved element needs to be generated.\n\t//\n\tif ( a.range.start.hasSameParentAs( b.deletionPosition ) ) {\n\t\tif ( a.range.containsPosition( b.deletionPosition ) || a.range.start.isEqual( b.deletionPosition ) ) {\n\t\t\tranges.push( Range._createFromPositionAndShift( b.graveyardPosition, 1 ) );\n\t\t}\n\t}\n\n\tconst range = a.range._getTransformedByMergeOperation( b );\n\n\t// Do not add empty (collapsed) ranges to the result. `range` may be collapsed if it contained only the merged element.\n\tif ( !range.isCollapsed ) {\n\t\tranges.push( range );\n\t}\n\n\t// Create `AttributeOperation`s out of the ranges.\n\treturn ranges.map( range => {\n\t\treturn new AttributeOperation( range, a.key, a.oldValue, a.newValue, a.baseVersion );\n\t} );\n} );\n\nsetTransformation( AttributeOperation, MoveOperation, ( a, b ) => {\n\tconst ranges = _breakRangeByMoveOperation( a.range, b );\n\n\t// Create `AttributeOperation`s out of the ranges.\n\treturn ranges.map( range => new AttributeOperation( range, a.key, a.oldValue, a.newValue, a.baseVersion ) );\n} );\n\n// Helper function for `AttributeOperation` x `MoveOperation` transformation.\n//\n// Takes the passed `range` and transforms it by move operation `moveOp` in a specific way. Only top-level nodes of `range`\n// are considered to be in the range. If move operation moves nodes deep from inside of the range, those nodes won't\n// be included in the result. In other words, top-level nodes of the ranges from the result are exactly the same as\n// top-level nodes of the original `range`.\n//\n// This is important for `AttributeOperation` because, for its range, it changes only the top-level nodes. So we need to\n// track only how those nodes have been affected by `MoveOperation`.\n//\n// @private\n// @param {module:engine/model/range~Range} range\n// @param {module:engine/model/operation/moveoperation~MoveOperation} moveOp\n// @returns {Array.<module:engine/model/range~Range>}\nfunction _breakRangeByMoveOperation( range, moveOp ) {\n\tconst moveRange = Range._createFromPositionAndShift( moveOp.sourcePosition, moveOp.howMany );\n\n\t// We are transforming `range` (original range) by `moveRange` (range moved by move operation). As usual when it comes to\n\t// transforming a ranges, we may have a common part of the ranges and we may have a difference part (zero to two ranges).\n\tlet common = null;\n\tlet difference = [];\n\n\t// Let's compare the ranges.\n\tif ( moveRange.containsRange( range, true ) ) {\n\t\t// If the whole original range is moved, treat it whole as a common part. There's also no difference part.\n\t\tcommon = range;\n\t} else if ( range.start.hasSameParentAs( moveRange.start ) ) {\n\t\t// If the ranges are \"on the same level\" (in the same parent) then move operation may move exactly those nodes\n\t\t// that are changed by the attribute operation. In this case we get common part and difference part in the usual way.\n\t\tdifference = range.getDifference( moveRange );\n\t\tcommon = range.getIntersection( moveRange );\n\t} else {\n\t\t// In any other situation we assume that original range is different than move range, that is that move operation\n\t\t// moves other nodes that attribute operation change. Even if the moved range is deep inside in the original range.\n\t\t//\n\t\t// Note that this is different than in `.getIntersection` (we would get a common part in that case) and different\n\t\t// than `.getDifference` (we would get two ranges).\n\t\tdifference = [ range ];\n\t}\n\n\tconst result = [];\n\n\t// The default behaviour of `_getTransformedByMove` might get wrong results for difference part, though, so\n\t// we do it by hand.\n\tfor ( let diff of difference ) {\n\t\t// First, transform the range by removing moved nodes. Since this is a difference, this is safe, `null` won't be returned\n\t\t// as the range is different than the moved range.\n\t\tdiff = diff._getTransformedByDeletion( moveOp.sourcePosition, moveOp.howMany );\n\n\t\t// Transform also `targetPosition`.\n\t\tconst targetPosition = moveOp.getMovedRangeStart();\n\n\t\t// Spread the range only if moved nodes are inserted only between the top-level nodes of the `diff` range.\n\t\tconst spread = diff.start.hasSameParentAs( targetPosition );\n\n\t\t// Transform by insertion of moved nodes.\n\t\tdiff = diff._getTransformedByInsertion( targetPosition, moveOp.howMany, spread );\n\n\t\tresult.push( ...diff );\n\t}\n\n\t// Common part can be simply transformed by the move operation. This is because move operation will not target to\n\t// that common part (the operation would have to target inside its own moved range).\n\tif ( common ) {\n\t\tresult.push(\n\t\t\tcommon._getTransformedByMove( moveOp.sourcePosition, moveOp.targetPosition, moveOp.howMany, false )[ 0 ]\n\t\t);\n\t}\n\n\treturn result;\n}\n\nsetTransformation( AttributeOperation, SplitOperation, ( a, b ) => {\n\t// Case 1:\n\t//\n\t// Split node is the last node in `AttributeOperation#range`.\n\t// `AttributeOperation#range` needs to be expanded to include the new (split) node.\n\t//\n\t// Attribute `type` to be changed to `numbered` but the `listItem` is split.\n\t// <listItem type=\"bulleted\">foobar</listItem>\n\t//\n\t// After split:\n\t// <listItem type=\"bulleted\">foo</listItem><listItem type=\"bulleted\">bar</listItem>\n\t//\n\t// After attribute change:\n\t// <listItem type=\"numbered\">foo</listItem><listItem type=\"numbered\">foo</listItem>\n\t//\n\tif ( a.range.end.isEqual( b.insertionPosition ) ) {\n\t\tif ( !b.graveyardPosition ) {\n\t\t\ta.range.end.offset++;\n\t\t}\n\n\t\treturn [ a ];\n\t}\n\n\t// Case 2:\n\t//\n\t// Split position is inside `AttributeOperation#range`, at the same level, so the nodes to change are\n\t// not going to make a flat range.\n\t//\n\t// Content with range-to-change and split position:\n\t// <p>Fo[zb^a]r</p>\n\t//\n\t// After split:\n\t// <p>Fozb</p><p>ar</p>\n\t//\n\t// Make two separate ranges containing all nodes to change:\n\t// <p>Fo[zb]</p><p>[a]r</p>\n\t//\n\tif ( a.range.start.hasSameParentAs( b.splitPosition ) && a.range.containsPosition( b.splitPosition ) ) {\n\t\tconst secondPart = a.clone();\n\n\t\tsecondPart.range = new Range(\n\t\t\tb.moveTargetPosition.clone(),\n\t\t\ta.range.end._getCombined( b.splitPosition, b.moveTargetPosition )\n\t\t);\n\n\t\ta.range.end = b.splitPosition.clone();\n\t\ta.range.end.stickiness = 'toPrevious';\n\n\t\treturn [ a, secondPart ];\n\t}\n\n\t// The default case.\n\t//\n\ta.range = a.range._getTransformedBySplitOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( InsertOperation, AttributeOperation, ( a, b ) => {\n\tconst result = [ a ];\n\n\t// Case 1:\n\t//\n\t// The attribute operation range includes the position where nodes were inserted.\n\t// There are two possible scenarios: the inserted nodes were text and they should receive attributes or\n\t// the inserted nodes were elements and they should not receive attributes.\n\t//\n\t// This is a mirror scenario to the one described in `AttributeOperation` x `InsertOperation` transformation,\n\t// although this case is a little less complicated. In this case we simply need to change attributes of the\n\t// inserted nodes and that's it.\n\t//\n\tif ( a.shouldReceiveAttributes && a.position.hasSameParentAs( b.range.start ) && b.range.containsPosition( a.position ) ) {\n\t\tconst op = _getComplementaryAttributeOperations( a, b.key, b.newValue );\n\n\t\tif ( op ) {\n\t\t\tresult.push( op );\n\t\t}\n\t}\n\n\t// The default case is: do nothing.\n\t// `AttributeOperation` does not change the model tree structure so `InsertOperation` does not need to be changed.\n\t//\n\treturn result;\n} );\n\nsetTransformation( InsertOperation, InsertOperation, ( a, b, context ) => {\n\t// Case 1:\n\t//\n\t// Two insert operations insert nodes at the same position. Since they are the same, it needs to be decided\n\t// what will be the order of inserted nodes. However, there is no additional information to help in that\n\t// decision. Also, when `b` will be transformed by `a`, the same order must be maintained.\n\t//\n\t// To achieve that, we will check if the operation is strong.\n\t// If it is, it won't get transformed. If it is not, it will be moved.\n\t//\n\tif ( a.position.isEqual( b.position ) && context.aIsStrong ) {\n\t\treturn [ a ];\n\t}\n\n\t// The default case.\n\t//\n\ta.position = a.position._getTransformedByInsertOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( InsertOperation, MoveOperation, ( a, b ) => {\n\t// The default case.\n\t//\n\ta.position = a.position._getTransformedByMoveOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( InsertOperation, SplitOperation, ( a, b ) => {\n\t// The default case.\n\t//\n\ta.position = a.position._getTransformedBySplitOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( InsertOperation, MergeOperation, ( a, b ) => {\n\ta.position = a.position._getTransformedByMergeOperation( b );\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( MarkerOperation, InsertOperation, ( a, b ) => {\n\tif ( a.oldRange ) {\n\t\ta.oldRange = a.oldRange._getTransformedByInsertOperation( b )[ 0 ];\n\t}\n\n\tif ( a.newRange ) {\n\t\ta.newRange = a.newRange._getTransformedByInsertOperation( b )[ 0 ];\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MarkerOperation, MarkerOperation, ( a, b, context ) => {\n\tif ( a.name == b.name ) {\n\t\tif ( context.aIsStrong ) {\n\t\t\ta.oldRange = b.newRange ? b.newRange.clone() : null;\n\t\t} else {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MarkerOperation, MergeOperation, ( a, b ) => {\n\tif ( a.oldRange ) {\n\t\ta.oldRange = a.oldRange._getTransformedByMergeOperation( b );\n\t}\n\n\tif ( a.newRange ) {\n\t\ta.newRange = a.newRange._getTransformedByMergeOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MarkerOperation, MoveOperation, ( a, b, context ) => {\n\tif ( a.oldRange ) {\n\t\ta.oldRange = Range._createFromRanges( a.oldRange._getTransformedByMoveOperation( b ) );\n\t}\n\n\tif ( a.newRange ) {\n\t\tif ( context.abRelation ) {\n\t\t\tconst aNewRange = Range._createFromRanges( a.newRange._getTransformedByMoveOperation( b ) );\n\n\t\t\tif ( context.abRelation.side == 'left' && b.targetPosition.isEqual( a.newRange.start ) ) {\n\t\t\t\ta.newRange.start.path = context.abRelation.path;\n\t\t\t\ta.newRange.end = aNewRange.end;\n\n\t\t\t\treturn [ a ];\n\t\t\t} else if ( context.abRelation.side == 'right' && b.targetPosition.isEqual( a.newRange.end ) ) {\n\t\t\t\ta.newRange.start = aNewRange.start;\n\t\t\t\ta.newRange.end.path = context.abRelation.path;\n\n\t\t\t\treturn [ a ];\n\t\t\t}\n\t\t}\n\n\t\ta.newRange = Range._createFromRanges( a.newRange._getTransformedByMoveOperation( b ) );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MarkerOperation, SplitOperation, ( a, b, context ) => {\n\tif ( a.oldRange ) {\n\t\ta.oldRange = a.oldRange._getTransformedBySplitOperation( b );\n\t}\n\n\tif ( a.newRange ) {\n\t\tif ( context.abRelation ) {\n\t\t\tconst aNewRange = a.newRange._getTransformedBySplitOperation( b );\n\n\t\t\tif ( a.newRange.start.isEqual( b.splitPosition ) && context.abRelation.wasStartBeforeMergedElement ) {\n\t\t\t\ta.newRange.start = Position._createAt( b.insertionPosition );\n\t\t\t} else if ( a.newRange.start.isEqual( b.splitPosition ) && !context.abRelation.wasInLeftElement ) {\n\t\t\t\ta.newRange.start = Position._createAt( b.moveTargetPosition );\n\t\t\t}\n\n\t\t\tif ( a.newRange.end.isEqual( b.splitPosition ) && context.abRelation.wasInRightElement ) {\n\t\t\t\ta.newRange.end = Position._createAt( b.moveTargetPosition );\n\t\t\t} else if ( a.newRange.end.isEqual( b.splitPosition ) && context.abRelation.wasEndBeforeMergedElement ) {\n\t\t\t\ta.newRange.end = Position._createAt( b.insertionPosition );\n\t\t\t} else {\n\t\t\t\ta.newRange.end = aNewRange.end;\n\t\t\t}\n\n\t\t\treturn [ a ];\n\t\t}\n\n\t\ta.newRange = a.newRange._getTransformedBySplitOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( MergeOperation, InsertOperation, ( a, b ) => {\n\tif ( a.sourcePosition.hasSameParentAs( b.position ) ) {\n\t\ta.howMany += b.howMany;\n\t}\n\n\ta.sourcePosition = a.sourcePosition._getTransformedByInsertOperation( b );\n\ta.targetPosition = a.targetPosition._getTransformedByInsertOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( MergeOperation, MergeOperation, ( a, b, context ) => {\n\t// Case 1:\n\t//\n\t// Same merge operations.\n\t//\n\t// Both operations have same source and target positions. So the element already got merged and there is\n\t// theoretically nothing to do.\n\t//\n\tif ( a.sourcePosition.isEqual( b.sourcePosition ) && a.targetPosition.isEqual( b.targetPosition ) ) {\n\t\t// There are two ways that we can provide a do-nothing operation.\n\t\t//\n\t\t// First is simply a NoOperation instance. We will use it if `b` operation was not undone.\n\t\t//\n\t\t// Second is a merge operation that has the source operation in the merged element - in the graveyard -\n\t\t// same target position and `howMany` equal to `0`. So it is basically merging an empty element from graveyard\n\t\t// which is almost the same as NoOperation.\n\t\t//\n\t\t// This way the merge operation can be later transformed by split operation\n\t\t// to provide correct undo. This will be used if `b` operation was undone (only then it is correct).\n\t\t//\n\t\tif ( !context.bWasUndone ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t} else {\n\t\t\tconst path = b.graveyardPosition.path.slice();\n\t\t\tpath.push( 0 );\n\n\t\t\ta.sourcePosition = new Position( b.graveyardPosition.root, path );\n\t\t\ta.howMany = 0;\n\n\t\t\treturn [ a ];\n\t\t}\n\t}\n\n\t// Case 2:\n\t//\n\t// Same merge source position but different target position.\n\t//\n\t// This can happen during collaboration. For example, if one client merged a paragraph to the previous paragraph\n\t// and the other person removed that paragraph and merged the same paragraph to something before:\n\t//\n\t// Client A:\n\t// <p>Foo</p><p>Bar</p><p>[]Xyz</p>\n\t// <p>Foo</p><p>BarXyz</p>\n\t//\n\t// Client B:\n\t// <p>Foo</p>[<p>Bar</p>]<p>Xyz</p>\n\t// <p>Foo</p><p>[]Xyz</p>\n\t// <p>FooXyz</p>\n\t//\n\t// In this case we need to decide where finally \"Xyz\" will land:\n\t//\n\t// <p>FooXyz</p>               graveyard: <p>Bar</p>\n\t// <p>Foo</p>                  graveyard: <p>BarXyz</p>\n\t//\n\t// Let's move it in a way so that a merge operation that does not target to graveyard is more important so that\n\t// nodes does not end up in the graveyard. It makes sense. Both for Client A and for Client B \"Xyz\" finally did not\n\t// end up in the graveyard (see above).\n\t//\n\t// If neither or both operations point to graveyard, then let `aIsStrong` decide.\n\t//\n\tif (\n\t\ta.sourcePosition.isEqual( b.sourcePosition ) && !a.targetPosition.isEqual( b.targetPosition ) &&\n\t\t!context.bWasUndone && context.abRelation != 'splitAtSource'\n\t) {\n\t\tconst aToGraveyard = a.targetPosition.root.rootName == '$graveyard';\n\t\tconst bToGraveyard = b.targetPosition.root.rootName == '$graveyard';\n\n\t\t// If `aIsWeak` it means that `a` points to graveyard while `b` doesn't. Don't move nodes then.\n\t\tconst aIsWeak = aToGraveyard && !bToGraveyard;\n\n\t\t// If `bIsWeak` it means that `b` points to graveyard while `a` doesn't. Force moving nodes then.\n\t\tconst bIsWeak = bToGraveyard && !aToGraveyard;\n\n\t\t// Force move if `b` is weak or neither operation is weak but `a` is stronger through `context.aIsStrong`.\n\t\tconst forceMove = bIsWeak || ( !aIsWeak && context.aIsStrong );\n\n\t\tif ( forceMove ) {\n\t\t\tconst sourcePosition = b.targetPosition._getTransformedByMergeOperation( b );\n\t\t\tconst targetPosition = a.targetPosition._getTransformedByMergeOperation( b );\n\n\t\t\treturn [ new MoveOperation( sourcePosition, a.howMany, targetPosition, 0 ) ];\n\t\t} else {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\t}\n\n\t// The default case.\n\t//\n\tif ( a.sourcePosition.hasSameParentAs( b.targetPosition ) ) {\n\t\ta.howMany += b.howMany;\n\t}\n\n\ta.sourcePosition = a.sourcePosition._getTransformedByMergeOperation( b );\n\ta.targetPosition = a.targetPosition._getTransformedByMergeOperation( b );\n\n\t// Handle positions in graveyard.\n\t// If graveyard positions are same and `a` operation is strong - do not transform.\n\tif ( !a.graveyardPosition.isEqual( b.graveyardPosition ) || !context.aIsStrong ) {\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByMergeOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MergeOperation, MoveOperation, ( a, b, context ) => {\n\t// Case 1:\n\t//\n\t// The element to merge got removed.\n\t//\n\t// Merge operation does support merging elements which are not siblings. So it would not be a problem\n\t// from technical point of view. However, if the element was removed, the intention of the user deleting it\n\t// was to have it all deleted, together with its children. From user experience point of view, moving back the\n\t// removed nodes might be unexpected. This means that in this scenario we will block the merging.\n\t//\n\t// The exception of this rule would be if the remove operation was later undone.\n\t//\n\tconst removedRange = Range._createFromPositionAndShift( b.sourcePosition, b.howMany );\n\n\tif ( b.type == 'remove' && !context.bWasUndone && !context.forceWeakRemove ) {\n\t\tif ( a.deletionPosition.hasSameParentAs( b.sourcePosition ) && removedRange.containsPosition( a.sourcePosition ) ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\t}\n\n\t// The default case.\n\t//\n\tif ( a.sourcePosition.hasSameParentAs( b.targetPosition ) ) {\n\t\ta.howMany += b.howMany;\n\t}\n\n\tif ( a.sourcePosition.hasSameParentAs( b.sourcePosition ) ) {\n\t\ta.howMany -= b.howMany;\n\t}\n\n\ta.sourcePosition = a.sourcePosition._getTransformedByMoveOperation( b );\n\ta.targetPosition = a.targetPosition._getTransformedByMoveOperation( b );\n\n\t// `MergeOperation` graveyard position is like `MoveOperation` target position. It is a position where element(s) will\n\t// be moved. Like in other similar cases, we need to consider the scenario when those positions are same.\n\t// Here, we will treat `MergeOperation` like it is always strong (see `InsertOperation` x `InsertOperation` for comparison).\n\t// This means that we won't transform graveyard position if it is equal to move operation target position.\n\tif ( !a.graveyardPosition.isEqual( b.targetPosition ) ) {\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByMoveOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MergeOperation, SplitOperation, ( a, b, context ) => {\n\tif ( b.graveyardPosition ) {\n\t\t// If `b` operation defines graveyard position, a node from graveyard will be moved. This means that we need to\n\t\t// transform `a.graveyardPosition` accordingly.\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByDeletion( b.graveyardPosition, 1 );\n\n\t\t// This is a scenario foreseen in `MergeOperation` x `MergeOperation`, with two identical merge operations.\n\t\t//\n\t\t// So, there was `MergeOperation` x `MergeOperation` transformation earlier. Now, `a` is a merge operation which\n\t\t// source position is in graveyard. Interestingly, split operation wants to use the node to be merged by `a`. This\n\t\t// means that `b` is undoing that merge operation from earlier, which caused `a` to be in graveyard.\n\t\t//\n\t\t// If that's the case, at this point, we will only \"fix\" `a.howMany`. It was earlier set to `0` in\n\t\t// `MergeOperation` x `MergeOperation` transformation. Later transformations in this function will change other\n\t\t// properties.\n\t\t//\n\t\tif ( a.deletionPosition.isEqual( b.graveyardPosition ) ) {\n\t\t\ta.howMany = b.howMany;\n\t\t}\n\t}\n\n\t// Case 1:\n\t//\n\t// Merge operation moves nodes to the place where split happens.\n\t// This is a classic situation when there are two paragraphs, and there is a split (enter) after the first\n\t// paragraph and there is a merge (delete) at the beginning of the second paragraph:\n\t//\n\t// <p>Foo{}</p><p>[]Bar</p>.\n\t//\n\t// Split is after `Foo`, while merge is from `Bar` to the end of `Foo`.\n\t//\n\t// State after split:\n\t// <p>Foo</p><p></p><p>Bar</p>\n\t//\n\t// Now, `Bar` should be merged to the new paragraph:\n\t// <p>Foo</p><p>Bar</p>\n\t//\n\t// Instead of merging it to the original paragraph:\n\t// <p>FooBar</p><p></p>\n\t//\n\t// This means that `targetPosition` needs to be transformed. This is the default case though.\n\t// For example, if the split would be after `F`, `targetPosition` should also be transformed.\n\t//\n\t// There are three exceptions, though, when we want to keep `targetPosition` as it was.\n\t//\n\t// First exception is when the merge target position is inside an element (not at the end, as usual). This\n\t// happens when the merge operation earlier was transformed by \"the same\" merge operation. If merge operation\n\t// targets inside the element we want to keep the original target position (and not transform it) because\n\t// we have additional context telling us that we want to merge to the original element. We can check if the\n\t// merge operation points inside element by checking what is `SplitOperation#howMany`. Since merge target position\n\t// is same as split position, if `howMany` is non-zero, it means that the merge target position is inside an element.\n\t//\n\t// Second exception is when the element to merge is in the graveyard and split operation uses it. In that case\n\t// if target position would be transformed, the merge operation would target at the source position:\n\t//\n\t// root: <p>Foo</p>\t\t\t\tgraveyard: <p></p>\n\t//\n\t// SplitOperation: root [ 0, 3 ] using graveyard [ 0 ] (howMany = 0)\n\t// MergeOperation: graveyard [ 0, 0 ] -> root [ 0, 3 ] (howMany = 0)\n\t//\n\t// Since split operation moves the graveyard node back to the root, the merge operation source position changes.\n\t// We would like to merge from the empty <p> to the \"Foo\" <p>:\n\t//\n\t// root: <p>Foo</p><p></p>\t\t\tgraveyard:\n\t//\n\t// MergeOperation#sourcePosition = root [ 1, 0 ]\n\t//\n\t// If `targetPosition` is transformed, it would become root [ 1, 0 ] as well. It has to be kept as it was.\n\t//\n\t// Third exception is connected with relations. If this happens during undo and we have explicit information\n\t// that target position has not been affected by the operation which is undone by this split then this split should\n\t// not move the target position either.\n\t//\n\tif ( a.targetPosition.isEqual( b.splitPosition ) ) {\n\t\tconst mergeInside = b.howMany != 0;\n\t\tconst mergeSplittingElement = b.graveyardPosition && a.deletionPosition.isEqual( b.graveyardPosition );\n\n\t\tif ( mergeInside || mergeSplittingElement || context.abRelation == 'mergeTargetNotMoved' ) {\n\t\t\ta.sourcePosition = a.sourcePosition._getTransformedBySplitOperation( b );\n\n\t\t\treturn [ a ];\n\t\t}\n\t}\n\n\t// Case 2:\n\t//\n\t// Merge source is at the same position as split position. This sometimes happen, mostly during undo.\n\t// The decision here is mostly to choose whether merge source position should stay where it is (so it will be at the end of the\n\t// split element) or should be move to the beginning of the new element.\n\t//\n\tif ( a.sourcePosition.isEqual( b.splitPosition ) ) {\n\t\t// Use context to check if `SplitOperation` is not undoing a merge operation, that didn't change the `a` operation.\n\t\t// This scenario happens the undone merge operation moved nodes at the source position of `a` operation.\n\t\t// In that case `a` operation source position should stay where it is.\n\t\tif ( context.abRelation == 'mergeSourceNotMoved' ) {\n\t\t\ta.howMany = 0;\n\t\t\ta.targetPosition = a.targetPosition._getTransformedBySplitOperation( b );\n\n\t\t\treturn [ a ];\n\t\t}\n\n\t\t// This merge operation might have been earlier transformed by a merge operation which both merged the same element.\n\t\t// See that case in `MergeOperation` x `MergeOperation` transformation. In that scenario, if the merge operation has been undone,\n\t\t// the special case is not applied.\n\t\t//\n\t\t// Now, the merge operation is transformed by the split which has undone that previous merge operation.\n\t\t// So now we are fixing situation which was skipped in `MergeOperation` x `MergeOperation` case.\n\t\t//\n\t\tif ( context.abRelation == 'mergeSameElement' || a.sourcePosition.offset > 0 ) {\n\t\t\ta.sourcePosition = b.moveTargetPosition.clone();\n\t\t\ta.targetPosition = a.targetPosition._getTransformedBySplitOperation( b );\n\n\t\t\treturn [ a ];\n\t\t}\n\t}\n\n\t// The default case.\n\t//\n\tif ( a.sourcePosition.hasSameParentAs( b.splitPosition ) ) {\n\t\ta.howMany = b.splitPosition.offset;\n\t}\n\n\ta.sourcePosition = a.sourcePosition._getTransformedBySplitOperation( b );\n\ta.targetPosition = a.targetPosition._getTransformedBySplitOperation( b );\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( MoveOperation, InsertOperation, ( a, b ) => {\n\tconst moveRange = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\n\tconst transformed = moveRange._getTransformedByInsertOperation( b, false )[ 0 ];\n\n\ta.sourcePosition = transformed.start;\n\ta.howMany = transformed.end.offset - transformed.start.offset;\n\n\t// See `InsertOperation` x `MoveOperation` transformation for details on this case.\n\t//\n\t// In summary, both operations point to the same place, so the order of nodes needs to be decided.\n\t// `MoveOperation` is considered weaker, so it is always transformed, unless there was a certain relation\n\t// between operations.\n\t//\n\tif ( !a.targetPosition.isEqual( b.position ) ) {\n\t\ta.targetPosition = a.targetPosition._getTransformedByInsertOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MoveOperation, MoveOperation, ( a, b, context ) => {\n\t//\n\t// Setting and evaluating some variables that will be used in special cases and default algorithm.\n\t//\n\t// Create ranges from `MoveOperations` properties.\n\tconst rangeA = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\n\tconst rangeB = Range._createFromPositionAndShift( b.sourcePosition, b.howMany );\n\n\t// Assign `context.aIsStrong` to a different variable, because the value may change during execution of\n\t// this algorithm and we do not want to override original `context.aIsStrong` that will be used in later transformations.\n\tlet aIsStrong = context.aIsStrong;\n\n\t// This will be used to decide the order of nodes if both operations target at the same position.\n\t// By default, use strong/weak operation mechanism.\n\tlet insertBefore = !context.aIsStrong;\n\n\t// If the relation is set, then use it to decide nodes order.\n\tif ( context.abRelation == 'insertBefore' || context.baRelation == 'insertAfter' ) {\n\t\tinsertBefore = true;\n\t} else if ( context.abRelation == 'insertAfter' || context.baRelation == 'insertBefore' ) {\n\t\tinsertBefore = false;\n\t}\n\n\t// `a.targetPosition` could be affected by the `b` operation. We will transform it.\n\tlet newTargetPosition;\n\n\tif ( a.targetPosition.isEqual( b.targetPosition ) && insertBefore ) {\n\t\tnewTargetPosition = a.targetPosition._getTransformedByDeletion(\n\t\t\tb.sourcePosition,\n\t\t\tb.howMany\n\t\t);\n\t} else {\n\t\tnewTargetPosition = a.targetPosition._getTransformedByMove(\n\t\t\tb.sourcePosition,\n\t\t\tb.targetPosition,\n\t\t\tb.howMany\n\t\t);\n\t}\n\n\t//\n\t// Special case #1 + mirror.\n\t//\n\t// Special case when both move operations' target positions are inside nodes that are\n\t// being moved by the other move operation. So in other words, we move ranges into inside of each other.\n\t// This case can't be solved reasonably (on the other hand, it should not happen often).\n\tif ( _moveTargetIntoMovedRange( a, b ) && _moveTargetIntoMovedRange( b, a ) ) {\n\t\t// Instead of transforming operation, we return a reverse of the operation that we transform by.\n\t\t// So when the results of this \"transformation\" will be applied, `b` MoveOperation will get reversed.\n\t\treturn [ b.getReversed() ];\n\t}\n\t//\n\t// End of special case #1.\n\t//\n\n\t//\n\t// Special case #2.\n\t//\n\t// Check if `b` operation targets inside `rangeA`.\n\tconst bTargetsToA = rangeA.containsPosition( b.targetPosition );\n\n\t// If `b` targets to `rangeA` and `rangeA` contains `rangeB`, `b` operation has no influence on `a` operation.\n\t// You might say that operation `b` is captured inside operation `a`.\n\tif ( bTargetsToA && rangeA.containsRange( rangeB, true ) ) {\n\t\t// There is a mini-special case here, where `rangeB` is on other level than `rangeA`. That's why\n\t\t// we need to transform `a` operation anyway.\n\t\trangeA.start = rangeA.start._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\n\t\trangeA.end = rangeA.end._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\n\n\t\treturn _makeMoveOperationsFromRanges( [ rangeA ], newTargetPosition );\n\t}\n\n\t//\n\t// Special case #2 mirror.\n\t//\n\tconst aTargetsToB = rangeB.containsPosition( a.targetPosition );\n\n\tif ( aTargetsToB && rangeB.containsRange( rangeA, true ) ) {\n\t\t// `a` operation is \"moved together\" with `b` operation.\n\t\t// Here, just move `rangeA` \"inside\" `rangeB`.\n\t\trangeA.start = rangeA.start._getCombined( b.sourcePosition, b.getMovedRangeStart() );\n\t\trangeA.end = rangeA.end._getCombined( b.sourcePosition, b.getMovedRangeStart() );\n\n\t\treturn _makeMoveOperationsFromRanges( [ rangeA ], newTargetPosition );\n\t}\n\t//\n\t// End of special case #2.\n\t//\n\n\t//\n\t// Special case #3 + mirror.\n\t//\n\t// `rangeA` has a node which is an ancestor of `rangeB`. In other words, `rangeB` is inside `rangeA`\n\t// but not on the same tree level. In such case ranges have common part but we have to treat it\n\t// differently, because in such case those ranges are not really conflicting and should be treated like\n\t// two separate ranges. Also we have to discard two difference parts.\n\tconst aCompB = compareArrays( a.sourcePosition.getParentPath(), b.sourcePosition.getParentPath() );\n\n\tif ( aCompB == 'prefix' || aCompB == 'extension' ) {\n\t\t// Transform `rangeA` by `b` operation and make operation out of it, and that's all.\n\t\t// Note that this is a simplified version of default case, but here we treat the common part (whole `rangeA`)\n\t\t// like a one difference part.\n\t\trangeA.start = rangeA.start._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\n\t\trangeA.end = rangeA.end._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\n\n\t\treturn _makeMoveOperationsFromRanges( [ rangeA ], newTargetPosition );\n\t}\n\t//\n\t// End of special case #3.\n\t//\n\n\t//\n\t// Default case - ranges are on the same level or are not connected with each other.\n\t//\n\t// Modifier for default case.\n\t// Modifies `aIsStrong` flag in certain conditions.\n\t//\n\t// If only one of operations is a remove operation, we force remove operation to be the \"stronger\" one\n\t// to provide more expected results.\n\tif ( a.type == 'remove' && b.type != 'remove' && !context.aWasUndone && !context.forceWeakRemove ) {\n\t\taIsStrong = true;\n\t} else if ( a.type != 'remove' && b.type == 'remove' && !context.bWasUndone && !context.forceWeakRemove ) {\n\t\taIsStrong = false;\n\t}\n\n\t// Handle operation's source ranges - check how `rangeA` is affected by `b` operation.\n\t// This will aggregate transformed ranges.\n\tconst ranges = [];\n\n\t// Get the \"difference part\" of `a` operation source range.\n\t// This is an array with one or two ranges. Two ranges if `rangeB` is inside `rangeA`.\n\tconst difference = rangeA.getDifference( rangeB );\n\n\tfor ( const range of difference ) {\n\t\t// Transform those ranges by `b` operation. For example if `b` moved range from before those ranges, fix those ranges.\n\t\trange.start = range.start._getTransformedByDeletion( b.sourcePosition, b.howMany );\n\t\trange.end = range.end._getTransformedByDeletion( b.sourcePosition, b.howMany );\n\n\t\t// If `b` operation targets into `rangeA` on the same level, spread `rangeA` into two ranges.\n\t\tconst shouldSpread = compareArrays( range.start.getParentPath(), b.getMovedRangeStart().getParentPath() ) == 'same';\n\t\tconst newRanges = range._getTransformedByInsertion( b.getMovedRangeStart(), b.howMany, shouldSpread );\n\n\t\tranges.push( ...newRanges );\n\t}\n\n\t// Then, we have to manage the \"common part\" of both move ranges.\n\tconst common = rangeA.getIntersection( rangeB );\n\n\tif ( common !== null && aIsStrong ) {\n\t\t// Calculate the new position of that part of original range.\n\t\tcommon.start = common.start._getCombined( b.sourcePosition, b.getMovedRangeStart() );\n\t\tcommon.end = common.end._getCombined( b.sourcePosition, b.getMovedRangeStart() );\n\n\t\t// Take care of proper range order.\n\t\t//\n\t\t// Put `common` at appropriate place. Keep in mind that we are interested in original order.\n\t\t// Basically there are only three cases: there is zero, one or two difference ranges.\n\t\t//\n\t\t// If there is zero difference ranges, just push `common` in the array.\n\t\tif ( ranges.length === 0 ) {\n\t\t\tranges.push( common );\n\t\t}\n\t\t// If there is one difference range, we need to check whether common part was before it or after it.\n\t\telse if ( ranges.length == 1 ) {\n\t\t\tif ( rangeB.start.isBefore( rangeA.start ) || rangeB.start.isEqual( rangeA.start ) ) {\n\t\t\t\tranges.unshift( common );\n\t\t\t} else {\n\t\t\t\tranges.push( common );\n\t\t\t}\n\t\t}\n\t\t// If there are more ranges (which means two), put common part between them. This is the only scenario\n\t\t// where there could be two difference ranges so we don't have to make any comparisons.\n\t\telse {\n\t\t\tranges.splice( 1, 0, common );\n\t\t}\n\t}\n\n\tif ( ranges.length === 0 ) {\n\t\t// If there are no \"source ranges\", nothing should be changed.\n\t\t// Note that this can happen only if `aIsStrong == false` and `rangeA.isEqual( rangeB )`.\n\t\treturn [ new NoOperation( a.baseVersion ) ];\n\t}\n\n\treturn _makeMoveOperationsFromRanges( ranges, newTargetPosition );\n} );\n\nsetTransformation( MoveOperation, SplitOperation, ( a, b, context ) => {\n\tlet newTargetPosition = a.targetPosition.clone();\n\n\t// Do not transform if target position is same as split insertion position and this split comes from undo.\n\t// This should be done on relations but it is too much work for now as it would require relations working in collaboration.\n\t// We need to make a decision how we will resolve such conflict and this is less harmful way.\n\tif ( !a.targetPosition.isEqual( b.insertionPosition ) || !b.graveyardPosition || context.abRelation == 'moveTargetAfter' ) {\n\t\tnewTargetPosition = a.targetPosition._getTransformedBySplitOperation( b );\n\t}\n\n\t// Case 1:\n\t//\n\t// Last element in the moved range got split.\n\t//\n\t// In this case the default range transformation will not work correctly as the element created by\n\t// split operation would be outside the range. The range to move needs to be fixed manually.\n\t//\n\tconst moveRange = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\n\n\tif ( moveRange.end.isEqual( b.insertionPosition ) ) {\n\t\t// Do it only if this is a \"natural\" split, not a one that comes from undo.\n\t\t// If this is undo split, only `targetPosition` needs to be changed (if the move is a remove).\n\t\tif ( !b.graveyardPosition ) {\n\t\t\ta.howMany++;\n\t\t}\n\n\t\ta.targetPosition = newTargetPosition;\n\n\t\treturn [ a ];\n\t}\n\n\t// Case 2:\n\t//\n\t// Split happened between the moved nodes. In this case two ranges to move need to be generated.\n\t//\n\t// Characters `ozba` are moved to the end of paragraph `Xyz` but split happened.\n\t// <p>F[oz|ba]r</p><p>Xyz</p>\n\t//\n\t// After split:\n\t// <p>F[oz</p><p>ba]r</p><p>Xyz</p>\n\t//\n\t// Correct ranges:\n\t// <p>F[oz]</p><p>[ba]r</p><p>Xyz</p>\n\t//\n\t// After move:\n\t// <p>F</p><p>r</p><p>Xyzozba</p>\n\t//\n\tif ( moveRange.start.hasSameParentAs( b.splitPosition ) && moveRange.containsPosition( b.splitPosition ) ) {\n\t\tlet rightRange = new Range( b.splitPosition, moveRange.end );\n\t\trightRange = rightRange._getTransformedBySplitOperation( b );\n\n\t\tconst ranges = [\n\t\t\tnew Range( moveRange.start, b.splitPosition ),\n\t\t\trightRange\n\t\t];\n\n\t\treturn _makeMoveOperationsFromRanges( ranges, newTargetPosition );\n\t}\n\n\t// Case 3:\n\t//\n\t// Move operation targets at the split position. We need to decide if the nodes should be inserted\n\t// at the end of the split element or at the beginning of the new element.\n\t//\n\tif ( a.targetPosition.isEqual( b.splitPosition ) && context.abRelation == 'insertAtSource' ) {\n\t\tnewTargetPosition = b.moveTargetPosition;\n\t}\n\n\t// Case 4:\n\t//\n\t// Move operation targets just after the split element. We need to decide if the nodes should be inserted\n\t// between two parts of split element, or after the new element.\n\t//\n\t// Split at `|`, while move operation moves `<p>Xyz</p>` and targets at `^`:\n\t// <p>Foo|bar</p>^<p>baz</p>\n\t// <p>Foo</p>^<p>bar</p><p>baz</p> or <p>Foo</p><p>bar</p>^<p>baz</p>?\n\t//\n\t// If there is no contextual information between operations (for example, they come from collaborative\n\t// editing), we don't want to put some unrelated content (move) between parts of related content (split parts).\n\t// However, if the split is from undo, in the past, the moved content might be targeting between the\n\t// split parts, meaning that was exactly user's intention:\n\t//\n\t// <p>Foo</p>^<p>bar</p>\t\t<--- original situation, in \"past\".\n\t// <p>Foobar</p>^\t\t\t\t<--- after merge target position is transformed.\n\t// <p>Foo|bar</p>^\t\t\t\t<--- then the merge is undone, and split happens, which leads us to current situation.\n\t//\n\t// In this case it is pretty clear that the intention was to put new paragraph between those nodes,\n\t// so we need to transform accordingly. We can detect this scenario thanks to relations.\n\t//\n\tif ( a.targetPosition.isEqual( b.insertionPosition ) && context.abRelation == 'insertBetween' ) {\n\t\tnewTargetPosition = a.targetPosition;\n\t}\n\n\t// The default case.\n\t//\n\tconst transformed = moveRange._getTransformedBySplitOperation( b );\n\tconst ranges = [ transformed ];\n\n\t// Case 5:\n\t//\n\t// Moved range contains graveyard element used by split operation. Add extra move operation to the result.\n\t//\n\tif ( b.graveyardPosition ) {\n\t\tconst movesGraveyardElement = moveRange.start.isEqual( b.graveyardPosition ) || moveRange.containsPosition( b.graveyardPosition );\n\n\t\tif ( a.howMany > 1 && movesGraveyardElement && !context.aWasUndone ) {\n\t\t\tranges.push( Range._createFromPositionAndShift( b.insertionPosition, 1 ) );\n\t\t}\n\t}\n\n\treturn _makeMoveOperationsFromRanges( ranges, newTargetPosition );\n} );\n\nsetTransformation( MoveOperation, MergeOperation, ( a, b, context ) => {\n\tconst movedRange = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\n\n\tif ( b.deletionPosition.hasSameParentAs( a.sourcePosition ) && movedRange.containsPosition( b.sourcePosition ) ) {\n\t\tif ( a.type == 'remove' && !context.forceWeakRemove ) {\n\t\t\t// Case 1:\n\t\t\t//\n\t\t\t// The element to remove got merged.\n\t\t\t//\n\t\t\t// Merge operation does support merging elements which are not siblings. So it would not be a problem\n\t\t\t// from technical point of view. However, if the element was removed, the intention of the user\n\t\t\t// deleting it was to have it all deleted. From user experience point of view, moving back the\n\t\t\t// removed nodes might be unexpected. This means that in this scenario we will reverse merging and remove the element.\n\t\t\t//\n\t\t\tif ( !context.aWasUndone ) {\n\t\t\t\tconst results = [];\n\n\t\t\t\tlet gyMoveSource = b.graveyardPosition.clone();\n\t\t\t\tlet splitNodesMoveSource = b.targetPosition._getTransformedByMergeOperation( b );\n\n\t\t\t\tif ( a.howMany > 1 ) {\n\t\t\t\t\tresults.push( new MoveOperation( a.sourcePosition, a.howMany - 1, a.targetPosition, 0 ) );\n\n\t\t\t\t\tgyMoveSource = gyMoveSource._getTransformedByMove( a.sourcePosition, a.targetPosition, a.howMany - 1 );\n\t\t\t\t\tsplitNodesMoveSource = splitNodesMoveSource._getTransformedByMove( a.sourcePosition, a.targetPosition, a.howMany - 1 );\n\t\t\t\t}\n\n\t\t\t\tconst gyMoveTarget = b.deletionPosition._getCombined( a.sourcePosition, a.targetPosition );\n\t\t\t\tconst gyMove = new MoveOperation( gyMoveSource, 1, gyMoveTarget, 0 );\n\n\t\t\t\tconst splitNodesMoveTargetPath = gyMove.getMovedRangeStart().path.slice();\n\t\t\t\tsplitNodesMoveTargetPath.push( 0 );\n\n\t\t\t\tconst splitNodesMoveTarget = new Position( gyMove.targetPosition.root, splitNodesMoveTargetPath );\n\t\t\t\tsplitNodesMoveSource = splitNodesMoveSource._getTransformedByMove( gyMoveSource, gyMoveTarget, 1 );\n\t\t\t\tconst splitNodesMove = new MoveOperation( splitNodesMoveSource, b.howMany, splitNodesMoveTarget, 0 );\n\n\t\t\t\tresults.push( gyMove );\n\t\t\t\tresults.push( splitNodesMove );\n\n\t\t\t\treturn results;\n\t\t\t}\n\t\t} else {\n\t\t\t// Case 2:\n\t\t\t//\n\t\t\t// The element to move got merged and it was the only element to move.\n\t\t\t// In this case just don't do anything, leave the node in the graveyard. Without special case\n\t\t\t// it would be a move operation that moves 0 nodes, so maybe it is better just to return no-op.\n\t\t\t//\n\t\t\tif ( a.howMany == 1 ) {\n\t\t\t\tif ( !context.bWasUndone ) {\n\t\t\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t\t\t} else {\n\t\t\t\t\ta.sourcePosition = b.graveyardPosition.clone();\n\t\t\t\t\ta.targetPosition = a.targetPosition._getTransformedByMergeOperation( b );\n\n\t\t\t\t\treturn [ a ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// The default case.\n\t//\n\tconst moveRange = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\n\tconst transformed = moveRange._getTransformedByMergeOperation( b );\n\n\ta.sourcePosition = transformed.start;\n\ta.howMany = transformed.end.offset - transformed.start.offset;\n\ta.targetPosition = a.targetPosition._getTransformedByMergeOperation( b );\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( RenameOperation, InsertOperation, ( a, b ) => {\n\ta.position = a.position._getTransformedByInsertOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( RenameOperation, MergeOperation, ( a, b ) => {\n\t// Case 1:\n\t//\n\t// Element to rename got merged, so it was moved to `b.graveyardPosition`.\n\t//\n\tif ( a.position.isEqual( b.deletionPosition ) ) {\n\t\ta.position = b.graveyardPosition.clone();\n\t\ta.position.stickiness = 'toNext';\n\n\t\treturn [ a ];\n\t}\n\n\ta.position = a.position._getTransformedByMergeOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( RenameOperation, MoveOperation, ( a, b ) => {\n\ta.position = a.position._getTransformedByMoveOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( RenameOperation, RenameOperation, ( a, b, context ) => {\n\tif ( a.position.isEqual( b.position ) ) {\n\t\tif ( context.aIsStrong ) {\n\t\t\ta.oldName = b.newName;\n\t\t} else {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( RenameOperation, SplitOperation, ( a, b ) => {\n\t// Case 1:\n\t//\n\t// The element to rename has been split. In this case, the new element should be also renamed.\n\t//\n\t// User decides to change the paragraph to a list item:\n\t// <paragraph>Foobar</paragraph>\n\t//\n\t// However, in meantime, split happens:\n\t// <paragraph>Foo</paragraph><paragraph>bar</paragraph>\n\t//\n\t// As a result, rename both elements:\n\t// <listItem>Foo</listItem><listItem>bar</listItem>\n\t//\n\tconst renamePath = a.position.path;\n\tconst splitPath = b.splitPosition.getParentPath();\n\n\tif ( compareArrays( renamePath, splitPath ) == 'same' && !b.graveyardPosition ) {\n\t\tconst extraRename = new RenameOperation( a.position.getShiftedBy( 1 ), a.oldName, a.newName, 0 );\n\n\t\treturn [ a, extraRename ];\n\t}\n\n\t// The default case.\n\t//\n\ta.position = a.position._getTransformedBySplitOperation( b );\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( RootAttributeOperation, RootAttributeOperation, ( a, b, context ) => {\n\tif ( a.root === b.root && a.key === b.key ) {\n\t\tif ( !context.aIsStrong || a.newValue === b.newValue ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t} else {\n\t\t\ta.oldValue = b.newValue;\n\t\t}\n\t}\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( SplitOperation, InsertOperation, ( a, b ) => {\n\t// The default case.\n\t//\n\tif ( a.splitPosition.hasSameParentAs( b.position ) && a.splitPosition.offset < b.position.offset ) {\n\t\ta.howMany += b.howMany;\n\t}\n\n\ta.splitPosition = a.splitPosition._getTransformedByInsertOperation( b );\n\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\n\treturn [ a ];\n} );\n\nsetTransformation( SplitOperation, MergeOperation, ( a, b, context ) => {\n\t// Case 1:\n\t//\n\t// Split element got merged. If two different elements were merged, clients will have different content.\n\t//\n\t// Example. Merge at `{}`, split at `[]`:\n\t// <heading>Foo</heading>{}<paragraph>B[]ar</paragraph>\n\t//\n\t// On merge side it will look like this:\n\t// <heading>FooB[]ar</heading>\n\t// <heading>FooB</heading><heading>ar</heading>\n\t//\n\t// On split side it will look like this:\n\t// <heading>Foo</heading>{}<paragraph>B</paragraph><paragraph>ar</paragraph>\n\t// <heading>FooB</heading><paragraph>ar</paragraph>\n\t//\n\t// Clearly, the second element is different for both clients.\n\t//\n\t// We could use the removed merge element from graveyard as a split element but then clients would have a different\n\t// model state (in graveyard), because the split side client would still have an element in graveyard (removed by merge).\n\t//\n\t// To overcome this, in `SplitOperation` x `MergeOperation` transformation we will add additional `SplitOperation`\n\t// in the graveyard, which will actually clone the merged-and-deleted element. Then, that cloned element will be\n\t// used for splitting. Example below.\n\t//\n\t// Original state:\n\t// <heading>Foo</heading>{}<paragraph>B[]ar</paragraph>\n\t//\n\t// Merge side client:\n\t//\n\t// After merge:\n\t// <heading>FooB[]ar</heading>                                 graveyard: <paragraph></paragraph>\n\t//\n\t// Extra split:\n\t// <heading>FooB[]ar</heading>                                 graveyard: <paragraph></paragraph><paragraph></paragraph>\n\t//\n\t// Use the \"cloned\" element from graveyard:\n\t// <heading>FooB</heading><paragraph>ar</paragraph>            graveyard: <paragraph></paragraph>\n\t//\n\t// Split side client:\n\t//\n\t// After split:\n\t// <heading>Foo</heading>{}<paragraph>B</paragraph><paragraph>ar</paragraph>\n\t//\n\t// After merge:\n\t// <heading>FooB</heading><paragraph>ar</paragraph>            graveyard: <paragraph></paragraph>\n\t//\n\t// This special case scenario only applies if the original split operation clones the split element.\n\t// If the original split operation has `graveyardPosition` set, it all doesn't have sense because split operation\n\t// knows exactly which element it should use. So there would be no original problem with different contents.\n\t//\n\t// Additionally, the special case applies only if the merge wasn't already undone.\n\t//\n\tif ( !a.graveyardPosition && !context.bWasUndone && a.splitPosition.hasSameParentAs( b.sourcePosition ) ) {\n\t\tconst splitPath = b.graveyardPosition.path.slice();\n\t\tsplitPath.push( 0 );\n\n\t\tconst splitPosition = new Position( b.graveyardPosition.root, splitPath );\n\t\tconst insertionPosition = SplitOperation.getInsertionPosition( new Position( b.graveyardPosition.root, splitPath ) );\n\n\t\tconst additionalSplit = new SplitOperation( splitPosition, 0, null, 0 );\n\t\tadditionalSplit.insertionPosition = insertionPosition;\n\n\t\ta.splitPosition = a.splitPosition._getTransformedByMergeOperation( b );\n\t\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\t\ta.graveyardPosition = additionalSplit.insertionPosition.clone();\n\t\ta.graveyardPosition.stickiness = 'toNext';\n\n\t\treturn [ additionalSplit, a ];\n\t}\n\n\t// The default case.\n\t//\n\tif ( a.splitPosition.hasSameParentAs( b.deletionPosition ) && !a.splitPosition.isAfter( b.deletionPosition ) ) {\n\t\ta.howMany--;\n\t}\n\n\tif ( a.splitPosition.hasSameParentAs( b.targetPosition ) ) {\n\t\ta.howMany += b.howMany;\n\t}\n\n\ta.splitPosition = a.splitPosition._getTransformedByMergeOperation( b );\n\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\n\tif ( a.graveyardPosition ) {\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByMergeOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( SplitOperation, MoveOperation, ( a, b, context ) => {\n\tconst rangeToMove = Range._createFromPositionAndShift( b.sourcePosition, b.howMany );\n\n\tif ( a.graveyardPosition ) {\n\t\t// Case 1:\n\t\t//\n\t\t// Split operation graveyard node was moved. In this case move operation is stronger. Since graveyard element\n\t\t// is already moved to the correct position, we need to only move the nodes after the split position.\n\t\t// This will be done by `MoveOperation` instead of `SplitOperation`.\n\t\t//\n\t\tconst gyElementMoved = rangeToMove.start.isEqual( a.graveyardPosition ) || rangeToMove.containsPosition( a.graveyardPosition );\n\n\t\tif ( !context.bWasUndone && gyElementMoved ) {\n\t\t\tconst sourcePosition = a.splitPosition._getTransformedByMoveOperation( b );\n\n\t\t\tconst newParentPosition = a.graveyardPosition._getTransformedByMoveOperation( b );\n\t\t\tconst newTargetPath = newParentPosition.path.slice();\n\t\t\tnewTargetPath.push( 0 );\n\n\t\t\tconst newTargetPosition = new Position( newParentPosition.root, newTargetPath );\n\t\t\tconst moveOp = new MoveOperation( sourcePosition, a.howMany, newTargetPosition, 0 );\n\n\t\t\treturn [ moveOp ];\n\t\t}\n\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByMoveOperation( b );\n\t}\n\n\t// Case 2:\n\t//\n\t// If the split position is inside the moved range, we need to shift the split position to a proper place.\n\t// The position cannot be moved together with moved range because that would result in splitting of an incorrect element.\n\t//\n\t// Characters `bc` should be moved to the second paragraph while split position is between them:\n\t// <paragraph>A[b|c]d</paragraph><paragraph>Xyz</paragraph>\n\t//\n\t// After move, new split position is incorrect:\n\t// <paragraph>Ad</paragraph><paragraph>Xb|cyz</paragraph>\n\t//\n\t// Correct split position:\n\t// <paragraph>A|d</paragraph><paragraph>Xbcyz</paragraph>\n\t//\n\t// After split:\n\t// <paragraph>A</paragraph><paragraph>d</paragraph><paragraph>Xbcyz</paragraph>\n\t//\n\tif ( a.splitPosition.hasSameParentAs( b.sourcePosition ) && rangeToMove.containsPosition( a.splitPosition ) ) {\n\t\tconst howManyRemoved = b.howMany - ( a.splitPosition.offset - b.sourcePosition.offset );\n\t\ta.howMany -= howManyRemoved;\n\n\t\tif ( a.splitPosition.hasSameParentAs( b.targetPosition ) && a.splitPosition.offset < b.targetPosition.offset ) {\n\t\t\ta.howMany += b.howMany;\n\t\t}\n\n\t\ta.splitPosition = b.sourcePosition.clone();\n\t\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\n\t\treturn [ a ];\n\t}\n\n\t// Case 3:\n\t//\n\t// Split is at a position where nodes were moved.\n\t//\n\t// This is a scenario described in `MoveOperation` x `SplitOperation` transformation but from the\n\t// \"split operation point of view\".\n\t//\n\tconst splitAtTarget = a.splitPosition.isEqual( b.targetPosition );\n\n\tif ( splitAtTarget && ( context.baRelation == 'insertAtSource' || context.abRelation == 'splitBefore' ) ) {\n\t\ta.howMany += b.howMany;\n\t\ta.splitPosition = a.splitPosition._getTransformedByDeletion( b.sourcePosition, b.howMany );\n\t\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\n\t\treturn [ a ];\n\t}\n\n\t// The default case.\n\t// Don't change `howMany` if move operation does not really move anything.\n\t//\n\tif ( !b.sourcePosition.isEqual( b.targetPosition ) ) {\n\t\tif ( a.splitPosition.hasSameParentAs( b.sourcePosition ) && a.splitPosition.offset <= b.sourcePosition.offset ) {\n\t\t\ta.howMany -= b.howMany;\n\t\t}\n\n\t\tif ( a.splitPosition.hasSameParentAs( b.targetPosition ) && a.splitPosition.offset < b.targetPosition.offset ) {\n\t\t\ta.howMany += b.howMany;\n\t\t}\n\t}\n\n\t// Change position stickiness to force a correct transformation.\n\ta.splitPosition.stickiness = 'toNone';\n\ta.splitPosition = a.splitPosition._getTransformedByMoveOperation( b );\n\ta.splitPosition.stickiness = 'toNext';\n\n\tif ( a.graveyardPosition ) {\n\t\ta.insertionPosition = a.insertionPosition._getTransformedByMoveOperation( b );\n\t} else {\n\t\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( SplitOperation, SplitOperation, ( a, b, context ) => {\n\t// Case 1:\n\t//\n\t// Split at the same position.\n\t//\n\t// If there already was a split at the same position as in `a` operation, it means that the intention\n\t// conveyed by `a` operation has already been fulfilled and `a` should not do anything (to avoid double split).\n\t//\n\t// However, there is a difference if these are new splits or splits created by undo. These have different\n\t// intentions. Also splits moving back different elements from graveyard have different intentions. They\n\t// are just different operations.\n\t//\n\t// So we cancel split operation only if it was really identical.\n\t//\n\t// Also, there is additional case, where split operations aren't identical and should not be cancelled, however the\n\t// default transformation is incorrect too.\n\t//\n\tif ( a.splitPosition.isEqual( b.splitPosition ) ) {\n\t\tif ( !a.graveyardPosition && !b.graveyardPosition ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\n\t\tif ( a.graveyardPosition && b.graveyardPosition && a.graveyardPosition.isEqual( b.graveyardPosition ) ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\n\t\t// Use context to know that the `a.splitPosition` should stay where it is.\n\t\t// This happens during undo when first a merge operation moved nodes to `a.splitPosition` and now `b` operation undoes that merge.\n\t\tif ( context.abRelation == 'splitBefore' ) {\n\t\t\t// Since split is at the same position, there are no nodes left to split.\n\t\t\ta.howMany = 0;\n\n\t\t\t// Note: there was `if ( a.graveyardPosition )` here but it was uncovered in tests and I couldn't find any scenarios for now.\n\t\t\t// That would have to be a `SplitOperation` that didn't come from undo but is transformed by operations that were undone.\n\t\t\t// It could happen if `context` is enabled in collaboration.\n\t\t\ta.graveyardPosition = a.graveyardPosition._getTransformedBySplitOperation( b );\n\n\t\t\treturn [ a ];\n\t\t}\n\t}\n\n\t// Case 2:\n\t//\n\t// Same node is using to split different elements. This happens in undo when previously same element was merged to\n\t// two different elements. This is described in `MergeOperation` x `MergeOperation` transformation.\n\t//\n\t// In this case we will follow the same logic. We will assume that `insertionPosition` is same for both\n\t// split operations. This might not always be true but in the real cases that were experienced it was. After all,\n\t// if these splits are reverses of merge operations that were merging the same element, then the `insertionPosition`\n\t// should be same for both of those splits.\n\t//\n\t// Again, we will decide which operation is stronger by checking if split happens in graveyard or in non-graveyard root.\n\t//\n\tif ( a.graveyardPosition && b.graveyardPosition && a.graveyardPosition.isEqual( b.graveyardPosition ) ) {\n\t\tconst aInGraveyard = a.splitPosition.root.rootName == '$graveyard';\n\t\tconst bInGraveyard = b.splitPosition.root.rootName == '$graveyard';\n\n\t\t// If `aIsWeak` it means that `a` points to graveyard while `b` doesn't. Don't move nodes then.\n\t\tconst aIsWeak = aInGraveyard && !bInGraveyard;\n\n\t\t// If `bIsWeak` it means that `b` points to graveyard while `a` doesn't. Force moving nodes then.\n\t\tconst bIsWeak = bInGraveyard && !aInGraveyard;\n\n\t\t// Force move if `b` is weak or neither operation is weak but `a` is stronger through `context.aIsStrong`.\n\t\tconst forceMove = bIsWeak || ( !aIsWeak && context.aIsStrong );\n\n\t\tif ( forceMove ) {\n\t\t\tconst result = [];\n\n\t\t\t// First we need to move any nodes split by `b` back to where they were.\n\t\t\t// Do it only if `b` actually moved something.\n\t\t\tif ( b.howMany ) {\n\t\t\t\tresult.push( new MoveOperation( b.moveTargetPosition, b.howMany, b.splitPosition, 0 ) );\n\t\t\t}\n\n\t\t\t// Then we need to move nodes from `a` split position to their new element.\n\t\t\t// Do it only if `a` actually should move something.\n\t\t\tif ( a.howMany ) {\n\t\t\t\tresult.push( new MoveOperation( a.splitPosition, a.howMany, a.moveTargetPosition, 0 ) );\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\t}\n\n\tif ( a.graveyardPosition ) {\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedBySplitOperation( b );\n\t}\n\n\t// Case 3:\n\t//\n\t// Position where operation `b` inserted a new node after split is the same as the operation `a` split position.\n\t// As in similar cases, there is ambiguity if the split should be before the new node (created by `b`) or after.\n\t//\n\tif ( a.splitPosition.isEqual( b.insertionPosition ) && context.abRelation == 'splitBefore' ) {\n\t\ta.howMany++;\n\n\t\treturn [ a ];\n\t}\n\n\t// Case 4:\n\t//\n\t// This is a mirror to the case 2. above.\n\t//\n\tif ( b.splitPosition.isEqual( a.insertionPosition ) && context.baRelation == 'splitBefore' ) {\n\t\tconst newPositionPath = b.insertionPosition.path.slice();\n\t\tnewPositionPath.push( 0 );\n\n\t\tconst newPosition = new Position( b.insertionPosition.root, newPositionPath );\n\t\tconst moveOp = new MoveOperation( a.insertionPosition, 1, newPosition, 0 );\n\n\t\treturn [ a, moveOp ];\n\t}\n\n\t// The default case.\n\t//\n\tif ( a.splitPosition.hasSameParentAs( b.splitPosition ) && a.splitPosition.offset < b.splitPosition.offset ) {\n\t\ta.howMany -= b.howMany;\n\t}\n\n\ta.splitPosition = a.splitPosition._getTransformedBySplitOperation( b );\n\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\n\treturn [ a ];\n} );\n\n// Checks whether `MoveOperation` `targetPosition` is inside a node from the moved range of the other `MoveOperation`.\n//\n// @private\n// @param {module:engine/model/operation/moveoperation~MoveOperation} a\n// @param {module:engine/model/operation/moveoperation~MoveOperation} b\n// @returns {Boolean}\nfunction _moveTargetIntoMovedRange( a, b ) {\n\treturn a.targetPosition._getTransformedByDeletion( b.sourcePosition, b.howMany ) === null;\n}\n\n// Helper function for `MoveOperation` x `MoveOperation` transformation. Converts given ranges and target position to\n// move operations and returns them.\n//\n// Ranges and target position will be transformed on-the-fly when generating operations.\n//\n// Given `ranges` should be in the order of how they were in the original transformed operation.\n//\n// Given `targetPosition` is the target position of the first range from `ranges`.\n//\n// @private\n// @param {Array.<module:engine/model/range~Range>} ranges\n// @param {module:engine/model/position~Position} targetPosition\n// @returns {Array.<module:engine/model/operation/moveoperation~MoveOperation>}\nfunction _makeMoveOperationsFromRanges( ranges, targetPosition ) {\n\t// At this moment we have some ranges and a target position, to which those ranges should be moved.\n\t// Order in `ranges` array is the go-to order of after transformation.\n\t//\n\t// We are almost done. We have `ranges` and `targetPosition` to make operations from.\n\t// Unfortunately, those operations may affect each other. Precisely, first operation after move\n\t// may affect source range and target position of second and third operation. Same with second\n\t// operation affecting third.\n\t//\n\t// We need to fix those source ranges and target positions once again, before converting `ranges` to operations.\n\tconst operations = [];\n\n\t// Keep in mind that nothing will be transformed if there is just one range in `ranges`.\n\tfor ( let i = 0; i < ranges.length; i++ ) {\n\t\t// Create new operation out of a range and target position.\n\t\tconst range = ranges[ i ];\n\t\tconst op = new MoveOperation(\n\t\t\trange.start,\n\t\t\trange.end.offset - range.start.offset,\n\t\t\ttargetPosition,\n\t\t\t0\n\t\t);\n\n\t\toperations.push( op );\n\n\t\t// Transform other ranges by the generated operation.\n\t\tfor ( let j = i + 1; j < ranges.length; j++ ) {\n\t\t\t// All ranges in `ranges` array should be:\n\t\t\t//\n\t\t\t// * non-intersecting (these are part of original operation source range), and\n\t\t\t// * `targetPosition` does not target into them (opposite would mean that transformed operation targets \"inside itself\").\n\t\t\t//\n\t\t\t// This means that the transformation will be \"clean\" and always return one result.\n\t\t\tranges[ j ] = ranges[ j ]._getTransformedByMove( op.sourcePosition, op.targetPosition, op.howMany )[ 0 ];\n\t\t}\n\n\t\ttargetPosition = targetPosition._getTransformedByMove( op.sourcePosition, op.targetPosition, op.howMany );\n\t}\n\n\treturn operations;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/basecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { transformSets } from '@ckeditor/ckeditor5-engine/src/model/operation/transform';\n\n/**\n * Base class for undo feature commands: {@link module:undo/undocommand~UndoCommand} and {@link module:undo/redocommand~RedoCommand}.\n *\n * @protected\n * @extends module:core/command~Command\n */\nexport default class BaseCommand extends Command {\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Stack of items stored by the command. These are pairs of:\n\t\t *\n\t\t * * {@link module:engine/model/batch~Batch batch} saved by the command,\n\t\t * * {@link module:engine/model/selection~Selection selection} state at the moment of saving the batch.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array} #_stack\n\t\t */\n\t\tthis._stack = [];\n\n\t\t/**\n\t\t * Stores all batches that were created by this command.\n\t\t *\n\t\t * @protected\n\t\t * @member {WeakSet.<module:engine/model/batch~Batch>} #_createdBatches\n\t\t */\n\t\tthis._createdBatches = new WeakSet();\n\n\t\t// Refresh state, so the command is inactive right after initialization.\n\t\tthis.refresh();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = this._stack.length > 0;\n\t}\n\n\t/**\n\t * Stores a batch in the command, together with the selection state of the {@link module:engine/model/document~Document document}\n\t * created by the editor which this command is registered to.\n\t *\n\t * @param {module:engine/model/batch~Batch} batch The batch to add.\n\t */\n\taddBatch( batch ) {\n\t\tconst docSelection = this.editor.model.document.selection;\n\n\t\tconst selection = {\n\t\t\tranges: docSelection.hasOwnRange ? Array.from( docSelection.getRanges() ) : [],\n\t\t\tisBackward: docSelection.isBackward\n\t\t};\n\n\t\tthis._stack.push( { batch, selection } );\n\t\tthis.refresh();\n\t}\n\n\t/**\n\t * Removes all items from the stack.\n\t */\n\tclearStack() {\n\t\tthis._stack = [];\n\t\tthis.refresh();\n\t}\n\n\t/**\n\t * Restores the {@link module:engine/model/document~Document#selection document selection} state after a batch was undone.\n\t *\n\t * @protected\n\t * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be restored.\n\t * @param {Boolean} isBackward A flag describing whether the restored range was selected forward or backward.\n\t * @param {Array.<module:engine/model/operation/operation~Operation>} operations Operations which has been applied\n\t * since selection has been stored.\n\t */\n\t_restoreSelection( ranges, isBackward, operations ) {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\n\t\t// This will keep the transformed selection ranges.\n\t\tconst selectionRanges = [];\n\n\t\t// Transform all ranges from the restored selection.\n\t\tfor ( const range of ranges ) {\n\t\t\tconst transformed = transformSelectionRange( range, operations );\n\n\t\t\t// For each `range` from `ranges`, we take only one transformed range.\n\t\t\t// This is because we want to prevent situation where single-range selection\n\t\t\t// got transformed to multi-range selection. We will take the first range that\n\t\t\t// is not in the graveyard.\n\t\t\tconst newRange = transformed.find(\n\t\t\t\trange => range.start.root != document.graveyard\n\t\t\t);\n\n\t\t\t// `transformedRange` might be `undefined` if transformed range ended up in graveyard.\n\t\t\tif ( newRange ) {\n\t\t\t\tselectionRanges.push( newRange );\n\t\t\t}\n\t\t}\n\n\t\t// `selectionRanges` may be empty if all ranges ended up in graveyard. If that is the case, do not restore selection.\n\t\tif ( selectionRanges.length ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.setSelection( selectionRanges, { backward: isBackward } );\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Undoes a batch by reversing that batch, transforming reversed batch and finally applying it.\n\t * This is a helper method for {@link #execute}.\n\t *\n\t * @protected\n\t * @param {module:engine/model/batch~Batch} batchToUndo The batch to be undone.\n\t * @param {module:engine/model/batch~Batch} undoingBatch The batch that will contain undoing changes.\n\t */\n\t_undo( batchToUndo, undoingBatch ) {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\n\t\t// All changes done by the command execution will be saved as one batch.\n\t\tthis._createdBatches.add( undoingBatch );\n\n\t\tconst operationsToUndo = batchToUndo.operations.slice().filter( operation => operation.isDocumentOperation );\n\t\toperationsToUndo.reverse();\n\n\t\t// We will process each operation from `batchToUndo`, in reverse order. If there were operations A, B and C in undone batch,\n\t\t// we need to revert them in reverse order, so first C' (reversed C), then B', then A'.\n\t\tfor ( const operationToUndo of operationsToUndo ) {\n\t\t\tconst nextBaseVersion = operationToUndo.baseVersion + 1;\n\t\t\tconst historyOperations = Array.from( document.history.getOperations( nextBaseVersion ) );\n\n\t\t\tconst transformedSets = transformSets(\n\t\t\t\t[ operationToUndo.getReversed() ],\n\t\t\t\thistoryOperations,\n\t\t\t\t{\n\t\t\t\t\tuseRelations: true,\n\t\t\t\t\tdocument: this.editor.model.document,\n\t\t\t\t\tpadWithNoOps: false,\n\t\t\t\t\tforceWeakRemove: true\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst reversedOperations = transformedSets.operationsA;\n\n\t\t\t// After reversed operation has been transformed by all history operations, apply it.\n\t\t\tfor ( const operation of reversedOperations ) {\n\t\t\t\t// Before applying, add the operation to the `undoingBatch`.\n\t\t\t\tundoingBatch.addOperation( operation );\n\t\t\t\tmodel.applyOperation( operation );\n\n\t\t\t\tdocument.history.setOperationAsUndone( operationToUndo, operation );\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Transforms given range `range` by given `operations`.\n// Returns an array containing one or more ranges, which are result of the transformation.\nfunction transformSelectionRange( range, operations ) {\n\tconst transformed = range.getTransformedByOperations( operations );\n\n\t// After `range` got transformed, we have an array of ranges. Some of those\n\t// ranges may be \"touching\" -- they can be next to each other and could be merged.\n\t// First, we have to sort those ranges to assure that they are in order.\n\ttransformed.sort( ( a, b ) => a.start.isBefore( b.start ) ? -1 : 1 );\n\n\t// Then, we check if two consecutive ranges are touching.\n\tfor ( let i = 1; i < transformed.length; i++ ) {\n\t\tconst a = transformed[ i - 1 ];\n\t\tconst b = transformed[ i ];\n\n\t\tif ( a.end.isTouching( b.start ) ) {\n\t\t\t// And join them together if they are.\n\t\t\ta.end = b.end;\n\t\t\ttransformed.splice( i, 1 );\n\t\t\ti--;\n\t\t}\n\t}\n\n\treturn transformed;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undocommand\n */\n\nimport BaseCommand from './basecommand';\n\n/**\n * The undo command stores {@link module:engine/model/batch~Batch batches} applied to the\n * {@link module:engine/model/document~Document document} and is able to undo a batch by reversing it and transforming by\n * batches from {@link module:engine/model/document~Document#history history} that happened after the reversed batch.\n *\n * The undo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\nexport default class UndoCommand extends BaseCommand {\n\t/**\n\t * Executes the command. This method reverts a {@link module:engine/model/batch~Batch batch} added to the command's stack, transforms\n\t * and applies the reverted version on the {@link module:engine/model/document~Document document} and removes the batch from the stack.\n\t * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n\t *\n\t * @fires execute\n\t * @fires revert\n\t * @param {module:engine/model/batch~Batch} [batch] A batch that should be undone. If not set, the last added batch will be undone.\n\t */\n\texecute( batch = null ) {\n\t\t// If batch is not given, set `batchIndex` to the last index in command stack.\n\t\tconst batchIndex = batch ? this._stack.findIndex( a => a.batch == batch ) : this._stack.length - 1;\n\n\t\tconst item = this._stack.splice( batchIndex, 1 )[ 0 ];\n\t\tconst undoingBatch = this.editor.model.createBatch( 'transparent' );\n\n\t\t// All changes has to be done in one `enqueueChange` callback so other listeners will not\n\t\t// step between consecutive operations, or won't do changes to the document before selection is properly restored.\n\t\tthis.editor.model.enqueueChange( undoingBatch, () => {\n\t\t\tthis._undo( item.batch, undoingBatch );\n\n\t\t\tconst operations = this.editor.model.document.history.getOperations( item.batch.baseVersion );\n\t\t\tthis._restoreSelection( item.selection.ranges, item.selection.isBackward, operations );\n\n\t\t\tthis.fire( 'revert', item.batch, undoingBatch );\n\t\t} );\n\n\t\tthis.refresh();\n\t}\n}\n\n/**\n * Fired when execution of the command reverts some batch.\n *\n * @event revert\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/redocommand\n */\n\nimport BaseCommand from './basecommand';\n\n/**\n * The redo command stores {@link module:engine/model/batch~Batch batches} that were used to undo a batch by\n * {@link module:undo/undocommand~UndoCommand}. It is able to redo a previously undone batch by reversing the undoing\n * batches created by `UndoCommand`. The reversed batch is transformed by all the batches from\n * {@link module:engine/model/document~Document#history history} that happened after the reversed undo batch.\n *\n * The redo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\nexport default class RedoCommand extends BaseCommand {\n\t/**\n\t * Executes the command. This method reverts the last {@link module:engine/model/batch~Batch batch} added to\n\t * the command's stack, applies the reverted and transformed version on the\n\t * {@link module:engine/model/document~Document document} and removes the batch from the stack.\n\t * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst item = this._stack.pop();\n\t\tconst redoingBatch = this.editor.model.createBatch( 'transparent' );\n\n\t\t// All changes have to be done in one `enqueueChange` callback so other listeners will not step between consecutive\n\t\t// operations, or won't do changes to the document before selection is properly restored.\n\t\tthis.editor.model.enqueueChange( redoingBatch, () => {\n\t\t\tconst lastOperation = item.batch.operations[ item.batch.operations.length - 1 ];\n\t\t\tconst nextBaseVersion = lastOperation.baseVersion + 1;\n\t\t\tconst operations = this.editor.model.document.history.getOperations( nextBaseVersion );\n\n\t\t\tthis._restoreSelection( item.selection.ranges, item.selection.isBackward, operations );\n\t\t\tthis._undo( item.batch, redoingBatch );\n\t\t} );\n\n\t\tthis.refresh();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undoediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoCommand from './undocommand';\nimport RedoCommand from './redocommand';\n\n/**\n * The undo engine feature.\n *\n * It introduces the `'undo'` and `'redo'` commands to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class UndoEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'UndoEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The command that manages undo {@link module:engine/model/batch~Batch batches} stack (history).\n\t\t * Created and registered during the {@link #init feature initialization}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:undo/undocommand~UndoCommand} #_undoCommand\n\t\t */\n\n\t\t/**\n\t\t * The command that manages redo {@link module:engine/model/batch~Batch batches} stack (history).\n\t\t * Created and registered during the {@link #init feature initialization}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:undo/undocommand~UndoCommand} #_redoCommand\n\t\t */\n\n\t\t/**\n\t\t * Keeps track of which batches were registered in undo.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakSet.<module:engine/model/batch~Batch>}\n\t\t */\n\t\tthis._batchRegistry = new WeakSet();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Create commands.\n\t\tthis._undoCommand = new UndoCommand( editor );\n\t\tthis._redoCommand = new RedoCommand( editor );\n\n\t\t// Register command to the editor.\n\t\teditor.commands.add( 'undo', this._undoCommand );\n\t\teditor.commands.add( 'redo', this._redoCommand );\n\n\t\tthis.listenTo( editor.model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\t// Do not register batch if the operation is not a document operation.\n\t\t\t// This prevents from creating empty undo steps, where all operations where non-document operations.\n\t\t\t// Non-document operations creates and alters content in detached tree fragments (for example, document fragments).\n\t\t\t// Most of time this is preparing data before it is inserted into actual tree (for example during copy & paste).\n\t\t\t// Such operations should not be reversed.\n\t\t\tif ( !operation.isDocumentOperation ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst batch = operation.batch;\n\n\t\t\tconst isRedoBatch = this._redoCommand._createdBatches.has( batch );\n\t\t\tconst isUndoBatch = this._undoCommand._createdBatches.has( batch );\n\t\t\tconst isRegisteredBatch = this._batchRegistry.has( batch );\n\n\t\t\t// If changes are not a part of a batch or this is not a new batch, omit those changes.\n\t\t\tif ( isRegisteredBatch || ( batch.type == 'transparent' && !isRedoBatch && !isUndoBatch ) ) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tif ( isRedoBatch ) {\n\t\t\t\t\t// If this batch comes from `redoCommand`, add it to `undoCommand` stack.\n\t\t\t\t\tthis._undoCommand.addBatch( batch );\n\t\t\t\t} else if ( !isUndoBatch ) {\n\t\t\t\t\t// A default batch - these are new changes in the document, not introduced by undo feature.\n\t\t\t\t\t// Add them to `undoCommand` stack and clear `redoCommand` stack.\n\t\t\t\t\tthis._undoCommand.addBatch( batch );\n\t\t\t\t\tthis._redoCommand.clearStack();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add the batch to the registry so it will not be processed again.\n\t\t\tthis._batchRegistry.add( batch );\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.listenTo( this._undoCommand, 'revert', ( evt, undoneBatch, undoingBatch ) => {\n\t\t\tthis._redoCommand.addBatch( undoingBatch );\n\t\t} );\n\n\t\teditor.keystrokes.set( 'CTRL+Z', 'undo' );\n\t\teditor.keystrokes.set( 'CTRL+Y', 'redo' );\n\t\teditor.keystrokes.set( 'CTRL+SHIFT+Z', 'redo' );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undoui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport undoIcon from '../theme/icons/undo.svg';\nimport redoIcon from '../theme/icons/redo.svg';\n\n/**\n * The undo UI feature. It introduces the `'undo'` and `'redo'` buttons to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class UndoUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst locale = editor.locale;\n\t\tconst t = editor.t;\n\n\t\tconst localizedUndoIcon = locale.uiLanguageDirection == 'ltr' ? undoIcon : redoIcon;\n\t\tconst localizedRedoIcon = locale.uiLanguageDirection == 'ltr' ? redoIcon : undoIcon;\n\n\t\tthis._addButton( 'undo', t( 'Undo' ), 'CTRL+Z', localizedUndoIcon );\n\t\tthis._addButton( 'redo', t( 'Redo' ), 'CTRL+Y', localizedRedoIcon );\n\t}\n\n\t/**\n\t * Creates a button for the specified command.\n\t *\n\t * @private\n\t * @param {String} name Command name.\n\t * @param {String} label Button label.\n\t * @param {String} keystroke Command keystroke.\n\t * @param {String} Icon Source of the icon.\n\t */\n\t_addButton( name, label, keystroke, Icon ) {\n\t\tconst editor = this.editor;\n\n\t\teditor.ui.componentFactory.add( name, locale => {\n\t\t\tconst command = editor.commands.get( name );\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel,\n\t\t\t\ticon: Icon,\n\t\t\t\tkeystroke,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\n\t\t\tthis.listenTo( view, 'execute', () => {\n\t\t\t\teditor.execute( name );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undo\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoEditing from './undoediting';\nimport UndoUI from './undoui';\n\n/**\n * The undo feature.\n *\n * This is a \"glue\" plugin which loads the {@link module:undo/undoediting~UndoEditing undo editing feature}\n * and {@link module:undo/undoui~UndoUI undo UI feature}.\n *\n * Below is the explanation of the undo mechanism working together with {@link module:engine/model/history~History History}:\n *\n * Whenever a {@link module:engine/model/operation/operation~Operation operation} is applied to the\n * {@link module:engine/model/document~Document document}, it is saved to `History` as is.\n * The {@link module:engine/model/batch~Batch batch} that owns that operation is also saved, in\n * {@link module:undo/undocommand~UndoCommand}, together with the selection that was present in the document before the\n * operation was applied. A batch is saved instead of the operation because changes are undone batch-by-batch, not operation-by-operation\n * and a batch is seen as one undo step.\n *\n * After some changes happen to the document, the `History` and `UndoCommand` stack can be represented as follows:\n *\n *\t\t    History                            Undo stack\n *\t\t==============             ==================================\n *\t\t[operation A1]                         [batch A]\n *\t\t[operation B1]                         [batch B]\n *\t\t[operation B2]                         [batch C]\n *\t\t[operation C1]\n *\t\t[operation C2]\n *\t\t[operation B3]\n *\t\t[operation C3]\n *\n * Where operations starting with the same letter are from same batch.\n *\n * Undoing a batch means that a set of operations which will reverse the effects of that batch needs to be generated.\n * For example, if a batch added several letters, undoing the batch should remove them. It is important to apply undoing\n * operations in the reversed order, so if a batch has operation `X`, `Y`, `Z`, reversed operations `Zr`, `Yr` and `Xr`\n * need to be applied. Otherwise reversed operation `Xr` would operate on a wrong document state, because operation `X`\n * does not know that operations `Y` and `Z` happened.\n *\n * After operations from an undone batch got {@link module:engine/model/operation/operation~Operation#getReversed reversed},\n * one needs to make sure if they are ready to be applied. In the scenario above, operation `C3` is the last operation and `C3r`\n * bases on up-to-date document state, so it can be applied to the document.\n *\n *\t\t     History                             Undo stack\n *\t\t=================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]             [   processing undoing batch C   ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\n * Next is operation `C2`, reversed to `C2r`. `C2r` bases on `C2`, so it bases on the wrong document state. It needs to be\n * transformed by operations from history that happened after it, so it \"knows\" about them. Let us assume that `C2' = C2r * B3 * C3 * C3r`,\n * where `*` means \"transformed by\". Rest of operations from that batch are processed in the same fashion.\n *\n *\t\t     History                             Undo stack                                      Redo stack\n *\t\t=================             ==================================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]                                    [ batch Cr ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\t\t[ operation C2' ]\n *\t\t[ operation C1' ]\n *\n * Selective undo works on the same basis, however, instead of undoing the last batch in the undo stack, any batch can be undone.\n * The same algorithm applies: operations from a batch (i.e. `A1`) are reversed and then transformed by operations stored in history.\n *\n * Redo also is very similar to undo. It has its own stack that is filled with undoing (reversed batches). Operations from\n * batch that is re-done are reversed-back, transformed in proper order and applied to the document.\n *\n *\t\t     History                             Undo stack                                      Redo stack\n *\t\t=================             ==================================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]                      [ batch Crr ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\t\t[ operation C2' ]\n *\t\t[ operation C1' ]\n *\t\t[ operation C1'r]\n *\t\t[ operation C2'r]\n *\t\t[ operation C3rr]\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Undo extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ UndoEditing, UndoUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Undo';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module essentials/essentials\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport Clipboard from '@ckeditor/ckeditor5-clipboard/src/clipboard';\nimport Enter from '@ckeditor/ckeditor5-enter/src/enter';\nimport ShiftEnter from '@ckeditor/ckeditor5-enter/src/shiftenter';\nimport SelectAll from '@ckeditor/ckeditor5-select-all/src/selectall';\nimport Typing from '@ckeditor/ckeditor5-typing/src/typing';\nimport Undo from '@ckeditor/ckeditor5-undo/src/undo';\n\n/**\n * A plugin including all essential editing features. It represents a set of features that enables similar functionalities\n * to a `<textarea>` element.\n *\n * It includes:\n *\n * * {@link module:clipboard/clipboard~Clipboard},\n * * {@link module:enter/enter~Enter},\n * * {@link module:select-all/selectall~SelectAll},\n * * {@link module:enter/shiftenter~ShiftEnter},\n * * {@link module:typing/typing~Typing},\n * * {@link module:undo/undo~Undo}.\n *\n * This plugin set does not define any block-level containers (such as {@link module:paragraph/paragraph~Paragraph}).\n * If your editor is supposed to handle block content, make sure to include it.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Essentials extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Clipboard, Enter, SelectAll, ShiftEnter, Typing, Undo ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Essentials';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/attributecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\n/**\n * An extension of the base {@link module:core/command~Command} class, which provides utilities for a command\n * that toggles a single attribute on a text or an element.\n *\n * `AttributeCommand` uses {@link module:engine/model/document~Document#selection}\n * to decide which nodes (if any) should be changed, and applies or removes the attribute from them.\n *\n * The command checks the {@link module:engine/model/model~Model#schema} to decide if it can be enabled\n * for the current selection and to which nodes the attribute can be applied.\n *\n * @extends module:core/command~Command\n */\nexport default class AttributeCommand extends Command {\n\t/**\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {String} attributeKey Attribute that will be set by the command.\n\t */\n\tconstructor( editor, attributeKey ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The attribute that will be set by the command.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.attributeKey = attributeKey;\n\n\t\t/**\n\t\t * Flag indicating whether the command is active. The command is active when the\n\t\t * {@link module:engine/model/selection~Selection#hasAttribute selection has the attribute} which means that:\n\t\t *\n\t\t * * If the selection is not empty &ndash; That the attribute is set on the first node in the selection that allows this attribute.\n\t\t * * If the selection is empty &ndash; That the selection has the attribute itself (which means that newly typed\n\t\t * text will have this attribute, too).\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #value\n\t\t */\n\t}\n\n\t/**\n\t * Updates the command's {@link #value} and {@link #isEnabled} based on the current selection.\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tthis.value = this._getValueFromFirstAllowedNode();\n\t\tthis.isEnabled = model.schema.checkAttributeInSelection( doc.selection, this.attributeKey );\n\t}\n\n\t/**\n\t * Executes the command &mdash; applies the attribute to the selection or removes it from the selection.\n\t *\n\t * If the command is active (`value == true`), it will remove attributes. Otherwise, it will set attributes.\n\t *\n\t * The execution result differs, depending on the {@link module:engine/model/document~Document#selection}:\n\t *\n\t * * If the selection is on a range, the command applies the attribute to all nodes in that range\n\t * (if they are allowed to have this attribute by the {@link module:engine/model/schema~Schema schema}).\n\t * * If the selection is collapsed in a non-empty node, the command applies the attribute to the\n\t * {@link module:engine/model/document~Document#selection} itself (note that typed characters copy attributes from the selection).\n\t * * If the selection is collapsed in an empty node, the command applies the attribute to the parent node of the selection (note\n\t * that the selection inherits all attributes from a node if it is in an empty node).\n\t *\n\t * @fires execute\n\t * @param {Object} [options] Command options.\n\t * @param {Boolean} [options.forceValue] If set, it will force the command behavior. If `true`, the command will apply the attribute,\n\t * otherwise the command will remove the attribute.\n\t * If not set, the command will look for its current value to decide what it should do.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst selection = doc.selection;\n\t\tconst value = ( options.forceValue === undefined ) ? !this.value : options.forceValue;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tif ( value ) {\n\t\t\t\t\twriter.setSelectionAttribute( this.attributeKey, true );\n\t\t\t\t} else {\n\t\t\t\t\twriter.removeSelectionAttribute( this.attributeKey );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst ranges = model.schema.getValidRanges( selection.getRanges(), this.attributeKey );\n\n\t\t\t\tfor ( const range of ranges ) {\n\t\t\t\t\tif ( value ) {\n\t\t\t\t\t\twriter.setAttribute( this.attributeKey, value, range );\n\t\t\t\t\t} else {\n\t\t\t\t\t\twriter.removeAttribute( this.attributeKey, range );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Checks the attribute value of the first node in the selection that allows the attribute.\n\t * For the collapsed selection returns the selection attribute.\n\t *\n\t * @private\n\t * @returns {Boolean} The attribute value.\n\t */\n\t_getValueFromFirstAllowedNode() {\n\t\tconst model = this.editor.model;\n\t\tconst schema = model.schema;\n\t\tconst selection = model.document.selection;\n\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn selection.hasAttribute( this.attributeKey );\n\t\t}\n\n\t\tfor ( const range of selection.getRanges() ) {\n\t\t\tfor ( const item of range.getItems() ) {\n\t\t\t\tif ( schema.checkAttribute( item, this.attributeKey ) ) {\n\t\t\t\t\treturn item.hasAttribute( this.attributeKey );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/bold/boldediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport AttributeCommand from '../attributecommand';\n\nconst BOLD = 'bold';\n\n/**\n * The bold editing feature.\n *\n * It registers the `'bold'` command and introduces the `bold` attribute in the model which renders to the view\n * as a `<strong>` element.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BoldEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'BoldEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\t// Allow bold attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: BOLD } );\n\t\teditor.model.schema.setAttributeProperties( BOLD, {\n\t\t\tisFormatting: true,\n\t\t\tcopyOnEnter: true\n\t\t} );\n\n\t\t// Build converter from model to view for data and editing pipelines.\n\t\teditor.conversion.attributeToElement( {\n\t\t\tmodel: BOLD,\n\t\t\tview: 'strong',\n\t\t\tupcastAlso: [\n\t\t\t\t'b',\n\t\t\t\tviewElement => {\n\t\t\t\t\tconst fontWeight = viewElement.getStyle( 'font-weight' );\n\n\t\t\t\t\tif ( !fontWeight ) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Value of the `font-weight` attribute can be defined as a string or a number.\n\t\t\t\t\tif ( fontWeight == 'bold' || Number( fontWeight ) >= 600 ) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: true,\n\t\t\t\t\t\t\tstyles: [ 'font-weight' ]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\t// Create bold command.\n\t\teditor.commands.add( BOLD, new AttributeCommand( editor, BOLD ) );\n\n\t\t// Set the Ctrl+B keystroke.\n\t\teditor.keystrokes.set( 'CTRL+B', BOLD );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/bold/boldui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport boldIcon from '../../theme/icons/bold.svg';\n\nconst BOLD = 'bold';\n\n/**\n * The bold UI feature. It introduces the Bold button.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BoldUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\t// Add bold button to feature components.\n\t\teditor.ui.componentFactory.add( BOLD, locale => {\n\t\t\tconst command = editor.commands.get( BOLD );\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel: t( 'Bold' ),\n\t\t\t\ticon: boldIcon,\n\t\t\t\tkeystroke: 'CTRL+B',\n\t\t\t\ttooltip: true,\n\t\t\t\tisToggleable: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t\t// Execute command.\n\t\t\tthis.listenTo( view, 'execute', () => {\n\t\t\t\teditor.execute( BOLD );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/bold\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BoldEditing from './bold/boldediting';\nimport BoldUI from './bold/boldui';\n\n/**\n * The bold feature.\n *\n * For a detailed overview check the {@glink features/basic-styles Basic styles feature documentation}\n * and the {@glink api/basic-styles package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:basic-styles/bold/boldediting~BoldEditing bold editing feature}\n * and {@link module:basic-styles/bold/boldui~BoldUI bold UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Bold extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ BoldEditing, BoldUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Bold';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/italic/italicediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport AttributeCommand from '../attributecommand';\n\nconst ITALIC = 'italic';\n\n/**\n * The italic editing feature.\n *\n * It registers the `'italic'` command, the <kbd>Ctrl+I</kbd> keystroke and introduces the `italic` attribute in the model\n * which renders to the view as an `<i>` element.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ItalicEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ItalicEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Allow italic attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: ITALIC } );\n\t\teditor.model.schema.setAttributeProperties( ITALIC, {\n\t\t\tisFormatting: true,\n\t\t\tcopyOnEnter: true\n\t\t} );\n\n\t\teditor.conversion.attributeToElement( {\n\t\t\tmodel: ITALIC,\n\t\t\tview: 'i',\n\t\t\tupcastAlso: [\n\t\t\t\t'em',\n\t\t\t\t{\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\t'font-style': 'italic'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\t// Create italic command.\n\t\teditor.commands.add( ITALIC, new AttributeCommand( editor, ITALIC ) );\n\n\t\t// Set the Ctrl+I keystroke.\n\t\teditor.keystrokes.set( 'CTRL+I', ITALIC );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/italic/italicui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport italicIcon from '../../theme/icons/italic.svg';\n\nconst ITALIC = 'italic';\n\n/**\n * The italic UI feature. It introduces the Italic button.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ItalicUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\t// Add bold button to feature components.\n\t\teditor.ui.componentFactory.add( ITALIC, locale => {\n\t\t\tconst command = editor.commands.get( ITALIC );\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel: t( 'Italic' ),\n\t\t\t\ticon: italicIcon,\n\t\t\t\tkeystroke: 'CTRL+I',\n\t\t\t\ttooltip: true,\n\t\t\t\tisToggleable: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t\t// Execute command.\n\t\t\tthis.listenTo( view, 'execute', () => {\n\t\t\t\teditor.execute( ITALIC );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/italic\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ItalicEditing from './italic/italicediting';\nimport ItalicUI from './italic/italicui';\n\n/**\n * The italic feature.\n *\n * For a detailed overview check the {@glink features/basic-styles Basic styles feature documentation}\n * and the {@glink api/basic-styles package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:basic-styles/italic/italicediting~ItalicEditing} and\n * {@link module:basic-styles/italic/italicui~ItalicUI} plugins.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Italic extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ItalicEditing, ItalicUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Italic';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/findlinkrange\n */\n\n/**\n * Returns a range containing the entire link in which the given `position` is placed.\n *\n * It can be used e.g. to get the entire range on which the `linkHref` attribute needs to be changed when having a\n * selection inside a link.\n *\n * @param {module:engine/model/position~Position} position The start position.\n * @param {String} value The `linkHref` attribute value.\n * @returns {module:engine/model/range~Range} The link range.\n */\nexport default function findLinkRange( position, value, model ) {\n\treturn model.createRange( _findBound( position, value, true, model ), _findBound( position, value, false, model ) );\n}\n\n// Walks forward or backward (depends on the `lookBack` flag), node by node, as long as they have the same `linkHref` attribute value\n// and returns a position just before or after (depends on the `lookBack` flag) the last matched node.\n//\n// @param {module:engine/model/position~Position} position The start position.\n// @param {String} value The `linkHref` attribute value.\n// @param {Boolean} lookBack Whether the walk direction is forward (`false`) or backward (`true`).\n// @returns {module:engine/model/position~Position} The position just before the last matched node.\nfunction _findBound( position, value, lookBack, model ) {\n\t// Get node before or after position (depends on `lookBack` flag).\n\t// When position is inside text node then start searching from text node.\n\tlet node = position.textNode || ( lookBack ? position.nodeBefore : position.nodeAfter );\n\n\tlet lastNode = null;\n\n\twhile ( node && node.getAttribute( 'linkHref' ) == value ) {\n\t\tlastNode = node;\n\t\tnode = lookBack ? node.previousSibling : node.nextSibling;\n\t}\n\n\treturn lastNode ? model.createPositionAt( lastNode, lookBack ? 'before' : 'after' ) : position;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/linkcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport findLinkRange from './findlinkrange';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\n\n/**\n * The link command. It is used by the {@link module:link/link~Link link feature}.\n *\n * @extends module:core/command~Command\n */\nexport default class LinkCommand extends Command {\n\t/**\n\t * The value of the `'linkHref'` attribute if the start of the selection is located in a node with this attribute.\n\t *\n\t * @observable\n\t * @readonly\n\t * @member {Object|undefined} #value\n\t */\n\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * A collection of {@link module:link/utils~ManualDecorator manual decorators}\n\t\t * corresponding to the {@link module:link/link~LinkConfig#decorators decorator configuration}.\n\t\t *\n\t\t * You can consider it a model with states of manual decorators added to the currently selected link.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:utils/collection~Collection}\n\t\t */\n\t\tthis.manualDecorators = new Collection();\n\t}\n\n\t/**\n\t * Synchronizes the state of {@link #manualDecorators} with the currently present elements in the model.\n\t */\n\trestoreManualDecoratorStates() {\n\t\tfor ( const manualDecorator of this.manualDecorators ) {\n\t\t\tmanualDecorator.value = this._getDecoratorStateFromModel( manualDecorator.id );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tthis.value = doc.selection.getAttribute( 'linkHref' );\n\n\t\tfor ( const manualDecorator of this.manualDecorators ) {\n\t\t\tmanualDecorator.value = this._getDecoratorStateFromModel( manualDecorator.id );\n\t\t}\n\n\t\tthis.isEnabled = model.schema.checkAttributeInSelection( doc.selection, 'linkHref' );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * When the selection is non-collapsed, the `linkHref` attribute will be applied to nodes inside the selection, but only to\n\t * those nodes where the `linkHref` attribute is allowed (disallowed nodes will be omitted).\n\t *\n\t * When the selection is collapsed and is not inside the text with the `linkHref` attribute, a\n\t * new {@link module:engine/model/text~Text text node} with the `linkHref` attribute will be inserted in place of the caret, but\n\t * only if such element is allowed in this place. The `_data` of the inserted text will equal the `href` parameter.\n\t * The selection will be updated to wrap the just inserted text node.\n\t *\n\t * When the selection is collapsed and inside the text with the `linkHref` attribute, the attribute value will be updated.\n\t *\n\t * # Decorators and model attribute management\n\t *\n\t * There is an optional argument to this command that applies or removes model\n\t * {@glink framework/guides/architecture/editing-engine#text-attributes text attributes} brought by\n\t * {@link module:link/utils~ManualDecorator manual link decorators}.\n\t *\n\t * Text attribute names in the model correspond to the entries in the {@link module:link/link~LinkConfig#decorators configuration}.\n\t * For every decorator configured, a model text attribute exists with the \"link\" prefix. For example, a `'linkMyDecorator'` attribute\n\t * corresponds to `'myDecorator'` in the configuration.\n\t *\n\t * To learn more about link decorators, check out the {@link module:link/link~LinkConfig#decorators `config.link.decorators`}\n\t * documentation.\n\t *\n\t * Here is how to manage decorator attributes with the link command:\n\t *\n\t *\t\tconst linkCommand = editor.commands.get( 'link' );\n\t *\n\t *\t\t// Adding a new decorator attribute.\n\t *\t\tlinkCommand.execute( 'http://example.com', {\n\t *\t\t\tlinkIsExternal: true\n\t *\t\t} );\n\t *\n\t *\t\t// Removing a decorator attribute from the selection.\n\t *\t\tlinkCommand.execute( 'http://example.com', {\n\t *\t\t\tlinkIsExternal: false\n\t *\t\t} );\n\t *\n\t *\t\t// Adding multiple decorator attributes at the same time.\n\t *\t\tlinkCommand.execute( 'http://example.com', {\n\t *\t\t\tlinkIsExternal: true,\n\t *\t\t\tlinkIsDownloadable: true,\n\t *\t\t} );\n\t *\n\t *\t\t// Removing and adding decorator attributes at the same time.\n\t *\t\tlinkCommand.execute( 'http://example.com', {\n\t *\t\t\tlinkIsExternal: false,\n\t *\t\t\tlinkFoo: true,\n\t *\t\t\tlinkIsDownloadable: false,\n\t *\t\t} );\n\t *\n\t * **Note**: If the decorator attribute name is not specified, its state remains untouched.\n\t *\n\t * **Note**: {@link module:link/unlinkcommand~UnlinkCommand#execute `UnlinkCommand#execute()`} removes all\n\t * decorator attributes.\n\t *\n\t * @fires execute\n\t * @param {String} href Link destination.\n\t * @param {Object} [manualDecoratorIds={}] The information about manual decorator attributes to be applied or removed upon execution.\n\t */\n\texecute( href, manualDecoratorIds = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\t// Stores information about manual decorators to turn them on/off when command is applied.\n\t\tconst truthyManualDecorators = [];\n\t\tconst falsyManualDecorators = [];\n\n\t\tfor ( const name in manualDecoratorIds ) {\n\t\t\tif ( manualDecoratorIds[ name ] ) {\n\t\t\t\ttruthyManualDecorators.push( name );\n\t\t\t} else {\n\t\t\t\tfalsyManualDecorators.push( name );\n\t\t\t}\n\t\t}\n\n\t\tmodel.change( writer => {\n\t\t\t// If selection is collapsed then update selected link or insert new one at the place of caret.\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tconst position = selection.getFirstPosition();\n\n\t\t\t\t// When selection is inside text with `linkHref` attribute.\n\t\t\t\tif ( selection.hasAttribute( 'linkHref' ) ) {\n\t\t\t\t\t// Then update `linkHref` value.\n\t\t\t\t\tconst linkRange = findLinkRange( position, selection.getAttribute( 'linkHref' ), model );\n\n\t\t\t\t\twriter.setAttribute( 'linkHref', href, linkRange );\n\n\t\t\t\t\ttruthyManualDecorators.forEach( item => {\n\t\t\t\t\t\twriter.setAttribute( item, true, linkRange );\n\t\t\t\t\t} );\n\n\t\t\t\t\tfalsyManualDecorators.forEach( item => {\n\t\t\t\t\t\twriter.removeAttribute( item, linkRange );\n\t\t\t\t\t} );\n\n\t\t\t\t\t// Create new range wrapping changed link.\n\t\t\t\t\twriter.setSelection( linkRange );\n\t\t\t\t}\n\t\t\t\t// If not then insert text node with `linkHref` attribute in place of caret.\n\t\t\t\t// However, since selection in collapsed, attribute value will be used as data for text node.\n\t\t\t\t// So, if `href` is empty, do not create text node.\n\t\t\t\telse if ( href !== '' ) {\n\t\t\t\t\tconst attributes = toMap( selection.getAttributes() );\n\n\t\t\t\t\tattributes.set( 'linkHref', href );\n\n\t\t\t\t\ttruthyManualDecorators.forEach( item => {\n\t\t\t\t\t\tattributes.set( item, true );\n\t\t\t\t\t} );\n\n\t\t\t\t\tconst node = writer.createText( href, attributes );\n\n\t\t\t\t\tmodel.insertContent( node, position );\n\n\t\t\t\t\t// Create new range wrapping created node.\n\t\t\t\t\twriter.setSelection( writer.createRangeOn( node ) );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If selection has non-collapsed ranges, we change attribute on nodes inside those ranges\n\t\t\t\t// omitting nodes where `linkHref` attribute is disallowed.\n\t\t\t\tconst ranges = model.schema.getValidRanges( selection.getRanges(), 'linkHref' );\n\n\t\t\t\tfor ( const range of ranges ) {\n\t\t\t\t\twriter.setAttribute( 'linkHref', href, range );\n\n\t\t\t\t\ttruthyManualDecorators.forEach( item => {\n\t\t\t\t\t\twriter.setAttribute( item, true, range );\n\t\t\t\t\t} );\n\n\t\t\t\t\tfalsyManualDecorators.forEach( item => {\n\t\t\t\t\t\twriter.removeAttribute( item, range );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Provides information whether a decorator with a given name is present in the currently processed selection.\n\t *\n\t * @private\n\t * @param {String} decoratorName The name of the manual decorator used in the model\n\t * @returns {Boolean} The information whether a given decorator is currently present in the selection.\n\t */\n\t_getDecoratorStateFromModel( decoratorName ) {\n\t\tconst doc = this.editor.model.document;\n\t\treturn doc.selection.getAttribute( decoratorName );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/unlinkcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport findLinkRange from './findlinkrange';\n\n/**\n * The unlink command. It is used by the {@link module:link/link~Link link plugin}.\n *\n * @extends module:core/command~Command\n */\nexport default class UnlinkCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = this.editor.model.document.selection.hasAttribute( 'linkHref' );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * When the selection is collapsed, it removes the `linkHref` attribute from each node with the same `linkHref` attribute value.\n\t * When the selection is non-collapsed, it removes the `linkHref` attribute from each node in selected ranges.\n\t *\n\t * # Decorators\n\t *\n\t * If {@link module:link/link~LinkConfig#decorators `config.link.decorators`} is specified,\n\t * all configured decorators are removed together with the `linkHref` attribute.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst editor = this.editor;\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\n\t\tmodel.change( writer => {\n\t\t\t// Get ranges to unlink.\n\t\t\tconst rangesToUnlink = selection.isCollapsed ?\n\t\t\t\t[ findLinkRange( selection.getFirstPosition(), selection.getAttribute( 'linkHref' ), model ) ] : selection.getRanges();\n\n\t\t\t// Remove `linkHref` attribute from specified ranges.\n\t\t\tfor ( const range of rangesToUnlink ) {\n\t\t\t\twriter.removeAttribute( 'linkHref', range );\n\t\t\t\t// If there are registered custom attributes, then remove them during unlink.\n\t\t\t\tif ( linkCommand ) {\n\t\t\t\t\tfor ( const manualDecorator of linkCommand.manualDecorators ) {\n\t\t\t\t\t\twriter.removeAttribute( manualDecorator.id, range );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n","import baseSlice from './_baseSlice.js';\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nexport default castSlice;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nexport default hasUnicode;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nexport default asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nexport default unicodeToArray;\n","import asciiToArray from './_asciiToArray.js';\nimport hasUnicode from './_hasUnicode.js';\nimport unicodeToArray from './_unicodeToArray.js';\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nexport default stringToArray;\n","import castSlice from './_castSlice.js';\nimport hasUnicode from './_hasUnicode.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nexport default createCaseFirst;\n","import createCaseFirst from './_createCaseFirst.js';\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nexport default upperFirst;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/utils\n */\n\nimport { upperFirst } from 'lodash-es';\n\nconst ATTRIBUTE_WHITESPACES = /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g; // eslint-disable-line no-control-regex\nconst SAFE_URL = /^(?:(?:https?|ftps?|mailto):|[^a-z]|[a-z+.-]+(?:[^a-z+.:-]|$))/i;\n\n/**\n * Returns `true` if a given view node is the link element.\n *\n * @param {module:engine/view/node~Node} node\n * @returns {Boolean}\n */\nexport function isLinkElement( node ) {\n\treturn node.is( 'attributeElement' ) && !!node.getCustomProperty( 'link' );\n}\n\n/**\n * Creates link {@link module:engine/view/attributeelement~AttributeElement} with the provided `href` attribute.\n *\n * @param {String} href\n * @returns {module:engine/view/attributeelement~AttributeElement}\n */\nexport function createLinkElement( href, writer ) {\n\t// Priority 5 - https://github.com/ckeditor/ckeditor5-link/issues/121.\n\tconst linkElement = writer.createAttributeElement( 'a', { href }, { priority: 5 } );\n\twriter.setCustomProperty( 'link', true, linkElement );\n\n\treturn linkElement;\n}\n\n/**\n * Returns a safe URL based on a given value.\n *\n * A URL is considered safe if it is safe for the user (does not contain any malicious code).\n *\n * If a URL is considered unsafe, a simple `\"#\"` is returned.\n *\n * @protected\n * @param {*} url\n * @returns {String} Safe URL.\n */\nexport function ensureSafeUrl( url ) {\n\turl = String( url );\n\n\treturn isSafeUrl( url ) ? url : '#';\n}\n\n// Checks whether the given URL is safe for the user (does not contain any malicious code).\n//\n// @param {String} url URL to check.\nfunction isSafeUrl( url ) {\n\tconst normalizedUrl = url.replace( ATTRIBUTE_WHITESPACES, '' );\n\n\treturn normalizedUrl.match( SAFE_URL );\n}\n\n/**\n * Returns the {@link module:link/link~LinkConfig#decorators `config.link.decorators`} configuration processed\n * to respect the locale of the editor, i.e. to display the {@link module:link/link~LinkDecoratorManualDefinition label}\n * in the correct language.\n *\n * **Note**: Only the few most commonly used labels are translated automatically. Other labels should be manually\n * translated in the {@link module:link/link~LinkConfig#decorators `config.link.decorators`} configuration.\n *\n * @param {module:utils/locale~Locale#t} t shorthand for {@link module:utils/locale~Locale#t Locale#t}\n * @param {Array.<module:link/link~LinkDecoratorDefinition>} The decorator reference\n * where the label values should be localized.\n * @returns {Array.<module:link/link~LinkDecoratorDefinition>}\n */\nexport function getLocalizedDecorators( t, decorators ) {\n\tconst localizedDecoratorsLabels = {\n\t\t'Open in a new tab': t( 'Open in a new tab' ),\n\t\t'Downloadable': t( 'Downloadable' )\n\t};\n\n\tdecorators.forEach( decorator => {\n\t\tif ( decorator.label && localizedDecoratorsLabels[ decorator.label ] ) {\n\t\t\tdecorator.label = localizedDecoratorsLabels[ decorator.label ];\n\t\t}\n\t\treturn decorator;\n\t} );\n\n\treturn decorators;\n}\n\n/**\n * Converts an object with defined decorators to a normalized array of decorators. The `id` key is added for each decorator and\n * is used as the attribute's name in the model.\n *\n * @param {Object.<String, module:link/link~LinkDecoratorDefinition>} decorators\n * @returns {Array.<module:link/link~LinkDecoratorDefinition>}\n */\nexport function normalizeDecorators( decorators ) {\n\tconst retArray = [];\n\n\tif ( decorators ) {\n\t\tfor ( const [ key, value ] of Object.entries( decorators ) ) {\n\t\t\tconst decorator = Object.assign(\n\t\t\t\t{},\n\t\t\t\tvalue,\n\t\t\t\t{ id: `link${ upperFirst( key ) }` }\n\t\t\t);\n\t\t\tretArray.push( decorator );\n\t\t}\n\t}\n\n\treturn retArray;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module link/utils\n */\n\n/**\n * Helper class that ties together all {@link module:link/link~LinkDecoratorAutomaticDefinition} and provides\n * a {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement downcast dispatcher} for them.\n */\nexport default class AutomaticDecorators {\n\tconstructor() {\n\t\t/**\n\t\t * Stores the definition of {@link module:link/link~LinkDecoratorAutomaticDefinition automatic decorators}.\n\t\t * This data is used as a source for a downcast dispatcher to create a proper conversion to output data.\n\t\t *\n\t\t * @private\n\t\t * @type {Set}\n\t\t */\n\t\tthis._definitions = new Set();\n\t}\n\n\t/**\n\t * Gives information about the number of decorators stored in the {@link module:link/utils~AutomaticDecorators} instance.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Number}\n\t */\n\tget length() {\n\t\treturn this._definitions.size;\n\t}\n\n\t/**\n\t * Adds automatic decorator objects or an array with them to be used during downcasting.\n\t *\n\t * @param {module:link/link~LinkDecoratorAutomaticDefinition|Array.<module:link/link~LinkDecoratorAutomaticDefinition>} item\n\t * A configuration object of automatic rules for decorating links. It might also be an array of such objects.\n\t */\n\tadd( item ) {\n\t\tif ( Array.isArray( item ) ) {\n\t\t\titem.forEach( item => this._definitions.add( item ) );\n\t\t} else {\n\t\t\tthis._definitions.add( item );\n\t\t}\n\t}\n\n\t/**\n\t * Provides the conversion helper used in the {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add} method.\n\t *\n\t * @returns {Function} A dispatcher function used as conversion helper\n\t * in {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add}.\n\t */\n\tgetDispatcher() {\n\t\treturn dispatcher => {\n\t\t\tdispatcher.on( 'attribute:linkHref', ( evt, data, conversionApi ) => {\n\t\t\t\t// There is only test as this behavior decorates links and\n\t\t\t\t// it is run before dispatcher which actually consumes this node.\n\t\t\t\t// This allows on writing own dispatcher with highest priority,\n\t\t\t\t// which blocks both native converter and this additional decoration.\n\t\t\t\tif ( !conversionApi.consumable.test( data.item, 'attribute:linkHref' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst viewWriter = conversionApi.writer;\n\t\t\t\tconst viewSelection = viewWriter.document.selection;\n\n\t\t\t\tfor ( const item of this._definitions ) {\n\t\t\t\t\tconst viewElement = viewWriter.createAttributeElement( 'a', item.attributes, {\n\t\t\t\t\t\tpriority: 5\n\t\t\t\t\t} );\n\t\t\t\t\tviewWriter.setCustomProperty( 'link', true, viewElement );\n\t\t\t\t\tif ( item.callback( data.attributeNewValue ) ) {\n\t\t\t\t\t\tif ( data.item.is( 'selection' ) ) {\n\t\t\t\t\t\t\tviewWriter.wrap( viewSelection.getFirstRange(), viewElement );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tviewWriter.wrap( conversionApi.mapper.toViewRange( data.range ), viewElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tviewWriter.unwrap( conversionApi.mapper.toViewRange( data.range ), viewElement );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, { priority: 'high' } );\n\t\t};\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/utils\n */\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Helper class that stores manual decorators with observable {@link module:link/utils~ManualDecorator#value}\n * to support integration with the UI state. An instance of this class is a model with the state of individual manual decorators.\n * These decorators are kept as collections in {@link module:link/linkcommand~LinkCommand#manualDecorators}.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class ManualDecorator {\n\t/**\n\t * Creates a new instance of {@link module:link/utils~ManualDecorator}.\n\t *\n\t * @param {Object} config\n\t * @param {String} config.id The name of the attribute used in the model that represents a given manual decorator.\n\t * For example: `'linkIsExternal'`.\n\t * @param {String} config.label The label used in the user interface to toggle the manual decorator.\n\t * @param {Object} config.attributes A set of attributes added to output data when the decorator is active for a specific link.\n\t * Attributes should keep the format of attributes defined in {@link module:engine/view/elementdefinition~ElementDefinition}.\n\t * @param {Boolean} [config.defaultValue] Controls whether the decorator is \"on\" by default.\n\t */\n\tconstructor( { id, label, attributes, defaultValue } ) {\n\t\t/**\n\t\t * An ID of a manual decorator which is the name of the attribute in the model, for example: 'linkManualDecorator0'.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.id = id;\n\n\t\t/**\n\t\t * The value of the current manual decorator. It reflects its state from the UI.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} module:link/utils~ManualDecorator#value\n\t\t */\n\t\tthis.set( 'value' );\n\n\t\t/**\n\t\t * The default value of manual decorator.\n\t\t *\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.defaultValue = defaultValue;\n\n\t\t/**\n\t\t * The label used in the user interface to toggle the manual decorator.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.label = label;\n\n\t\t/**\n\t\t * A set of attributes added to downcasted data when the decorator is activated for a specific link.\n\t\t * Attributes should be added in a form of attributes defined in {@link module:engine/view/elementdefinition~ElementDefinition}.\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tthis.attributes = attributes;\n\t}\n}\n\nmix( ManualDecorator, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/utils/bindtwostepcarettoattribute\n */\n\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport priorities from '@ckeditor/ckeditor5-utils/src/priorities';\n\n/**\n * This helper enables the two-step caret (phantom) movement behavior for the given {@link module:engine/model/model~Model}\n * attribute on arrow right (<kbd>→</kbd>) and left (<kbd>←</kbd>) key press.\n *\n * Thanks to this (phantom) caret movement the user is able to type before/after as well as at the\n * beginning/end of an attribute.\n *\n * **Note:** This helper support right–to–left (Arabic, Hebrew, etc.) content by mirroring its behavior\n * but for the sake of simplicity examples showcase only left–to–right use–cases.\n *\n * # Forward movement\n *\n * ## \"Entering\" an attribute:\n *\n * When this behavior is enabled for the `a` attribute and the selection is right before it\n * (at the attribute boundary), pressing the right arrow key will not move the selection but update its\n * attributes accordingly:\n *\n * * When enabled:\n *\n *   \t\tfoo{}<$text a=\"true\">bar</$text>\n *\n *    <kbd>→</kbd>\n *\n *   \t\tfoo<$text a=\"true\">{}bar</$text>\n *\n * * When disabled:\n *\n *   \t\tfoo{}<$text a=\"true\">bar</$text>\n *\n *   <kbd>→</kbd>\n *\n *   \t\tfoo<$text a=\"true\">b{}ar</$text>\n *\n *\n * ## \"Leaving\" an attribute:\n *\n * * When enabled:\n *\n *   \t\t<$text a=\"true\">bar{}</$text>baz\n *\n *    <kbd>→</kbd>\n *\n *   \t\t<$text a=\"true\">bar</$text>{}baz\n *\n * * When disabled:\n *\n *   \t\t<$text a=\"true\">bar{}</$text>baz\n *\n *   <kbd>→</kbd>\n *\n *   \t\t<$text a=\"true\">bar</$text>b{}az\n *\n * # Backward movement\n *\n * * When enabled:\n *\n *   \t\t<$text a=\"true\">bar</$text>{}baz\n *\n *    <kbd>←</kbd>\n *\n *   \t\t<$text a=\"true\">bar{}</$text>baz\n *\n * * When disabled:\n *\n *   \t\t<$text a=\"true\">bar</$text>{}baz\n *\n *   <kbd>←</kbd>\n *\n *   \t\t<$text a=\"true\">ba{}r</$text>b{}az\n *\n * @param {Object} options Helper options.\n * @param {module:engine/view/view~View} options.view View controller instance.\n * @param {module:engine/model/model~Model} options.model Data model instance.\n * @param {module:utils/dom/emittermixin~Emitter} options.emitter The emitter to which this behavior should be added\n * (e.g. a plugin instance).\n * @param {String} options.attribute Attribute for which this behavior will be added.\n * @param {module:utils/locale~Locale} options.locale The {@link module:core/editor/editor~Editor#locale} instance.\n */\nexport default function bindTwoStepCaretToAttribute( { view, model, emitter, attribute, locale } ) {\n\tconst twoStepCaretHandler = new TwoStepCaretHandler( model, emitter, attribute );\n\tconst modelSelection = model.document.selection;\n\n\t// Listen to keyboard events and handle the caret movement according to the 2-step caret logic.\n\t//\n\t// Note: This listener has the \"high+1\" priority:\n\t// * \"high\" because of the filler logic implemented in the renderer which also engages on #keydown.\n\t// When the gravity is overridden the attributes of the (model) selection attributes are reset.\n\t// It may end up with the filler kicking in and breaking the selection.\n\t// * \"+1\" because we would like to avoid collisions with other features (like Widgets), which\n\t// take over the keydown events with the \"high\" priority. Two-step caret movement takes precedence\n\t// over Widgets in that matter.\n\t//\n\t// Find out more in https://github.com/ckeditor/ckeditor5-engine/issues/1301.\n\temitter.listenTo( view.document, 'keydown', ( evt, data ) => {\n\t\t// This implementation works only for collapsed selection.\n\t\tif ( !modelSelection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// When user tries to expand the selection or jump over the whole word or to the beginning/end then\n\t\t// two-steps movement is not necessary.\n\t\tif ( data.shiftKey || data.altKey || data.ctrlKey ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst arrowRightPressed = data.keyCode == keyCodes.arrowright;\n\t\tconst arrowLeftPressed = data.keyCode == keyCodes.arrowleft;\n\n\t\t// When neither left or right arrow has been pressed then do noting.\n\t\tif ( !arrowRightPressed && !arrowLeftPressed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst position = modelSelection.getFirstPosition();\n\t\tconst contentDirection = locale.contentLanguageDirection;\n\t\tlet isMovementHandled;\n\n\t\tif ( ( contentDirection === 'ltr' && arrowRightPressed ) || ( contentDirection === 'rtl' && arrowLeftPressed ) ) {\n\t\t\tisMovementHandled = twoStepCaretHandler.handleForwardMovement( position, data );\n\t\t} else {\n\t\t\tisMovementHandled = twoStepCaretHandler.handleBackwardMovement( position, data );\n\t\t}\n\n\t\t// Stop the keydown event if the two-step caret movement handled it. Avoid collisions\n\t\t// with other features which may also take over the caret movement (e.g. Widget).\n\t\tif ( isMovementHandled ) {\n\t\t\tevt.stop();\n\t\t}\n\t}, { priority: priorities.get( 'high' ) + 1 } );\n}\n\n/**\n * This is a protected helper–class for {@link module:engine/utils/bindtwostepcarettoattribute}.\n * It handles the state of the 2-step caret movement for a single {@link module:engine/model/model~Model}\n * attribute upon the `keypress` in the {@link module:engine/view/view~View}.\n *\n * @protected\n */\nexport class TwoStepCaretHandler {\n\t/*\n\t * Creates two step handler instance.\n\t *\n\t * @param {module:engine/model/model~Model} model Data model instance.\n\t * @param {module:utils/dom/emittermixin~Emitter} emitter The emitter to which this behavior should be added\n\t * (e.g. a plugin instance).\n\t * @param {String} attribute Attribute for which the behavior will be added.\n\t */\n\tconstructor( model, emitter, attribute ) {\n\t\t/**\n\t\t * The model instance this class instance operates on.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model#schema}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * The Attribute this class instance operates on.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.attribute = attribute;\n\n\t\t/**\n\t\t * A reference to the document selection.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/selection~Selection}\n\t\t */\n\t\tthis._modelSelection = model.document.selection;\n\n\t\t/**\n\t\t * The current UID of the overridden gravity, as returned by\n\t\t * {@link module:engine/model/writer~Writer#overrideSelectionGravity}.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._overrideUid = null;\n\n\t\t/**\n\t\t * A flag indicating that the automatic gravity restoration for this attribute\n\t\t * should not happen upon the next\n\t\t * {@link module:engine/model/selection~Selection#event:change:range} event.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._isNextGravityRestorationSkipped = false;\n\n\t\t// The automatic gravity restoration logic.\n\t\temitter.listenTo( this._modelSelection, 'change:range', ( evt, data ) => {\n\t\t\t// Skipping the automatic restoration is needed if the selection should change\n\t\t\t// but the gravity must remain overridden afterwards. See the #handleBackwardMovement\n\t\t\t// to learn more.\n\t\t\tif ( this._isNextGravityRestorationSkipped ) {\n\t\t\t\tthis._isNextGravityRestorationSkipped = false;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip automatic restore when the gravity is not overridden — simply, there's nothing to restore\n\t\t\t// at this moment.\n\t\t\tif ( !this._isGravityOverridden ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip automatic restore when the change is indirect AND the selection is at the attribute boundary.\n\t\t\t// It means that e.g. if the change was external (collaboration) and the user had their\n\t\t\t// selection around the link, its gravity should remain intact in this change:range event.\n\t\t\tif ( !data.directChange && isAtBoundary( this._modelSelection.getFirstPosition(), attribute ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._restoreGravity();\n\t\t} );\n\t}\n\n\t/**\n\t * Updates the document selection and the view according to the two–step caret movement state\n\t * when moving **forwards**. Executed upon `keypress` in the {@link module:engine/view/view~View}.\n\t *\n\t * @param {module:engine/model/position~Position} position The model position at the moment of the key press.\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} data Data of the key press.\n\t * @returns {Boolean} `true` when the handler prevented caret movement\n\t */\n\thandleForwardMovement( position, data ) {\n\t\tconst attribute = this.attribute;\n\n\t\t// DON'T ENGAGE 2-SCM if gravity is already overridden. It means that we just entered\n\t\t//\n\t\t// \t\t<paragraph>foo<$text attribute>{}bar</$text>baz</paragraph>\n\t\t//\n\t\t// or left the attribute\n\t\t//\n\t\t// \t\t<paragraph>foo<$text attribute>bar</$text>{}baz</paragraph>\n\t\t//\n\t\t// and the gravity will be restored automatically.\n\t\tif ( this._isGravityOverridden ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// DON'T ENGAGE 2-SCM when the selection is at the beginning of the block AND already has the\n\t\t// attribute:\n\t\t// * when the selection was initially set there using the mouse,\n\t\t// * when the editor has just started\n\t\t//\n\t\t//\t\t<paragraph><$text attribute>{}bar</$text>baz</paragraph>\n\t\t//\n\t\tif ( position.isAtStart && this._hasSelectionAttribute ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// ENGAGE 2-SCM when about to leave one attribute value and enter another:\n\t\t//\n\t\t// \t\t<paragraph><$text attribute=\"1\">foo{}</$text><$text attribute=\"2\">bar</$text></paragraph>\n\t\t//\n\t\t// but DON'T when already in between of them (no attribute selection):\n\t\t//\n\t\t// \t\t<paragraph><$text attribute=\"1\">foo</$text>{}<$text attribute=\"2\">bar</$text></paragraph>\n\t\t//\n\t\tif ( isBetweenDifferentValues( position, attribute ) && this._hasSelectionAttribute ) {\n\t\t\tthis._preventCaretMovement( data );\n\t\t\tthis._removeSelectionAttribute();\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// ENGAGE 2-SCM when entering an attribute:\n\t\t//\n\t\t// \t\t<paragraph>foo{}<$text attribute>bar</$text>baz</paragraph>\n\t\t//\n\t\tif ( isAtStartBoundary( position, attribute ) ) {\n\t\t\tthis._preventCaretMovement( data );\n\t\t\tthis._overrideGravity();\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// ENGAGE 2-SCM when leaving an attribute:\n\t\t//\n\t\t//\t\t<paragraph>foo<$text attribute>bar{}</$text>baz</paragraph>\n\t\t//\n\t\tif ( isAtEndBoundary( position, attribute ) && this._hasSelectionAttribute ) {\n\t\t\tthis._preventCaretMovement( data );\n\t\t\tthis._overrideGravity();\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the document selection and the view according to the two–step caret movement state\n\t * when moving **backwards**. Executed upon `keypress` in the {@link module:engine/view/view~View}.\n\t *\n\t * @param {module:engine/model/position~Position} position The model position at the moment of the key press.\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} data Data of the key press.\n\t * @returns {Boolean} `true` when the handler prevented caret movement\n\t */\n\thandleBackwardMovement( position, data ) {\n\t\tconst attribute = this.attribute;\n\n\t\t// When the gravity is already overridden...\n\t\tif ( this._isGravityOverridden ) {\n\t\t\t// ENGAGE 2-SCM & REMOVE SELECTION ATTRIBUTE\n\t\t\t// when about to leave one attribute value and enter another:\n\t\t\t//\n\t\t\t// \t\t<paragraph><$text attribute=\"1\">foo</$text><$text attribute=\"2\">{}bar</$text></paragraph>\n\t\t\t//\n\t\t\t// but DON'T when already in between of them (no attribute selection):\n\t\t\t//\n\t\t\t// \t\t<paragraph><$text attribute=\"1\">foo</$text>{}<$text attribute=\"2\">bar</$text></paragraph>\n\t\t\t//\n\t\t\tif ( isBetweenDifferentValues( position, attribute ) && this._hasSelectionAttribute ) {\n\t\t\t\tthis._preventCaretMovement( data );\n\t\t\t\tthis._restoreGravity();\n\t\t\t\tthis._removeSelectionAttribute();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// ENGAGE 2-SCM when at any boundary of the attribute:\n\t\t\t//\n\t\t\t// \t\t<paragraph>foo<$text attribute>bar</$text>{}baz</paragraph>\n\t\t\t// \t\t<paragraph>foo<$text attribute>{}bar</$text>baz</paragraph>\n\t\t\t//\n\t\t\telse {\n\t\t\t\tthis._preventCaretMovement( data );\n\t\t\t\tthis._restoreGravity();\n\n\t\t\t\t// REMOVE SELECTION ATRIBUTE at the beginning of the block.\n\t\t\t\t// It's like restoring gravity but towards a non-existent content when\n\t\t\t\t// the gravity is overridden:\n\t\t\t\t//\n\t\t\t\t// \t\t<paragraph><$text attribute>{}bar</$text></paragraph>\n\t\t\t\t//\n\t\t\t\t// becomes:\n\t\t\t\t//\n\t\t\t\t// \t\t<paragraph>{}<$text attribute>bar</$text></paragraph>\n\t\t\t\t//\n\t\t\t\tif ( position.isAtStart ) {\n\t\t\t\t\tthis._removeSelectionAttribute();\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\t// ENGAGE 2-SCM when between two different attribute values but selection has no attribute:\n\t\t\t//\n\t\t\t// \t\t<paragraph><$text attribute=\"1\">foo</$text>{}<$text attribute=\"2\">bar</$text></paragraph>\n\t\t\t//\n\t\t\tif ( isBetweenDifferentValues( position, attribute ) && !this._hasSelectionAttribute ) {\n\t\t\t\tthis._preventCaretMovement( data );\n\t\t\t\tthis._setSelectionAttributeFromTheNodeBefore( position );\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// End of block boundary cases:\n\t\t\t//\n\t\t\t// \t\t<paragraph><$text attribute>bar{}</$text></paragraph>\n\t\t\t// \t\t<paragraph><$text attribute>bar</$text>{}</paragraph>\n\t\t\t//\n\t\t\tif ( position.isAtEnd && isAtEndBoundary( position, attribute ) ) {\n\t\t\t\t// DON'T ENGAGE 2-SCM if the selection has the attribute already.\n\t\t\t\t// This is a common selection if set using the mouse.\n\t\t\t\t//\n\t\t\t\t// \t\t<paragraph><$text attribute>bar{}</$text></paragraph>\n\t\t\t\t//\n\t\t\t\tif ( this._hasSelectionAttribute ) {\n\t\t\t\t\t// DON'T ENGAGE 2-SCM if the attribute at the end of the block which has length == 1.\n\t\t\t\t\t// Make sure the selection will not the attribute after it moves backwards.\n\t\t\t\t\t//\n\t\t\t\t\t// \t\t<paragraph>foo<$text attribute>b{}</$text></paragraph>\n\t\t\t\t\t//\n\t\t\t\t\tif ( isStepAfterTheAttributeBoundary( position, attribute ) ) {\n\t\t\t\t\t\t// Skip the automatic gravity restore upon the next selection#change:range event.\n\t\t\t\t\t\t// If not skipped, it would automatically restore the gravity, which should remain\n\t\t\t\t\t\t// overridden.\n\t\t\t\t\t\tthis._skipNextAutomaticGravityRestoration();\n\t\t\t\t\t\tthis._overrideGravity();\n\n\t\t\t\t\t\t// Don't return \"true\" here because we didn't call _preventCaretMovement.\n\t\t\t\t\t\t// Returning here will destabilize the filler logic, which also listens to\n\t\t\t\t\t\t// keydown (and the event would be stopped).\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// ENGAGE 2-SCM if the selection has no attribute. This may happen when the user\n\t\t\t\t// left the attribute using a FORWARD 2-SCM.\n\t\t\t\t//\n\t\t\t\t// \t\t<paragraph><$text attribute>bar</$text>{}</paragraph>\n\t\t\t\t//\n\t\t\t\telse {\n\t\t\t\t\tthis._preventCaretMovement( data );\n\t\t\t\t\tthis._setSelectionAttributeFromTheNodeBefore( position );\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// REMOVE SELECTION ATRIBUTE when restoring gravity towards a non-existent content at the\n\t\t\t// beginning of the block.\n\t\t\t//\n\t\t\t// \t\t<paragraph>{}<$text attribute>bar</$text></paragraph>\n\t\t\t//\n\t\t\tif ( position.isAtStart ) {\n\t\t\t\tif ( this._hasSelectionAttribute ) {\n\t\t\t\t\tthis._removeSelectionAttribute();\n\t\t\t\t\tthis._preventCaretMovement( data );\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// DON'T ENGAGE 2-SCM when about to enter of leave an attribute.\n\t\t\t// We need to check if the caret is a one position before the attribute boundary:\n\t\t\t//\n\t\t\t// \t\t<paragraph>foo<$text attribute>b{}ar</$text>baz</paragraph>\n\t\t\t// \t\t<paragraph>foo<$text attribute>bar</$text>b{}az</paragraph>\n\t\t\t//\n\t\t\tif ( isStepAfterTheAttributeBoundary( position, attribute ) ) {\n\t\t\t\t// Skip the automatic gravity restore upon the next selection#change:range event.\n\t\t\t\t// If not skipped, it would automatically restore the gravity, which should remain\n\t\t\t\t// overridden.\n\t\t\t\tthis._skipNextAutomaticGravityRestoration();\n\t\t\t\tthis._overrideGravity();\n\n\t\t\t\t// Don't return \"true\" here because we didn't call _preventCaretMovement.\n\t\t\t\t// Returning here will destabilize the filler logic, which also listens to\n\t\t\t\t// keydown (and the event would be stopped).\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * `true` when the gravity is overridden for the {@link #attribute}.\n\t *\n\t * @readonly\n\t * @private\n\t * @type {Boolean}\n\t */\n\tget _isGravityOverridden() {\n\t\treturn !!this._overrideUid;\n\t}\n\n\t/**\n\t * `true` when the {@link module:engine/model/selection~Selection} has the {@link #attribute}.\n\t *\n\t * @readonly\n\t * @private\n\t * @type {Boolean}\n\t */\n\tget _hasSelectionAttribute() {\n\t\treturn this._modelSelection.hasAttribute( this.attribute );\n\t}\n\n\t/**\n\t * Overrides the gravity using the {@link module:engine/model/writer~Writer model writer}\n\t * and stores the information about this fact in the {@link #_overrideUid}.\n\t *\n\t * A shorthand for {@link module:engine/model/writer~Writer#overrideSelectionGravity}.\n\t *\n\t * @private\n\t */\n\t_overrideGravity() {\n\t\tthis._overrideUid = this.model.change( writer => writer.overrideSelectionGravity() );\n\t}\n\n\t/**\n\t * Restores the gravity using the {@link module:engine/model/writer~Writer model writer}.\n\t *\n\t * A shorthand for {@link module:engine/model/writer~Writer#restoreSelectionGravity}.\n\t *\n\t * @private\n\t */\n\t_restoreGravity() {\n\t\tthis.model.change( writer => {\n\t\t\twriter.restoreSelectionGravity( this._overrideUid );\n\t\t\tthis._overrideUid = null;\n\t\t} );\n\t}\n\n\t/**\n\t * Prevents the caret movement in the view by calling `preventDefault` on the event data.\n\t *\n\t * @private\n\t */\n\t_preventCaretMovement( data ) {\n\t\tdata.preventDefault();\n\t}\n\n\t/**\n\t * Removes the {@link #attribute} from the selection using using the\n\t * {@link module:engine/model/writer~Writer model writer}.\n\t *\n\t * @private\n\t */\n\t_removeSelectionAttribute() {\n\t\tthis.model.change( writer => {\n\t\t\twriter.removeSelectionAttribute( this.attribute );\n\t\t} );\n\t}\n\n\t/**\n\t * Applies the {@link #attribute} to the current selection using using the\n\t * value from the node before the current position. Uses\n\t * the {@link module:engine/model/writer~Writer model writer}.\n\t *\n\t * @private\n\t * @param {module:engine/model/position~Position} position\n\t */\n\t_setSelectionAttributeFromTheNodeBefore( position ) {\n\t\tconst attribute = this.attribute;\n\n\t\tthis.model.change( writer => {\n\t\t\twriter.setSelectionAttribute( this.attribute, position.nodeBefore.getAttribute( attribute ) );\n\t\t} );\n\t}\n\n\t/**\n\t * Skips the next automatic selection gravity restoration upon the\n\t * {@link module:engine/model/selection~Selection#event:change:range} event.\n\t *\n\t * See {@link #_isNextGravityRestorationSkipped}.\n\t *\n\t * @private\n\t */\n\t_skipNextAutomaticGravityRestoration() {\n\t\tthis._isNextGravityRestorationSkipped = true;\n\t}\n}\n\n// @param {module:engine/model/position~Position} position\n// @param {String} attribute\n// @returns {Boolean} `true` when position between the nodes sticks to the bound of text with given attribute.\nfunction isAtBoundary( position, attribute ) {\n\treturn isAtStartBoundary( position, attribute ) || isAtEndBoundary( position, attribute );\n}\n\n// @param {module:engine/model/position~Position} position\n// @param {String} attribute\nfunction isAtStartBoundary( position, attribute ) {\n\tconst { nodeBefore, nodeAfter } = position;\n\tconst isAttrBefore = nodeBefore ? nodeBefore.hasAttribute( attribute ) : false;\n\tconst isAttrAfter = nodeAfter ? nodeAfter.hasAttribute( attribute ) : false;\n\n\treturn isAttrAfter && ( !isAttrBefore || nodeBefore.getAttribute( attribute ) !== nodeAfter.getAttribute( attribute ) );\n}\n\n// @param {module:engine/model/position~Position} position\n// @param {String} attribute\nfunction isAtEndBoundary( position, attribute ) {\n\tconst { nodeBefore, nodeAfter } = position;\n\tconst isAttrBefore = nodeBefore ? nodeBefore.hasAttribute( attribute ) : false;\n\tconst isAttrAfter = nodeAfter ? nodeAfter.hasAttribute( attribute ) : false;\n\n\treturn isAttrBefore && ( !isAttrAfter || nodeBefore.getAttribute( attribute ) !== nodeAfter.getAttribute( attribute ) );\n}\n\n// @param {module:engine/model/position~Position} position\n// @param {String} attribute\nfunction isBetweenDifferentValues( position, attribute ) {\n\tconst { nodeBefore, nodeAfter } = position;\n\tconst isAttrBefore = nodeBefore ? nodeBefore.hasAttribute( attribute ) : false;\n\tconst isAttrAfter = nodeAfter ? nodeAfter.hasAttribute( attribute ) : false;\n\n\tif ( !isAttrAfter || !isAttrBefore ) {\n\t\treturn;\n\t}\n\n\treturn nodeAfter.getAttribute( attribute ) !== nodeBefore.getAttribute( attribute );\n}\n\n// @param {module:engine/model/position~Position} position\n// @param {String} attribute\nfunction isStepAfterTheAttributeBoundary( position, attribute ) {\n\treturn isAtBoundary( position.getShiftedBy( -1 ), attribute );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/linkediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport LinkCommand from './linkcommand';\nimport UnlinkCommand from './unlinkcommand';\nimport { createLinkElement, ensureSafeUrl, getLocalizedDecorators, normalizeDecorators } from './utils';\nimport AutomaticDecorators from './utils/automaticdecorators';\nimport ManualDecorator from './utils/manualdecorator';\nimport bindTwoStepCaretToAttribute from '@ckeditor/ckeditor5-engine/src/utils/bindtwostepcarettoattribute';\nimport findLinkRange from './findlinkrange';\nimport '../theme/link.css';\n\nconst HIGHLIGHT_CLASS = 'ck-link_selected';\nconst DECORATOR_AUTOMATIC = 'automatic';\nconst DECORATOR_MANUAL = 'manual';\nconst EXTERNAL_LINKS_REGEXP = /^(https?:)?\\/\\//;\n\n/**\n * The link engine feature.\n *\n * It introduces the `linkHref=\"url\"` attribute in the model which renders to the view as a `<a href=\"url\">` element\n * as well as `'link'` and `'unlink'` commands.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class LinkEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'LinkEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'link', {\n\t\t\taddTargetToExternalLinks: false\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst locale = editor.locale;\n\n\t\t// Allow link attribute on all inline nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: 'linkHref' } );\n\n\t\teditor.conversion.for( 'dataDowncast' )\n\t\t\t.attributeToElement( { model: 'linkHref', view: createLinkElement } );\n\n\t\teditor.conversion.for( 'editingDowncast' )\n\t\t\t.attributeToElement( { model: 'linkHref', view: ( href, writer ) => {\n\t\t\t\treturn createLinkElement( ensureSafeUrl( href ), writer );\n\t\t\t} } );\n\n\t\teditor.conversion.for( 'upcast' )\n\t\t\t.elementToAttribute( {\n\t\t\t\tview: {\n\t\t\t\t\tname: 'a',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\thref: true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmodel: {\n\t\t\t\t\tkey: 'linkHref',\n\t\t\t\t\tvalue: viewElement => viewElement.getAttribute( 'href' )\n\t\t\t\t}\n\t\t\t} );\n\n\t\t// Create linking commands.\n\t\teditor.commands.add( 'link', new LinkCommand( editor ) );\n\t\teditor.commands.add( 'unlink', new UnlinkCommand( editor ) );\n\n\t\tconst linkDecorators = getLocalizedDecorators( editor.t, normalizeDecorators( editor.config.get( 'link.decorators' ) ) );\n\n\t\tthis._enableAutomaticDecorators( linkDecorators.filter( item => item.mode === DECORATOR_AUTOMATIC ) );\n\t\tthis._enableManualDecorators( linkDecorators.filter( item => item.mode === DECORATOR_MANUAL ) );\n\n\t\t// Enable two-step caret movement for `linkHref` attribute.\n\t\tbindTwoStepCaretToAttribute( {\n\t\t\tview: editor.editing.view,\n\t\t\tmodel: editor.model,\n\t\t\temitter: this,\n\t\t\tattribute: 'linkHref',\n\t\t\tlocale\n\t\t} );\n\n\t\t// Setup highlight over selected link.\n\t\tthis._setupLinkHighlight();\n\n\t\t// Change the attributes of the selection in certain situations after the link was inserted into the document.\n\t\tthis._enableInsertContentSelectionAttributesFixer();\n\t}\n\n\t/**\n\t * Processes an array of configured {@link module:link/link~LinkDecoratorAutomaticDefinition automatic decorators}\n\t * and registers a {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher downcast dispatcher}\n\t * for each one of them. Downcast dispatchers are obtained using the\n\t * {@link module:link/utils~AutomaticDecorators#getDispatcher} method.\n\t *\n\t * **Note**: This method also activates the automatic external link decorator if enabled with\n\t * {@link module:link/link~LinkConfig#addTargetToExternalLinks `config.link.addTargetToExternalLinks`}.\n\t *\n\t * @private\n\t * @param {Array.<module:link/link~LinkDecoratorAutomaticDefinition>} automaticDecoratorDefinitions\n\t */\n\t_enableAutomaticDecorators( automaticDecoratorDefinitions ) {\n\t\tconst editor = this.editor;\n\t\tconst automaticDecorators = new AutomaticDecorators();\n\n\t\t// Adds a default decorator for external links.\n\t\tif ( editor.config.get( 'link.addTargetToExternalLinks' ) ) {\n\t\t\tautomaticDecorators.add( {\n\t\t\t\tid: 'linkIsExternal',\n\t\t\t\tmode: DECORATOR_AUTOMATIC,\n\t\t\t\tcallback: url => EXTERNAL_LINKS_REGEXP.test( url ),\n\t\t\t\tattributes: {\n\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\trel: 'noopener noreferrer'\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\tautomaticDecorators.add( automaticDecoratorDefinitions );\n\n\t\tif ( automaticDecorators.length ) {\n\t\t\teditor.conversion.for( 'downcast' ).add( automaticDecorators.getDispatcher() );\n\t\t}\n\t}\n\n\t/**\n\t * Processes an array of configured {@link module:link/link~LinkDecoratorManualDefinition manual decorators},\n\t * transforms them into {@link module:link/utils~ManualDecorator} instances and stores them in the\n\t * {@link module:link/linkcommand~LinkCommand#manualDecorators} collection (a model for manual decorators state).\n\t *\n\t * Also registers an {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement attribute-to-element}\n\t * converter for each manual decorator and extends the {@link module:engine/model/schema~Schema model's schema}\n\t * with adequate model attributes.\n\t *\n\t * @private\n\t * @param {Array.<module:link/link~LinkDecoratorManualDefinition>} manualDecoratorDefinitions\n\t */\n\t_enableManualDecorators( manualDecoratorDefinitions ) {\n\t\tif ( !manualDecoratorDefinitions.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this.editor;\n\t\tconst command = editor.commands.get( 'link' );\n\t\tconst manualDecorators = command.manualDecorators;\n\n\t\tmanualDecoratorDefinitions.forEach( decorator => {\n\t\t\teditor.model.schema.extend( '$text', { allowAttributes: decorator.id } );\n\n\t\t\t// Keeps reference to manual decorator to decode its name to attributes during downcast.\n\t\t\tmanualDecorators.add( new ManualDecorator( decorator ) );\n\n\t\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t\t\t\tmodel: decorator.id,\n\t\t\t\tview: ( manualDecoratorName, writer ) => {\n\t\t\t\t\tif ( manualDecoratorName ) {\n\t\t\t\t\t\tconst attributes = manualDecorators.get( decorator.id ).attributes;\n\t\t\t\t\t\tconst element = writer.createAttributeElement( 'a', attributes, { priority: 5 } );\n\t\t\t\t\t\twriter.setCustomProperty( 'link', true, element );\n\n\t\t\t\t\t\treturn element;\n\t\t\t\t\t}\n\t\t\t\t} } );\n\n\t\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t\t\t\tview: {\n\t\t\t\t\tname: 'a',\n\t\t\t\t\tattributes: manualDecorators.get( decorator.id ).attributes\n\t\t\t\t},\n\t\t\t\tmodel: {\n\t\t\t\t\tkey: decorator.id\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t/**\n\t * Adds a visual highlight style to a link in which the selection is anchored.\n\t * Together with two-step caret movement, they indicate that the user is typing inside the link.\n\t *\n\t * Highlight is turned on by adding the `.ck-link_selected` class to the link in the view:\n\t *\n\t * * The class is removed before the conversion has started, as callbacks added with the `'highest'` priority\n\t * to {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} events.\n\t * * The class is added in the view post fixer, after other changes in the model tree were converted to the view.\n\t *\n\t * This way, adding and removing the highlight does not interfere with conversion.\n\t *\n\t * @private\n\t */\n\t_setupLinkHighlight() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst highlightedLinks = new Set();\n\n\t\t// Adding the class.\n\t\tview.document.registerPostFixer( writer => {\n\t\t\tconst selection = editor.model.document.selection;\n\t\t\tlet changed = false;\n\n\t\t\tif ( selection.hasAttribute( 'linkHref' ) ) {\n\t\t\t\tconst modelRange = findLinkRange( selection.getFirstPosition(), selection.getAttribute( 'linkHref' ), editor.model );\n\t\t\t\tconst viewRange = editor.editing.mapper.toViewRange( modelRange );\n\n\t\t\t\t// There might be multiple `a` elements in the `viewRange`, for example, when the `a` element is\n\t\t\t\t// broken by a UIElement.\n\t\t\t\tfor ( const item of viewRange.getItems() ) {\n\t\t\t\t\tif ( item.is( 'a' ) && !item.hasClass( HIGHLIGHT_CLASS ) ) {\n\t\t\t\t\t\twriter.addClass( HIGHLIGHT_CLASS, item );\n\t\t\t\t\t\thighlightedLinks.add( item );\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t} );\n\n\t\t// Removing the class.\n\t\teditor.conversion.for( 'editingDowncast' ).add( dispatcher => {\n\t\t\t// Make sure the highlight is removed on every possible event, before conversion is started.\n\t\t\tdispatcher.on( 'insert', removeHighlight, { priority: 'highest' } );\n\t\t\tdispatcher.on( 'remove', removeHighlight, { priority: 'highest' } );\n\t\t\tdispatcher.on( 'attribute', removeHighlight, { priority: 'highest' } );\n\t\t\tdispatcher.on( 'selection', removeHighlight, { priority: 'highest' } );\n\n\t\t\tfunction removeHighlight() {\n\t\t\t\tview.change( writer => {\n\t\t\t\t\tfor ( const item of highlightedLinks.values() ) {\n\t\t\t\t\t\twriter.removeClass( HIGHLIGHT_CLASS, item );\n\t\t\t\t\t\thighlightedLinks.delete( item );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Starts listening to {@link module:engine/model/model~Model#event:insertContent} and corrects the model\n\t * selection attributes if the selection is at the end of a link after inserting the content.\n\t *\n\t * The purpose of this action is to improve the overall UX because the user is no longer \"trapped\" by the\n\t * `linkHref` attribute of the selection and they can type a \"clean\" (`linkHref`–less) text right away.\n\t *\n\t * See https://github.com/ckeditor/ckeditor5/issues/6053.\n\t *\n\t * @private\n\t */\n\t_enableInsertContentSelectionAttributesFixer() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst selection = model.document.selection;\n\n\t\tmodel.on( 'insertContent', () => {\n\t\t\tconst nodeBefore = selection.anchor.nodeBefore;\n\t\t\tconst nodeAfter = selection.anchor.nodeAfter;\n\n\t\t\t// NOTE: ↰ and ↱ represent the gravity of the selection.\n\n\t\t\t// The only truly valid case is:\n\t\t\t//\n\t\t\t//\t\t                                 ↰\n\t\t\t//\t\t...<$text linkHref=\"foo\">INSERTED[]</$text>\n\t\t\t//\n\t\t\t// If the selection is not \"trapped\" by the `linkHref` attribute after inserting, there's nothing\n\t\t\t// to fix there.\n\t\t\tif ( !selection.hasAttribute( 'linkHref' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Filter out the following case where a link with the same href (e.g. <a href=\"foo\">INSERTED</a>) is inserted\n\t\t\t// in the middle of an existing link:\n\t\t\t//\n\t\t\t// Before insertion:\n\t\t\t//\t\t                       ↰\n\t\t\t//\t\t<$text linkHref=\"foo\">l[]ink</$text>\n\t\t\t//\n\t\t\t// Expected after insertion:\n\t\t\t//\t\t                               ↰\n\t\t\t//\t\t<$text linkHref=\"foo\">lINSERTED[]ink</$text>\n\t\t\t//\n\t\t\tif ( !nodeBefore ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Filter out the following case where the selection has the \"linkHref\" attribute because the\n\t\t\t// gravity is overridden and some text with another attribute (e.g. <b>INSERTED</b>) is inserted:\n\t\t\t//\n\t\t\t// Before insertion:\n\t\t\t//\n\t\t\t//\t\t                       ↱\n\t\t\t//\t\t<$text linkHref=\"foo\">[]link</$text>\n\t\t\t//\n\t\t\t// Expected after insertion:\n\t\t\t//\n\t\t\t//\t\t                                                          ↱\n\t\t\t//\t\t<$text bold=\"true\">INSERTED</$text><$text linkHref=\"foo\">[]link</$text>\n\t\t\t//\n\t\t\tif ( !nodeBefore.hasAttribute( 'linkHref' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Filter out the following case where a link is a inserted in the middle (or before) another link\n\t\t\t// (different URLs, so they will not merge). In this (let's say weird) case, we can leave the selection\n\t\t\t// attributes as they are because the user will end up writing in one link or another anyway.\n\t\t\t//\n\t\t\t// Before insertion:\n\t\t\t//\n\t\t\t//\t\t                       ↰\n\t\t\t//\t\t<$text linkHref=\"foo\">l[]ink</$text>\n\t\t\t//\n\t\t\t// Expected after insertion:\n\t\t\t//\n\t\t\t//\t\t                                                             ↰\n\t\t\t//\t\t<$text linkHref=\"foo\">l</$text><$text linkHref=\"bar\">INSERTED[]</$text><$text linkHref=\"foo\">ink</$text>\n\t\t\t//\n\t\t\tif ( nodeAfter && nodeAfter.hasAttribute( 'linkHref' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Make the selection free of link-related model attributes.\n\t\t\t// All link-related model attributes start with \"link\". That includes not only \"linkHref\"\n\t\t\t// but also all decorator attributes (they have dynamic names).\n\t\t\tmodel.change( writer => {\n\t\t\t\t[ ...model.document.selection.getAttributeKeys() ]\n\t\t\t\t\t.filter( name => name.startsWith( 'link' ) )\n\t\t\t\t\t.forEach( name => writer.removeSelectionAttribute( name ) );\n\t\t\t} );\n\t\t}, { priority: 'low' } );\n\t}\n}\n","\n/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/clickobserver\n */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * {@link module:engine/view/document~Document#event:click Click} event observer.\n *\n * Note that this observer is not available by default. To make it available it needs to be added to\n * {@link module:engine/view/view~View view controller}\n * by a {@link module:engine/view/view~View#addObserver} method.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class ClickObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = 'click';\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n}\n\n/**\n * Fired when one of the editables has been clicked.\n *\n * Introduced by {@link module:engine/view/observer/clickobserver~ClickObserver}.\n *\n * Note that this event is not available by default. To make it available\n * {@link module:engine/view/observer/clickobserver~ClickObserver} needs to be added\n * to {@link module:engine/view/view~View} by a {@link module:engine/view/view~View#addObserver} method.\n *\n * @see module:engine/view/observer/clickobserver~ClickObserver\n * @event module:engine/view/document~Document#event:click\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/panel/balloon/balloonpanelview\n */\n\nimport View from '../../view';\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\nimport isRange from '@ckeditor/ckeditor5-utils/src/dom/isrange';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport { isElement } from 'lodash-es';\n\nimport '../../../theme/components/panel/balloonpanel.css';\n\nconst toPx = toUnit( 'px' );\nconst defaultLimiterElement = global.document.body;\n\n/**\n * The balloon panel view class.\n *\n * A floating container which can\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#pin pin} to any\n * {@link module:utils/dom/position~Options#target target} in the DOM and remain in that position\n * e.g. when the web page is scrolled.\n *\n * The balloon panel can be used to display contextual, non-blocking UI like forms, toolbars and\n * the like in its {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#content} view\n * collection.\n *\n * There is a number of {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}\n * that the balloon can use, automatically switching from one to another when the viewport space becomes\n * scarce to keep the balloon visible to the user as long as it is possible. The balloon will also\n * accept any custom position set provided by the user compatible with the\n * {@link module:utils/dom/position~Options options}.\n *\n *\t\tconst panel = new BalloonPanelView( locale );\n *\t\tconst childView = new ChildView();\n *\t\tconst positions = BalloonPanelView.defaultPositions;\n *\n *\t\tpanel.render();\n *\n *\t\t// Add a child view to the panel's content collection.\n *\t\tpanel.content.add( childView );\n *\n *\t\t// Start pinning the panel to an element with the \"target\" id DOM.\n *\t\t// The balloon will remain pinned until unpin() is called.\n *\t\tpanel.pin( {\n *\t\t\ttarget: document.querySelector( '#target' ),\n *\t\t\tpositions: [\n *\t\t\t\tpositions.northArrowSouth,\n *\t\t\t\tpositions.southArrowNorth\n *\t\t\t]\n *\t\t} );\n *\n * @extends module:ui/view~View\n */\nexport default class BalloonPanelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * The absolute top position of the balloon panel in pixels.\n\t\t *\n\t\t * @observable\n\t\t * @default 0\n\t\t * @member {Number} #top\n\t\t */\n\t\tthis.set( 'top', 0 );\n\n\t\t/**\n\t\t * The absolute left position of the balloon panel in pixels.\n\t\t *\n\t\t * @observable\n\t\t * @default 0\n\t\t * @member {Number} #left\n\t\t */\n\t\tthis.set( 'left', 0 );\n\n\t\t/**\n\t\t * The balloon panel's current position. The position name is reflected in the CSS class set\n\t\t * to the balloon, i.e. `.ck-balloon-panel_arrow_nw` for the \"arrow_nw\" position. The class\n\t\t * controls the minor aspects of the balloon's visual appearance like the placement\n\t\t * of an {@link #withArrow arrow}. To support a new position, an additional CSS must be created.\n\t\t *\n\t\t * Default position names correspond with\n\t\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t\t *\n\t\t * See the {@link #attachTo} and {@link #pin} methods to learn about custom balloon positions.\n\t\t *\n\t\t * @observable\n\t\t * @default 'arrow_nw'\n\t\t * @member {'arrow_nw'|'arrow_ne'|'arrow_sw'|'arrow_se'} #position\n\t\t */\n\t\tthis.set( 'position', 'arrow_nw' );\n\n\t\t/**\n\t\t * Controls whether the balloon panel is visible or not.\n\t\t *\n\t\t * @observable\n\t\t * @default false\n\t\t * @member {Boolean} #isVisible\n\t\t */\n\t\tthis.set( 'isVisible', false );\n\n\t\t/**\n\t\t * Controls whether the balloon panel has an arrow. The presence of the arrow\n\t\t * is reflected in the `ck-balloon-panel_with-arrow` CSS class.\n\t\t *\n\t\t * @observable\n\t\t * @default true\n\t\t * @member {Boolean} #withArrow\n\t\t */\n\t\tthis.set( 'withArrow', true );\n\n\t\t/**\n\t\t * An additional CSS class added to the {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n\t\tthis.set( 'class' );\n\n\t\t/**\n\t\t * A callback that starts pinning the panel when {@link #isVisible} gets\n\t\t * `true`. Used by {@link #pin}.\n\t\t *\n\t\t * @private\n\t\t * @member {Function} #_pinWhenIsVisibleCallback\n\t\t */\n\n\t\t/**\n\t\t * A collection of the child views that creates the balloon panel contents.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.content = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-balloon-panel',\n\t\t\t\t\tbind.to( 'position', value => `ck-balloon-panel_${ value }` ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-balloon-panel_visible' ),\n\t\t\t\t\tbind.if( 'withArrow', 'ck-balloon-panel_with-arrow' ),\n\t\t\t\t\tbind.to( 'class' )\n\t\t\t\t],\n\n\t\t\t\tstyle: {\n\t\t\t\t\ttop: bind.to( 'top', toPx ),\n\t\t\t\t\tleft: bind.to( 'left', toPx )\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tchildren: this.content\n\t\t} );\n\t}\n\n\t/**\n\t * Shows the panel.\n\t *\n\t * See {@link #isVisible}.\n\t */\n\tshow() {\n\t\tthis.isVisible = true;\n\t}\n\n\t/**\n\t * Hides the panel.\n\t *\n\t * See {@link #isVisible}.\n\t */\n\thide() {\n\t\tthis.isVisible = false;\n\t}\n\n\t/**\n\t * Attaches the panel to a specified {@link module:utils/dom/position~Options#target} with a\n\t * smart positioning heuristics that chooses from available positions to make sure the panel\n\t * is visible to the user i.e. within the limits of the viewport.\n\t *\n\t * This method accepts configuration {@link module:utils/dom/position~Options options}\n\t * to set the `target`, optional `limiter` and `positions` the balloon should choose from.\n\t *\n\t *\t\tconst panel = new BalloonPanelView( locale );\n\t *\t\tconst positions = BalloonPanelView.defaultPositions;\n\t *\n\t *\t\tpanel.render();\n\t *\n\t *\t\t// Attach the panel to an element with the \"target\" id DOM.\n\t *\t\tpanel.attachTo( {\n\t *\t\t\ttarget: document.querySelector( '#target' ),\n\t *\t\t\tpositions: [\n\t *\t\t\t\tpositions.northArrowSouth,\n\t *\t\t\t\tpositions.southArrowNorth\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t * **Note**: Attaching the panel will also automatically {@link #show} it.\n\t *\n\t * **Note**: An attached panel will not follow its target when the window is scrolled or resized.\n\t * See the {@link #pin} method for a more permanent positioning strategy.\n\t *\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t */\n\tattachTo( options ) {\n\t\tthis.show();\n\n\t\tconst defaultPositions = BalloonPanelView.defaultPositions;\n\t\tconst positionOptions = Object.assign( {}, {\n\t\t\telement: this.element,\n\t\t\tpositions: [\n\t\t\t\tdefaultPositions.southArrowNorth,\n\t\t\t\tdefaultPositions.southArrowNorthMiddleWest,\n\t\t\t\tdefaultPositions.southArrowNorthMiddleEast,\n\t\t\t\tdefaultPositions.southArrowNorthWest,\n\t\t\t\tdefaultPositions.southArrowNorthEast,\n\t\t\t\tdefaultPositions.northArrowSouth,\n\t\t\t\tdefaultPositions.northArrowSouthMiddleWest,\n\t\t\t\tdefaultPositions.northArrowSouthMiddleEast,\n\t\t\t\tdefaultPositions.northArrowSouthWest,\n\t\t\t\tdefaultPositions.northArrowSouthEast\n\t\t\t],\n\t\t\tlimiter: defaultLimiterElement,\n\t\t\tfitInViewport: true\n\t\t}, options );\n\n\t\tconst optimalPosition = BalloonPanelView._getOptimalPosition( positionOptions );\n\n\t\t// Usually browsers make some problems with super accurate values like 104.345px\n\t\t// so it is better to use int values.\n\t\tconst left = parseInt( optimalPosition.left );\n\t\tconst top = parseInt( optimalPosition.top );\n\t\tconst position = optimalPosition.name;\n\n\t\tObject.assign( this, { top, left, position } );\n\t}\n\n\t/**\n\t * Works the same way as the {@link #attachTo} method except that the position of the panel is\n\t * continuously updated when:\n\t *\n\t * * any ancestor of the {@link module:utils/dom/position~Options#target}\n\t * or {@link module:utils/dom/position~Options#limiter} is scrolled,\n\t * * the browser window gets resized or scrolled.\n\t *\n\t * Thanks to that, the panel always sticks to the {@link module:utils/dom/position~Options#target}\n\t * and is immune to the changing environment.\n\t *\n\t *\t\tconst panel = new BalloonPanelView( locale );\n\t *\t\tconst positions = BalloonPanelView.defaultPositions;\n\t *\n\t *\t\tpanel.render();\n\t *\n\t *\t\t// Pin the panel to an element with the \"target\" id DOM.\n\t *\t\tpanel.pin( {\n\t *\t\t\ttarget: document.querySelector( '#target' ),\n\t *\t\t\tpositions: [\n\t *\t\t\t\tpositions.northArrowSouth,\n\t *\t\t\t\tpositions.southArrowNorth\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t * To leave the pinned state, use the {@link #unpin} method.\n\t *\n\t * **Note**: Pinning the panel will also automatically {@link #show} it.\n\t *\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t */\n\tpin( options ) {\n\t\tthis.unpin();\n\n\t\tthis._pinWhenIsVisibleCallback = () => {\n\t\t\tif ( this.isVisible ) {\n\t\t\t\tthis._startPinning( options );\n\t\t\t} else {\n\t\t\t\tthis._stopPinning();\n\t\t\t}\n\t\t};\n\n\t\tthis._startPinning( options );\n\n\t\t// Control the state of the listeners depending on whether the panel is visible\n\t\t// or not.\n\t\t// TODO: Use on() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\t\tthis.listenTo( this, 'change:isVisible', this._pinWhenIsVisibleCallback );\n\t}\n\n\t/**\n\t * Stops pinning the panel, as set up by {@link #pin}.\n\t */\n\tunpin() {\n\t\tif ( this._pinWhenIsVisibleCallback ) {\n\t\t\t// Deactivate listeners attached by pin().\n\t\t\tthis._stopPinning();\n\n\t\t\t// Deactivate the panel pin() control logic.\n\t\t\t// TODO: Use off() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\t\t\tthis.stopListening( this, 'change:isVisible', this._pinWhenIsVisibleCallback );\n\n\t\t\tthis._pinWhenIsVisibleCallback = null;\n\n\t\t\tthis.hide();\n\t\t}\n\t}\n\n\t/**\n\t * Starts managing the pinned state of the panel. See {@link #pin}.\n\t *\n\t * @private\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}.\n\t */\n\t_startPinning( options ) {\n\t\tthis.attachTo( options );\n\n\t\tconst targetElement = getDomElement( options.target );\n\t\tconst limiterElement = options.limiter ? getDomElement( options.limiter ) : defaultLimiterElement;\n\n\t\t// Then we need to listen on scroll event of eny element in the document.\n\t\tthis.listenTo( global.document, 'scroll', ( evt, domEvt ) => {\n\t\t\tconst scrollTarget = domEvt.target;\n\n\t\t\t// The position needs to be updated if the positioning target is within the scrolled element.\n\t\t\tconst isWithinScrollTarget = targetElement && scrollTarget.contains( targetElement );\n\n\t\t\t// The position needs to be updated if the positioning limiter is within the scrolled element.\n\t\t\tconst isLimiterWithinScrollTarget = limiterElement && scrollTarget.contains( limiterElement );\n\n\t\t\t// The positioning target and/or limiter can be a Rect, object etc..\n\t\t\t// There's no way to optimize the listener then.\n\t\t\tif ( isWithinScrollTarget || isLimiterWithinScrollTarget || !targetElement || !limiterElement ) {\n\t\t\t\tthis.attachTo( options );\n\t\t\t}\n\t\t}, { useCapture: true } );\n\n\t\t// We need to listen on window resize event and update position.\n\t\tthis.listenTo( global.window, 'resize', () => {\n\t\t\tthis.attachTo( options );\n\t\t} );\n\t}\n\n\t/**\n\t * Stops managing the pinned state of the panel. See {@link #pin}.\n\t *\n\t * @private\n\t */\n\t_stopPinning() {\n\t\tthis.stopListening( global.document, 'scroll' );\n\t\tthis.stopListening( global.window, 'resize' );\n\t}\n}\n\n// Returns the DOM element for given object or null, if there is none,\n// e.g. when the passed object is a Rect instance or so.\n//\n// @private\n// @param {*} object\n// @returns {HTMLElement|null}\nfunction getDomElement( object ) {\n\tif ( isElement( object ) ) {\n\t\treturn object;\n\t}\n\n\tif ( isRange( object ) ) {\n\t\treturn object.commonAncestorContainer;\n\t}\n\n\tif ( typeof object == 'function' ) {\n\t\treturn getDomElement( object() );\n\t}\n\n\treturn null;\n}\n\n/**\n * A horizontal offset of the arrow tip from the edge of the balloon. Controlled by CSS.\n *\n *\t\t +-----|---------...\n *\t\t |     |\n *\t\t |     |\n *\t\t |     |\n *\t\t |     |\n *\t\t +--+  |  +------...\n *\t\t     \\ | /\n *\t\t      \\|/\n *\t    >|-----|<---------------- horizontal offset\n *\n * @default 30\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowHorizontalOffset\n */\nBalloonPanelView.arrowHorizontalOffset = 25;\n\n/**\n * A vertical offset of the arrow from the edge of the balloon. Controlled by CSS.\n *\n *\t\t +-------------...\n *\t\t |\n *\t\t |\n *\t\t |                      /-- vertical offset\n *\t\t |                     V\n *\t\t +--+    +-----...    ---------\n *\t\t     \\  /              |\n *\t\t      \\/               |\n *\t\t-------------------------------\n *\t\t                       ^\n *\n * @default 15\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowVerticalOffset\n */\nBalloonPanelView.arrowVerticalOffset = 10;\n\n/**\n * Function used to calculate the optimal position for the balloon.\n *\n * @protected\n * @member {Function} module:ui/panel/balloon/balloonpanelview~BalloonPanelView._getOptimalPosition\n */\nBalloonPanelView._getOptimalPosition = getOptimalPosition;\n\n/**\n * A default set of positioning functions used by the balloon panel view\n * when attaching using the {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo} method.\n *\n * The available positioning functions are as follows:\n *\n *\n *\n * **North west**\n *\n * * `northWestArrowSouthWest`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t V\n *\t\t [ Target ]\n *\n * * `northWestArrowSouthMiddleWest`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t    V\n *\t\t    [ Target ]\n *\n * * `northWestArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t         [ Target ]\n *\n * * `northWestArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t             [ Target ]\n *\n * * `northWestArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                 V\n *\t\t                 [ Target ]\n *\n *\n *\n * **North**\n *\n * * `northArrowSouthWest`\n *\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\t\t     V\n *\t\t[ Target ]\n *\n * * `northArrowSouthMiddleWest`\n *\n *\t\t +-----------------+\n *\t\t |     Balloon     |\n *\t\t +-----------------+\n *\t\t     V\n *\t\t[ Target ]\n *\n * * `northArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t    [ Target ]\n *\n * * `northArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t        [ Target ]\n *\n * * `northArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                V\n *\t\t           [ Target ]\n *\n * **North east**\n *\n * * `northEastArrowSouthWest`\n *\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n *\n * * `northEastArrowSouthMiddleWest`\n *\n *\t\t     +-----------------+\n *\t\t     |     Balloon     |\n *\t\t     +-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n * * `northEastArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n * * `northEastArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t    [ Target ]\n *\n * * `northEastArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                 V\n *\t\t        [ Target ]\n *\n *\n *\n * **South**\n *\n *\n * * `southArrowNorthWest`\n *\n *\t\t[ Target ]\n *\t\t     ^\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\n * * `southArrowNorthMiddleWest`\n *\n *\t\t   [ Target ]\n *\t\t        ^\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\n * * `southArrowNorth`\n *\n *\t\t    [ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southArrowNorthMiddleEast`\n *\n *\t\t            [ Target ]\n *\t\t                 ^\n *\t\t   +-----------------+\n *\t\t   |     Balloon     |\n *\t\t   +-----------------+\n *\n * * `southArrowNorthEast`\n *\n *\t\t            [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n *\n * **South west**\n *\n * * `southWestArrowNorthWest`\n *\n *\t\t [ Target ]\n *\t\t ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthMiddleWest`\n *\n *\t\t     [ Target ]\n *\t\t     ^\n *\t\t +-----------------+\n *\t\t |     Balloon     |\n *\t\t +-----------------+\n *\n * * `southWestArrowNorth`\n *\n *\t\t         [ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthMiddleEast`\n *\n *\t\t              [ Target ]\n *\t\t              ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthEast`\n *\n *\t\t                 [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n *\n * **South east**\n *\n * * `southEastArrowNorthWest`\n *\n *\t\t[ Target ]\n *\t\t         ^\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n* * `southEastArrowNorthMiddleWest`\n *\n *\t\t   [ Target ]\n *\t\t            ^\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n *\n * * `southEastArrowNorth`\n *\n *\t\t[ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southEastArrowNorthMiddleEast`\n *\n *\t\t     [ Target ]\n *\t\t              ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southEastArrowNorthEast`\n *\n *\t\t        [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n * See {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo}.\n *\n * Positioning functions must be compatible with {@link module:utils/dom/position~Position}.\n *\n * The name that the position function returns will be reflected in the balloon panel's class that\n * controls the placement of the \"arrow\". See {@link #position} to learn more.\n *\n * @member {Object} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions\n */\nBalloonPanelView.defaultPositions = {\n\n\t// ------- North west\n\n\tnorthWestArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sw'\n\t} ),\n\n\tnorthWestArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_smw'\n\t} ),\n\n\tnorthWestArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - balloonRect.width / 2,\n\t\tname: 'arrow_s'\n\t} ),\n\n\tnorthWestArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sme'\n\t} ),\n\n\tnorthWestArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_se'\n\t} ),\n\n\t// ------- North\n\n\tnorthArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sw'\n\t} ),\n\n\tnorthArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_smw'\n\t} ),\n\n\tnorthArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\tname: 'arrow_s'\n\t} ),\n\n\tnorthArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sme'\n\t} ),\n\n\tnorthArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_se'\n\t} ),\n\n\t// ------- North east\n\n\tnorthEastArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sw'\n\t} ),\n\n\tnorthEastArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_smw'\n\t} ),\n\tnorthEastArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - balloonRect.width / 2,\n\t\tname: 'arrow_s'\n\t} ),\n\n\tnorthEastArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sme'\n\t} ),\n\n\tnorthEastArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_se'\n\t} ),\n\t// ------- South west\n\n\tsouthWestArrowNorthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nw'\n\t} ),\n\n\tsouthWestArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nmw'\n\t} ),\n\n\tsouthWestArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - balloonRect.width / 2,\n\t\tname: 'arrow_n'\n\t} ),\n\n\tsouthWestArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nme'\n\t} ),\n\n\tsouthWestArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_ne'\n\t} ),\n\n\t// ------- South\n\n\tsouthArrowNorthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nw'\n\t} ),\n\tsouthArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * 0.25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nmw'\n\t} ),\n\n\tsouthArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\tname: 'arrow_n'\n\t} ),\n\n\tsouthArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * 0.75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nme'\n\t} ),\n\n\tsouthArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_ne'\n\t} ),\n\n\t// ------- South east\n\n\tsouthEastArrowNorthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nw'\n\t} ),\n\n\tsouthEastArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nmw'\n\t} ),\n\n\tsouthEastArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - balloonRect.width / 2,\n\t\tname: 'arrow_n'\n\t} ),\n\n\tsouthEastArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nme'\n\t} ),\n\n\tsouthEastArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_ne'\n\t} )\n\n};\n\n// Returns the top coordinate for positions starting with `north*`.\n//\n// @private\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\n// @returns {Number}\nfunction getNorthTop( targetRect, balloonRect ) {\n\treturn targetRect.top - balloonRect.height - BalloonPanelView.arrowVerticalOffset;\n}\n\n// Returns the top coordinate for positions starting with `south*`.\n//\n// @private\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\n// @returns {Number}\nfunction getSouthTop( targetRect ) {\n\treturn targetRect.bottom + BalloonPanelView.arrowVerticalOffset;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/panel/balloon/contextualballoon\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BalloonPanelView from './balloonpanelview';\nimport View from '../../view';\nimport ButtonView from '../../button/buttonview';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\n\nimport prevIcon from '../../../theme/icons/previous-arrow.svg';\nimport nextIcon from '../../../theme/icons/next-arrow.svg';\n\nimport '../../../theme/components/panel/balloonrotator.css';\nimport '../../../theme/components/panel/fakepanel.css';\n\nconst toPx = toUnit( 'px' );\n\n/**\n * Provides the common contextual balloon for the editor.\n *\n * The role of this plugin is to unify the contextual balloons logic, simplify views management and help\n * avoid the unnecessary complexity of handling multiple {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n * instances in the editor.\n *\n * This plugin allows for creating single or multiple panel stacks.\n *\n * Each stack may have multiple views, with the one on the top being visible. When the visible view is removed from the stack,\n * the previous view becomes visible.\n *\n * It might be useful to implement nested navigation in a balloon. For instance, a toolbar view may contain a link button.\n * When you click it, a link view (which lets you set the URL) is created and put on top of the toolbar view, so the link panel\n * is displayed. When you finish editing the link and close (remove) the link view, the toolbar view is visible again.\n *\n * However, there are cases when there are multiple independent balloons to be displayed, for instance, if the selection\n * is inside two inline comments at the same time. For such cases, you can create two independent panel stacks.\n * The contextual balloon plugin will create a navigation bar to let the users switch between these panel stacks using the \"Next\"\n * and \"Previous\" buttons.\n *\n * If there are no views in the current stack, the balloon panel will try to switch to the next stack. If there are no\n * panels in any stack, the balloon panel will be hidden.\n *\n * **Note**: To force the balloon panel to show only one view, even if there are other stacks, use the `singleViewMode=true` option\n * when {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon#add adding} a view to a panel.\n *\n * From the implementation point of view, the contextual ballon plugin is reusing a single\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView} instance to display multiple contextual balloon\n * panels in the editor. It also creates a special {@link module:ui/panel/balloon/contextualballoon~RotatorView rotator view},\n * used to manage multiple panel stacks. Rotator view is a child of the balloon panel view and the parent of the specific\n * view you want to display. If there is more than one panel stack to be displayed, the rotator view will add a\n * navigation bar. If there is only one stack, the rotator view is transparent (it does not add any UI elements).\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ContextualBalloon extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ContextualBalloon';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The {@link module:utils/dom/position~Options#limiter position limiter}\n\t\t * for the {@link #view balloon}, used when no `limiter` has been passed into {@link #add}\n\t\t * or {@link #updatePosition}.\n\t\t *\n\t\t * By default, a function that obtains the farthest DOM\n\t\t * {@link module:engine/view/rooteditableelement~RootEditableElement}\n\t\t * of the {@link module:engine/view/document~Document#selection}.\n\t\t *\n\t\t * @member {module:utils/dom/position~Options#limiter} #positionLimiter\n\t\t */\n\t\tthis.positionLimiter = () => {\n\t\t\tconst view = this.editor.editing.view;\n\t\t\tconst viewDocument = view.document;\n\t\t\tconst editableElement = viewDocument.selection.editableElement;\n\n\t\t\tif ( editableElement ) {\n\t\t\t\treturn view.domConverter.mapViewToDom( editableElement.root );\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t/**\n\t\t * The currently visible view or `null` when there are no views in any stack.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {module:ui/view~View|null} #visibleView\n\t\t */\n\t\tthis.set( 'visibleView', null );\n\n\t\t/**\n\t\t * The common balloon panel view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/panel/balloon/balloonpanelview~BalloonPanelView} #view\n\t\t */\n\t\tthis.view = new BalloonPanelView( editor.locale );\n\t\teditor.ui.view.body.add( this.view );\n\t\teditor.ui.focusTracker.add( this.view.element );\n\n\t\t/**\n\t\t * The map of views and their stacks.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<module:ui/view~View,Set>}\n\t\t */\n\t\tthis._viewToStack = new Map();\n\n\t\t/**\n\t\t * The map of IDs and stacks.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<String,Set>}\n\t\t */\n\t\tthis._idToStack = new Map();\n\n\t\t/**\n\t\t * A total number of all stacks in the balloon.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number} #_numberOfStacks\n\t\t */\n\t\tthis.set( '_numberOfStacks', 0 );\n\n\t\t/**\n\t\t * A flag that controls the single view mode.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #_singleViewMode\n\t\t */\n\t\tthis.set( '_singleViewMode', false );\n\n\t\t/**\n\t\t * Rotator view embedded in the contextual balloon.\n\t\t * Displays the currently visible view in the balloon and provides navigation for switching stacks.\n\t\t *\n\t\t * @private\n\t\t * @type {module:ui/panel/balloon/contextualballoon~RotatorView}\n\t\t */\n\t\tthis._rotatorView = this._createRotatorView();\n\n\t\t/**\n\t\t * Displays fake panels under the balloon panel view when multiple stacks are added to the balloon.\n\t\t *\n\t\t * @private\n\t\t * @type {module:ui/view~View}\n\t\t */\n\t\tthis._fakePanelsView = this._createFakePanelsView();\n\t}\n\n\t/**\n\t * Returns `true` when the given view is in one of the stacks. Otherwise returns `false`.\n\t *\n\t * @param {module:ui/view~View} view\n\t * @returns {Boolean}\n\t */\n\thasView( view ) {\n\t\treturn Array.from( this._viewToStack.keys() ).includes( view );\n\t}\n\n\t/**\n\t * Adds a new view to the stack and makes it visible if the current stack is visible\n\t * or it is the first view in the balloon.\n\t *\n\t * @param {Object} data The configuration of the view.\n\t * @param {String} [data.stackId='main'] The ID of the stack that the view is added to.\n\t * @param {module:ui/view~View} [data.view] The content of the balloon.\n\t * @param {module:utils/dom/position~Options} [data.position] Positioning options.\n\t * @param {String} [data.balloonClassName] An additional CSS class added to the {@link #view balloon} when visible.\n\t * @param {Boolean} [data.withArrow=true] Whether the {@link #view balloon} should be rendered with an arrow.\n\t * @param {Boolean} [data.singleViewMode=false] Whether the view should be the only visible view even if other stacks were added.\n\t */\n\tadd( data ) {\n\t\tif ( this.hasView( data.view ) ) {\n\t\t\t/**\n\t\t\t * Trying to add configuration of the same view more than once.\n\t\t\t *\n\t\t\t * @error contextualballoon-add-view-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'contextualballoon-add-view-exist: Cannot add configuration of the same view twice.',\n\t\t\t\t[ this, data ]\n\t\t\t);\n\t\t}\n\n\t\tconst stackId = data.stackId || 'main';\n\n\t\t// If new stack is added, creates it and show view from this stack.\n\t\tif ( !this._idToStack.has( stackId ) ) {\n\t\t\tthis._idToStack.set( stackId, new Map( [ [ data.view, data ] ] ) );\n\t\t\tthis._viewToStack.set( data.view, this._idToStack.get( stackId ) );\n\t\t\tthis._numberOfStacks = this._idToStack.size;\n\n\t\t\tif ( !this._visibleStack || data.singleViewMode ) {\n\t\t\t\tthis.showStack( stackId );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst stack = this._idToStack.get( stackId );\n\n\t\tif ( data.singleViewMode ) {\n\t\t\tthis.showStack( stackId );\n\t\t}\n\n\t\t// Add new view to the stack.\n\t\tstack.set( data.view, data );\n\t\tthis._viewToStack.set( data.view, stack );\n\n\t\t// And display it if is added to the currently visible stack.\n\t\tif ( stack === this._visibleStack ) {\n\t\t\tthis._showView( data );\n\t\t}\n\t}\n\n\t/**\n\t * Removes the given view from the stack. If the removed view was visible,\n\t * the view preceding it in the stack will become visible instead.\n\t * When there is no view in the stack, the next stack will be displayed.\n\t * When there are no more stacks, the balloon will hide.\n\t *\n\t * @param {module:ui/view~View} view A view to be removed from the balloon.\n\t */\n\tremove( view ) {\n\t\tif ( !this.hasView( view ) ) {\n\t\t\t/**\n\t\t\t * Trying to remove the configuration of the view not defined in the stack.\n\t\t\t *\n\t\t\t * @error contextualballoon-remove-view-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'contextualballoon-remove-view-not-exist: Cannot remove the configuration of a non-existent view.',\n\t\t\t\t[ this, view ]\n\t\t\t);\n\t\t}\n\n\t\tconst stack = this._viewToStack.get( view );\n\n\t\tif ( this._singleViewMode && this.visibleView === view ) {\n\t\t\tthis._singleViewMode = false;\n\t\t}\n\n\t\t// When visible view will be removed we need to show a preceding view or next stack\n\t\t// if a view is the only view in the stack.\n\t\tif ( this.visibleView === view ) {\n\t\t\tif ( stack.size === 1 ) {\n\t\t\t\tif ( this._idToStack.size > 1 ) {\n\t\t\t\t\tthis._showNextStack();\n\t\t\t\t} else {\n\t\t\t\t\tthis.view.hide();\n\t\t\t\t\tthis.visibleView = null;\n\t\t\t\t\tthis._rotatorView.hideView();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._showView( Array.from( stack.values() )[ stack.size - 2 ] );\n\t\t\t}\n\t\t}\n\n\t\tif ( stack.size === 1 ) {\n\t\t\tthis._idToStack.delete( this._getStackId( stack ) );\n\t\t\tthis._numberOfStacks = this._idToStack.size;\n\t\t} else {\n\t\t\tstack.delete( view );\n\t\t}\n\n\t\tthis._viewToStack.delete( view );\n\t}\n\n\t/**\n\t * Updates the position of the balloon using the position data of the first visible view in the stack.\n\t * When new position data is given, the position data of the currently visible view will be updated.\n\t *\n\t * @param {module:utils/dom/position~Options} [position] position options.\n\t */\n\tupdatePosition( position ) {\n\t\tif ( position ) {\n\t\t\tthis._visibleStack.get( this.visibleView ).position = position;\n\t\t}\n\n\t\tthis.view.pin( this._getBalloonPosition() );\n\t\tthis._fakePanelsView.updatePosition();\n\t}\n\n\t/**\n\t * Shows the last view from the stack of a given ID.\n\t *\n\t * @param {String} id\n\t */\n\tshowStack( id ) {\n\t\tthis.visibleStack = id;\n\t\tconst stack = this._idToStack.get( id );\n\n\t\tif ( !stack ) {\n\t\t\t/**\n\t\t\t * Trying to show a stack that does not exist.\n\t\t\t *\n\t\t\t * @error contextualballoon-showstack-stack-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'contextualballoon-showstack-stack-not-exist: Cannot show a stack that does not exist.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tif ( this._visibleStack === stack ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._showView( Array.from( stack.values() ).pop() );\n\t}\n\n\t/**\n\t * Returns the stack of the currently visible view.\n\t *\n\t * @private\n\t * @type {Set}\n\t */\n\tget _visibleStack() {\n\t\treturn this._viewToStack.get( this.visibleView );\n\t}\n\n\t/**\n\t * Returns the ID of the given stack.\n\t *\n\t * @private\n\t * @param {Set} stack\n\t * @returns {String}\n\t */\n\t_getStackId( stack ) {\n\t\tconst entry = Array.from( this._idToStack.entries() ).find( entry => entry[ 1 ] === stack );\n\n\t\treturn entry[ 0 ];\n\t}\n\n\t/**\n\t * Shows the last view from the next stack.\n\t *\n\t * @private\n\t */\n\t_showNextStack() {\n\t\tconst stacks = Array.from( this._idToStack.values() );\n\n\t\tlet nextIndex = stacks.indexOf( this._visibleStack ) + 1;\n\n\t\tif ( !stacks[ nextIndex ] ) {\n\t\t\tnextIndex = 0;\n\t\t}\n\n\t\tthis.showStack( this._getStackId( stacks[ nextIndex ] ) );\n\t}\n\n\t/**\n\t * Shows the last view from the previous stack.\n\t *\n\t * @private\n\t */\n\t_showPrevStack() {\n\t\tconst stacks = Array.from( this._idToStack.values() );\n\n\t\tlet nextIndex = stacks.indexOf( this._visibleStack ) - 1;\n\n\t\tif ( !stacks[ nextIndex ] ) {\n\t\t\tnextIndex = stacks.length - 1;\n\t\t}\n\n\t\tthis.showStack( this._getStackId( stacks[ nextIndex ] ) );\n\t}\n\n\t/**\n\t * Creates a rotator view.\n\t *\n\t * @private\n\t * @returns {module:ui/panel/balloon/contextualballoon~RotatorView}\n\t */\n\t_createRotatorView() {\n\t\tconst view = new RotatorView( this.editor.locale );\n\t\tconst t = this.editor.locale.t;\n\n\t\tthis.view.content.add( view );\n\n\t\t// Hide navigation when there is only a one stack & not in single view mode.\n\t\tview.bind( 'isNavigationVisible' ).to( this, '_numberOfStacks', this, '_singleViewMode', ( value, isSingleViewMode ) => {\n\t\t\treturn !isSingleViewMode && value > 1;\n\t\t} );\n\n\t\t// Update balloon position after toggling navigation.\n\t\tview.on( 'change:isNavigationVisible', () => ( this.updatePosition() ), { priority: 'low' } );\n\n\t\t// Update stacks counter value.\n\t\tview.bind( 'counter' ).to( this, 'visibleView', this, '_numberOfStacks', ( visibleView, numberOfStacks ) => {\n\t\t\tif ( numberOfStacks < 2 ) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tconst current = Array.from( this._idToStack.values() ).indexOf( this._visibleStack ) + 1;\n\n\t\t\treturn t( '%0 of %1', [ current, numberOfStacks ] );\n\t\t} );\n\n\t\tview.buttonNextView.on( 'execute', () => {\n\t\t\t// When current view has a focus then move focus to the editable before removing it,\n\t\t\t// otherwise editor will lost focus.\n\t\t\tif ( view.focusTracker.isFocused ) {\n\t\t\t\tthis.editor.editing.view.focus();\n\t\t\t}\n\n\t\t\tthis._showNextStack();\n\t\t} );\n\n\t\tview.buttonPrevView.on( 'execute', () => {\n\t\t\t// When current view has a focus then move focus to the editable before removing it,\n\t\t\t// otherwise editor will lost focus.\n\t\t\tif ( view.focusTracker.isFocused ) {\n\t\t\t\tthis.editor.editing.view.focus();\n\t\t\t}\n\n\t\t\tthis._showPrevStack();\n\t\t} );\n\n\t\treturn view;\n\t}\n\n\t/**\n\t * @returns {module:ui/view~View}\n\t */\n\t_createFakePanelsView() {\n\t\tconst view = new FakePanelsView( this.editor.locale, this.view );\n\n\t\tview.bind( 'numberOfPanels' ).to( this, '_numberOfStacks', this, '_singleViewMode', ( number, isSingleViewMode ) => {\n\t\t\tconst showPanels = !isSingleViewMode && number >= 2;\n\n\t\t\treturn showPanels ? Math.min( number - 1, 2 ) : 0;\n\t\t} );\n\n\t\tview.listenTo( this.view, 'change:top', () => view.updatePosition() );\n\t\tview.listenTo( this.view, 'change:left', () => view.updatePosition() );\n\n\t\tthis.editor.ui.view.body.add( view );\n\n\t\treturn view;\n\t}\n\n\t/**\n\t * Sets the view as the content of the balloon and attaches the balloon using position\n\t * options of the first view.\n\t *\n\t * @private\n\t * @param {Object} data Configuration.\n\t * @param {module:ui/view~View} [data.view] The view to show in the balloon.\n\t * @param {String} [data.balloonClassName=''] Additional class name which will be added to the {@link #view balloon}.\n\t * @param {Boolean} [data.withArrow=true] Whether the {@link #view balloon} should be rendered with an arrow.\n\t */\n\t_showView( { view, balloonClassName = '', withArrow = true, singleViewMode = false } ) {\n\t\tthis.view.class = balloonClassName;\n\t\tthis.view.withArrow = withArrow;\n\n\t\tthis._rotatorView.showView( view );\n\t\tthis.visibleView = view;\n\t\tthis.view.pin( this._getBalloonPosition() );\n\t\tthis._fakePanelsView.updatePosition();\n\n\t\tif ( singleViewMode ) {\n\t\t\tthis._singleViewMode = true;\n\t\t}\n\t}\n\n\t/**\n\t * Returns position options of the last view in the stack.\n\t * This keeps the balloon in the same position when the view is changed.\n\t *\n\t * @private\n\t * @returns {module:utils/dom/position~Options}\n\t */\n\t_getBalloonPosition() {\n\t\tlet position = Array.from( this._visibleStack.values() ).pop().position;\n\n\t\t// Use the default limiter if none has been specified.\n\t\tif ( position && !position.limiter ) {\n\t\t\t// Don't modify the original options object.\n\t\t\tposition = Object.assign( {}, position, {\n\t\t\t\tlimiter: this.positionLimiter\n\t\t\t} );\n\t\t}\n\n\t\treturn position;\n\t}\n}\n\n/**\n * Rotator view is a helper class for the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon ContextualBalloon}.\n * It is used for displaying the last view from the current stack and providing navigation buttons for switching stacks.\n * See the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon ContextualBalloon} documentation to learn more.\n *\n * @extends module:ui/view~View\n */\nclass RotatorView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst t = locale.t;\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Defines whether navigation is visible or not.\n\t\t *\n\t\t * @member {Boolean} #isNavigationVisible\n\t\t */\n\t\tthis.set( 'isNavigationVisible', true );\n\n\t\t/**\n\t\t * Used for checking if a view is focused or not.\n\t\t *\n\t\t * @type {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Navigation button for switching the stack to the previous one.\n\t\t *\n\t\t * @type {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.buttonPrevView = this._createButtonView( t( 'Previous' ), prevIcon );\n\n\t\t/**\n\t\t * Navigation button for switching the stack to the next one.\n\t\t *\n\t\t * @type {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.buttonNextView = this._createButtonView( t( 'Next' ), nextIcon );\n\n\t\t/**\n\t\t * A collection of the child views that creates the rotator content.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.content = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-balloon-rotator'\n\t\t\t\t],\n\t\t\t\t'z-index': '-1'\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck-balloon-rotator__navigation',\n\t\t\t\t\t\t\tbind.to( 'isNavigationVisible', value => value ? '' : 'ck-hidden' )\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\tthis.buttonPrevView,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttag: 'span',\n\n\t\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t\t\t'ck-balloon-rotator__counter'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttext: bind.to( 'counter' )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.buttonNextView\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: 'ck-balloon-rotator__content'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.content\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.focusTracker.add( this.element );\n\t}\n\n\t/**\n\t * Shows a given view.\n\t *\n\t * @param {module:ui/view~View} view The view to show.\n\t */\n\tshowView( view ) {\n\t\tthis.hideView();\n\t\tthis.content.add( view );\n\t}\n\n\t/**\n\t * Hides the currently displayed view.\n\t */\n\thideView() {\n\t\tthis.content.clear();\n\t}\n\n\t/**\n\t * Creates a navigation button view.\n\t *\n\t * @private\n\t * @param {String} label The button label.\n\t * @param {String} icon The button icon.\n\t * @returns {module:ui/button/buttonview~ButtonView}\n\t */\n\t_createButtonView( label, icon ) {\n\t\tconst view = new ButtonView( this.locale );\n\n\t\tview.set( {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ttooltip: true\n\t\t} );\n\n\t\treturn view;\n\t}\n}\n\n// Displays additional layers under the balloon when multiple stacks are added to the balloon.\n//\n// @private\n// @extends module:ui/view~View\nclass FakePanelsView extends View {\n\t// @inheritDoc\n\tconstructor( locale, balloonPanelView ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t// Fake panels top offset.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #top\n\t\tthis.set( 'top', 0 );\n\n\t\t// Fake panels left offset.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #left\n\t\tthis.set( 'left', 0 );\n\n\t\t// Fake panels height.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #height\n\t\tthis.set( 'height', 0 );\n\n\t\t// Fake panels width.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #width\n\t\tthis.set( 'width', 0 );\n\n\t\t// Number of rendered fake panels.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #numberOfPanels\n\t\tthis.set( 'numberOfPanels', 0 );\n\n\t\t// Collection of the child views which creates fake panel content.\n\t\t//\n\t\t// @readonly\n\t\t// @type {module:ui/viewcollection~ViewCollection}\n\t\tthis.content = this.createCollection();\n\n\t\t// Context.\n\t\t//\n\t\t// @private\n\t\t// @type {module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n\t\tthis._balloonPanelView = balloonPanelView;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-fake-panel',\n\t\t\t\t\tbind.to( 'numberOfPanels', number => number ? '' : 'ck-hidden' )\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\ttop: bind.to( 'top', toPx ),\n\t\t\t\t\tleft: bind.to( 'left', toPx ),\n\t\t\t\t\twidth: bind.to( 'width', toPx ),\n\t\t\t\t\theight: bind.to( 'height', toPx )\n\t\t\t\t}\n\t\t\t},\n\t\t\tchildren: this.content\n\t\t} );\n\n\t\tthis.on( 'change:numberOfPanels', ( evt, name, next, prev ) => {\n\t\t\tif ( next > prev ) {\n\t\t\t\tthis._addPanels( next - prev );\n\t\t\t} else {\n\t\t\t\tthis._removePanels( prev - next );\n\t\t\t}\n\n\t\t\tthis.updatePosition();\n\t\t} );\n\t}\n\n\t// @private\n\t// @param {Number} number\n\t_addPanels( number ) {\n\t\twhile ( number-- ) {\n\t\t\tconst view = new View();\n\n\t\t\tview.setTemplate( { tag: 'div' } );\n\n\t\t\tthis.content.add( view );\n\t\t\tthis.registerChild( view );\n\t\t}\n\t}\n\n\t// @private\n\t// @param {Number} number\n\t_removePanels( number ) {\n\t\twhile ( number-- ) {\n\t\t\tconst view = this.content.last;\n\n\t\t\tthis.content.remove( view );\n\t\t\tthis.deregisterChild( view );\n\t\t\tview.destroy();\n\t\t}\n\t}\n\n\t// Updates coordinates of fake panels.\n\tupdatePosition() {\n\t\tif ( this.numberOfPanels ) {\n\t\t\tconst { top, left } = this._balloonPanelView;\n\t\t\tconst { width, height } = new Rect( this._balloonPanelView.element );\n\n\t\t\tObject.assign( this, { top, left, width, height } );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/labeledfield/labeledfieldview\n */\n\nimport View from '../view';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\nimport LabelView from '../label/labelview';\nimport '../../theme/components/labeledfield/labeledfieldview.css';\n\n/**\n * The labeled field view class. It can be used to enhance any view with the following features:\n *\n * * a label,\n * * (optional) an error message,\n * * (optional) an info (status) text,\n *\n * all bound logically by proper DOM attributes for UX and accessibility.  It also provides an interface\n * (e.g. observable properties) that allows controlling those additional features.\n *\n * The constructor of this class requires a callback that returns a view to be labeled. The callback\n * is called with unique ids that allow binding of DOM properties:\n *\n *\t\tconst labeledInputView = new LabeledFieldView( locale, ( labeledFieldView, viewUid, statusUid ) => {\n *\t\t\tconst inputView = new InputTextView( labeledFieldView.locale );\n *\n *\t\t\tinputView.set( {\n *\t\t\t\tid: viewUid,\n *\t\t\t\tariaDescribedById: statusUid\n *\t\t\t} );\n *\n *\t\t\tinputView.bind( 'isReadOnly' ).to( labeledFieldView, 'isEnabled', value => !value );\n *\t\t\tinputView.bind( 'hasError' ).to( labeledFieldView, 'errorText', value => !!value );\n *\n *\t\t\treturn inputView;\n *\t\t} );\n *\n *\t\tlabeledInputView.label = 'User name';\n *\t\tlabeledInputView.infoText = 'Full name like for instance, John Doe.';\n *\t\tlabeledInputView.render();\n *\n *\t\tdocument.body.append( labeledInputView.element );\n *\n * See {@link module:ui/labeledfield/utils} to discover ready–to–use labeled input helpers for common\n * UI components.\n *\n * @extends module:ui/view~View\n */\nexport default class LabeledFieldView extends View {\n\t/**\n\t * Creates an instance of the labeled field view class using a provided creator function\n\t * that provides the view to be labeled.\n\t *\n\t * @param {module:utils/locale~Locale} locale The locale instance.\n\t * @param {Function} viewCreator A function that returns a {@link module:ui/view~View}\n\t * that will be labeled. The following arguments are passed to the creator function:\n\t *\n\t * * an instance of the `LabeledFieldView` to allow binding observable properties,\n\t * * an UID string that connects the {@link #labelView label} and the labeled field view in DOM,\n\t * * an UID string that connects the {@link #statusView status} and the labeled field view in DOM.\n\t */\n\tconstructor( locale, viewCreator ) {\n\t\tsuper( locale );\n\n\t\tconst viewUid = `ck-labeled-field-view-${ uid() }`;\n\t\tconst statusUid = `ck-labeled-field-view-status-${ uid() }`;\n\n\t\t/**\n\t\t * The field view that gets labeled.\n\t\t *\n\t\t * @member {module:ui/view~View} #fieldView\n\t\t */\n\t\tthis.fieldView = viewCreator( this, viewUid, statusUid );\n\n\t\t/**\n\t\t * The text of the label.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #label\n\t\t */\n\t\tthis.set( 'label' );\n\n\t\t/**\n\t\t * Controls whether the component is in read-only mode.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isEnabled\n\t\t */\n\t\tthis.set( 'isEnabled', true );\n\n\t\t/**\n\t\t * The validation error text. When set, it will be displayed\n\t\t * next to the {@link #fieldView} as a typical validation error message.\n\t\t * Set it to `null` to hide the message.\n\t\t *\n\t\t * **Note:** Setting this property to anything but `null` will automatically\n\t\t * make the `hasError` of the {@link #fieldView} `true`.\n\t\t *\n\t\t * @observable\n\t\t * @member {String|null} #errorText\n\t\t */\n\t\tthis.set( 'errorText', null );\n\n\t\t/**\n\t\t * The additional information text displayed next to the {@link #fieldView} which can\n\t\t * be used to inform the user about its purpose, provide help or hints.\n\t\t *\n\t\t * Set it to `null` to hide the message.\n\t\t *\n\t\t * **Note:** This text will be displayed in the same place as {@link #errorText} but the\n\t\t * latter always takes precedence: if the {@link #errorText} is set, it replaces\n\t\t * {@link #infoText}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String|null} #infoText\n\t\t */\n\t\tthis.set( 'infoText', null );\n\n\t\t/**\n\t\t * (Optional) The additional CSS class set on the dropdown {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n\t\tthis.set( 'class' );\n\n\t\t/**\n\t\t * The label view instance that describes the entire view.\n\t\t *\n\t\t * @member {module:ui/label/labelview~LabelView} #labelView\n\t\t */\n\t\tthis.labelView = this._createLabelView( viewUid );\n\n\t\t/**\n\t\t * The status view for the {@link #fieldView}. It displays {@link #errorText} and\n\t\t * {@link #infoText}.\n\t\t *\n\t\t * @member {module:ui/view~View} #statusView\n\t\t */\n\t\tthis.statusView = this._createStatusView( statusUid );\n\n\t\t/**\n\t\t * The combined status text made of {@link #errorText} and {@link #infoText}.\n\t\t * Note that when present, {@link #errorText} always takes precedence in the\n\t\t * status.\n\t\t *\n\t\t * @see #errorText\n\t\t * @see #infoText\n\t\t * @see #statusView\n\t\t * @private\n\t\t * @observable\n\t\t * @member {String|null} #_statusText\n\t\t */\n\t\tthis.bind( '_statusText' ).to(\n\t\t\tthis, 'errorText',\n\t\t\tthis, 'infoText',\n\t\t\t( errorText, infoText ) => errorText || infoText\n\t\t);\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-labeled-field-view',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value )\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis.labelView,\n\t\t\t\tthis.fieldView,\n\t\t\t\tthis.statusView\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * Creates label view class instance and bind with view.\n\t *\n\t * @private\n\t * @param {String} id Unique id to set as labelView#for attribute.\n\t * @returns {module:ui/label/labelview~LabelView}\n\t */\n\t_createLabelView( id ) {\n\t\tconst labelView = new LabelView( this.locale );\n\n\t\tlabelView.for = id;\n\t\tlabelView.bind( 'text' ).to( this, 'label' );\n\n\t\treturn labelView;\n\t}\n\n\t/**\n\t * Creates the status view instance. It displays {@link #errorText} and {@link #infoText}\n\t * next to the {@link #fieldView}. See {@link #_statusText}.\n\t *\n\t * @private\n\t * @param {String} statusUid Unique id of the status, shared with the {@link #fieldView view's}\n\t * `aria-describedby` attribute.\n\t * @returns {module:ui/view~View}\n\t */\n\t_createStatusView( statusUid ) {\n\t\tconst statusView = new View( this.locale );\n\t\tconst bind = this.bindTemplate;\n\n\t\tstatusView.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-labeled-field-view__status',\n\t\t\t\t\tbind.if( 'errorText', 'ck-labeled-field-view__status_error' ),\n\t\t\t\t\tbind.if( '_statusText', 'ck-hidden', value => !value )\n\t\t\t\t],\n\t\t\t\tid: statusUid,\n\t\t\t\trole: bind.if( 'errorText', 'alert' )\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: bind.to( '_statusText' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn statusView;\n\t}\n\n\t/**\n\t * Focuses the {@link #fieldView}.\n\t */\n\tfocus() {\n\t\tthis.fieldView.focus();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/inputtext/inputtextview\n */\n\nimport View from '../view';\nimport '../../theme/components/inputtext/inputtext.css';\n\n/**\n * The text input view class.\n *\n * @extends module:ui/view~View\n */\nexport default class InputTextView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * The value of the input.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #value\n\t\t */\n\t\tthis.set( 'value' );\n\n\t\t/**\n\t\t * The `id` attribute of the input (i.e. to pair with a `<label>` element).\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #id\n\t\t */\n\t\tthis.set( 'id' );\n\n\t\t/**\n\t\t * The `placeholder` attribute of the input.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #placeholder\n\t\t */\n\t\tthis.set( 'placeholder' );\n\n\t\t/**\n\t\t * Controls whether the input view is in read-only mode.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * Set to `true` when the field has some error. Usually controlled via\n\t\t * {@link module:ui/labeledinput/labeledinputview~LabeledInputView#errorText}.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #hasError\n\t\t */\n\t\tthis.set( 'hasError', false );\n\n\t\t/**\n\t\t * The `id` of the element describing this field, e.g. when it has\n\t\t * some error, it helps screen readers read the error text.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #ariaDescribedById\n\t\t */\n\t\tthis.set( 'ariaDescribedById' );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'input',\n\t\t\tattributes: {\n\t\t\t\ttype: 'text',\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-input',\n\t\t\t\t\t'ck-input-text',\n\t\t\t\t\tbind.if( 'hasError', 'ck-error' )\n\t\t\t\t],\n\t\t\t\tid: bind.to( 'id' ),\n\t\t\t\tplaceholder: bind.to( 'placeholder' ),\n\t\t\t\treadonly: bind.to( 'isReadOnly' ),\n\t\t\t\t'aria-invalid': bind.if( 'hasError', true ),\n\t\t\t\t'aria-describedby': bind.to( 'ariaDescribedById' )\n\t\t\t},\n\t\t\ton: {\n\t\t\t\tinput: bind.to( 'input' )\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * Fired when the user types in the input. Corresponds to the native\n\t\t * DOM `input` event.\n\t\t *\n\t\t * @event input\n\t\t */\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tconst setValue = value => {\n\t\t\tthis.element.value = ( !value && value !== 0 ) ? '' : value;\n\t\t};\n\n\t\tsetValue( this.value );\n\n\t\t// Bind `this.value` to the DOM element's value.\n\t\t// We cannot use `value` DOM attribute because removing it on Edge does not clear the DOM element's value property.\n\t\tthis.on( 'change:value', ( evt, name, value ) => {\n\t\t\tsetValue( value );\n\t\t} );\n\t}\n\n\t/**\n\t * Moves the focus to the input and selects the value.\n\t */\n\tselect() {\n\t\tthis.element.select();\n\t}\n\n\t/**\n\t * Focuses the input.\n\t */\n\tfocus() {\n\t\tthis.element.focus();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/labeledfield/utils\n */\n\nimport InputTextView from '../inputtext/inputtextview';\nimport { createDropdown } from '../dropdown/utils';\n\n/**\n * A helper for creating labeled inputs.\n *\n * It creates an instance of a {@link module:ui/inputtext/inputtextview~InputTextView input text} that is\n * logically related to a {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView labeled view} in DOM.\n *\n * The helper does the following:\n *\n * * It sets input's `id` and `ariaDescribedById` attributes.\n * * It binds input's `isReadOnly` to the labeled view.\n * * It binds input's `hasError` to the labeled view.\n * * It enables a logic that cleans up the error when user starts typing in the input..\n *\n * Usage:\n *\n *\t\tconst labeledInputView = new LabeledFieldView( locale, createLabeledDropdown );\n *\t\tconsole.log( labeledInputView.view ); // An input instance.\n *\n * @param {module:ui/labeledfield/labeledfieldview~LabeledFieldView} labeledFieldView The instance of the labeled field view.\n * @param {String} viewUid An UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#labelView labeled view's label} and the input.\n * @param {String} statusUid An UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#statusView labeled view's status} and the input.\n * @returns {module:ui/inputtext/inputtextview~InputTextView} The input text view instance.\n */\nexport function createLabeledInputText( labeledFieldView, viewUid, statusUid ) {\n\tconst inputView = new InputTextView( labeledFieldView.locale );\n\n\tinputView.set( {\n\t\tid: viewUid,\n\t\tariaDescribedById: statusUid\n\t} );\n\n\tinputView.bind( 'isReadOnly' ).to( labeledFieldView, 'isEnabled', value => !value );\n\tinputView.bind( 'hasError' ).to( labeledFieldView, 'errorText', value => !!value );\n\n\tinputView.on( 'input', () => {\n\t\t// UX: Make the error text disappear and disable the error indicator as the user\n\t\t// starts fixing the errors.\n\t\tlabeledFieldView.errorText = null;\n\t} );\n\n\treturn inputView;\n}\n\n/**\n * A helper for creating labeled dropdowns.\n *\n * It creates an instance of a {@link module:ui/dropdown/dropdownview~DropdownView dropdown} that is\n * logically related to a {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView labeled field view}.\n *\n * The helper does the following:\n *\n * * It sets dropdown's `id` and `ariaDescribedById` attributes.\n * * It binds input's `isEnabled` to the labeled view.\n *\n * Usage:\n *\n *\t\tconst labeledInputView = new LabeledFieldView( locale, createLabeledDropdown );\n *\t\tconsole.log( labeledInputView.view ); // A dropdown instance.\n *\n * @param {module:ui/labeledfield/labeledfieldview~LabeledFieldView} labeledFieldView The instance of the labeled field view.\n * @param {String} viewUid An UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#labelView labeled view label} and the dropdown.\n * @param {String} statusUid An UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#statusView labeled view status} and the dropdown.\n * @returns {module:ui/dropdown/dropdownview~DropdownView} The dropdown view instance.\n */\nexport function createLabeledDropdown( labeledFieldView, viewUid, statusUid ) {\n\tconst dropdownView = createDropdown( labeledFieldView.locale );\n\n\tdropdownView.set( {\n\t\tid: viewUid,\n\t\tariaDescribedById: statusUid\n\t} );\n\n\tdropdownView.bind( 'isEnabled' ).to( labeledFieldView );\n\n\treturn dropdownView;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/bindings/submithandler\n */\n\n/**\n * A handler useful for {@link module:ui/view~View views} working as HTML forms. It intercepts a native DOM\n * `submit` event, prevents the default web browser behavior (navigation and page reload) and\n * fires the `submit` event on a view instead. Such a custom event can be then used by any\n * {@link module:utils/dom/emittermixin~Emitter emitter}, e.g. to serialize the form data.\n *\n *\t\timport submitHandler from '@ckeditor/ckeditor5-ui/src/bindings/submithandler';\n *\n *\t\t// ...\n *\n *\t\tclass AnyFormView extends View {\n *\t\t\tconstructor() {\n *\t\t\t\tsuper();\n *\n *\t\t\t\t// ...\n *\n *\t\t\t\tsubmitHandler( {\n *\t\t\t\t\tview: this\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n *\t\t// ...\n *\n *\t\tconst view = new AnyFormView();\n *\n *\t\t// A sample listener attached by an emitter working with the view.\n *\t\tthis.listenTo( view, 'submit', () => {\n *\t\t\tsaveTheFormData();\n *\t\t\thideTheForm();\n *\t\t} );\n *\n * @param {Object} [options] Configuration options.\n * @param {module:ui/view~View} options.view The view which DOM `submit` events should be handled.\n */\nexport default function submitHandler( { view } ) {\n\tview.listenTo( view.element, 'submit', ( evt, domEvt ) => {\n\t\tdomEvt.preventDefault();\n\t\tview.fire( 'submit' );\n\t}, { useCapture: true } );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/ui/linkformview\n */\n\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport ViewCollection from '@ckeditor/ckeditor5-ui/src/viewcollection';\n\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport SwitchButtonView from '@ckeditor/ckeditor5-ui/src/button/switchbuttonview';\n\nimport LabeledFieldView from '@ckeditor/ckeditor5-ui/src/labeledfield/labeledfieldview';\nimport { createLabeledInputText } from '@ckeditor/ckeditor5-ui/src/labeledfield/utils';\n\nimport submitHandler from '@ckeditor/ckeditor5-ui/src/bindings/submithandler';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '@ckeditor/ckeditor5-ui/src/focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\nimport checkIcon from '@ckeditor/ckeditor5-core/theme/icons/check.svg';\nimport cancelIcon from '@ckeditor/ckeditor5-core/theme/icons/cancel.svg';\nimport '../../theme/linkform.css';\n\n/**\n * The link form view controller class.\n *\n * See {@link module:link/ui/linkformview~LinkFormView}.\n *\n * @extends module:ui/view~View\n */\nexport default class LinkFormView extends View {\n\t/**\n\t * Creates an instance of the {@link module:link/ui/linkformview~LinkFormView} class.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t * @param {module:link/linkcommand~LinkCommand} linkCommand Reference to {@link module:link/linkcommand~LinkCommand}.\n\t */\n\tconstructor( locale, linkCommand ) {\n\t\tsuper( locale );\n\n\t\tconst t = locale.t;\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * The URL input view.\n\t\t *\n\t\t * @member {module:ui/labeledfield/labeledfieldview~LabeledFieldView}\n\t\t */\n\t\tthis.urlInputView = this._createUrlInput();\n\n\t\t/**\n\t\t * The Save button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.saveButtonView = this._createButton( t( 'Save' ), checkIcon, 'ck-button-save' );\n\t\tthis.saveButtonView.type = 'submit';\n\n\t\t/**\n\t\t * The Cancel button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.cancelButtonView = this._createButton( t( 'Cancel' ), cancelIcon, 'ck-button-cancel', 'cancel' );\n\n\t\t/**\n\t\t * A collection of {@link module:ui/button/switchbuttonview~SwitchButtonView},\n\t\t * which corresponds to {@link module:link/linkcommand~LinkCommand#manualDecorators manual decorators}\n\t\t * configured in the editor.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @type {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis._manualDecoratorSwitches = this._createManualDecoratorSwitches( linkCommand );\n\n\t\t/**\n\t\t * A collection of child views in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this._createFormChildren( linkCommand.manualDecorators );\n\n\t\t/**\n\t\t * A collection of views that can be focused in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis._focusables = new ViewCollection();\n\n\t\t/**\n\t\t * Helps cycling over {@link #_focusables} in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this._focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate form fields backwards using the Shift + Tab keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate form fields forwards using the Tab key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\tconst classList = [ 'ck', 'ck-link-form' ];\n\n\t\tif ( linkCommand.manualDecorators.length ) {\n\t\t\tclassList.push( 'ck-link-form_layout-vertical' );\n\t\t}\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'form',\n\n\t\t\tattributes: {\n\t\t\t\tclass: classList,\n\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-link/issues/90\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * Obtains the state of the {@link module:ui/button/switchbuttonview~SwitchButtonView switch buttons} representing\n\t * {@link module:link/linkcommand~LinkCommand#manualDecorators manual link decorators}\n\t * in the {@link module:link/ui/linkformview~LinkFormView}.\n\t *\n\t * @returns {Object.<String,Boolean>} Key-value pairs, where the key is the name of the decorator and the value is\n\t * its state.\n\t */\n\tgetDecoratorSwitchesState() {\n\t\treturn Array.from( this._manualDecoratorSwitches ).reduce( ( accumulator, switchButton ) => {\n\t\t\taccumulator[ switchButton.name ] = switchButton.isOn;\n\t\t\treturn accumulator;\n\t\t}, {} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tsubmitHandler( {\n\t\t\tview: this\n\t\t} );\n\n\t\tconst childViews = [\n\t\t\tthis.urlInputView,\n\t\t\t...this._manualDecoratorSwitches,\n\t\t\tthis.saveButtonView,\n\t\t\tthis.cancelButtonView\n\t\t];\n\n\t\tchildViews.forEach( v => {\n\t\t\t// Register the view as focusable.\n\t\t\tthis._focusables.add( v );\n\n\t\t\t// Register the view in the focus tracker.\n\t\t\tthis.focusTracker.add( v.element );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n\n\t/**\n\t * Focuses the fist {@link #_focusables} in the form.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Creates a labeled input view.\n\t *\n\t * @private\n\t * @returns {module:ui/labeledfield/labeledfieldview~LabeledFieldView} Labeled field view instance.\n\t */\n\t_createUrlInput() {\n\t\tconst t = this.locale.t;\n\n\t\tconst labeledInput = new LabeledFieldView( this.locale, createLabeledInputText );\n\n\t\tlabeledInput.label = t( 'Link URL' );\n\t\tlabeledInput.fieldView.placeholder = 'https://example.com';\n\n\t\treturn labeledInput;\n\t}\n\n\t/**\n\t * Creates a button view.\n\t *\n\t * @private\n\t * @param {String} label The button label.\n\t * @param {String} icon The button icon.\n\t * @param {String} className The additional button CSS class name.\n\t * @param {String} [eventName] An event name that the `ButtonView#execute` event will be delegated to.\n\t * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n\t */\n\t_createButton( label, icon, className, eventName ) {\n\t\tconst button = new ButtonView( this.locale );\n\n\t\tbutton.set( {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ttooltip: true\n\t\t} );\n\n\t\tbutton.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: className\n\t\t\t}\n\t\t} );\n\n\t\tif ( eventName ) {\n\t\t\tbutton.delegate( 'execute' ).to( this, eventName );\n\t\t}\n\n\t\treturn button;\n\t}\n\n\t/**\n\t * Populates {@link module:ui/viewcollection~ViewCollection} of {@link module:ui/button/switchbuttonview~SwitchButtonView}\n\t * made based on {@link module:link/linkcommand~LinkCommand#manualDecorators}.\n\t *\n\t * @private\n\t * @param {module:link/linkcommand~LinkCommand} linkCommand A reference to the link command.\n\t * @returns {module:ui/viewcollection~ViewCollection} of switch buttons.\n\t */\n\t_createManualDecoratorSwitches( linkCommand ) {\n\t\tconst switches = this.createCollection();\n\n\t\tfor ( const manualDecorator of linkCommand.manualDecorators ) {\n\t\t\tconst switchButton = new SwitchButtonView( this.locale );\n\n\t\t\tswitchButton.set( {\n\t\t\t\tname: manualDecorator.id,\n\t\t\t\tlabel: manualDecorator.label,\n\t\t\t\twithText: true\n\t\t\t} );\n\n\t\t\tswitchButton.bind( 'isOn' ).toMany( [ manualDecorator, linkCommand ], 'value', ( decoratorValue, commandValue ) => {\n\t\t\t\treturn commandValue === undefined && decoratorValue === undefined ? manualDecorator.defaultValue : decoratorValue;\n\t\t\t} );\n\n\t\t\tswitchButton.on( 'execute', () => {\n\t\t\t\tmanualDecorator.set( 'value', !switchButton.isOn );\n\t\t\t} );\n\n\t\t\tswitches.add( switchButton );\n\t\t}\n\n\t\treturn switches;\n\t}\n\n\t/**\n\t * Populates the {@link #children} collection of the form.\n\t *\n\t * If {@link module:link/linkcommand~LinkCommand#manualDecorators manual decorators} are configured in the editor, it creates an\n\t * additional `View` wrapping all {@link #_manualDecoratorSwitches} switch buttons corresponding\n\t * to these decorators.\n\t *\n\t * @private\n\t * @param {module:utils/collection~Collection} manualDecorators A reference to\n\t * the collection of manual decorators stored in the link command.\n\t * @returns {module:ui/viewcollection~ViewCollection} The children of link form view.\n\t */\n\t_createFormChildren( manualDecorators ) {\n\t\tconst children = this.createCollection();\n\n\t\tchildren.add( this.urlInputView );\n\n\t\tif ( manualDecorators.length ) {\n\t\t\tconst additionalButtonsView = new View();\n\n\t\t\tadditionalButtonsView.setTemplate( {\n\t\t\t\ttag: 'ul',\n\t\t\t\tchildren: this._manualDecoratorSwitches.map( switchButton => ( {\n\t\t\t\t\ttag: 'li',\n\t\t\t\t\tchildren: [ switchButton ],\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-list__item'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t} ) ),\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: [\n\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t'ck-reset',\n\t\t\t\t\t\t'ck-list'\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t} );\n\t\t\tchildren.add( additionalButtonsView );\n\t\t}\n\n\t\tchildren.add( this.saveButtonView );\n\t\tchildren.add( this.cancelButtonView );\n\n\t\treturn children;\n\t}\n}\n\n/**\n * Fired when the form view is submitted (when one of the children triggered the submit event),\n * for example with a click on {@link #saveButtonView}.\n *\n * @event submit\n */\n\n/**\n * Fired when the form view is canceled, for example with a click on {@link #cancelButtonView}.\n *\n * @event cancel\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/ui/linkactionsview\n */\n\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport ViewCollection from '@ckeditor/ckeditor5-ui/src/viewcollection';\n\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '@ckeditor/ckeditor5-ui/src/focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\nimport { ensureSafeUrl } from '../utils';\n\nimport unlinkIcon from '../../theme/icons/unlink.svg';\nimport pencilIcon from '@ckeditor/ckeditor5-core/theme/icons/pencil.svg';\nimport '../../theme/linkactions.css';\n\n/**\n * The link actions view class. This view displays the link preview, allows\n * unlinking or editing the link.\n *\n * @extends module:ui/view~View\n */\nexport default class LinkActionsView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst t = locale.t;\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the actions.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * The href preview view.\n\t\t *\n\t\t * @member {module:ui/view~View}\n\t\t */\n\t\tthis.previewButtonView = this._createPreviewButton();\n\n\t\t/**\n\t\t * The unlink button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.unlinkButtonView = this._createButton( t( 'Unlink' ), unlinkIcon, 'unlink' );\n\n\t\t/**\n\t\t * The edit link button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.editButtonView = this._createButton( t( 'Edit link' ), pencilIcon, 'edit' );\n\n\t\t/**\n\t\t * The value of the \"href\" attribute of the link to use in the {@link #previewButtonView}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String}\n\t\t */\n\t\tthis.set( 'href' );\n\n\t\t/**\n\t\t * A collection of views that can be focused in the view.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis._focusables = new ViewCollection();\n\n\t\t/**\n\t\t * Helps cycling over {@link #_focusables} in the view.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this._focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate fields backwards using the Shift + Tab keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate fields forwards using the Tab key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-link-actions'\n\t\t\t\t],\n\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-link/issues/90\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tthis.previewButtonView,\n\t\t\t\tthis.editButtonView,\n\t\t\t\tthis.unlinkButtonView\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tconst childViews = [\n\t\t\tthis.previewButtonView,\n\t\t\tthis.editButtonView,\n\t\t\tthis.unlinkButtonView\n\t\t];\n\n\t\tchildViews.forEach( v => {\n\t\t\t// Register the view as focusable.\n\t\t\tthis._focusables.add( v );\n\n\t\t\t// Register the view in the focus tracker.\n\t\t\tthis.focusTracker.add( v.element );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n\n\t/**\n\t * Focuses the fist {@link #_focusables} in the actions.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Creates a button view.\n\t *\n\t * @private\n\t * @param {String} label The button label.\n\t * @param {String} icon The button icon.\n\t * @param {String} [eventName] An event name that the `ButtonView#execute` event will be delegated to.\n\t * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n\t */\n\t_createButton( label, icon, eventName ) {\n\t\tconst button = new ButtonView( this.locale );\n\n\t\tbutton.set( {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ttooltip: true\n\t\t} );\n\n\t\tbutton.delegate( 'execute' ).to( this, eventName );\n\n\t\treturn button;\n\t}\n\n\t/**\n\t * Creates a link href preview button.\n\t *\n\t * @private\n\t * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n\t */\n\t_createPreviewButton() {\n\t\tconst button = new ButtonView( this.locale );\n\t\tconst bind = this.bindTemplate;\n\t\tconst t = this.t;\n\n\t\tbutton.set( {\n\t\t\twithText: true,\n\t\t\ttooltip: t( 'Open link in new tab' )\n\t\t} );\n\n\t\tbutton.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-link-actions__preview'\n\t\t\t\t],\n\t\t\t\thref: bind.to( 'href', href => href && ensureSafeUrl( href ) ),\n\t\t\t\ttarget: '_blank',\n\t\t\t\trel: 'noopener noreferrer'\n\t\t\t}\n\t\t} );\n\n\t\tbutton.bind( 'label' ).to( this, 'href', href => {\n\t\t\treturn href || t( 'This link has no URL' );\n\t\t} );\n\n\t\tbutton.bind( 'isEnabled' ).to( this, 'href', href => !!href );\n\n\t\tbutton.template.tag = 'a';\n\t\tbutton.template.eventListeners = {};\n\n\t\treturn button;\n\t}\n}\n\n/**\n * Fired when the {@link #editButtonView} is clicked.\n *\n * @event edit\n */\n\n/**\n * Fired when the {@link #unlinkButtonView} is clicked.\n *\n * @event unlink\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/linkui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ClickObserver from '@ckeditor/ckeditor5-engine/src/view/observer/clickobserver';\nimport { isLinkElement } from './utils';\nimport ContextualBalloon from '@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon';\n\nimport clickOutsideHandler from '@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler';\n\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport LinkFormView from './ui/linkformview';\nimport LinkActionsView from './ui/linkactionsview';\n\nimport linkIcon from '../theme/icons/link.svg';\n\nconst linkKeystroke = 'Ctrl+K';\n\n/**\n * The link UI plugin. It introduces the `'link'` and `'unlink'` buttons and support for the <kbd>Ctrl+K</kbd> keystroke.\n *\n * It uses the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon plugin}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class LinkUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ContextualBalloon ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'LinkUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\teditor.editing.view.addObserver( ClickObserver );\n\n\t\t/**\n\t\t * The actions view displayed inside of the balloon.\n\t\t *\n\t\t * @member {module:link/ui/linkactionsview~LinkActionsView}\n\t\t */\n\t\tthis.actionsView = this._createActionsView();\n\n\t\t/**\n\t\t * The form view displayed inside the balloon.\n\t\t *\n\t\t * @member {module:link/ui/linkformview~LinkFormView}\n\t\t */\n\t\tthis.formView = this._createFormView();\n\n\t\t/**\n\t\t * The contextual balloon plugin instance.\n\t\t *\n\t\t * @private\n\t\t * @member {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\n\t\t */\n\t\tthis._balloon = editor.plugins.get( ContextualBalloon );\n\n\t\t// Create toolbar buttons.\n\t\tthis._createToolbarLinkButton();\n\n\t\t// Attach lifecycle actions to the the balloon.\n\t\tthis._enableUserBalloonInteractions();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\t// Destroy created UI components as they are not automatically destroyed (see ckeditor5#1341).\n\t\tthis.formView.destroy();\n\t}\n\n\t/**\n\t * Creates the {@link module:link/ui/linkactionsview~LinkActionsView} instance.\n\t *\n\t * @private\n\t * @returns {module:link/ui/linkactionsview~LinkActionsView} The link actions view instance.\n\t */\n\t_createActionsView() {\n\t\tconst editor = this.editor;\n\t\tconst actionsView = new LinkActionsView( editor.locale );\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\t\tconst unlinkCommand = editor.commands.get( 'unlink' );\n\n\t\tactionsView.bind( 'href' ).to( linkCommand, 'value' );\n\t\tactionsView.editButtonView.bind( 'isEnabled' ).to( linkCommand );\n\t\tactionsView.unlinkButtonView.bind( 'isEnabled' ).to( unlinkCommand );\n\n\t\t// Execute unlink command after clicking on the \"Edit\" button.\n\t\tthis.listenTo( actionsView, 'edit', () => {\n\t\t\tthis._addFormView();\n\t\t} );\n\n\t\t// Execute unlink command after clicking on the \"Unlink\" button.\n\t\tthis.listenTo( actionsView, 'unlink', () => {\n\t\t\teditor.execute( 'unlink' );\n\t\t\tthis._hideUI();\n\t\t} );\n\n\t\t// Close the panel on esc key press when the **actions have focus**.\n\t\tactionsView.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tthis._hideUI();\n\t\t\tcancel();\n\t\t} );\n\n\t\t// Open the form view on Ctrl+K when the **actions have focus**..\n\t\tactionsView.keystrokes.set( linkKeystroke, ( data, cancel ) => {\n\t\t\tthis._addFormView();\n\t\t\tcancel();\n\t\t} );\n\n\t\treturn actionsView;\n\t}\n\n\t/**\n\t * Creates the {@link module:link/ui/linkformview~LinkFormView} instance.\n\t *\n\t * @private\n\t * @returns {module:link/ui/linkformview~LinkFormView} The link form view instance.\n\t */\n\t_createFormView() {\n\t\tconst editor = this.editor;\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\n\t\tconst formView = new LinkFormView( editor.locale, linkCommand );\n\n\t\tformView.urlInputView.fieldView.bind( 'value' ).to( linkCommand, 'value' );\n\n\t\t// Form elements should be read-only when corresponding commands are disabled.\n\t\tformView.urlInputView.bind( 'isReadOnly' ).to( linkCommand, 'isEnabled', value => !value );\n\t\tformView.saveButtonView.bind( 'isEnabled' ).to( linkCommand );\n\n\t\t// Execute link command after clicking the \"Save\" button.\n\t\tthis.listenTo( formView, 'submit', () => {\n\t\t\teditor.execute( 'link', formView.urlInputView.fieldView.element.value, formView.getDecoratorSwitchesState() );\n\t\t\tthis._closeFormView();\n\t\t} );\n\n\t\t// Hide the panel after clicking the \"Cancel\" button.\n\t\tthis.listenTo( formView, 'cancel', () => {\n\t\t\tthis._closeFormView();\n\t\t} );\n\n\t\t// Close the panel on esc key press when the **form has focus**.\n\t\tformView.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tthis._closeFormView();\n\t\t\tcancel();\n\t\t} );\n\n\t\treturn formView;\n\t}\n\n\t/**\n\t * Creates a toolbar Link button. Clicking this button will show\n\t * a {@link #_balloon} attached to the selection.\n\t *\n\t * @private\n\t */\n\t_createToolbarLinkButton() {\n\t\tconst editor = this.editor;\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\t\tconst t = editor.t;\n\n\t\t// Handle the `Ctrl+K` keystroke and show the panel.\n\t\teditor.keystrokes.set( linkKeystroke, ( keyEvtData, cancel ) => {\n\t\t\t// Prevent focusing the search bar in FF, Chrome and Edge. See https://github.com/ckeditor/ckeditor5/issues/4811.\n\t\t\tcancel();\n\n\t\t\tthis._showUI( true );\n\t\t} );\n\n\t\teditor.ui.componentFactory.add( 'link', locale => {\n\t\t\tconst button = new ButtonView( locale );\n\n\t\t\tbutton.isEnabled = true;\n\t\t\tbutton.label = t( 'Link' );\n\t\t\tbutton.icon = linkIcon;\n\t\t\tbutton.keystroke = linkKeystroke;\n\t\t\tbutton.tooltip = true;\n\t\t\tbutton.isToggleable = true;\n\n\t\t\t// Bind button to the command.\n\t\t\tbutton.bind( 'isEnabled' ).to( linkCommand, 'isEnabled' );\n\t\t\tbutton.bind( 'isOn' ).to( linkCommand, 'value', value => !!value );\n\n\t\t\t// Show the panel on button click.\n\t\t\tthis.listenTo( button, 'execute', () => this._showUI( true ) );\n\n\t\t\treturn button;\n\t\t} );\n\t}\n\n\t/**\n\t * Attaches actions that control whether the balloon panel containing the\n\t * {@link #formView} is visible or not.\n\t *\n\t * @private\n\t */\n\t_enableUserBalloonInteractions() {\n\t\tconst viewDocument = this.editor.editing.view.document;\n\n\t\t// Handle click on view document and show panel when selection is placed inside the link element.\n\t\t// Keep panel open until selection will be inside the same link element.\n\t\tthis.listenTo( viewDocument, 'click', () => {\n\t\t\tconst parentLink = this._getSelectedLinkElement();\n\n\t\t\tif ( parentLink ) {\n\t\t\t\t// Then show panel but keep focus inside editor editable.\n\t\t\t\tthis._showUI();\n\t\t\t}\n\t\t} );\n\n\t\t// Focus the form if the balloon is visible and the Tab key has been pressed.\n\t\tthis.editor.keystrokes.set( 'Tab', ( data, cancel ) => {\n\t\t\tif ( this._areActionsVisible && !this.actionsView.focusTracker.isFocused ) {\n\t\t\t\tthis.actionsView.focus();\n\t\t\t\tcancel();\n\t\t\t}\n\t\t}, {\n\t\t\t// Use the high priority because the link UI navigation is more important\n\t\t\t// than other feature's actions, e.g. list indentation.\n\t\t\t// https://github.com/ckeditor/ckeditor5-link/issues/146\n\t\t\tpriority: 'high'\n\t\t} );\n\n\t\t// Close the panel on the Esc key press when the editable has focus and the balloon is visible.\n\t\tthis.editor.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tif ( this._isUIVisible ) {\n\t\t\t\tthis._hideUI();\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Close on click outside of balloon panel element.\n\t\tclickOutsideHandler( {\n\t\t\temitter: this.formView,\n\t\t\tactivator: () => this._isUIInPanel,\n\t\t\tcontextElements: [ this._balloon.view.element ],\n\t\t\tcallback: () => this._hideUI()\n\t\t} );\n\t}\n\n\t/**\n\t * Adds the {@link #actionsView} to the {@link #_balloon}.\n\t *\n\t * @protected\n\t */\n\t_addActionsView() {\n\t\tif ( this._areActionsInPanel ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._balloon.add( {\n\t\t\tview: this.actionsView,\n\t\t\tposition: this._getBalloonPositionData()\n\t\t} );\n\t}\n\n\t/**\n\t * Adds the {@link #formView} to the {@link #_balloon}.\n\t *\n\t * @protected\n\t */\n\t_addFormView() {\n\t\tif ( this._isFormInPanel ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this.editor;\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\n\t\tthis._balloon.add( {\n\t\t\tview: this.formView,\n\t\t\tposition: this._getBalloonPositionData()\n\t\t} );\n\n\t\t// Select input when form view is currently visible.\n\t\tif ( this._balloon.visibleView === this.formView ) {\n\t\t\tthis.formView.urlInputView.fieldView.select();\n\t\t}\n\n\t\t// Make sure that each time the panel shows up, the URL field remains in sync with the value of\n\t\t// the command. If the user typed in the input, then canceled the balloon (`urlInputView.fieldView#value` stays\n\t\t// unaltered) and re-opened it without changing the value of the link command (e.g. because they\n\t\t// clicked the same link), they would see the old value instead of the actual value of the command.\n\t\t// https://github.com/ckeditor/ckeditor5-link/issues/78\n\t\t// https://github.com/ckeditor/ckeditor5-link/issues/123\n\t\tthis.formView.urlInputView.fieldView.element.value = linkCommand.value || '';\n\t}\n\n\t/**\n\t * Closes the form view. Decides whether the balloon should be hidden completely or if the action view should be shown. This is\n\t * decided upon the link command value (which has a value if the document selection is in the link).\n\t *\n\t * Additionally, if any {@link module:link/link~LinkConfig#decorators} are defined in the editor configuration, the state of\n\t * switch buttons responsible for manual decorator handling is restored.\n\t *\n\t * @private\n\t */\n\t_closeFormView() {\n\t\tconst linkCommand = this.editor.commands.get( 'link' );\n\n\t\t// Restore manual decorator states to represent the current model state. This case is important to reset the switch buttons\n\t\t// when the user cancels the editing form.\n\t\tlinkCommand.restoreManualDecoratorStates();\n\n\t\tif ( linkCommand.value !== undefined ) {\n\t\t\tthis._removeFormView();\n\t\t} else {\n\t\t\tthis._hideUI();\n\t\t}\n\t}\n\n\t/**\n\t * Removes the {@link #formView} from the {@link #_balloon}.\n\t *\n\t * @protected\n\t */\n\t_removeFormView() {\n\t\tif ( this._isFormInPanel ) {\n\t\t\t// Blur the input element before removing it from DOM to prevent issues in some browsers.\n\t\t\t// See https://github.com/ckeditor/ckeditor5/issues/1501.\n\t\t\tthis.formView.saveButtonView.focus();\n\n\t\t\tthis._balloon.remove( this.formView );\n\n\t\t\t// Because the form has an input which has focus, the focus must be brought back\n\t\t\t// to the editor. Otherwise, it would be lost.\n\t\t\tthis.editor.editing.view.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Shows the correct UI type. It is either {@link #formView} or {@link #actionsView}.\n\t *\n\t * @param {Boolean} forceVisible\n\t * @private\n\t */\n\t_showUI( forceVisible = false ) {\n\t\t// When there's no link under the selection, go straight to the editing UI.\n\t\tif ( !this._getSelectedLinkElement() ) {\n\t\t\tthis._addActionsView();\n\n\t\t\t// Be sure panel with link is visible.\n\t\t\tif ( forceVisible ) {\n\t\t\t\tthis._balloon.showStack( 'main' );\n\t\t\t}\n\n\t\t\tthis._addFormView();\n\t\t}\n\t\t// If there's a link under the selection...\n\t\telse {\n\t\t\t// Go to the editing UI if actions are already visible.\n\t\t\tif ( this._areActionsVisible ) {\n\t\t\t\tthis._addFormView();\n\t\t\t}\n\t\t\t// Otherwise display just the actions UI.\n\t\t\telse {\n\t\t\t\tthis._addActionsView();\n\t\t\t}\n\n\t\t\t// Be sure panel with link is visible.\n\t\t\tif ( forceVisible ) {\n\t\t\t\tthis._balloon.showStack( 'main' );\n\t\t\t}\n\t\t}\n\n\t\t// Begin responding to ui#update once the UI is added.\n\t\tthis._startUpdatingUI();\n\t}\n\n\t/**\n\t * Removes the {@link #formView} from the {@link #_balloon}.\n\t *\n\t * See {@link #_addFormView}, {@link #_addActionsView}.\n\t *\n\t * @protected\n\t */\n\t_hideUI() {\n\t\tif ( !this._isUIInPanel ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this.editor;\n\n\t\tthis.stopListening( editor.ui, 'update' );\n\t\tthis.stopListening( this._balloon, 'change:visibleView' );\n\n\t\t// Make sure the focus always gets back to the editable _before_ removing the focused form view.\n\t\t// Doing otherwise causes issues in some browsers. See https://github.com/ckeditor/ckeditor5-link/issues/193.\n\t\teditor.editing.view.focus();\n\n\t\t// Remove form first because it's on top of the stack.\n\t\tthis._removeFormView();\n\n\t\t// Then remove the actions view because it's beneath the form.\n\t\tthis._balloon.remove( this.actionsView );\n\t}\n\n\t/**\n\t * Makes the UI react to the {@link module:core/editor/editorui~EditorUI#event:update} event to\n\t * reposition itself when the editor UI should be refreshed.\n\t *\n\t * See: {@link #_hideUI} to learn when the UI stops reacting to the `update` event.\n\t *\n\t * @protected\n\t */\n\t_startUpdatingUI() {\n\t\tconst editor = this.editor;\n\t\tconst viewDocument = editor.editing.view.document;\n\n\t\tlet prevSelectedLink = this._getSelectedLinkElement();\n\t\tlet prevSelectionParent = getSelectionParent();\n\n\t\tconst update = () => {\n\t\t\tconst selectedLink = this._getSelectedLinkElement();\n\t\t\tconst selectionParent = getSelectionParent();\n\n\t\t\t// Hide the panel if:\n\t\t\t//\n\t\t\t// * the selection went out of the EXISTING link element. E.g. user moved the caret out\n\t\t\t//   of the link,\n\t\t\t// * the selection went to a different parent when creating a NEW link. E.g. someone\n\t\t\t//   else modified the document.\n\t\t\t// * the selection has expanded (e.g. displaying link actions then pressing SHIFT+Right arrow).\n\t\t\t//\n\t\t\t// Note: #_getSelectedLinkElement will return a link for a non-collapsed selection only\n\t\t\t// when fully selected.\n\t\t\tif ( ( prevSelectedLink && !selectedLink ) ||\n\t\t\t\t( !prevSelectedLink && selectionParent !== prevSelectionParent ) ) {\n\t\t\t\tthis._hideUI();\n\t\t\t}\n\t\t\t// Update the position of the panel when:\n\t\t\t//  * link panel is in the visible stack\n\t\t\t//  * the selection remains in the original link element,\n\t\t\t//  * there was no link element in the first place, i.e. creating a new link\n\t\t\telse if ( this._isUIVisible ) {\n\t\t\t\t// If still in a link element, simply update the position of the balloon.\n\t\t\t\t// If there was no link (e.g. inserting one), the balloon must be moved\n\t\t\t\t// to the new position in the editing view (a new native DOM range).\n\t\t\t\tthis._balloon.updatePosition( this._getBalloonPositionData() );\n\t\t\t}\n\n\t\t\tprevSelectedLink = selectedLink;\n\t\t\tprevSelectionParent = selectionParent;\n\t\t};\n\n\t\tfunction getSelectionParent() {\n\t\t\treturn viewDocument.selection.focus.getAncestors()\n\t\t\t\t.reverse()\n\t\t\t\t.find( node => node.is( 'element' ) );\n\t\t}\n\n\t\tthis.listenTo( editor.ui, 'update', update );\n\t\tthis.listenTo( this._balloon, 'change:visibleView', update );\n\t}\n\n\t/**\n\t * Returns `true` when {@link #formView} is in the {@link #_balloon}.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n\tget _isFormInPanel() {\n\t\treturn this._balloon.hasView( this.formView );\n\t}\n\n\t/**\n\t * Returns `true` when {@link #actionsView} is in the {@link #_balloon}.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n\tget _areActionsInPanel() {\n\t\treturn this._balloon.hasView( this.actionsView );\n\t}\n\n\t/**\n\t * Returns `true` when {@link #actionsView} is in the {@link #_balloon} and it is\n\t * currently visible.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n\tget _areActionsVisible() {\n\t\treturn this._balloon.visibleView === this.actionsView;\n\t}\n\n\t/**\n\t * Returns `true` when {@link #actionsView} or {@link #formView} is in the {@link #_balloon}.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n\tget _isUIInPanel() {\n\t\treturn this._isFormInPanel || this._areActionsInPanel;\n\t}\n\n\t/**\n\t * Returns `true` when {@link #actionsView} or {@link #formView} is in the {@link #_balloon} and it is\n\t * currently visible.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n\tget _isUIVisible() {\n\t\tconst visibleView = this._balloon.visibleView;\n\n\t\treturn visibleView == this.formView || this._areActionsVisible;\n\t}\n\n\t/**\n\t * Returns positioning options for the {@link #_balloon}. They control the way the balloon is attached\n\t * to the target element or selection.\n\t *\n\t * If the selection is collapsed and inside a link element, the panel will be attached to the\n\t * entire link element. Otherwise, it will be attached to the selection.\n\t *\n\t * @private\n\t * @returns {module:utils/dom/position~Options}\n\t */\n\t_getBalloonPositionData() {\n\t\tconst view = this.editor.editing.view;\n\t\tconst viewDocument = view.document;\n\t\tconst targetLink = this._getSelectedLinkElement();\n\n\t\tconst target = targetLink ?\n\t\t\t// When selection is inside link element, then attach panel to this element.\n\t\t\tview.domConverter.mapViewToDom( targetLink ) :\n\t\t\t// Otherwise attach panel to the selection.\n\t\t\tview.domConverter.viewRangeToDom( viewDocument.selection.getFirstRange() );\n\n\t\treturn { target };\n\t}\n\n\t/**\n\t * Returns the link {@link module:engine/view/attributeelement~AttributeElement} under\n\t * the {@link module:engine/view/document~Document editing view's} selection or `null`\n\t * if there is none.\n\t *\n\t * **Note**: For a non–collapsed selection, the link element is only returned when **fully**\n\t * selected and the **only** element within the selection boundaries.\n\t *\n\t * @private\n\t * @returns {module:engine/view/attributeelement~AttributeElement|null}\n\t */\n\t_getSelectedLinkElement() {\n\t\tconst view = this.editor.editing.view;\n\t\tconst selection = view.document.selection;\n\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn findLinkElementAncestor( selection.getFirstPosition() );\n\t\t} else {\n\t\t\t// The range for fully selected link is usually anchored in adjacent text nodes.\n\t\t\t// Trim it to get closer to the actual link element.\n\t\t\tconst range = selection.getFirstRange().getTrimmed();\n\t\t\tconst startLink = findLinkElementAncestor( range.start );\n\t\t\tconst endLink = findLinkElementAncestor( range.end );\n\n\t\t\tif ( !startLink || startLink != endLink ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Check if the link element is fully selected.\n\t\t\tif ( view.createRangeIn( startLink ).getTrimmed().isEqual( range ) ) {\n\t\t\t\treturn startLink;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Returns a link element if there's one among the ancestors of the provided `Position`.\n//\n// @private\n// @param {module:engine/view/position~Position} View position to analyze.\n// @returns {module:engine/view/attributeelement~AttributeElement|null} Link element at the position or null.\nfunction findLinkElementAncestor( position ) {\n\treturn position.getAncestors().find( ancestor => isLinkElement( ancestor ) );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/link\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport LinkEditing from './linkediting';\nimport LinkUI from './linkui';\n\n/**\n * The link plugin.\n *\n * This is a \"glue\" plugin that loads the {@link module:link/linkediting~LinkEditing link editing feature}\n * and {@link module:link/linkui~LinkUI link UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Link extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ LinkEditing, LinkUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Link';\n\t}\n}\n\n/**\n * The configuration of the {@link module:link/link~Link} feature.\n *\n * Read more in {@link module:link/link~LinkConfig}.\n *\n * @member {module:link/link~LinkConfig} module:core/editor/editorconfig~EditorConfig#link\n */\n\n/**\n * The configuration of the {@link module:link/link~Link link feature}.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\tlink:  ... // Link feature configuration.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n * @interface LinkConfig\n */\n\n/**\n * When set to `true`, the `target=\"blank\"` and `rel=\"noopener noreferrer\"` attributes are automatically added to all external links\n * in the editor. \"External links\" are all links in the editor content starting with `http`, `https`, or `//`.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\tlink: {\n *\t\t\t\t\taddTargetToExternalLinks: true\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * Internally, this option activates a predefined {@link module:link/link~LinkConfig#decorators automatic link decorator}\n * that extends all external links with the `target` and `rel` attributes.\n *\n * **Note**: To control the `target` and `rel` attributes of specific links in the edited content, a dedicated\n * {@link module:link/link~LinkDecoratorManualDefinition manual} decorator must be defined in the\n * {@link module:link/link~LinkConfig#decorators `config.link.decorators`} array. In such scenario,\n * the `config.link.addTargetToExternalLinks` option should remain `undefined` or `false` to not interfere with the manual decorator.\n *\n * It is possible to add other {@link module:link/link~LinkDecoratorAutomaticDefinition automatic}\n * or {@link module:link/link~LinkDecoratorManualDefinition manual} link decorators when this option is active.\n *\n * More information about decorators can be found in the {@link module:link/link~LinkConfig#decorators decorators configuration}\n * reference.\n *\n * @default false\n * @member {Boolean} module:link/link~LinkConfig#addTargetToExternalLinks\n */\n\n/**\n * Decorators provide an easy way to configure and manage additional link attributes in the editor content. There are\n * two types of link decorators:\n *\n * * {@link module:link/link~LinkDecoratorAutomaticDefinition Automatic} &ndash; They match links against pre–defined rules and\n * manage their attributes based on the results.\n * * {@link module:link/link~LinkDecoratorManualDefinition Manual} &ndash; They allow users to control link attributes individually,\n *  using the editor UI.\n *\n * Link decorators are defined as objects with key-value pairs, where the key is the name provided for a given decorator and the\n * value is the decorator definition.\n *\n * The name of the decorator also corresponds to the {@glink framework/guides/architecture/editing-engine#text-attributes text attribute}\n * in the model. For instance, the `isExternal` decorator below is represented as a `linkIsExternal` attribute in the model.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\tlink: {\n *\t\t\t\t\tdecorators: {\n *\t\t\t\t\t\tisExternal: {\n *\t\t\t\t\t\t\tmode: 'automatic',\n *\t\t\t\t\t\t\tcallback: url => url.startsWith( 'http://' ),\n *\t\t\t\t\t\t\tattributes: {\n *\t\t\t\t\t\t\t\ttarget: '_blank',\n *\t\t\t\t\t\t\t\trel: 'noopener noreferrer'\n *\t\t\t\t\t\t\t}\n *\t\t\t\t\t\t},\n *\t\t\t\t\t\tisDownloadable: {\n *\t\t\t\t\t\t\tmode: 'manual',\n *\t\t\t\t\t\t\tlabel: 'Downloadable',\n *\t\t\t\t\t\t\tattributes: {\n *\t\t\t\t\t\t\t\tdownload: 'file.png',\n *\t\t\t\t\t\t\t}\n *\t\t\t\t\t\t},\n *\t\t\t\t\t\t// ...\n *\t\t\t\t\t}\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * To learn more about the configuration syntax, check out the {@link module:link/link~LinkDecoratorAutomaticDefinition automatic}\n * and {@link module:link/link~LinkDecoratorManualDefinition manual} decorator option reference.\n *\n * **Warning:** Currently, link decorators work independently of one another and no conflict resolution mechanism exists.\n * For example, configuring the `target` attribute using both an automatic and a manual decorator at the same time could end up with\n * quirky results. The same applies if multiple manual or automatic decorators were defined for the same attribute.\n *\n * **Note**: Since the `target` attribute management for external links is a common use case, there is a predefined automatic decorator\n * dedicated for that purpose which can be enabled by turning a single option on. Check out the\n * {@link module:link/link~LinkConfig#addTargetToExternalLinks `config.link.addTargetToExternalLinks`}\n * configuration description to learn more.\n *\n * See also the {@glink features/link#custom-link-attributes-decorators link feature guide} for more information.\n *\n * @member {Object.<String, module:link/link~LinkDecoratorDefinition>} module:link/link~LinkConfig#decorators\n */\n\n/**\n * A link decorator definition. Two types implement this defition:\n *\n * * {@link module:link/link~LinkDecoratorManualDefinition}\n * * {@link module:link/link~LinkDecoratorAutomaticDefinition}\n *\n * Refer to their document for more information about available options or to the\n * {@glink features/link#custom-link-attributes-decorators link feature guide} for general information.\n *\n * @interface LinkDecoratorDefinition\n */\n\n/**\n * Link decorator type.\n *\n * Check out the {@glink features/link#custom-link-attributes-decorators link feature guide} for more information.\n *\n * @member {'manual'|'automatic'} module:link/link~LinkDecoratorDefinition#mode\n */\n\n/**\n * Describes an automatic {@link module:link/link~LinkConfig#decorators link decorator}. This decorator type matches\n * all links in the editor content against a function that decides whether the link should receive a pre–defined set of attributes.\n *\n * It takes an object with key-value pairs of attributes and a callback function that must return a Boolean value based on the link's\n * `href` (URL). When the callback returns `true`, attributes are applied to the link.\n *\n * For example, to add the `target=\"_blank\"` attribute to all links in the editor starting with `http://`, the\n * configuration could look like this:\n *\n *\t\t{\n *\t\t\tmode: 'automatic',\n *\t\t\tcallback: url => url.startsWith( 'http://' ),\n *\t\t\tattributes: {\n *\t\t\t\ttarget: '_blank'\n *\t\t\t}\n *\t\t}\n *\n * **Note**: Since the `target` attribute management for external links is a common use case, there is a predefined automatic decorator\n * dedicated for that purpose that can be enabled by turning a single option on. Check out the\n * {@link module:link/link~LinkConfig#addTargetToExternalLinks `config.link.addTargetToExternalLinks`}\n * configuration description to learn more.\n *\n * @typedef {Object} module:link/link~LinkDecoratorAutomaticDefinition\n * @property {'automatic'} mode Link decorator type. It is `'automatic'` for all automatic decorators.\n * @property {Function} callback Takes a `url` as a parameter and returns `true` if the `attributes` should be applied to the link.\n * @property {Object} attributes Key-value pairs used as link attributes added to the output during the\n * {@glink framework/guides/architecture/editing-engine#conversion downcasting}.\n * Attributes should follow the {@link module:engine/view/elementdefinition~ElementDefinition} syntax.\n */\n\n/**\n * Describes a manual {@link module:link/link~LinkConfig#decorators link decorator}. This decorator type is represented in\n * the link feature's {@link module:link/linkui user interface} as a switch that the user can use to control the presence\n * of a predefined set of attributes.\n *\n * For instance, to allow the users to manually control the presence of the `target=\"_blank\"` and\n * `rel=\"noopener noreferrer\"` attributes on specific links, the decorator could look as follows:\n *\n *\t\t{\n *\t\t\tmode: 'manual',\n *\t\t\tlabel: 'Open in a new tab',\n *\t\t\tdefaultValue: true,\n *\t\t\tattributes: {\n *\t\t\t\ttarget: '_blank',\n *\t\t\t\trel: 'noopener noreferrer'\n *\t\t\t}\n *\t\t}\n *\n * @typedef {Object} module:link/link~LinkDecoratorManualDefinition\n * @property {'manual'} mode Link decorator type. It is `'manual'` for all manual decorators.\n * @property {String} label The label of the UI button that the user can use to control the presence of link attributes.\n * @property {Object} attributes Key-value pairs used as link attributes added to the output during the\n * {@glink framework/guides/architecture/editing-engine#conversion downcasting}.\n * Attributes should follow the {@link module:engine/view/elementdefinition~ElementDefinition} syntax.\n * @property {Boolean} [defaultValue] Controls whether the decorator is \"on\" by default.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/first\n */\n\n/**\n * Returns first item of the given `iterable`.\n *\n * @param {Iterable.<*>} iterable\n * @returns {*}\n */\nexport default function first( iterable ) {\n\tconst iteratorItem = iterable.next();\n\n\tif ( iteratorItem.done ) {\n\t\treturn null;\n\t}\n\n\treturn iteratorItem.value;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paragraph/paragraphcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The paragraph command.\n *\n * @extends module:core/command~Command\n */\nexport default class ParagraphCommand extends Command {\n\t/**\n\t * The value of the command. Indicates whether the selection start is placed in a paragraph.\n\t *\n\t * @readonly\n\t * @observable\n\t * @member {Boolean} #value\n\t */\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\t\tconst block = first( document.selection.getSelectedBlocks() );\n\n\t\tthis.value = !!block && block.is( 'paragraph' );\n\t\tthis.isEnabled = !!block && checkCanBecomeParagraph( block, model.schema );\n\t}\n\n\t/**\n\t * Executes the command. All the blocks (see {@link module:engine/model/schema~Schema}) in the selection\n\t * will be turned to paragraphs.\n\t *\n\t * @fires execute\n\t * @param {Object} [options] Options for the executed command.\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} [options.selection]\n\t * The selection that the command should be applied to.\n\t * By default, if not provided, the command is applied to the {@link module:engine/model/document~Document#selection}.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\n\t\tmodel.change( writer => {\n\t\t\tconst blocks = ( options.selection || document.selection ).getSelectedBlocks();\n\n\t\t\tfor ( const block of blocks ) {\n\t\t\t\tif ( !block.is( 'paragraph' ) && checkCanBecomeParagraph( block, model.schema ) ) {\n\t\t\t\t\twriter.rename( block, 'paragraph' );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n\n// Checks whether the given block can be replaced by a paragraph.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\nfunction checkCanBecomeParagraph( block, schema ) {\n\treturn schema.checkChild( block.parent, 'paragraph' ) && !schema.isObject( block );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paragraph/insertparagraphcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\n/**\n * The insert paragraph command. It inserts a new paragraph at a specific\n * {@link module:engine/model/position~Position document position}.\n *\n *\t\t// Insert a new paragraph before an element in the document.\n *\t\teditor.execute( 'insertParagraph', {\n *\t\t\tposition: editor.model.createPositionBefore( element )\n *\t\t} );\n *\n * **Note**: This command moves the selection to the inserted paragraph.\n *\n * @extends module:core/command~Command\n */\nexport default class InsertParagraphCommand extends Command {\n\t/**\n\t * Executes the command.\n\t *\n\t * @param {Object} options Options for the executed command.\n\t * @param {module:engine/model/position~Position} options.position The model position at which\n\t * the new paragraph will be inserted.\n\t * @fires execute\n\t */\n\texecute( options ) {\n\t\tconst model = this.editor.model;\n\n\t\tif ( !model.schema.checkChild( options.position, 'paragraph' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tmodel.change( writer => {\n\t\t\tconst paragraph = writer.createElement( 'paragraph' );\n\n\t\t\tmodel.insertContent( paragraph, options.position );\n\n\t\t\twriter.setSelection( paragraph, 'in' );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paragraph/paragraph\n */\n\nimport ParagraphCommand from './paragraphcommand';\nimport InsertParagraphCommand from './insertparagraphcommand';\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * The paragraph feature for the editor.\n *\n * It introduces the `<paragraph>` element in the model which renders as a `<p>` element in the DOM and data.\n *\n * It also brings two editors commands:\n *\n * * The {@link module:paragraph/paragraphcommand~ParagraphCommand `'paragraph'`} command that converts all\n * blocks in the model selection into paragraphs.\n * * The {@link module:paragraph/insertparagraphcommand~InsertParagraphCommand `'insertParagraph'`} command\n * that inserts a new paragraph at a specified location in the model.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Paragraph extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Paragraph';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst data = editor.data;\n\n\t\teditor.commands.add( 'paragraph', new ParagraphCommand( editor ) );\n\t\teditor.commands.add( 'insertParagraph', new InsertParagraphCommand( editor ) );\n\n\t\t// Schema.\n\t\tmodel.schema.register( 'paragraph', { inheritAllFrom: '$block' } );\n\n\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'p' } );\n\n\t\t// Content autoparagraphing. --------------------------------------------------\n\n\t\t// Handles element which has not been converted by any plugin and checks if it would be converted if\n\t\t// we wrap it in a paragraph or change it to a paragraph.\n\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t\t\tmodel: ( viewElement, modelWriter ) => {\n\t\t\t\tif ( !Paragraph.paragraphLikeElements.has( viewElement.name ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t// Do not auto-paragraph empty elements.\n\t\t\t\tif ( viewElement.isEmpty ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn modelWriter.createElement( 'paragraph' );\n\t\t\t},\n\t\t\tconverterPriority: 'low'\n\t\t} );\n\n\t\tdata.upcastDispatcher.on( 'element', ( evt, data, conversionApi ) => {\n\t\t\t// Do not try auto-paragraphing if the element was already converted.\n\t\t\tif ( !conversionApi.consumable.test( data.viewItem, { name: data.viewItem.name } ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If the element is not paragraph-like try wrapping it in a paragraph.\n\t\t\tif ( isParagraphable( data.viewItem, data.modelCursor, conversionApi.schema ) ) {\n\t\t\t\tObject.assign( data, wrapInParagraph( data.viewItem, data.modelCursor, conversionApi ) );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\t// Handles not converted text nodes and checks if would be converted if we wraps then by a paragraph.\n\t\tdata.upcastDispatcher.on( 'text', ( evt, data, conversionApi ) => {\n\t\t\t// When node is already converted then do nothing.\n\t\t\tif ( data.modelRange ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isParagraphable( data.viewItem, data.modelCursor, conversionApi.schema ) ) {\n\t\t\t\tObject.assign( data, wrapInParagraph( data.viewItem, data.modelCursor, conversionApi ) );\n\t\t\t}\n\t\t}, { priority: 'lowest' } );\n\n\t\t// Empty roots autoparagraphing. -----------------------------------------------\n\n\t\t// Post-fixer which takes care of adding empty paragraph elements to empty roots.\n\t\t// Besides fixing content on #changesDone we also need to handle editor.data#ready event because\n\t\t// if initial data is empty or setData() wasn't even called there will be no #change fired.\n\t\tmodel.document.registerPostFixer( writer => this._autoparagraphEmptyRoots( writer ) );\n\n\t\teditor.data.on( 'ready', () => {\n\t\t\tmodel.enqueueChange( 'transparent', writer => this._autoparagraphEmptyRoots( writer ) );\n\t\t}, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * Fixes all empty roots.\n\t *\n\t * @private\n\t * @returns {Boolean} `true` if any change has been applied, `false` otherwise.\n\t */\n\t_autoparagraphEmptyRoots( writer ) {\n\t\tconst model = this.editor.model;\n\n\t\tfor ( const rootName of model.document.getRootNames() ) {\n\t\t\tconst root = model.document.getRoot( rootName );\n\n\t\t\tif ( root.isEmpty && root.rootName != '$graveyard' ) {\n\t\t\t\t// If paragraph element is allowed in the root, create paragraph element.\n\t\t\t\tif ( model.schema.checkChild( root, 'paragraph' ) ) {\n\t\t\t\t\twriter.insertElement( 'paragraph', root );\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A list of element names which should be treated by the autoparagraphing algorithms as\n * paragraph-like. This means that e.g. the following content:\n *\n *\t\t<h1>Foo</h1>\n *\t\t<table>\n *\t\t\t<tr>\n *\t\t\t\t<td>X</td>\n *\t\t\t\t<td>\n *\t\t\t\t\t<ul>\n *\t\t\t\t\t\t<li>Y</li>\n *\t\t\t\t\t\t<li>Z</li>\n *\t\t\t\t\t</ul>\n *\t\t\t\t</td>\n *\t\t\t</tr>\n *\t\t</table>\n *\n * contains five paragraph-like elements: `<h1>`, two `<td>`s and two `<li>`s.\n * Hence, if none of the features is going to convert those elements the above content will be automatically handled\n * by the paragraph feature and converted to:\n *\n *\t\t<p>Foo</p>\n *\t\t<p>X</p>\n *\t\t<p>Y</p>\n *\t\t<p>Z</p>\n *\n * Note: The `<td>` containing two `<li>` elements was ignored as the innermost paragraph-like elements\n * have a priority upon conversion.\n *\n * @member {Set.<String>} module:paragraph/paragraph~Paragraph.paragraphLikeElements\n */\nParagraph.paragraphLikeElements = new Set( [\n\t'blockquote',\n\t'dd',\n\t'div',\n\t'dt',\n\t'h1',\n\t'h2',\n\t'h3',\n\t'h4',\n\t'h5',\n\t'h6',\n\t'li',\n\t'p',\n\t'td'\n] );\n\nfunction wrapInParagraph( input, position, conversionApi ) {\n\tconst paragraph = conversionApi.writer.createElement( 'paragraph' );\n\n\tconversionApi.writer.insert( paragraph, position );\n\treturn conversionApi.convertItem( input, conversionApi.writer.createPositionAt( paragraph, 0 ) );\n}\n\nfunction isParagraphable( node, position, schema ) {\n\tconst context = schema.createContext( position );\n\n\t// When paragraph is allowed in this context...\n\tif ( !schema.checkChild( context, 'paragraph' ) ) {\n\t\treturn false;\n\t}\n\n\t// And a node would be allowed in this paragraph...\n\tif ( !schema.checkChild( context.push( 'paragraph' ), node ) ) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module alignment/utils\n */\n\n/**\n * The list of supported alignment options:\n *\n * * `'left'`,\n * * `'right'`,\n * * `'center'`,\n * * `'justify'`\n */\nexport const supportedOptions = [ 'left', 'right', 'center', 'justify' ];\n\n/**\n * Checks whether the passed option is supported by {@link module:alignment/alignmentediting~AlignmentEditing}.\n *\n * @param {String} option The option value to check.\n * @returns {Boolean}\n */\nexport function isSupported( option ) {\n\treturn supportedOptions.includes( option );\n}\n\n/**\n * Checks whether alignment is the default one considering the direction\n * of the editor content.\n *\n * @param {String} alignment The name of the alignment to check.\n * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n * @returns {Boolean}\n */\nexport function isDefault( alignment, locale ) {\n\t// Right now only LTR is supported so the 'left' value is always the default one.\n\n\tif ( locale.contentLanguageDirection == 'rtl' ) {\n\t\treturn alignment === 'right';\n\t} else {\n\t\treturn alignment === 'left';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module alignment/alignmentcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\nimport { isDefault } from './utils';\n\nconst ALIGNMENT = 'alignment';\n\n/**\n * The alignment command plugin.\n *\n * @extends module:core/command~Command\n */\nexport default class AlignmentCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst editor = this.editor;\n\t\tconst locale = editor.locale;\n\t\tconst firstBlock = first( this.editor.model.document.selection.getSelectedBlocks() );\n\n\t\t// As first check whether to enable or disable the command as the value will always be false if the command cannot be enabled.\n\t\tthis.isEnabled = !!firstBlock && this._canBeAligned( firstBlock );\n\n\t\t/**\n\t\t * A value of the current block's alignment.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {String} #value\n\t\t */\n\t\tif ( this.isEnabled && firstBlock.hasAttribute( 'alignment' ) ) {\n\t\t\tthis.value = firstBlock.getAttribute( 'alignment' );\n\t\t} else {\n\t\t\tthis.value = locale.contentLanguageDirection === 'rtl' ? 'right' : 'left';\n\t\t}\n\t}\n\n\t/**\n\t * Executes the command. Applies the alignment `value` to the selected blocks.\n\t * If no `value` is passed, the `value` is the default one or it is equal to the currently selected block's alignment attribute,\n\t * the command will remove the attribute from the selected blocks.\n\t *\n\t * @param {Object} [options] Options for the executed command.\n\t * @param {String} [options.value] The value to apply.\n\t * @fires execute\n\t */\n\texecute( options = {} ) {\n\t\tconst editor = this.editor;\n\t\tconst locale = editor.locale;\n\t\tconst model = editor.model;\n\t\tconst doc = model.document;\n\n\t\tconst value = options.value;\n\n\t\tmodel.change( writer => {\n\t\t\t// Get only those blocks from selected that can have alignment set\n\t\t\tconst blocks = Array.from( doc.selection.getSelectedBlocks() ).filter( block => this._canBeAligned( block ) );\n\t\t\tconst currentAlignment = blocks[ 0 ].getAttribute( 'alignment' );\n\n\t\t\t// Remove alignment attribute if current alignment is:\n\t\t\t// - default (should not be stored in model as it will bloat model data)\n\t\t\t// - equal to currently set\n\t\t\t// - or no value is passed - denotes default alignment.\n\t\t\tconst removeAlignment = isDefault( value, locale ) || currentAlignment === value || !value;\n\n\t\t\tif ( removeAlignment ) {\n\t\t\t\tremoveAlignmentFromSelection( blocks, writer );\n\t\t\t} else {\n\t\t\t\tsetAlignmentOnSelection( blocks, writer, value );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Checks whether a block can have alignment set.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} block The block to be checked.\n\t * @returns {Boolean}\n\t */\n\t_canBeAligned( block ) {\n\t\treturn this.editor.model.schema.checkAttribute( block, ALIGNMENT );\n\t}\n}\n\n// Removes the alignment attribute from blocks.\n// @private\nfunction removeAlignmentFromSelection( blocks, writer ) {\n\tfor ( const block of blocks ) {\n\t\twriter.removeAttribute( ALIGNMENT, block );\n\t}\n}\n\n// Sets the alignment attribute on blocks.\n// @private\nfunction setAlignmentOnSelection( blocks, writer, alignment ) {\n\tfor ( const block of blocks ) {\n\t\twriter.setAttribute( ALIGNMENT, alignment, block );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module alignment/alignmentediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport AlignmentCommand from './alignmentcommand';\nimport { isDefault, isSupported, supportedOptions } from './utils';\n\n/**\n * The alignment editing feature. It introduces the {@link module:alignment/alignmentcommand~AlignmentCommand command} and adds\n * the `alignment` attribute for block elements in the {@link module:engine/model/model~Model model}.\n * @extends module:core/plugin~Plugin\n */\nexport default class AlignmentEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'AlignmentEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'alignment', {\n\t\t\toptions: [ ...supportedOptions ]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst locale = editor.locale;\n\t\tconst schema = editor.model.schema;\n\n\t\t// Filter out unsupported options.\n\t\tconst enabledOptions = editor.config.get( 'alignment.options' ).filter( isSupported );\n\n\t\t// Allow alignment attribute on all blocks.\n\t\tschema.extend( '$block', { allowAttributes: 'alignment' } );\n\t\teditor.model.schema.setAttributeProperties( 'alignment', { isFormatting: true } );\n\n\t\tconst definition = _buildDefinition( enabledOptions.filter( option => !isDefault( option, locale ) ) );\n\n\t\teditor.conversion.attributeToAttribute( definition );\n\n\t\teditor.commands.add( 'alignment', new AlignmentCommand( editor ) );\n\t}\n}\n\n// Utility function responsible for building converter definition.\n// @private\nfunction _buildDefinition( options ) {\n\tconst definition = {\n\t\tmodel: {\n\t\t\tkey: 'alignment',\n\t\t\tvalues: options.slice()\n\t\t},\n\t\tview: {}\n\t};\n\n\tfor ( const option of options ) {\n\t\tdefinition.view[ option ] = {\n\t\t\tkey: 'style',\n\t\t\tvalue: {\n\t\t\t\t'text-align': option\n\t\t\t}\n\t\t};\n\t}\n\n\treturn definition;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module alignment/alignmentui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport { createDropdown, addToolbarToDropdown } from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\n\nimport { isSupported } from './utils';\n\nimport alignLeftIcon from '@ckeditor/ckeditor5-core/theme/icons/align-left.svg';\nimport alignRightIcon from '@ckeditor/ckeditor5-core/theme/icons/align-right.svg';\nimport alignCenterIcon from '@ckeditor/ckeditor5-core/theme/icons/align-center.svg';\nimport alignJustifyIcon from '@ckeditor/ckeditor5-core/theme/icons/align-justify.svg';\n\nconst icons = new Map( [\n\t[ 'left', alignLeftIcon ],\n\t[ 'right', alignRightIcon ],\n\t[ 'center', alignCenterIcon ],\n\t[ 'justify', alignJustifyIcon ]\n] );\n\n/**\n * The default alignment UI plugin.\n *\n * It introduces the `'alignment:left'`, `'alignment:right'`, `'alignment:center'` and `'alignment:justify'` buttons\n * and the `'alignment'` dropdown.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class AlignmentUI extends Plugin {\n\t/**\n\t * Returns the localized option titles provided by the plugin.\n\t *\n\t * The following localized titles corresponding with\n\t * {@link module:alignment/alignment~AlignmentConfig#options} are available:\n\t *\n\t * * `'left'`,\n\t * * `'right'`,\n\t * * `'center'`,\n\t * * `'justify'`.\n\t *\n\t * @readonly\n\t * @type {Object.<String,String>}\n\t */\n\tget localizedOptionTitles() {\n\t\tconst t = this.editor.t;\n\n\t\treturn {\n\t\t\t'left': t( 'Align left' ),\n\t\t\t'right': t( 'Align right' ),\n\t\t\t'center': t( 'Align center' ),\n\t\t\t'justify': t( 'Justify' )\n\t\t};\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'AlignmentUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst componentFactory = editor.ui.componentFactory;\n\t\tconst t = editor.t;\n\t\tconst options = editor.config.get( 'alignment.options' );\n\n\t\toptions\n\t\t\t.filter( isSupported )\n\t\t\t.forEach( option => this._addButton( option ) );\n\n\t\tcomponentFactory.add( 'alignment', locale => {\n\t\t\tconst dropdownView = createDropdown( locale );\n\n\t\t\t// Add existing alignment buttons to dropdown's toolbar.\n\t\t\tconst buttons = options.map( option => componentFactory.create( `alignment:${ option }` ) );\n\t\t\taddToolbarToDropdown( dropdownView, buttons );\n\n\t\t\t// Configure dropdown properties an behavior.\n\t\t\tdropdownView.buttonView.set( {\n\t\t\t\tlabel: t( 'Text alignment' ),\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tdropdownView.toolbarView.isVertical = true;\n\t\t\tdropdownView.toolbarView.ariaLabel = t( 'Text alignment toolbar' );\n\n\t\t\tdropdownView.extendTemplate( {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: 'ck-alignment-dropdown'\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// The default icon depends on the direction of the content.\n\t\t\tconst defaultIcon = locale.contentLanguageDirection === 'rtl' ? alignRightIcon : alignLeftIcon;\n\n\t\t\t// Change icon to reflect current selection's alignment.\n\t\t\tdropdownView.buttonView.bind( 'icon' ).toMany( buttons, 'isOn', ( ...areActive ) => {\n\t\t\t\t// Get the index of an active button.\n\t\t\t\tconst index = areActive.findIndex( value => value );\n\n\t\t\t\t// If none of the commands is active, display either defaultIcon or the first button's icon.\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\treturn defaultIcon;\n\t\t\t\t}\n\n\t\t\t\t// Return active button's icon.\n\t\t\t\treturn buttons[ index ].icon;\n\t\t\t} );\n\n\t\t\t// Enable button if any of the buttons is enabled.\n\t\t\tdropdownView.bind( 'isEnabled' ).toMany( buttons, 'isEnabled', ( ...areEnabled ) => areEnabled.some( isEnabled => isEnabled ) );\n\n\t\t\treturn dropdownView;\n\t\t} );\n\t}\n\n\t/**\n\t * Helper method for initializing the button and linking it with an appropriate command.\n\t *\n\t * @private\n\t * @param {String} option The name of the alignment option for which the button is added.\n\t */\n\t_addButton( option ) {\n\t\tconst editor = this.editor;\n\n\t\teditor.ui.componentFactory.add( `alignment:${ option }`, locale => {\n\t\t\tconst command = editor.commands.get( 'alignment' );\n\t\t\tconst buttonView = new ButtonView( locale );\n\n\t\t\tbuttonView.set( {\n\t\t\t\tlabel: this.localizedOptionTitles[ option ],\n\t\t\t\ticon: icons.get( option ),\n\t\t\t\ttooltip: true,\n\t\t\t\tisToggleable: true\n\t\t\t} );\n\n\t\t\t// Bind button model to command.\n\t\t\tbuttonView.bind( 'isEnabled' ).to( command );\n\t\t\tbuttonView.bind( 'isOn' ).to( command, 'value', value => value === option );\n\n\t\t\t// Execute command.\n\t\t\tthis.listenTo( buttonView, 'execute', () => {\n\t\t\t\teditor.execute( 'alignment', { value: option } );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn buttonView;\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module alignment/alignment\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport AlignmentEditing from './alignmentediting';\nimport AlignmentUI from './alignmentui';\n\n/**\n * The text alignment plugin.\n *\n * For a detailed overview, check the {@glink features/text-alignment Text alignment feature documentation}\n * and the {@glink api/alignment package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:alignment/alignmentediting~AlignmentEditing} and\n * {@link module:alignment/alignmentui~AlignmentUI} plugins.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Alignment extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ AlignmentEditing, AlignmentUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Alignment';\n\t}\n}\n\n/**\n * The configuration of the {@link module:alignment/alignment~Alignment alignment feature}.\n *\n * Read more in {@link module:alignment/alignment~AlignmentConfig}.\n *\n * @member {module:alignment/alignment~AlignmentConfig} module:core/editor/editorconfig~EditorConfig#alignment\n */\n\n/**\n * The configuration of the {@link module:alignment/alignment~Alignment alignment feature}.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\talignment: {\n *\t\t\t\t\toptions: [ 'left', 'right' ]\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor configuration options}.\n *\n * @interface AlignmentConfig\n */\n\n/**\n * Available alignment options.\n *\n * The available options are: `'left'`, `'right'`, `'center'` and `'justify'`. Other values are ignored.\n *\n * **Note:** It is recommended to always use `'left'` or `'right'` as these are default values which the user should\n * normally be able to choose depending on the\n * {@glink features/ui-language#setting-the-language-of-the-content language of the editor content}.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\talignment: {\n *\t\t\t\t\toptions: [ 'left', 'right' ]\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See the demo of {@glink features/text-alignment#configuring-alignment-options custom alignment options}.\n *\n * @member {Array.<String>} module:alignment/alignment~AlignmentConfig#options\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/headingcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The heading command. It is used by the {@link module:heading/heading~Heading heading feature} to apply headings.\n *\n * @extends module:core/command~Command\n */\nexport default class HeadingCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor Editor instance.\n\t * @param {Array.<String>} modelElements Names of the element which this command can apply in the model.\n\t */\n\tconstructor( editor, modelElements ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * If the selection starts in a heading (which {@link #modelElements is supported by this command})\n\t\t * the value is set to the name of that heading model element.\n\t\t * It is  set to `false` otherwise.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean|String} #value\n\t\t */\n\n\t\t/**\n\t\t * Set of defined model's elements names that this command support.\n\t\t * See {@link module:heading/heading~HeadingOption}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<String>}\n\t\t */\n\t\tthis.modelElements = modelElements;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst block = first( this.editor.model.document.selection.getSelectedBlocks() );\n\n\t\tthis.value = !!block && this.modelElements.includes( block.name ) && block.name;\n\t\tthis.isEnabled = !!block && this.modelElements.some( heading => checkCanBecomeHeading( block, heading, this.editor.model.schema ) );\n\t}\n\n\t/**\n\t * Executes the command. Applies the heading to the selected blocks or, if the first selected\n\t * block is a heading already, turns selected headings (of this level only) to paragraphs.\n\t *\n\t * @param {Object} options\n\t * @param {String} options.value Name of the element which this command will apply in the model.\n\t * @fires execute\n\t */\n\texecute( options ) {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\n\t\tconst modelElement = options.value;\n\n\t\tmodel.change( writer => {\n\t\t\tconst blocks = Array.from( document.selection.getSelectedBlocks() )\n\t\t\t\t.filter( block => {\n\t\t\t\t\treturn checkCanBecomeHeading( block, modelElement, model.schema );\n\t\t\t\t} );\n\n\t\t\tfor ( const block of blocks ) {\n\t\t\t\tif ( !block.is( modelElement ) ) {\n\t\t\t\t\twriter.rename( block, modelElement );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n\n// Checks whether the given block can be replaced by a specific heading.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:heading/headingcommand~HeadingCommand#modelElement} heading Command element name in the model.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\nfunction checkCanBecomeHeading( block, heading, schema ) {\n\treturn schema.checkChild( block.parent, heading ) && !schema.isObject( block );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/headingediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\nimport HeadingCommand from './headingcommand';\n\nimport priorities from '@ckeditor/ckeditor5-utils/src/priorities';\n\nconst defaultModelElement = 'paragraph';\n\n/**\n * The headings engine feature. It handles switching between block formats &ndash; headings and paragraph.\n * This class represents the engine part of the heading feature. See also {@link module:heading/heading~Heading}.\n * It introduces `heading1`-`headingN` commands which allow to convert paragraphs into headings.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class HeadingEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'HeadingEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'heading', {\n\t\t\toptions: [\n\t\t\t\t{ model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\n\t\t\t\t{ model: 'heading1', view: 'h2', title: 'Heading 1', class: 'ck-heading_heading1' },\n\t\t\t\t{ model: 'heading2', view: 'h3', title: 'Heading 2', class: 'ck-heading_heading2' },\n\t\t\t\t{ model: 'heading3', view: 'h4', title: 'Heading 3', class: 'ck-heading_heading3' }\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Paragraph ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst options = editor.config.get( 'heading.options' );\n\n\t\tconst modelElements = [];\n\n\t\tfor ( const option of options ) {\n\t\t\t// Skip paragraph - it is defined in required Paragraph feature.\n\t\t\tif ( option.model !== defaultModelElement ) {\n\t\t\t\t// Schema.\n\t\t\t\teditor.model.schema.register( option.model, {\n\t\t\t\t\tinheritAllFrom: '$block'\n\t\t\t\t} );\n\n\t\t\t\teditor.conversion.elementToElement( option );\n\n\t\t\t\tmodelElements.push( option.model );\n\t\t\t}\n\t\t}\n\n\t\tthis._addDefaultH1Conversion( editor );\n\n\t\t// Register the heading command for this option.\n\t\teditor.commands.add( 'heading', new HeadingCommand( editor, modelElements ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\t// If the enter command is added to the editor, alter its behavior.\n\t\t// Enter at the end of a heading element should create a paragraph.\n\t\tconst editor = this.editor;\n\t\tconst enterCommand = editor.commands.get( 'enter' );\n\t\tconst options = editor.config.get( 'heading.options' );\n\n\t\tif ( enterCommand ) {\n\t\t\tthis.listenTo( enterCommand, 'afterExecute', ( evt, data ) => {\n\t\t\t\tconst positionParent = editor.model.document.selection.getFirstPosition().parent;\n\t\t\t\tconst isHeading = options.some( option => positionParent.is( option.model ) );\n\n\t\t\t\tif ( isHeading && !positionParent.is( defaultModelElement ) && positionParent.childCount === 0 ) {\n\t\t\t\t\tdata.writer.rename( positionParent, defaultModelElement );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Adds default conversion for `h1` -> `heading1` with a low priority.\n\t *\n\t * @private\n\t * @param {module:core/editor/editor~Editor} editor Editor instance on which to add the `h1` conversion.\n\t */\n\t_addDefaultH1Conversion( editor ) {\n\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t\t\tmodel: 'heading1',\n\t\t\tview: 'h1',\n\t\t\t// With a `low` priority, `paragraph` plugin autoparagraphing mechanism is executed. Make sure\n\t\t\t// this listener is called before it. If not, `h1` will be transformed into a paragraph.\n\t\t\tconverterPriority: priorities.get( 'low' ) + 1\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/model\n */\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport { extend } from 'lodash-es';\n\n/**\n * The base MVC model class.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Model {\n\t/**\n\t * Creates a new Model instance.\n\t *\n\t * @param {Object} [attributes] The model state attributes to be defined during the instance creation.\n\t * @param {Object} [properties] The (out of state) properties to be appended to the instance during creation.\n\t */\n\tconstructor( attributes, properties ) {\n\t\t// Extend this instance with the additional (out of state) properties.\n\t\tif ( properties ) {\n\t\t\textend( this, properties );\n\t\t}\n\n\t\t// Initialize the attributes.\n\t\tif ( attributes ) {\n\t\t\tthis.set( attributes );\n\t\t}\n\t}\n}\n\nmix( Model, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/utils\n */\n\n/**\n * Returns heading options as defined in `config.heading.options` but processed to consider\n * the editor localization, i.e. to display {@link module:heading/heading~HeadingOption}\n * in the correct language.\n *\n * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\n * when the user configuration is defined because the editor does not exist yet.\n *\n * @param {module:core/editor/editor~Editor} editor\n * @returns {Array.<module:heading/heading~HeadingOption>}.\n */\nexport function getLocalizedOptions( editor ) {\n\tconst t = editor.t;\n\tconst localizedTitles = {\n\t\tParagraph: t( 'Paragraph' ),\n\t\t'Heading 1': t( 'Heading 1' ),\n\t\t'Heading 2': t( 'Heading 2' ),\n\t\t'Heading 3': t( 'Heading 3' ),\n\t\t'Heading 4': t( 'Heading 4' ),\n\t\t'Heading 5': t( 'Heading 5' ),\n\t\t'Heading 6': t( 'Heading 6' )\n\t};\n\n\treturn editor.config.get( 'heading.options' ).map( option => {\n\t\tconst title = localizedTitles[ option.title ];\n\n\t\tif ( title && title != option.title ) {\n\t\t\toption.title = title;\n\t\t}\n\n\t\treturn option;\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/headingui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Model from '@ckeditor/ckeditor5-ui/src/model';\n\nimport { createDropdown, addListToDropdown } from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\nimport { getLocalizedOptions } from './utils';\n\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\n\nimport '../theme/heading.css';\n\n/**\n * The headings UI feature. It introduces the `headings` dropdown.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class HeadingUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst options = getLocalizedOptions( editor );\n\t\tconst defaultTitle = t( 'Choose heading' );\n\t\tconst dropdownTooltip = t( 'Heading' );\n\n\t\t// Register UI component.\n\t\teditor.ui.componentFactory.add( 'heading', locale => {\n\t\t\tconst titles = {};\n\t\t\tconst itemDefinitions = new Collection();\n\n\t\t\tconst headingCommand = editor.commands.get( 'heading' );\n\t\t\tconst paragraphCommand = editor.commands.get( 'paragraph' );\n\n\t\t\tconst commands = [ headingCommand ];\n\n\t\t\tfor ( const option of options ) {\n\t\t\t\tconst def = {\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: new Model( {\n\t\t\t\t\t\tlabel: option.title,\n\t\t\t\t\t\tclass: option.class,\n\t\t\t\t\t\twithText: true\n\t\t\t\t\t} )\n\t\t\t\t};\n\n\t\t\t\tif ( option.model === 'paragraph' ) {\n\t\t\t\t\tdef.model.bind( 'isOn' ).to( paragraphCommand, 'value' );\n\t\t\t\t\tdef.model.set( 'commandName', 'paragraph' );\n\t\t\t\t\tcommands.push( paragraphCommand );\n\t\t\t\t} else {\n\t\t\t\t\tdef.model.bind( 'isOn' ).to( headingCommand, 'value', value => value === option.model );\n\t\t\t\t\tdef.model.set( {\n\t\t\t\t\t\tcommandName: 'heading',\n\t\t\t\t\t\tcommandValue: option.model\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// Add the option to the collection.\n\t\t\t\titemDefinitions.add( def );\n\n\t\t\t\ttitles[ option.model ] = option.title;\n\t\t\t}\n\n\t\t\tconst dropdownView = createDropdown( locale );\n\t\t\taddListToDropdown( dropdownView, itemDefinitions );\n\n\t\t\tdropdownView.buttonView.set( {\n\t\t\t\tisOn: false,\n\t\t\t\twithText: true,\n\t\t\t\ttooltip: dropdownTooltip\n\t\t\t} );\n\n\t\t\tdropdownView.extendTemplate( {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: [\n\t\t\t\t\t\t'ck-heading-dropdown'\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tdropdownView.bind( 'isEnabled' ).toMany( commands, 'isEnabled', ( ...areEnabled ) => {\n\t\t\t\treturn areEnabled.some( isEnabled => isEnabled );\n\t\t\t} );\n\n\t\t\tdropdownView.buttonView.bind( 'label' ).to( headingCommand, 'value', paragraphCommand, 'value', ( value, para ) => {\n\t\t\t\tconst whichModel = value || para && 'paragraph';\n\t\t\t\t// If none of the commands is active, display default title.\n\t\t\t\treturn titles[ whichModel ] ? titles[ whichModel ] : defaultTitle;\n\t\t\t} );\n\n\t\t\t// Execute command when an item from the dropdown is selected.\n\t\t\tthis.listenTo( dropdownView, 'execute', evt => {\n\t\t\t\teditor.execute( evt.source.commandName, evt.source.commandValue ? { value: evt.source.commandValue } : undefined );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn dropdownView;\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/heading\n */\n\nimport HeadingEditing from './headingediting';\nimport HeadingUI from './headingui';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport '../theme/heading.css';\n\n/**\n * The headings feature.\n *\n * For a detailed overview, check the {@glink features/headings Headings feature documentation}\n * and the {@glink api/heading package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:heading/headingediting~HeadingEditing heading editing feature}\n * and {@link module:heading/headingui~HeadingUI heading UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Heading extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ HeadingEditing, HeadingUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Heading';\n\t}\n}\n\n/**\n * The configuration of the heading feature. Introduced by the {@link module:heading/headingediting~HeadingEditing} feature.\n *\n * Read more in {@link module:heading/heading~HeadingConfig}.\n *\n * @member {module:heading/heading~HeadingConfig} module:core/editor/editorconfig~EditorConfig#heading\n */\n\n/**\n * The configuration of the heading feature.\n * The option is used by the {@link module:heading/headingediting~HeadingEditing} feature.\n *\n *\t\tClassicEditor\n *\t\t\t.create( {\n * \t\t\t\theading: ... // Heading feature config.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface HeadingConfig\n */\n\n/**\n * The available heading options.\n *\n * The default value is:\n *\n *\t\tconst headingConfig = {\n *\t\t\toptions: [\n *\t\t\t\t{ model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\n *\t\t\t\t{ model: 'heading1', view: 'h2', title: 'Heading 1', class: 'ck-heading_heading1' },\n *\t\t\t\t{ model: 'heading2', view: 'h3', title: 'Heading 2', class: 'ck-heading_heading2' },\n *\t\t\t\t{ model: 'heading3', view: 'h4', title: 'Heading 3', class: 'ck-heading_heading3' }\n *\t\t\t]\n *\t\t};\n *\n * It defines 3 levels of headings. In the editor model they will use `heading1`, `heading2`, and `heading3` elements.\n * Their respective view elements (so the elements output by the editor) will be: `h2`, `h3`, and `h4`. This means that\n * if you choose \"Heading 1\" in the headings dropdown the editor will turn the current block to `<heading1>` in the model\n * which will result in rendering (and outputting to data) the `<h2>` element.\n *\n * The `title` and `class` properties will be used by the `headings` dropdown to render available options.\n * Usually, the first option in the headings dropdown is the \"Paragraph\" option, hence it's also defined on the list.\n * However, you don't need to define its view representation because it's handled by\n * the {@link module:paragraph/paragraph~Paragraph} feature (which is required by\n * the {@link module:heading/headingediting~HeadingEditing} feature).\n *\n * You can **read more** about configuring heading levels and **see more examples** in\n * the {@glink features/headings Headings} guide.\n *\n * Note: In the model you should always start from `heading1`, regardless of how the headings are represented in the view.\n * That's assumption is used by features like {@link module:autoformat/autoformat~Autoformat} to know which element\n * they should use when applying the first level heading.\n *\n * The defined headings are also available as values passed to the `'heading'` command under their model names.\n * For example, the below code will apply `<heading1>` to the current selection:\n *\n *\t\teditor.execute( 'heading', { value: 'heading1' } );\n *\n * @member {Array.<module:heading/heading~HeadingOption>} module:heading/heading~HeadingConfig#options\n */\n\n/**\n * Heading option descriptor.\n *\n * @typedef {Object} module:heading/heading~HeadingOption\n * @property {String} model Name of the model element to convert.\n * @property {module:engine/view/elementdefinition~ElementDefinition} view Definition of a view element to convert from/to.\n * @property {String} title The user-readable title of the option.\n * @property {String} class The class which will be added to the dropdown item representing this option.\n * @property {String} [icon] Icon used by {@link module:heading/headingbuttonsui~HeadingButtonsUI}. It can be omitted when using\n * the default configuration.\n * @extends module:engine/conversion/conversion~ConverterDefinition\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\n/**\n * The base font command.\n *\n * @extends module:core/command~Command\n */\nexport default class FontCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor Editor instance.\n\t * @param {String} attributeKey The name of a model attribute on which this command operates.\n\t */\n\tconstructor( editor, attributeKey ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * When set, it reflects the {@link #attributeKey} value of the selection.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {String} module:font/fontcommand~FontCommand#value\n\t\t */\n\n\t\t/**\n\t\t * A model attribute on which this command operates.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:font/fontcommand~FontCommand#attributeKey\n\t\t */\n\t\tthis.attributeKey = attributeKey;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tthis.value = doc.selection.getAttribute( this.attributeKey );\n\t\tthis.isEnabled = model.schema.checkAttributeInSelection( doc.selection, this.attributeKey );\n\t}\n\n\t/**\n\t * Executes the command. Applies the `value` of the {@link #attributeKey} to the selection.\n\t * If no `value` is passed, it removes the attribute from the selection.\n\t *\n\t * @protected\n\t * @param {Object} [options] Options for the executed command.\n\t * @param {String} [options.value] The value to apply.\n\t * @fires execute\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\t\tconst selection = document.selection;\n\n\t\tconst value = options.value;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tif ( value ) {\n\t\t\t\t\twriter.setSelectionAttribute( this.attributeKey, value );\n\t\t\t\t} else {\n\t\t\t\t\twriter.removeSelectionAttribute( this.attributeKey );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst ranges = model.schema.getValidRanges( selection.getRanges(), this.attributeKey );\n\n\t\t\t\tfor ( const range of ranges ) {\n\t\t\t\t\tif ( value ) {\n\t\t\t\t\t\twriter.setAttribute( this.attributeKey, value, range );\n\t\t\t\t\t} else {\n\t\t\t\t\t\twriter.removeAttribute( this.attributeKey, range );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/colorgrid/colortile\n */\n\nimport ButtonView from '../button/buttonview';\nimport checkIcon from '../../theme/icons/color-tile-check.svg';\n\n/**\n * This class represents a single color tile in the {@link module:ui/colorgrid/colorgrid~ColorGridView}.\n *\n * @extends module:ui/button/buttonview~ButtonView\n */\nexport default class ColorTileView extends ButtonView {\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * String representing a color shown as tile's background.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.set( 'color' );\n\n\t\t/**\n\t\t * A flag that toggles a special CSS class responsible for displaying\n\t\t * a border around the button.\n\t\t *\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.set( 'hasBorder' );\n\n\t\tthis.icon = checkIcon;\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tstyle: {\n\t\t\t\t\tbackgroundColor: bind.to( 'color' )\n\t\t\t\t},\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-color-grid__tile',\n\t\t\t\t\tbind.if( 'hasBorder', 'ck-color-table__color-tile_bordered' )\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.iconView.fillColor = 'hsl(0, 0%, 100%)';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/colorgrid/colorgrid\n */\n\nimport View from '../view';\nimport ColorTileView from './colortileview';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport '../../theme/components/colorgrid/colorgrid.css';\n\n/**\n * A grid of {@link module:ui/colorgrid/colortile~ColorTileView color tiles}.\n *\n * @extends module:ui/view~View\n */\nexport default class ColorGridView extends View {\n\t/**\n\t * Creates an instance of a color grid containing {@link module:ui/colorgrid/colortile~ColorTileView tiles}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t * @param {Object} options Component configuration\n\t * @param {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>} [options.colorDefinitions] Array with definitions\n\t * required to create the {@link module:ui/colorgrid/colortile~ColorTileView tiles}.\n\t * @param {Number} options.columns A number of columns to display the tiles.\n\t */\n\tconstructor( locale, options ) {\n\t\tsuper( locale );\n\n\t\tconst colorDefinitions = options && options.colorDefinitions || [];\n\t\tconst viewStyleAttribute = {};\n\n\t\tif ( options && options.columns ) {\n\t\t\tviewStyleAttribute.gridTemplateColumns = `repeat( ${ options.columns }, 1fr)`;\n\t\t}\n\n\t\t/**\n\t\t * The color of the currently selected color tile in {@link #items}.\n\t\t *\n\t\t * @observable\n\t\t * @type {String}\n\t\t */\n\t\tthis.set( 'selectedColor' );\n\n\t\t/**\n\t\t * Collection of the child tile views.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the grid.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * Helps cycling over focusable {@link #items} in the grid.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.items,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate grid items backwards using the arrowup key.\n\t\t\t\tfocusPrevious: 'arrowleft',\n\n\t\t\t\t// Navigate grid items forwards using the arrowdown key.\n\t\t\t\tfocusNext: 'arrowright'\n\t\t\t}\n\t\t} );\n\n\t\tthis.items.on( 'add', ( evt, colorTile ) => {\n\t\t\tcolorTile.isOn = colorTile.color === this.selectedColor;\n\t\t} );\n\n\t\tcolorDefinitions.forEach( color => {\n\t\t\tconst colorTile = new ColorTileView();\n\n\t\t\tcolorTile.set( {\n\t\t\t\tcolor: color.color,\n\t\t\t\tlabel: color.label,\n\t\t\t\ttooltip: true,\n\t\t\t\thasBorder: color.options.hasBorder\n\t\t\t} );\n\n\t\t\tcolorTile.on( 'execute', () => {\n\t\t\t\tthis.fire( 'execute', {\n\t\t\t\t\tvalue: color.color,\n\t\t\t\t\thasBorder: color.options.hasBorder,\n\t\t\t\t\tlabel: color.label\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tthis.items.add( colorTile );\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tchildren: this.items,\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-color-grid'\n\t\t\t\t],\n\t\t\t\tstyle: viewStyleAttribute\n\t\t\t}\n\t\t} );\n\n\t\tthis.on( 'change:selectedColor', ( evt, name, selectedColor ) => {\n\t\t\tfor ( const item of this.items ) {\n\t\t\t\titem.isOn = item.color === selectedColor;\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link #items}.\n\t */\n\tfocus() {\n\t\tif ( this.items.length ) {\n\t\t\tthis.items.first.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the last focusable in {@link #items}.\n\t */\n\tfocusLast() {\n\t\tif ( this.items.length ) {\n\t\t\tthis.items.last.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Items added before rendering should be known to the #focusTracker.\n\t\tfor ( const item of this.items ) {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t}\n\n\t\tthis.items.on( 'add', ( evt, item ) => {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t} );\n\n\t\tthis.items.on( 'remove', ( evt, item ) => {\n\t\t\tthis.focusTracker.remove( item.element );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n\n\t/**\n\t * Fired when the `ColorTileView` for the picked item is executed.\n\t *\n\t * @event execute\n\t * @param {Object} data Additional information about the event.\n\t * @param {String} data.value The value of the selected color\n\t * ({@link module:ui/colorgrid/colorgrid~ColorDefinition#color `color.color`}).\n\t * @param {Boolean} data.hasBorder The `hasBorder` property of the selected color\n\t * ({@link module:ui/colorgrid/colorgrid~ColorDefinition#options `color.options.hasBorder`}).\n\t * @param {String} data.Label The label of the selected color\n\t * ({@link module:ui/colorgrid/colorgrid~ColorDefinition#label `color.label`})\n\t */\n}\n\n/**\n * A color definition used to create a {@link module:ui/colorgrid/colortile~ColorTileView}.\n *\n *\t\t{\n *\t\t\tcolor: 'hsl(0, 0%, 75%)',\n *\t\t\tlabel: 'Light Grey',\n *\t\t\toptions: {\n *\t\t\t\thasBorder: true\n *\t\t\t}\n *\t\t}\n *\n * @typedef {Object} module:ui/colorgrid/colorgrid~ColorDefinition\n * @type Object\n *\n * @property {String} color String representing a color.\n * It is used as value of background-color style in {@link module:ui/colorgrid/colortile~ColorTileView}.\n * @property {String} label String used as label for {@link module:ui/colorgrid/colortile~ColorTileView}.\n * @property {Object} options Additional options passed to create a {@link module:ui/colorgrid/colortile~ColorTileView}.\n * @property {Boolean} options.hasBorder A flag that indicates if special a CSS class should be added\n * to {@link module:ui/colorgrid/colortile~ColorTileView}, which renders a border around it.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/documentcolorcollection\n */\n\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * A collection to store document colors. It enforces colors to be unique.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n * @extends module:utils/collection~Collection\n */\nexport default class DocumentColorCollection extends Collection {\n\tconstructor( options ) {\n\t\tsuper( options );\n\n\t\t/**\n\t\t * Indicates whether the document color collection is empty.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #isEmpty\n\t\t */\n\t\tthis.set( 'isEmpty', true );\n\t}\n\n\t/**\n\t * Adds a color to the document color collection.\n\t *\n\t * This method ensures that no color duplicates are inserted (compared using\n\t * the color value of the {@link module:ui/colorgrid/colorgrid~ColorDefinition}).\n\t *\n\t * If the item does not have an ID, it will be automatically generated and set on the item.\n\t *\n\t * @chainable\n\t * @param {module:ui/colorgrid/colorgrid~ColorDefinition} item\n\t * @param {Number} [index] The position of the item in the collection. The item\n\t * is pushed to the collection when `index` is not specified.\n\t * @fires add\n\t */\n\tadd( item, index ) {\n\t\tif ( this.find( element => element.color === item.color ) ) {\n\t\t\t// No duplicates are allowed.\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.add( item, index );\n\n\t\tthis.set( 'isEmpty', false );\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tremove( subject ) {\n\t\tconst ret = super.remove( subject );\n\n\t\tif ( this.length === 0 ) {\n\t\t\tthis.set( 'isEmpty', true );\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Checks if an object with given colors is present in the document color collection.\n\t *\n\t * @param {String} color\n\t * @returns {Boolean}\n\t */\n\thasColor( color ) {\n\t\treturn !!this.find( item => item.color === color );\n\t}\n}\n\nmix( DocumentColorCollection, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/ui/colortableview\n */\n\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport ColorTileView from '@ckeditor/ckeditor5-ui/src/colorgrid/colortileview';\nimport ColorGridView from '@ckeditor/ckeditor5-ui/src/colorgrid/colorgridview';\nimport LabelView from '@ckeditor/ckeditor5-ui/src/label/labelview';\nimport DocumentColorCollection from '../documentcolorcollection';\nimport Template from '@ckeditor/ckeditor5-ui/src/template';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '@ckeditor/ckeditor5-ui/src/focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport removeButtonIcon from '@ckeditor/ckeditor5-core/theme/icons/eraser.svg';\nimport '../../theme/fontcolor.css';\n\n/**\n * A class which represents a view with the following sub–components:\n *\n * * A remove color button,\n * * A static {@link module:ui/colorgrid/colorgrid~ColorGridView} of colors defined in the configuration,\n * * A dynamic {@link module:ui/colorgrid/colorgrid~ColorGridView} of colors used in the document.\n *\n * @extends module:ui/view~View\n */\nexport default class ColorTableView extends View {\n\t/**\n\t * Creates a view to be inserted as a child of {@link module:ui/dropdown/dropdownview~DropdownView}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t * @param {Object} config The configuration object.\n\t * @param {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>} config.colors An array with definitions of colors to\n\t * be displayed in the table.\n\t * @param {Number} config.columns The number of columns in the color grid.\n\t * @param {String} config.removeButtonLabel The label of the button responsible for removing the color.\n\t * @param {String} config.documentColorsLabel The label for the section with the document colors.\n\t * @param {String} config.documentColorsCount The number of colors in the document colors section inside the color dropdown.\n\t */\n\tconstructor( locale, { colors, columns, removeButtonLabel, documentColorsLabel, documentColorsCount } ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * A collection of the children of the table.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * An array with objects representing colors to be displayed in the grid.\n\t\t *\n\t\t * @type {Arrray.<module:ui/colorgrid/colorgrid~ColorDefinition>}\n\t\t */\n\t\tthis.colorDefinitions = colors;\n\n\t\t/**\n\t\t * Tracks information about the DOM focus in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * Keeps the value of the command associated with the table for the current selection.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.set( 'selectedColor' );\n\n\t\t/**\n\t\t * The label of the button responsible for removing color attributes.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.removeButtonLabel = removeButtonLabel;\n\n\t\t/**\n\t\t * The number of columns in the color grid.\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\t\tthis.columns = columns;\n\n\t\t/**\n\t\t * A collection of definitions that store the document colors.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:font/documentcolorcollection~DocumentColorCollection}\n\t\t */\n\t\tthis.documentColors = new DocumentColorCollection();\n\n\t\t/**\n\t\t * The maximum number of colors in the document colors section.\n\t\t * If it equals 0, the document colors section is not added.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Number}\n\t\t */\n\t\tthis.documentColorsCount = documentColorsCount;\n\n\t\t/**\n\t\t * Preserves the reference to {@link module:ui/colorgrid/colorgrid~ColorGridView} used to create\n\t\t * the default (static) color set.\n\t\t *\n\t\t * The property is loaded once the the parent dropdown is opened the first time.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/colorgrid/colorgrid~ColorGridView|undefined} #staticColorsGrid\n\t\t */\n\n\t\t/**\n\t\t * Preserves the reference to {@link module:ui/colorgrid/colorgrid~ColorGridView} used to create\n\t\t * the document colors. It remains undefined if the document colors feature is disabled.\n\t\t *\n\t\t * The property is loaded once the the parent dropdown is opened the first time.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/colorgrid/colorgrid~ColorGridView|undefined} #documentColorsGrid\n\t\t */\n\n\t\t/**\n\t\t * Helps cycling over focusable {@link #items} in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.items,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate list items backwards using the Arrow Up key.\n\t\t\t\tfocusPrevious: 'arrowup',\n\n\t\t\t\t// Navigate list items forwards using the Arrow Down key.\n\t\t\t\tfocusNext: 'arrowdown'\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * Document color section's label.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @type {String}\n\t\t */\n\t\tthis._documentColorsLabel = documentColorsLabel;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-color-table'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: this.items\n\t\t} );\n\n\t\tthis.items.add( this._removeColorButton() );\n\t}\n\n\t/**\n\t * Scans through the editor model and searches for text node attributes with the given attribute name.\n\t * Found entries are set as document colors.\n\t *\n\t * All the previously stored document colors will be lost in the process.\n\t *\n\t * @param {module:engine/model/model~Model} model The model used as a source to obtain the document colors.\n\t * @param {String} attributeName Determines the name of the related model's attribute for a given dropdown.\n\t */\n\tupdateDocumentColors( model, attributeName ) {\n\t\tconst document = model.document;\n\t\tconst maxCount = this.documentColorsCount;\n\n\t\tthis.documentColors.clear();\n\n\t\tfor ( const rootName of document.getRootNames() ) {\n\t\t\tconst root = document.getRoot( rootName );\n\t\t\tconst range = model.createRangeIn( root );\n\n\t\t\tfor ( const node of range.getItems() ) {\n\t\t\t\tif ( node.is( 'textProxy' ) && node.hasAttribute( attributeName ) ) {\n\t\t\t\t\tthis._addColorToDocumentColors( node.getAttribute( attributeName ) );\n\n\t\t\t\t\tif ( this.documentColors.length >= maxCount ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Refreshes the state of the selected color in one or both {@link module:ui/colorgrid/colorgrid~ColorGridView}s\n\t * available in the {@link module:font/ui/colortableview~ColorTableView}. It guarantees that the selection will occur only in one\n\t * of them.\n\t */\n\tupdateSelectedColors() {\n\t\tconst documentColorsGrid = this.documentColorsGrid;\n\t\tconst staticColorsGrid = this.staticColorsGrid;\n\t\tconst selectedColor = this.selectedColor;\n\n\t\tstaticColorsGrid.selectedColor = selectedColor;\n\n\t\tif ( documentColorsGrid ) {\n\t\t\tdocumentColorsGrid.selectedColor = selectedColor;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Items added before rendering should be known to the #focusTracker.\n\t\tfor ( const item of this.items ) {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t}\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n\n\t/**\n\t * Appends {@link #staticColorsGrid} and {@link #documentColorsGrid} views.\n\t */\n\tappendGrids() {\n\t\tif ( this.staticColorsGrid ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.staticColorsGrid = this._createStaticColorsGrid();\n\n\t\tthis.items.add( this.staticColorsGrid );\n\n\t\tif ( this.documentColorsCount ) {\n\t\t\t// Create a label for document colors.\n\t\t\tconst bind = Template.bind( this.documentColors, this.documentColors );\n\t\t\tconst label = new LabelView( this.locale );\n\t\t\tlabel.text = this._documentColorsLabel;\n\t\t\tlabel.extendTemplate( {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: [\n\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t'ck-color-grid__label',\n\t\t\t\t\t\tbind.if( 'isEmpty', 'ck-hidden' )\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t} );\n\t\t\tthis.items.add( label );\n\t\t\tthis.documentColorsGrid = this._createDocumentColorsGrid();\n\t\t\tthis.items.add( this.documentColorsGrid );\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the first focusable element in {@link #items}.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Focuses the last focusable element in {@link #items}.\n\t */\n\tfocusLast() {\n\t\tthis._focusCycler.focusLast();\n\t}\n\n\t/**\n\t * Adds the remove color button as a child of the current view.\n\t *\n\t * @private\n\t * @returns {module:ui/button/buttonview~ButtonView}\n\t */\n\t_removeColorButton() {\n\t\tconst buttonView = new ButtonView();\n\n\t\tbuttonView.set( {\n\t\t\twithText: true,\n\t\t\ticon: removeButtonIcon,\n\t\t\ttooltip: true,\n\t\t\tlabel: this.removeButtonLabel\n\t\t} );\n\n\t\tbuttonView.class = 'ck-color-table__remove-color';\n\t\tbuttonView.on( 'execute', () => {\n\t\t\tthis.fire( 'execute', { value: null } );\n\t\t} );\n\n\t\treturn buttonView;\n\t}\n\n\t/**\n\t * Creates a static color table grid based on the editor configuration.\n\t *\n\t * @private\n\t * @returns {module:ui/colorgrid/colorgrid~ColorGridView}\n\t */\n\t_createStaticColorsGrid() {\n\t\tconst colorGrid = new ColorGridView( this.locale, {\n\t\t\tcolorDefinitions: this.colorDefinitions,\n\t\t\tcolumns: this.columns\n\t\t} );\n\n\t\tcolorGrid.delegate( 'execute' ).to( this );\n\n\t\treturn colorGrid;\n\t}\n\n\t/**\n\t * Creates the document colors section view and binds it to {@link #documentColors}.\n\t *\n\t * @private\n\t * @returns {module:ui/colorgrid/colorgrid~ColorGridView}\n\t */\n\t_createDocumentColorsGrid() {\n\t\tconst bind = Template.bind( this.documentColors, this.documentColors );\n\t\tconst documentColorsGrid = new ColorGridView( this.locale, {\n\t\t\tcolumns: this.columns\n\t\t} );\n\n\t\tdocumentColorsGrid.delegate( 'execute' ).to( this );\n\n\t\tdocumentColorsGrid.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: bind.if( 'isEmpty', 'ck-hidden' )\n\t\t\t}\n\t\t} );\n\n\t\tdocumentColorsGrid.items.bindTo( this.documentColors ).using(\n\t\t\tcolorObj => {\n\t\t\t\tconst colorTile = new ColorTileView();\n\n\t\t\t\tcolorTile.set( {\n\t\t\t\t\tcolor: colorObj.color,\n\t\t\t\t\thasBorder: colorObj.options && colorObj.options.hasBorder\n\t\t\t\t} );\n\n\t\t\t\tif ( colorObj.label ) {\n\t\t\t\t\tcolorTile.set( {\n\t\t\t\t\t\tlabel: colorObj.label,\n\t\t\t\t\t\ttooltip: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tcolorTile.on( 'execute', () => {\n\t\t\t\t\tthis.fire( 'execute', {\n\t\t\t\t\t\tvalue: colorObj.color\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\t\treturn colorTile;\n\t\t\t}\n\t\t);\n\n\t\t// Selected color should be cleared when document colors became empty.\n\t\tthis.documentColors.on( 'change:isEmpty', ( evt, name, val ) => {\n\t\t\tif ( val ) {\n\t\t\t\tdocumentColorsGrid.selectedColor = null;\n\t\t\t}\n\t\t} );\n\n\t\treturn documentColorsGrid;\n\t}\n\n\t/**\n\t * Adds a given color to the document colors list. If possible, the method will attempt to use\n\t * data from the {@link #colorDefinitions} (label, color options).\n\t *\n\t * @private\n\t * @param {String} color A string that stores the value of the recently applied color.\n\t */\n\t_addColorToDocumentColors( color ) {\n\t\tconst predefinedColor = this.colorDefinitions\n\t\t\t.find( definition => definition.color === color );\n\n\t\tif ( !predefinedColor ) {\n\t\t\tthis.documentColors.add( {\n\t\t\t\tcolor,\n\t\t\t\tlabel: color,\n\t\t\t\toptions: {\n\t\t\t\t\thasBorder: false\n\t\t\t\t}\n\t\t\t} );\n\t\t} else {\n\t\t\tthis.documentColors.add( Object.assign( {}, predefinedColor ) );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/utils\n */\n\nimport ColorTableView from './ui/colortableview';\n\n/**\n * The name of the font size plugin.\n */\nexport const FONT_SIZE = 'fontSize';\n\n/**\n * The name of the font family plugin.\n */\nexport const FONT_FAMILY = 'fontFamily';\n\n/**\n * The name of the font color plugin.\n */\nexport const FONT_COLOR = 'fontColor';\n\n/**\n * The name of the font background color plugin.\n */\nexport const FONT_BACKGROUND_COLOR = 'fontBackgroundColor';\n\n/**\n * Builds a proper {@link module:engine/conversion/conversion~ConverterDefinition converter definition} out of input data.\n *\n * @param {String} modelAttributeKey Key\n * @param {Array.<module:font/fontfamily~FontFamilyOption>|Array.<module:font/fontsize~FontSizeOption>} options\n * @returns {module:engine/conversion/conversion~ConverterDefinition}\n */\nexport function buildDefinition( modelAttributeKey, options ) {\n\tconst definition = {\n\t\tmodel: {\n\t\t\tkey: modelAttributeKey,\n\t\t\tvalues: []\n\t\t},\n\t\tview: {},\n\t\tupcastAlso: {}\n\t};\n\n\tfor ( const option of options ) {\n\t\tdefinition.model.values.push( option.model );\n\t\tdefinition.view[ option.model ] = option.view;\n\n\t\tif ( option.upcastAlso ) {\n\t\t\tdefinition.upcastAlso[ option.model ] = option.upcastAlso;\n\t\t}\n\t}\n\n\treturn definition;\n}\n\n/**\n * A {@link module:font/fontcolor~FontColor font color} and\n * {@link module:font/fontbackgroundcolor~FontBackgroundColor font background color} helper\n * responsible for upcasting data to the model.\n *\n * **Note**: The `styleAttr` parameter should be either `'color'` or `'background-color'`.\n *\n * @param {String} styleAttr\n * @return {String}\n */\nexport function renderUpcastAttribute( styleAttr ) {\n\treturn viewElement => normalizeColorCode( viewElement.getStyle( styleAttr ) );\n}\n\n/**\n * A {@link module:font/fontcolor~FontColor font color} and\n * {@link module:font/fontbackgroundcolor~FontBackgroundColor font background color} helper\n * responsible for downcasting a color attribute to a `<span>` element.\n *\n * **Note**: The `styleAttr` parameter should be either `'color'` or `'background-color'`.\n *\n * @param {String} styleAttr\n */\nexport function renderDowncastElement( styleAttr ) {\n\treturn ( modelAttributeValue, viewWriter ) => viewWriter.createAttributeElement( 'span', {\n\t\tstyle: `${ styleAttr }:${ modelAttributeValue }`\n\t}, { priority: 7 } );\n}\n\n/**\n * A helper that adds {@link module:font/ui/colortableview~ColorTableView} to the color dropdown with proper initial values.\n *\n * @param {Object} config The configuration object.\n * @param {module:ui/dropdown/dropdownview~DropdownView} config.dropdownView The dropdown view to which\n * a {@link module:font/ui/colortableview~ColorTableView} will be added.\n * @param {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>} config.colors An array with definitions\n * representing colors to be displayed in the color table.\n * @param {String} config.removeButtonLabel The label for the button responsible for removing the color.\n * @param {String} config.documentColorsLabel The label for the section with document colors.\n * @param {String} config.documentColorsCount The number of document colors inside the dropdown.\n * @returns {module:font/ui/colortableview~ColorTableView} The new color table view.\n */\nexport function addColorTableToDropdown( { dropdownView, colors, columns, removeButtonLabel, documentColorsLabel, documentColorsCount } ) {\n\tconst locale = dropdownView.locale;\n\tconst colorTableView = new ColorTableView( locale, { colors, columns, removeButtonLabel, documentColorsLabel, documentColorsCount } );\n\n\tdropdownView.colorTableView = colorTableView;\n\tdropdownView.panelView.children.add( colorTableView );\n\n\tcolorTableView.delegate( 'execute' ).to( dropdownView, 'execute' );\n\n\treturn colorTableView;\n}\n\n// Fixes the color value string.\n//\n// @param {String} value\n// @returns {String}\nfunction normalizeColorCode( value ) {\n\treturn value.replace( /\\s/g, '' );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontbackgroundcolor/fontbackgroundcolorcommand\n */\n\nimport FontCommand from '../fontcommand';\nimport { FONT_BACKGROUND_COLOR } from '../utils';\n\n/**\n * The font background color command. It is used by\n * {@link module:font/fontbackgroundcolor/fontbackgroundcolorediting~FontBackgroundColorEditing}\n * to apply the font background color.\n *\n *\t\teditor.execute( 'fontBackgroundColor', { value: 'rgb(250, 20, 20)' } );\n *\n * **Note**: Executing the command with the `null` value removes the attribute from the model.\n *\n * @extends module:font/fontcommand~FontCommand\n */\nexport default class FontBackgroundColorCommand extends FontCommand {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor, FONT_BACKGROUND_COLOR );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontbackgroundcolor/fontbackgroundcolorediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FontBackgroundColorCommand from './fontbackgroundcolorcommand';\nimport { FONT_BACKGROUND_COLOR, renderDowncastElement, renderUpcastAttribute } from '../utils';\n\n/**\n * The font background color editing feature.\n *\n * It introduces the {@link module:font/fontbackgroundcolor/fontbackgroundcolorcommand~FontBackgroundColorCommand command} and\n * the `fontBackgroundColor` attribute in the {@link module:engine/model/model~Model model} which renders\n * in the {@link module:engine/view/view view} as a `<span>` element (`<span style=\"background-color: ...\">`),\n * depending on the {@link module:font/fontbackgroundcolor~FontBackgroundColorConfig configuration}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontBackgroundColorEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FontBackgroundColorEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( FONT_BACKGROUND_COLOR, {\n\t\t\tcolors: [\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 0%)',\n\t\t\t\t\tlabel: 'Black'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 30%)',\n\t\t\t\t\tlabel: 'Dim grey'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 60%)',\n\t\t\t\t\tlabel: 'Grey'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 90%)',\n\t\t\t\t\tlabel: 'Light grey'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 100%)',\n\t\t\t\t\tlabel: 'White',\n\t\t\t\t\thasBorder: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 75%, 60%)',\n\t\t\t\t\tlabel: 'Red'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(30, 75%, 60%)',\n\t\t\t\t\tlabel: 'Orange'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(60, 75%, 60%)',\n\t\t\t\t\tlabel: 'Yellow'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(90, 75%, 60%)',\n\t\t\t\t\tlabel: 'Light green'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(120, 75%, 60%)',\n\t\t\t\t\tlabel: 'Green'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(150, 75%, 60%)',\n\t\t\t\t\tlabel: 'Aquamarine'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(180, 75%, 60%)',\n\t\t\t\t\tlabel: 'Turquoise'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(210, 75%, 60%)',\n\t\t\t\t\tlabel: 'Light blue'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(240, 75%, 60%)',\n\t\t\t\t\tlabel: 'Blue'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(270, 75%, 60%)',\n\t\t\t\t\tlabel: 'Purple'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcolumns: 5\n\t\t} );\n\n\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tstyles: {\n\t\t\t\t\t'background-color': /[\\s\\S]+/\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodel: {\n\t\t\t\tkey: FONT_BACKGROUND_COLOR,\n\t\t\t\tvalue: renderUpcastAttribute( 'background-color' )\n\t\t\t}\n\t\t} );\n\n\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t\t\tmodel: FONT_BACKGROUND_COLOR,\n\t\t\tview: renderDowncastElement( 'background-color' )\n\t\t} );\n\n\t\teditor.commands.add( FONT_BACKGROUND_COLOR, new FontBackgroundColorCommand( editor ) );\n\n\t\t// Allow the font backgroundColor attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: FONT_BACKGROUND_COLOR } );\n\n\t\teditor.model.schema.setAttributeProperties( FONT_BACKGROUND_COLOR, {\n\t\t\tisFormatting: true,\n\t\t\tcopyOnEnter: true\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/colorgrid/utils\n */\n\n/**\n * Returns color configuration options as defined in `editor.config.(fontColor|fontBackgroundColor).colors` or\n * `editor.config.table.(tableProperties|tableCellProperties).(background|border).colors\n * but processed to account for editor localization in the correct language.\n *\n * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\n * when the user configuration is defined because the editor does not exist yet.\n *\n * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n * @param {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>} options\n * @returns {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>}.\n */\nexport function getLocalizedColorOptions( locale, options ) {\n\tconst t = locale.t;\n\tconst localizedColorNames = {\n\t\tBlack: t( 'Black' ),\n\t\t'Dim grey': t( 'Dim grey' ),\n\t\tGrey: t( 'Grey' ),\n\t\t'Light grey': t( 'Light grey' ),\n\t\tWhite: t( 'White' ),\n\t\tRed: t( 'Red' ),\n\t\tOrange: t( 'Orange' ),\n\t\tYellow: t( 'Yellow' ),\n\t\t'Light green': t( 'Light green' ),\n\t\tGreen: t( 'Green' ),\n\t\tAquamarine: t( 'Aquamarine' ),\n\t\tTurquoise: t( 'Turquoise' ),\n\t\t'Light blue': t( 'Light blue' ),\n\t\tBlue: t( 'Blue' ),\n\t\tPurple: t( 'Purple' )\n\t};\n\n\treturn options.map( colorOption => {\n\t\tconst label = localizedColorNames[ colorOption.label ];\n\n\t\tif ( label && label != colorOption.label ) {\n\t\t\tcolorOption.label = label;\n\t\t}\n\n\t\treturn colorOption;\n\t} );\n}\n\n/**\n * Creates a unified color definition object from color configuration options.\n * The object contains the information necessary to both render the UI and initialize the conversion.\n *\n * @param {module:ui/colorgrid/colorgrid~ColorDefinition} options\n * @returns {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>}\n */\nexport function normalizeColorOptions( options ) {\n\treturn options\n\t\t.map( normalizeSingleColorDefinition )\n\t\t.filter( option => !!option );\n}\n\n// Creates a normalized color definition from the user-defined configuration.\n// The \"normalization\" means it will create full\n// {@link module:ui/colorgrid/colorgrid~ColorDefinition `ColorDefinition-like`}\n// object for string values, and add a `view` property, for each definition.\n//\n// @param {String|module:ui/colorgrid/colorgrid~ColorDefinition}\n// @returns {module:ui/colorgrid/colorgrid~ColorDefinition}\nexport function normalizeSingleColorDefinition( color ) {\n\tif ( typeof color === 'string' ) {\n\t\treturn {\n\t\t\tmodel: color,\n\t\t\tlabel: color,\n\t\t\thasBorder: false,\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tstyles: {\n\t\t\t\t\tcolor\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tmodel: color.color,\n\t\t\tlabel: color.label || color.color,\n\t\t\thasBorder: color.hasBorder === undefined ? false : color.hasBorder,\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tstyles: {\n\t\t\t\t\tcolor: `${ color.color }`\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/ui/colorui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport { createDropdown } from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\nimport { normalizeColorOptions, getLocalizedColorOptions } from '@ckeditor/ckeditor5-ui/src/colorgrid/utils';\nimport { addColorTableToDropdown } from '../utils';\n\n/**\n * The color UI plugin which isolates the common logic responsible for displaying dropdowns with color grids.\n *\n * It is used to create the `'fontBackgroundColor'` and `'fontColor'` dropdowns, each hosting\n * a {@link module:font/ui/colortableview~ColorTableView}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ColorUI extends Plugin {\n\t/**\n\t * Creates a plugin which introduces a dropdown with a pre–configured {@link module:font/ui/colortableview~ColorTableView}.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {Object} config The configuration object.\n\t * @param {String} config.commandName The name of the command which will be executed when a color tile is clicked.\n\t * @param {String} config.componentName The name of the dropdown in the {@link module:ui/componentfactory~ComponentFactory}\n\t * and the configuration scope name in `editor.config`.\n\t * @param {String} config.icon The SVG icon used by the dropdown.\n\t * @param {String} config.dropdownLabel The label used by the dropdown.\n\t */\n\tconstructor( editor, { commandName, icon, componentName, dropdownLabel } ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The name of the command which will be executed when a color tile is clicked.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.commandName = commandName;\n\n\t\t/**\n\t\t * The name of this component in the {@link module:ui/componentfactory~ComponentFactory}.\n\t\t * Also the configuration scope name in `editor.config`.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.componentName = componentName;\n\n\t\t/**\n\t\t * The SVG icon used by the dropdown.\n\t\t * @type {String}\n\t\t */\n\t\tthis.icon = icon;\n\n\t\t/**\n\t\t * The label used by the dropdown.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.dropdownLabel = dropdownLabel;\n\n\t\t/**\n\t\t * The number of columns in the color grid.\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\t\tthis.columns = editor.config.get( `${ this.componentName }.columns` );\n\n\t\t/**\n\t\t * Keeps a reference to {@link module:font/ui/colortableview~ColorTableView}.\n\t\t *\n\t\t * @member {module:font/ui/colortableview~ColorTableView}\n\t\t */\n\t\tthis.colorTableView;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst locale = editor.locale;\n\t\tconst t = locale.t;\n\t\tconst command = editor.commands.get( this.commandName );\n\t\tconst colorsConfig = normalizeColorOptions( editor.config.get( this.componentName ).colors );\n\t\tconst localizedColors = getLocalizedColorOptions( locale, colorsConfig );\n\t\tconst documentColorsCount = editor.config.get( `${ this.componentName }.documentColors` );\n\n\t\t// Register the UI component.\n\t\teditor.ui.componentFactory.add( this.componentName, locale => {\n\t\t\tconst dropdownView = createDropdown( locale );\n\t\t\tthis.colorTableView = addColorTableToDropdown( {\n\t\t\t\tdropdownView,\n\t\t\t\tcolors: localizedColors.map( option => ( {\n\t\t\t\t\tlabel: option.label,\n\t\t\t\t\tcolor: option.model,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\thasBorder: option.hasBorder\n\t\t\t\t\t}\n\t\t\t\t} ) ),\n\t\t\t\tcolumns: this.columns,\n\t\t\t\tremoveButtonLabel: t( 'Remove color' ),\n\t\t\t\tdocumentColorsLabel: documentColorsCount !== 0 ? t( 'Document colors' ) : undefined,\n\t\t\t\tdocumentColorsCount: documentColorsCount === undefined ? this.columns : documentColorsCount\n\t\t\t} );\n\n\t\t\tthis.colorTableView.bind( 'selectedColor' ).to( command, 'value' );\n\n\t\t\tdropdownView.buttonView.set( {\n\t\t\t\tlabel: this.dropdownLabel,\n\t\t\t\ticon: this.icon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tdropdownView.extendTemplate( {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: 'ck-color-ui-dropdown'\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tdropdownView.bind( 'isEnabled' ).to( command );\n\n\t\t\tdropdownView.on( 'execute', ( evt, data ) => {\n\t\t\t\teditor.execute( this.commandName, data );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\tdropdownView.on( 'change:isOpen', ( evt, name, isVisible ) => {\n\t\t\t\t// Grids rendering is deferred (#6192).\n\t\t\t\tdropdownView.colorTableView.appendGrids();\n\n\t\t\t\tif ( isVisible ) {\n\t\t\t\t\tif ( documentColorsCount !== 0 ) {\n\t\t\t\t\t\tthis.colorTableView.updateDocumentColors( editor.model, this.componentName );\n\t\t\t\t\t}\n\t\t\t\t\tthis.colorTableView.updateSelectedColors();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn dropdownView;\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontbackgroundcolor/fontbackgroundcolorui\n */\n\nimport ColorUI from '../ui/colorui';\nimport { FONT_BACKGROUND_COLOR } from '../utils';\nimport fontBackgroundColorIcon from '../../theme/icons/font-background.svg';\n\n/**\n * The font background color UI plugin. It introduces the `'fontBackgroundColor'` dropdown.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontBackgroundColorUI extends ColorUI {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tconst t = editor.locale.t;\n\n\t\tsuper( editor, {\n\t\t\tcommandName: FONT_BACKGROUND_COLOR,\n\t\t\tcomponentName: FONT_BACKGROUND_COLOR,\n\t\t\ticon: fontBackgroundColorIcon,\n\t\t\tdropdownLabel: t( 'Font Background Color' )\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FontBackgroundColorUI';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontbackgroundcolor\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FontBackgroundColorEditing from './fontbackgroundcolor/fontbackgroundcolorediting';\nimport FontBackgroundColorUI from './fontbackgroundcolor/fontbackgroundcolorui';\n\n/**\n * The font background color plugin.\n *\n * For a detailed overview, check the {@glink features/font font feature} documentation\n * and the {@glink api/font package page}.\n *\n * This is a \"glue\" plugin which loads\n * the {@link module:font/fontbackgroundcolor/fontbackgroundcolorediting~FontBackgroundColorEditing} and\n * {@link module:font/fontbackgroundcolor/fontbackgroundcolorui~FontBackgroundColorUI} features in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontBackgroundColor extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ FontBackgroundColorEditing, FontBackgroundColorUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FontBackgroundColor';\n\t}\n}\n\n/**\n * The configuration of the font background color feature.\n * It is introduced by the {@link module:font/fontbackgroundcolor/fontbackgroundcolorediting~FontBackgroundColorEditing} feature.\n *\n * Read more in {@link module:font/fontbackgroundcolor~FontBackgroundColorConfig}.\n *\n * @member {module:font/fontbackgroundcolor~FontBackgroundColorConfig} module:core/editor/editorconfig~EditorConfig#fontBackgroundColor\n */\n\n/**\n * The configuration of the font background color feature.\n * This option is used by the {@link module:font/fontbackgroundcolor/fontbackgroundcolorediting~FontBackgroundColorEditing} feature.\n *\n *\t\tClassicEditor\n *\t\t\t.create( {\n *\t\t\t\tfontBackgroundColor: ... // Font background color feature configuration.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface module:font/fontbackgroundcolor~FontBackgroundColorConfig\n */\n\n/**\n * Available font background colors defined as an array of strings or objects.\n *\n * The default value registers the following colors:\n *\n *\t\tconst fontBackgroundColorConfig = {\n *\t\t\tcolors: [\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 0%)',\n *\t\t\t\t\tlabel: 'Black'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 30%)',\n *\t\t\t\t\tlabel: 'Dim grey'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 60%)',\n *\t\t\t\t\tlabel: 'Grey'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 90%)',\n *\t\t\t\t\tlabel: 'Light grey'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 100%)',\n *\t\t\t\t\tlabel: 'White',\n *\t\t\t\t\thasBorder: true\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Red'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(30, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Orange'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(60, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Yellow'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(90, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Light green'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(120, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Green'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(150, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Aquamarine'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(180, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Turquoise'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(210, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Light blue'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(240, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Blue'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(270, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Purple'\n *\t\t\t\t}\n *\t\t\t]\n *\t\t};\n *\n * **Note**: The colors are displayed in the `'fontBackgroundColor'` dropdown.\n *\n * @member {Array.<String|Object>} module:font/fontbackgroundcolor~FontBackgroundColorConfig#colors\n */\n\n/**\n * Represents the number of columns in the font background color dropdown.\n *\n * The default value is:\n *\n *\t\tconst fontBackgroundColorConfig = {\n *\t\t\tcolumns: 5\n *\t\t}\n *\n * @member {Number} module:font/fontbackgroundcolor~FontBackgroundColorConfig#columns\n */\n\n/**\n * Determines the maximum number of available document colors.\n * Setting it to `0` will disable the document colors feature.\n *\n * By default it equals to the {@link module:font/fontbackgroundcolor~FontBackgroundColorConfig#columns} value.\n *\n * Examples:\n *\n * \t// 1) Neither document colors nor columns are defined in the configuration.\n * \t// Document colors will equal 5,\n * \t// because the value will be inherited from columns,\n * \t// which has a predefined value of 5.\n * \tconst fontBackgroundColorConfig = {}\n *\n * \t// 2) Document colors will equal 8, because the value will be inherited from columns.\n * \tconst fontBackgroundColorConfig = {\n * \t\tcolumns: 8\n * \t}\n *\n * \t// 3) Document colors will equal 24, because it has its own value defined.\n * \tconst fontBackgroundColorConfig = {\n * \t\tcolumns: 8,\n * \t\tdocumentColors: 24\n * \t}\n *\n * \t// 4) The document colors feature will be disabled.\n * \tconst fontBackgroundColorConfig = {\n * \t\tcolumns: 8,\n * \t\tdocumentColors: 0\n * \t}\n *\n * @member {Number} module:font/fontbackgroundcolor~FontBackgroundColorConfig#documentColors\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontcolor/fontcolorcommand\n */\n\nimport FontCommand from '../fontcommand';\nimport { FONT_COLOR } from '../utils';\n\n/**\n * The font color command. It is used by {@link module:font/fontcolor/fontcolorediting~FontColorEditing}\n * to apply the font color.\n *\n *\t\teditor.execute( 'fontColor', { value: 'rgb(250, 20, 20)' } );\n *\n * **Note**: Executing the command with the `null` value removes the attribute from the model.\n *\n * @extends module:font/fontcommand~FontCommand\n */\nexport default class FontColorCommand extends FontCommand {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor, FONT_COLOR );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontcolor/fontcolorediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FontColorCommand from './fontcolorcommand';\nimport { FONT_COLOR, renderDowncastElement, renderUpcastAttribute } from '../utils';\n\n/**\n * The font color editing feature.\n *\n * It introduces the {@link module:font/fontcolor/fontcolorcommand~FontColorCommand command} and\n * the `fontColor` attribute in the {@link module:engine/model/model~Model model} which renders\n * in the {@link module:engine/view/view view} as a `<span>` element (`<span style=\"color: ...\">`),\n * depending on the {@link module:font/fontcolor~FontColorConfig configuration}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontColorEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FontColorEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( FONT_COLOR, {\n\t\t\tcolors: [\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 0%)',\n\t\t\t\t\tlabel: 'Black'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 30%)',\n\t\t\t\t\tlabel: 'Dim grey'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 60%)',\n\t\t\t\t\tlabel: 'Grey'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 90%)',\n\t\t\t\t\tlabel: 'Light grey'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 0%, 100%)',\n\t\t\t\t\tlabel: 'White',\n\t\t\t\t\thasBorder: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(0, 75%, 60%)',\n\t\t\t\t\tlabel: 'Red'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(30, 75%, 60%)',\n\t\t\t\t\tlabel: 'Orange'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(60, 75%, 60%)',\n\t\t\t\t\tlabel: 'Yellow'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(90, 75%, 60%)',\n\t\t\t\t\tlabel: 'Light green'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(120, 75%, 60%)',\n\t\t\t\t\tlabel: 'Green'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(150, 75%, 60%)',\n\t\t\t\t\tlabel: 'Aquamarine'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(180, 75%, 60%)',\n\t\t\t\t\tlabel: 'Turquoise'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(210, 75%, 60%)',\n\t\t\t\t\tlabel: 'Light blue'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(240, 75%, 60%)',\n\t\t\t\t\tlabel: 'Blue'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcolor: 'hsl(270, 75%, 60%)',\n\t\t\t\t\tlabel: 'Purple'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcolumns: 5\n\t\t} );\n\n\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tstyles: {\n\t\t\t\t\t'color': /[\\s\\S]+/\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodel: {\n\t\t\t\tkey: FONT_COLOR,\n\t\t\t\tvalue: renderUpcastAttribute( 'color' )\n\t\t\t}\n\t\t} );\n\n\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t\t\tmodel: FONT_COLOR,\n\t\t\tview: renderDowncastElement( 'color' )\n\t\t} );\n\n\t\teditor.commands.add( FONT_COLOR, new FontColorCommand( editor ) );\n\n\t\t// Allow the font color attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: FONT_COLOR } );\n\n\t\teditor.model.schema.setAttributeProperties( FONT_COLOR, {\n\t\t\tisFormatting: true,\n\t\t\tcopyOnEnter: true\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontcolor/fontcolorui\n */\n\nimport ColorUI from '../ui/colorui';\nimport { FONT_COLOR } from '../utils';\nimport fontColorIcon from '../../theme/icons/font-color.svg';\n\n/**\n * The font color UI plugin. It introduces the `'fontColor'` dropdown.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontColorUI extends ColorUI {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tconst t = editor.locale.t;\n\n\t\tsuper( editor, {\n\t\t\tcommandName: FONT_COLOR,\n\t\t\tcomponentName: FONT_COLOR,\n\t\t\ticon: fontColorIcon,\n\t\t\tdropdownLabel: t( 'Font Color' )\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FontColorUI';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontcolor\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FontColorEditing from './fontcolor/fontcolorediting';\nimport FontColorUI from './fontcolor/fontcolorui';\n\n/**\n * The font color plugin.\n *\n * For a detailed overview, check the {@glink features/font font feature} documentation\n * and the {@glink api/font package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:font/fontcolor/fontcolorediting~FontColorEditing} and\n * {@link module:font/fontcolor/fontcolorui~FontColorUI} features in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontColor extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ FontColorEditing, FontColorUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FontColor';\n\t}\n}\n\n/**\n * The configuration of the font color feature.\n * It is introduced by the {@link module:font/fontcolor/fontcolorediting~FontColorEditing} feature.\n *\n * Read more in {@link module:font/fontcolor~FontColorConfig}.\n *\n * @member {module:font/fontcolor~FontColorConfig} module:core/editor/editorconfig~EditorConfig#fontColor\n */\n\n/**\n * The configuration of the font color feature.\n * This option is used by the {@link module:font/fontcolor/fontcolorediting~FontColorEditing} feature.\n *\n *\t\tClassicEditor\n *\t\t\t.create( {\n *\t\t\t\tfontColor: ... // Font color feature configuration.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface module:font/fontcolor~FontColorConfig\n */\n\n/**\n * Available font colors defined as an array of strings or objects.\n *\n * The default value registers the following colors:\n *\n *\t\tconst fontColorConfig = {\n *\t\t\tcolors: [\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 0%)',\n *\t\t\t\t\tlabel: 'Black'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 30%)',\n *\t\t\t\t\tlabel: 'Dim grey'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 60%)',\n *\t\t\t\t\tlabel: 'Grey'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 90%)',\n *\t\t\t\t\tlabel: 'Light grey'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 0%, 100%)',\n *\t\t\t\t\tlabel: 'White',\n *\t\t\t\t\thasBorder: true\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(0, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Red'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(30, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Orange'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(60, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Yellow'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(90, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Light green'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(120, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Green'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(150, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Aquamarine'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(180, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Turquoise'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(210, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Light blue'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(240, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Blue'\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tcolor: 'hsl(270, 75%, 60%)',\n *\t\t\t\t\tlabel: 'Purple'\n *\t\t\t\t}\n *\t\t\t]\n *\t\t};\n *\n * **Note**: The colors are displayed in the `'fontColor'` dropdown.\n *\n * @member {Array.<String|Object>} module:font/fontcolor~FontColorConfig#colors\n */\n\n/**\n * Represents the number of columns in the font color dropdown.\n *\n * The default value is:\n *\n *\t\tconst fontColorConfig = {\n *\t\t\tcolumns: 5\n *\t\t}\n *\n * @member {Number} module:font/fontcolor~FontColorConfig#columns\n */\n\n/**\n * Determines the maximum number of available document colors.\n * Setting it to `0` will disable the document colors feature.\n *\n * By default it equals to the {@link module:font/fontcolor~FontColorConfig#columns} value.\n *\n * Examples:\n *\n * \t// 1) Neither document colors nor columns are defined in the configuration.\n * \t// Document colors will equal 5,\n * \t// because the value will be inherited from columns,\n * \t// which has a predefined value of 5.\n * \tconst fontColorConfig = {}\n *\n * \t// 2) Document colors will equal 8, because the value will be inherited from columns.\n * \tconst fontColorConfig = {\n * \t\tcolumns: 8\n * \t}\n *\n * \t// 3) Document colors will equal 24, because it has its own value defined.\n * \tconst fontColorConfig = {\n * \t\tcolumns: 8,\n * \t\tdocumentColors: 24\n * \t}\n *\n * \t// 4) The document colors feature will be disabled.\n * \tconst fontColorConfig = {\n * \t\tcolumns: 8,\n * \t\tdocumentColors: 0\n * \t}\n *\n * @member {Number} module:font/fontcolor~FontColorConfig#documentColors\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontfamily/fontfamilycommand\n */\n\nimport FontCommand from '../fontcommand';\nimport { FONT_FAMILY } from '../utils';\n\n/**\n * The font family command. It is used by {@link module:font/fontfamily/fontfamilyediting~FontFamilyEditing}\n * to apply the font family.\n *\n *\t\teditor.execute( 'fontFamily', { value: 'Arial' } );\n *\n * **Note**: Executing the command without the value removes the attribute from the model.\n *\n * @extends module:font/fontcommand~FontCommand\n */\nexport default class FontFamilyCommand extends FontCommand {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor, FONT_FAMILY );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontfamily/utils\n */\n\n/**\n * Normalizes the {@link module:font/fontfamily~FontFamilyConfig#options configuration options}\n * to the {@link module:font/fontfamily~FontFamilyOption} format.\n *\n * @param {Array.<String|Object>} configuredOptions An array of options taken from the configuration.\n * @returns {Array.<module:font/fontfamily~FontFamilyOption>}\n */\nexport function normalizeOptions( configuredOptions ) {\n\t// Convert options to objects.\n\treturn configuredOptions\n\t\t.map( getOptionDefinition )\n\t\t// Filter out undefined values that `getOptionDefinition` might return.\n\t\t.filter( option => !!option );\n}\n\n// Returns an option definition either created from string shortcut.\n// If object is passed then this method will return it without alternating it. Returns undefined for item than cannot be parsed.\n//\n// @param {String|Object} option\n// @returns {undefined|module:font/fontfamily~FontFamilyOption}\nfunction getOptionDefinition( option ) {\n\t// Treat any object as full item definition provided by user in configuration.\n\tif ( typeof option === 'object' ) {\n\t\treturn option;\n\t}\n\n\t// Handle 'default' string as a special case. It will be used to remove the fontFamily attribute.\n\tif ( option === 'default' ) {\n\t\treturn {\n\t\t\ttitle: 'Default',\n\t\t\tmodel: undefined\n\t\t};\n\t}\n\n\t// Ignore values that we cannot parse to a definition.\n\tif ( typeof option !== 'string' ) {\n\t\treturn;\n\t}\n\n\t// Return font family definition from font string.\n\treturn generateFontPreset( option );\n}\n\n// Creates a predefined preset for pixel size. It deconstructs font-family like string into full configuration option.\n// A font definition is passed as coma delimited set of font family names. Font names might be quoted.\n//\n// @param {String} A font definition form configuration.\nfunction generateFontPreset( fontDefinition ) {\n\t// Remove quotes from font names. They will be normalized later.\n\tconst fontNames = fontDefinition.replace( /\"|'/g, '' ).split( ',' );\n\n\t// The first matched font name will be used as dropdown list item title and as model value.\n\tconst firstFontName = fontNames[ 0 ];\n\n\t// CSS-compatible font names.\n\tconst cssFontNames = fontNames.map( normalizeFontNameForCSS ).join( ', ' );\n\n\treturn {\n\t\ttitle: firstFontName,\n\t\tmodel: firstFontName,\n\t\tview: {\n\t\t\tname: 'span',\n\t\t\tstyles: {\n\t\t\t\t'font-family': cssFontNames\n\t\t\t},\n\t\t\tpriority: 7\n\t\t}\n\t};\n}\n\n// Normalizes font name for the style attribute. It adds braces (') if font name contains spaces.\n//\n// @param {String} fontName\n// @returns {String}\nfunction normalizeFontNameForCSS( fontName ) {\n\tfontName = fontName.trim();\n\n\t// Compound font names should be quoted.\n\tif ( fontName.indexOf( ' ' ) > 0 ) {\n\t\tfontName = `'${ fontName }'`;\n\t}\n\n\treturn fontName;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontfamily/fontfamilyediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport FontFamilyCommand from './fontfamilycommand';\nimport { normalizeOptions } from './utils';\nimport { buildDefinition, FONT_FAMILY } from '../utils';\n\n/**\n * The font family editing feature.\n *\n * It introduces the {@link module:font/fontfamily/fontfamilycommand~FontFamilyCommand command} and\n * the `fontFamily` attribute in the {@link module:engine/model/model~Model model} which renders\n * in the {@link module:engine/view/view view} as an inline `<span>` element (`<span style=\"font-family: Arial\">`),\n * depending on the {@link module:font/fontfamily~FontFamilyConfig configuration}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontFamilyEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FontFamilyEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t// Define default configuration using font families shortcuts.\n\t\teditor.config.define( FONT_FAMILY, {\n\t\t\toptions: [\n\t\t\t\t'default',\n\t\t\t\t'Arial, Helvetica, sans-serif',\n\t\t\t\t'Courier New, Courier, monospace',\n\t\t\t\t'Georgia, serif',\n\t\t\t\t'Lucida Sans Unicode, Lucida Grande, sans-serif',\n\t\t\t\t'Tahoma, Geneva, sans-serif',\n\t\t\t\t'Times New Roman, Times, serif',\n\t\t\t\t'Trebuchet MS, Helvetica, sans-serif',\n\t\t\t\t'Verdana, Geneva, sans-serif'\n\t\t\t],\n\t\t\tsupportAllValues: false\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Allow fontFamily attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: FONT_FAMILY } );\n\t\teditor.model.schema.setAttributeProperties( FONT_FAMILY, {\n\t\t\tisFormatting: true,\n\t\t\tcopyOnEnter: true\n\t\t} );\n\n\t\t// Get configured font family options without \"default\" option.\n\t\tconst options = normalizeOptions( editor.config.get( 'fontFamily.options' ) ).filter( item => item.model );\n\t\tconst definition = buildDefinition( FONT_FAMILY, options );\n\n\t\t// Set-up the two-way conversion.\n\t\tif ( editor.config.get( 'fontFamily.supportAllValues' ) ) {\n\t\t\tthis._prepareAnyValueConverters();\n\t\t} else {\n\t\t\teditor.conversion.attributeToElement( definition );\n\t\t}\n\n\t\teditor.commands.add( FONT_FAMILY, new FontFamilyCommand( editor ) );\n\t}\n\n\t/**\n\t * These converters enable keeping any value found as `style=\"font-family: *\"` as a value of an attribute on a text even\n\t * if it is not defined in the plugin configuration.\n\t *\n\t * @private\n\t */\n\t_prepareAnyValueConverters() {\n\t\tconst editor = this.editor;\n\n\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t\t\tmodel: FONT_FAMILY,\n\t\t\tview: ( attributeValue, writer ) => {\n\t\t\t\treturn writer.createAttributeElement( 'span', { style: 'font-family:' + attributeValue }, { priority: 7 } );\n\t\t\t}\n\t\t} );\n\n\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t\t\tmodel: {\n\t\t\t\tkey: FONT_FAMILY,\n\t\t\t\tvalue: viewElement => viewElement.getStyle( 'font-family' )\n\t\t\t},\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tstyles: {\n\t\t\t\t\t'font-family': /.*/\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontfamily/fontfamilyui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Model from '@ckeditor/ckeditor5-ui/src/model';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\n\nimport { createDropdown, addListToDropdown } from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\nimport { normalizeOptions } from './utils';\nimport { FONT_FAMILY } from '../utils';\nimport fontFamilyIcon from '../../theme/icons/font-family.svg';\n\n/**\n * The font family UI plugin. It introduces the `'fontFamily'` dropdown.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontFamilyUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\tconst options = this._getLocalizedOptions();\n\n\t\tconst command = editor.commands.get( FONT_FAMILY );\n\n\t\t// Register UI component.\n\t\teditor.ui.componentFactory.add( FONT_FAMILY, locale => {\n\t\t\tconst dropdownView = createDropdown( locale );\n\t\t\taddListToDropdown( dropdownView, _prepareListOptions( options, command ) );\n\n\t\t\tdropdownView.buttonView.set( {\n\t\t\t\tlabel: t( 'Font Family' ),\n\t\t\t\ticon: fontFamilyIcon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tdropdownView.extendTemplate( {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: 'ck-font-family-dropdown'\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tdropdownView.bind( 'isEnabled' ).to( command );\n\n\t\t\t// Execute command when an item from the dropdown is selected.\n\t\t\tthis.listenTo( dropdownView, 'execute', evt => {\n\t\t\t\teditor.execute( evt.source.commandName, { value: evt.source.commandParam } );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn dropdownView;\n\t\t} );\n\t}\n\n\t/**\n\t * Returns options as defined in `config.fontFamily.options` but processed to account for\n\t * editor localization, i.e. to display {@link module:font/fontfamily~FontFamilyOption}\n\t * in the correct language.\n\t *\n\t * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\n\t * when the user configuration is defined because the editor does not exist yet.\n\t *\n\t * @private\n\t * @returns {Array.<module:font/fontfamily~FontFamilyOption>}.\n\t */\n\t_getLocalizedOptions() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\tconst options = normalizeOptions( editor.config.get( FONT_FAMILY ).options );\n\n\t\treturn options.map( option => {\n\t\t\t// The only title to localize is \"Default\" others are font names.\n\t\t\tif ( option.title === 'Default' ) {\n\t\t\t\toption.title = t( 'Default' );\n\t\t\t}\n\n\t\t\treturn option;\n\t\t} );\n\t}\n}\n\n// Prepares FontFamily dropdown items.\n// @private\n// @param {Array.<module:font/fontsize~FontSizeOption>} options\n// @param {module:font/fontsize/fontsizecommand~FontSizeCommand} command\nfunction _prepareListOptions( options, command ) {\n\tconst itemDefinitions = new Collection();\n\n\t// Create dropdown items.\n\tfor ( const option of options ) {\n\t\tconst def = {\n\t\t\ttype: 'button',\n\t\t\tmodel: new Model( {\n\t\t\t\tcommandName: FONT_FAMILY,\n\t\t\t\tcommandParam: option.model,\n\t\t\t\tlabel: option.title,\n\t\t\t\twithText: true\n\t\t\t} )\n\t\t};\n\n\t\tdef.model.bind( 'isOn' ).to( command, 'value', value => {\n\t\t\t// \"Default\" or check in strict font-family converters mode.\n\t\t\tif ( value === option.model ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( !value || !option.model ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn value.split( ',' )[ 0 ].replace( /'/g, '' ).toLowerCase() === option.model.toLowerCase();\n\t\t} );\n\n\t\t// Try to set a dropdown list item style.\n\t\tif ( option.view && option.view.styles ) {\n\t\t\tdef.model.set( 'labelStyle', `font-family: ${ option.view.styles[ 'font-family' ] }` );\n\t\t}\n\n\t\titemDefinitions.add( def );\n\t}\n\treturn itemDefinitions;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontfamily\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FontFamilyEditing from './fontfamily/fontfamilyediting';\nimport FontFamilyUI from './fontfamily/fontfamilyui';\n\n/**\n * The font family plugin.\n *\n * For a detailed overview, check the {@glink features/font font feature} documentatiom\n * and the {@glink api/font package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:font/fontfamily/fontfamilyediting~FontFamilyEditing} and\n * {@link module:font/fontfamily/fontfamilyui~FontFamilyUI} features in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontFamily extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ FontFamilyEditing, FontFamilyUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FontFamily';\n\t}\n}\n\n/**\n * The font family option descriptor.\n *\n * @typedef {Object} module:font/fontfamily~FontFamilyOption\n *\n * @property {String} title The user-readable title of the option.\n * @property {String} model The attribute's unique value in the model.\n * @property {module:engine/view/elementdefinition~ElementDefinition} view View element configuration.\n * @property {Array.<module:engine/view/elementdefinition~ElementDefinition>} [upcastAlso] An array with all matched elements that\n * the view-to-model conversion should also accept.\n */\n\n/**\n * The configuration of the font family feature.\n * It is introduced by the {@link module:font/fontfamily/fontfamilyediting~FontFamilyEditing} feature.\n *\n * Read more in {@link module:font/fontfamily~FontFamilyConfig}.\n *\n * @member {module:font/fontfamily~FontFamilyConfig} module:core/editor/editorconfig~EditorConfig#fontFamily\n */\n\n/**\n * The configuration of the font family feature.\n * This option is used by the {@link module:font/fontfamily/fontfamilyediting~FontFamilyEditing} feature.\n *\n *\t\tClassicEditor\n *\t\t\t.create( {\n * \t\t\t\tfontFamily: ... // Font family feature configuration.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface module:font/fontfamily~FontFamilyConfig\n */\n\n/**\n * Available font family options defined as an array of strings. The default value is:\n *\n *\t\tconst fontFamilyConfig = {\n *\t\t\toptions: [\n *\t\t\t\t'default',\n *\t\t\t\t'Arial, Helvetica, sans-serif',\n *\t\t\t\t'Courier New, Courier, monospace',\n *\t\t\t\t'Georgia, serif',\n *\t\t\t\t'Lucida Sans Unicode, Lucida Grande, sans-serif',\n *\t\t\t\t'Tahoma, Geneva, sans-serif',\n *\t\t\t\t'Times New Roman, Times, serif',\n *\t\t\t\t'Trebuchet MS, Helvetica, sans-serif',\n *\t\t\t\t'Verdana, Geneva, sans-serif'\n *\t\t\t]\n *\t\t};\n *\n * which configures 8 font family options. Each option consists of one or more comma–separated font family names. The first font name is\n * used as the dropdown item description in the UI.\n *\n * **Note:** The family names that consist of spaces should not have quotes (as opposed to the CSS standard). The necessary quotes\n * will be added automatically in the view. For example, the `\"Lucida Sans Unicode\"` will render as follows:\n *\n * \t\t<span style=\"font-family:'Lucida Sans Unicode', 'Lucida Grande', sans-serif\">...</span>\n *\n * The \"default\" option removes the `fontFamily` attribute from the selection. In such case, the text will\n * be rendered in the view using the default font family defined in the styles of the web page.\n *\n * Font family can be applied using the command API. To do that, use the `fontFamily` command and pass the desired family as a `value`.\n * For example, the following code will apply the `fontFamily` attribute with the `'Arial'` `value` to the current selection:\n *\n *\t\teditor.execute( 'fontFamily', { value: 'Arial' } );\n *\n * Executing the `'fontFamily'` command without any value will remove the `fontFamily` attribute from the current selection.\n *\n * @member {Array.<String|module:font/fontfamily~FontFamilyOption>} module:font/fontfamily~FontFamilyConfig#options\n */\n\n/**\n * By default the plugin removes any `font-family` value that does not match the plugin's configuration. It means that if you paste content\n * with font families that the editor does not understand, the `font-family` attribute will be removed and the content will be displayed\n * with the default font.\n *\n * You can preserve pasted font family values by switching the `supportAllValues` option to `true`:\n *\n *\t\tconst fontSizeConfig = {\n *\t\t\tsupportAllValues: true\n *\t\t};\n *\n * With this configuration font families not specified in the editor configuration will not be removed when pasting the content.\n *\n * @member {Boolean} module:font/fontfamily~FontFamilyConfig#supportAllValues\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontsize/fontsizecommand\n */\n\nimport FontCommand from '../fontcommand';\nimport { FONT_SIZE } from '../utils';\n\n/**\n * The font size command. It is used by {@link module:font/fontsize/fontsizeediting~FontSizeEditing}\n * to apply the font size.\n *\n *\t\teditor.execute( 'fontSize', { value: 'small' } );\n *\n * **Note**: Executing the command without the value removes the attribute from the model.\n *\n * @extends module:font/fontcommand~FontCommand\n */\nexport default class FontSizeCommand extends FontCommand {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor, FONT_SIZE );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontsize/utils\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Normalizes and translates the {@link module:font/fontsize~FontSizeConfig#options configuration options}\n * to the {@link module:font/fontsize~FontSizeOption} format.\n *\n * @param {Array.<String|Number|Object>} configuredOptions An array of options taken from the configuration.\n * @returns {Array.<module:font/fontsize~FontSizeOption>}\n */\nexport function normalizeOptions( configuredOptions ) {\n\t// Convert options to objects.\n\treturn configuredOptions\n\t\t.map( item => getOptionDefinition( item ) )\n\t\t// Filter out undefined values that `getOptionDefinition` might return.\n\t\t.filter( option => !!option );\n}\n\n// Default named presets map. Always create a new instance of the preset object in order to avoid modifying references.\nconst namedPresets = {\n\tget tiny() {\n\t\treturn {\n\t\t\ttitle: 'Tiny',\n\t\t\tmodel: 'tiny',\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tclasses: 'text-tiny',\n\t\t\t\tpriority: 7\n\t\t\t}\n\t\t};\n\t},\n\tget small() {\n\t\treturn {\n\t\t\ttitle: 'Small',\n\t\t\tmodel: 'small',\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tclasses: 'text-small',\n\t\t\t\tpriority: 7\n\t\t\t}\n\t\t};\n\t},\n\tget big() {\n\t\treturn {\n\t\t\ttitle: 'Big',\n\t\t\tmodel: 'big',\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tclasses: 'text-big',\n\t\t\t\tpriority: 7\n\t\t\t}\n\t\t};\n\t},\n\tget huge() {\n\t\treturn {\n\t\t\ttitle: 'Huge',\n\t\t\tmodel: 'huge',\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tclasses: 'text-huge',\n\t\t\t\tpriority: 7\n\t\t\t}\n\t\t};\n\t}\n};\n\n// Returns an option definition either from preset or creates one from number shortcut.\n// If object is passed then this method will return it without alternating it. Returns undefined for item than cannot be parsed.\n//\n// @param {String|Number|Object} item\n// @returns {undefined|module:font/fontsize~FontSizeOption}\nfunction getOptionDefinition( option ) {\n\t// Check whether passed option is a full item definition provided by user in configuration.\n\tif ( isFullItemDefinition( option ) ) {\n\t\treturn attachPriority( option );\n\t}\n\n\tconst preset = findPreset( option );\n\n\t// Item is a named preset.\n\tif ( preset ) {\n\t\treturn attachPriority( preset );\n\t}\n\n\t// 'Default' font size. It will be used to remove the fontSize attribute.\n\tif ( option === 'default' ) {\n\t\treturn {\n\t\t\tmodel: undefined,\n\t\t\ttitle: 'Default'\n\t\t};\n\t}\n\n\t// At this stage we probably have numerical value to generate a preset so parse it's value.\n\t// Discard any faulty values.\n\tif ( isNumericalDefinition( option ) ) {\n\t\treturn;\n\t}\n\n\t// Return font size definition from size value.\n\treturn generatePixelPreset( option );\n}\n\n// Creates a predefined preset for pixel size.\n//\n// @param {Number} definition Font size in pixels.\n// @returns {module:font/fontsize~FontSizeOption}\nfunction generatePixelPreset( definition ) {\n\t// Extend a short (numeric value) definition.\n\tif ( typeof definition === 'number' || typeof definition === 'string' ) {\n\t\tdefinition = {\n\t\t\ttitle: String( definition ),\n\t\t\tmodel: `${ parseFloat( definition ) }px`\n\t\t};\n\t}\n\n\tdefinition.view = {\n\t\tname: 'span',\n\t\tstyles: {\n\t\t\t'font-size': definition.model\n\t\t}\n\t};\n\n\treturn attachPriority( definition );\n}\n\n// Adds the priority to the view element definition if missing. It's required due to ckeditor/ckeditor5#2291\n//\n// @param {Object} definition\n// @param {Object} definition.title\n// @param {Object} definition.model\n// @param {Object} definition.view\n// @returns {Object}\nfunction attachPriority( definition ) {\n\tif ( !definition.view.priority ) {\n\t\tdefinition.view.priority = 7;\n\t}\n\n\treturn definition;\n}\n\n// Returns a prepared preset definition. If passed an object, a name of preset should be defined as `model` value.\n//\n// @param {String|Object} definition\n// @param {String} definition.model A preset name.\n// @returns {Object|undefined}\nfunction findPreset( definition ) {\n\treturn namedPresets[ definition ] || namedPresets[ definition.model ];\n}\n\n// We treat `definition` as completed if it is an object that contains `title`, `model` and `view` values.\n//\n// @param {Object} definition\n// @param {String} definition.title\n// @param {String} definition.model\n// @param {Object} definition.view\n// @returns {Boolean}\nfunction isFullItemDefinition( definition ) {\n\treturn typeof definition === 'object' && definition.title && definition.model && definition.view;\n}\n\n// We treat `definition` as numerical if it is a number, number-like (string) or an object with the `title` key.\n//\n// @param {Object|Number|String} definition\n// @param {Object} definition.title\n// @returns {Boolean}\nfunction isNumericalDefinition( definition ) {\n\tlet numberValue;\n\n\tif ( typeof definition === 'object' ) {\n\t\tif ( !definition.model ) {\n\t\t\t/**\n\t\t\t * Provided value as an option for {@link module:font/fontsize~FontSize} seems to invalid.\n\t\t\t *\n\t\t\t * See valid examples described in the {@link module:font/fontsize~FontSizeConfig#options plugin configuration}.\n\t\t\t *\n\t\t\t * @error font-size-invalid-definition\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'font-size-invalid-definition: Provided font size definition is invalid.', null, definition );\n\t\t} else {\n\t\t\tnumberValue = parseFloat( definition.model );\n\t\t}\n\t} else {\n\t\tnumberValue = parseFloat( definition );\n\t}\n\n\treturn isNaN( numberValue );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontsize/fontsizeediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport FontSizeCommand from './fontsizecommand';\nimport { normalizeOptions } from './utils';\nimport { buildDefinition, FONT_SIZE } from '../utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * The font size editing feature.\n *\n * It introduces the {@link module:font/fontsize/fontsizecommand~FontSizeCommand command} and the `fontSize`\n * attribute in the {@link module:engine/model/model~Model model} which renders in the {@link module:engine/view/view view}\n * as a `<span>` element with either:\n * * a style attribute (`<span style=\"font-size:12px\">...</span>`),\n * * or a class attribute (`<span class=\"text-small\">...</span>`)\n *\n * depending on the {@link module:font/fontsize~FontSizeConfig configuration}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontSizeEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FontSizeEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t// Define default configuration using named presets.\n\t\teditor.config.define( FONT_SIZE, {\n\t\t\toptions: [\n\t\t\t\t'tiny',\n\t\t\t\t'small',\n\t\t\t\t'default',\n\t\t\t\t'big',\n\t\t\t\t'huge'\n\t\t\t],\n\t\t\tsupportAllValues: false\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Allow fontSize attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: FONT_SIZE } );\n\t\teditor.model.schema.setAttributeProperties( FONT_SIZE, {\n\t\t\tisFormatting: true,\n\t\t\tcopyOnEnter: true\n\t\t} );\n\n\t\tconst supportAllValues = editor.config.get( 'fontSize.supportAllValues' );\n\n\t\t// Define view to model conversion.\n\t\tconst options = normalizeOptions( this.editor.config.get( 'fontSize.options' ) )\n\t\t\t.filter( item => item.model );\n\t\tconst definition = buildDefinition( FONT_SIZE, options );\n\n\t\t// Set-up the two-way conversion.\n\t\tif ( supportAllValues ) {\n\t\t\tthis._prepareAnyValueConverters( definition );\n\t\t} else {\n\t\t\teditor.conversion.attributeToElement( definition );\n\t\t}\n\n\t\t// Add FontSize command.\n\t\teditor.commands.add( FONT_SIZE, new FontSizeCommand( editor ) );\n\t}\n\n\t/**\n\t * These converters enable keeping any value found as `style=\"font-size: *\"` as a value of an attribute on a text even\n\t * if it is not defined in the plugin configuration.\n\t *\n\t * @param {Object} definition {@link module:engine/conversion/conversion~ConverterDefinition Converter definition} out of input data.\n\t * @private\n\t */\n\t_prepareAnyValueConverters( definition ) {\n\t\tconst editor = this.editor;\n\n\t\t// If `fontSize.supportAllValues=true`, we do not allow to use named presets in the plugin's configuration.\n\t\tconst presets = definition.model.values.filter( value => !String( value ).match( /[\\d.]+[\\w%]+/ ) );\n\n\t\tif ( presets.length ) {\n\t\t\t/**\n\t\t\t * If {@link module:font/fontsize~FontSizeConfig#supportAllValues `config.fontSize.supportAllValues`} is `true`,\n\t\t\t * you need to use numerical values as font size options.\n\t\t\t *\n\t\t\t * See valid examples described in the {@link module:font/fontsize~FontSizeConfig#options plugin configuration}.\n\t\t\t *\n\t\t\t * @error font-size-invalid-use-of-named-presets\n\t\t\t * @param {Array.<String>} presets Invalid values.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'font-size-invalid-use-of-named-presets: ' +\n\t\t\t\t'If config.fontSize.supportAllValues is set to true, you need to use numerical values as font size options.',\n\t\t\t\tnull, { presets }\n\t\t\t);\n\t\t}\n\n\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t\t\tmodel: FONT_SIZE,\n\t\t\tview: ( attributeValue, writer ) => {\n\t\t\t\tif ( !attributeValue ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn writer.createAttributeElement( 'span', { style: 'font-size:' + attributeValue }, { priority: 7 } );\n\t\t\t}\n\t\t} );\n\n\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t\t\tmodel: {\n\t\t\t\tkey: FONT_SIZE,\n\t\t\t\tvalue: viewElement => viewElement.getStyle( 'font-size' )\n\t\t\t},\n\t\t\tview: {\n\t\t\t\tname: 'span'\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontsize/fontsizeui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Model from '@ckeditor/ckeditor5-ui/src/model';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\n\nimport { createDropdown, addListToDropdown } from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\nimport { normalizeOptions } from './utils';\nimport { FONT_SIZE } from '../utils';\n\nimport fontSizeIcon from '../../theme/icons/font-size.svg';\nimport '../../theme/fontsize.css';\n\n/**\n * The font size UI plugin. It introduces the `'fontSize'` dropdown.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontSizeUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\tconst options = this._getLocalizedOptions();\n\n\t\tconst command = editor.commands.get( FONT_SIZE );\n\n\t\t// Register UI component.\n\t\teditor.ui.componentFactory.add( FONT_SIZE, locale => {\n\t\t\tconst dropdownView = createDropdown( locale );\n\t\t\taddListToDropdown( dropdownView, _prepareListOptions( options, command ) );\n\n\t\t\t// Create dropdown model.\n\t\t\tdropdownView.buttonView.set( {\n\t\t\t\tlabel: t( 'Font Size' ),\n\t\t\t\ticon: fontSizeIcon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tdropdownView.extendTemplate( {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: [\n\t\t\t\t\t\t'ck-font-size-dropdown'\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tdropdownView.bind( 'isEnabled' ).to( command );\n\n\t\t\t// Execute command when an item from the dropdown is selected.\n\t\t\tthis.listenTo( dropdownView, 'execute', evt => {\n\t\t\t\teditor.execute( evt.source.commandName, { value: evt.source.commandParam } );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn dropdownView;\n\t\t} );\n\t}\n\n\t/**\n\t * Returns options as defined in `config.fontSize.options` but processed to account for\n\t * editor localization, i.e. to display {@link module:font/fontsize~FontSizeOption}\n\t * in the correct language.\n\t *\n\t * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\n\t * when the user configuration is defined because the editor does not exist yet.\n\t *\n\t * @private\n\t * @returns {Array.<module:font/fontsize~FontSizeOption>}.\n\t */\n\t_getLocalizedOptions() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\tconst localizedTitles = {\n\t\t\tDefault: t( 'Default' ),\n\t\t\tTiny: t( 'Tiny' ),\n\t\t\tSmall: t( 'Small' ),\n\t\t\tBig: t( 'Big' ),\n\t\t\tHuge: t( 'Huge' )\n\t\t};\n\n\t\tconst options = normalizeOptions( editor.config.get( FONT_SIZE ).options );\n\n\t\treturn options.map( option => {\n\t\t\tconst title = localizedTitles[ option.title ];\n\n\t\t\tif ( title && title != option.title ) {\n\t\t\t\t// Clone the option to avoid altering the original `namedPresets` from `./utils.js`.\n\t\t\t\toption = Object.assign( {}, option, { title } );\n\t\t\t}\n\n\t\t\treturn option;\n\t\t} );\n\t}\n}\n\n// Prepares FontSize dropdown items.\n// @private\n// @param {Array.<module:font/fontsize~FontSizeOption>} options\n// @param {module:font/fontsize/fontsizecommand~FontSizeCommand} command\nfunction _prepareListOptions( options, command ) {\n\tconst itemDefinitions = new Collection();\n\n\tfor ( const option of options ) {\n\t\tconst def = {\n\t\t\ttype: 'button',\n\t\t\tmodel: new Model( {\n\t\t\t\tcommandName: FONT_SIZE,\n\t\t\t\tcommandParam: option.model,\n\t\t\t\tlabel: option.title,\n\t\t\t\tclass: 'ck-fontsize-option',\n\t\t\t\twithText: true\n\t\t\t} )\n\t\t};\n\n\t\tif ( option.view && option.view.styles ) {\n\t\t\tdef.model.set( 'labelStyle', `font-size:${ option.view.styles[ 'font-size' ] }` );\n\t\t}\n\n\t\tif ( option.view && option.view.classes ) {\n\t\t\tdef.model.set( 'class', `${ def.model.class } ${ option.view.classes }` );\n\t\t}\n\n\t\tdef.model.bind( 'isOn' ).to( command, 'value', value => value === option.model );\n\n\t\t// Add the option to the collection.\n\t\titemDefinitions.add( def );\n\t}\n\n\treturn itemDefinitions;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontsize\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FontSizeEditing from './fontsize/fontsizeediting';\nimport FontSizeUI from './fontsize/fontsizeui';\n\n/**\n * The font size plugin.\n *\n * For a detailed overview, check the {@glink features/font font feature} documentation\n * and the {@glink api/font package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:font/fontsize/fontsizeediting~FontSizeEditing} and\n * {@link module:font/fontsize/fontsizeui~FontSizeUI} features in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontSize extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ FontSizeEditing, FontSizeUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FontSize';\n\t}\n}\n\n/**\n * The font size option descriptor.\n *\n * @typedef {Object} module:font/fontsize~FontSizeOption\n *\n * @property {String} title The user-readable title of the option.\n * @property {String} model The attribute's unique value in the model.\n * @property {module:engine/view/elementdefinition~ElementDefinition} view View element configuration.\n * @property {Array.<module:engine/view/elementdefinition~ElementDefinition>} [upcastAlso] An array with all matched elements that\n * the view-to-model conversion should also accept.\n */\n\n/**\n * The configuration of the font size feature.\n * It is introduced by the {@link module:font/fontsize/fontsizeediting~FontSizeEditing} feature.\n *\n * Read more in {@link module:font/fontsize~FontSizeConfig}.\n *\n * @member {module:font/fontsize~FontSizeConfig} module:core/editor/editorconfig~EditorConfig#fontSize\n */\n\n/**\n * The configuration of the font size feature.\n * This option is used by the {@link module:font/fontsize/fontsizeediting~FontSizeEditing} feature.\n *\n * \t\tClassicEditor\n * \t\t\t.create( {\n * \t\t\t\tfontSize: ... // Font size feature configuration.\n *\t\t\t} )\n * \t\t\t.then( ... )\n * \t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface module:font/fontsize~FontSizeConfig\n */\n\n/**\n * Available font size options. Expressed as predefined presets, numerical \"pixel\" values\n * or the {@link module:font/fontsize~FontSizeOption}.\n *\n * The default value is:\n *\n *\t\tconst fontSizeConfig = {\n *\t\t\toptions: [\n *\t\t\t\t'tiny',\n * \t\t\t\t'small',\n * \t\t\t\t'default',\n * \t\t\t\t'big',\n * \t\t\t\t'huge'\n *\t\t\t]\n *\t\t};\n *\n * It defines 4 sizes: **tiny**, **small**, **big**, and **huge**. These values will be rendered as `<span>` elements in the view.\n * The **default** defines a text without the `fontSize` attribute.\n *\n * Each `<span>` has the the `class` attribute set to the corresponding size name. For instance, this is what the **small** size looks\n * like in the view:\n *\n * \t\t<span class=\"text-small\">...</span>\n *\n * As an alternative, the font size might be defined using numerical values (either as a `Number` or as a `String`):\n *\n * \t\tconst fontSizeConfig = {\n * \t\t\toptions: [ 9, 10, 11, 12, 13, 14, 15 ]\n * \t\t};\n *\n * Also, you can define a label in the dropdown for numerical values:\n *\n *\t\tconst fontSizeConfig = {\n *\t\t\toptions: [\n *\t\t\t\t{\n * \t\t\t\t \ttitle: 'Small',\n * \t\t\t\t \tmodel: '8px\n * \t\t\t\t},\n * \t\t\t\t'default',\n * \t\t\t\t{\n * \t\t\t\t \ttitle: 'Big',\n * \t\t\t\t \tmodel: '14px\n * \t\t\t\t}\n *\t\t\t]\n *\t\t};\n *\n * Font size can be applied using the command API. To do that, use the `'fontSize'` command and pass the desired font size as a `value`.\n * For example, the following code will apply the `fontSize` attribute with the **tiny** value to the current selection:\n *\n *\t\teditor.execute( 'fontSize', { value: 'tiny' } );\n *\n * Executing the `fontSize` command without value will remove the `fontSize` attribute from the current selection.\n *\n * @member {Array.<String|Number|module:font/fontsize~FontSizeOption>} module:font/fontsize~FontSizeConfig#options\n */\n\n/**\n * By default the plugin removes any `font-size` value that does not match the plugin's configuration. It means that if you paste content\n * with font sizes that the editor does not understand, the `font-size` attribute will be removed and the content will be displayed\n * with the default size.\n *\n * You can preserve pasted font size values by switching the `supportAllValues` option to `true`:\n *\n *\t\tconst fontSizeConfig = {\n *\t\t\toptions: [ 9, 10, 11, 12, 'default', 14, 15 ],\n *\t\t\tsupportAllValues: true\n *\t\t};\n *\n * **Note:** This option can only be used with numerical values as font size options.\n *\n * With this configuration font sizes not specified in the editor configuration will not be removed when pasting the content.\n *\n * @member {Boolean} module:font/fontsize~FontSizeConfig#supportAllValues\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module media-embed/converters\n */\n\n/**\n * Returns a function that converts the model \"url\" attribute to the view representation.\n *\n * Depending on the configuration, the view representation can be \"semantic\" (for the data pipeline):\n *\n *\t\t<figure class=\"media\">\n *\t\t\t<oembed url=\"foo\"></oembed>\n *\t\t</figure>\n *\n * or \"non-semantic\" (for the editing view pipeline):\n *\n *\t\t<figure class=\"media\">\n *\t\t\t<div data-oembed-url=\"foo\">[ non-semantic media preview for \"foo\" ]</div>\n *\t\t</figure>\n *\n * **Note:** Changing the model \"url\" attribute replaces the entire content of the\n * `<figure>` in the view.\n *\n * @param {module:media-embed/mediaregistry~MediaRegistry} registry The registry providing\n * the media and their content.\n * @param {Object} options\n * @param {String} [options.renderMediaPreview] When `true`, the converter will create the view in the non-semantic form.\n * @param {String} [options.renderForEditingView] When `true`, the converter will create a view specific for the\n * editing pipeline (e.g. including CSS classes, content placeholders).\n * @returns {Function}\n */\nexport function modelToViewUrlAttributeConverter( registry, options ) {\n\treturn dispatcher => {\n\t\tdispatcher.on( 'attribute:url:media', converter );\n\t};\n\n\tfunction converter( evt, data, conversionApi ) {\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst url = data.attributeNewValue;\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst figure = conversionApi.mapper.toViewElement( data.item );\n\t\tconst mediaContentElement = [ ...figure.getChildren() ]\n\t\t\t.find( child => child.getCustomProperty( 'media-content' ) );\n\n\t\t// TODO: removing the wrapper and creating it from scratch is a hack. We can do better than that.\n\t\tviewWriter.remove( mediaContentElement );\n\n\t\tconst mediaViewElement = registry.getMediaViewElement( viewWriter, url, options );\n\n\t\tviewWriter.insert( viewWriter.createPositionAt( figure, 0 ), mediaViewElement );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module widget/highlightstack\n */\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Class used to handle correct order of highlights on elements.\n *\n * When different highlights are applied to same element correct order should be preserved:\n *\n * * highlight with highest priority should be applied,\n * * if two highlights have same priority - sort by CSS class provided in\n * {@link module:engine/conversion/downcasthelpers~HighlightDescriptor}.\n *\n * This way, highlight will be applied with the same rules it is applied on texts.\n */\nexport default class HighlightStack {\n\t/**\n\t * Creates class instance.\n\t */\n\tconstructor() {\n\t\tthis._stack = [];\n\t}\n\n\t/**\n\t * Adds highlight descriptor to the stack.\n\t *\n\t * @fires change:top\n\t * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} descriptor\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n\t */\n\tadd( descriptor, writer ) {\n\t\tconst stack = this._stack;\n\n\t\t// Save top descriptor and insert new one. If top is changed - fire event.\n\t\tconst oldTop = stack[ 0 ];\n\t\tthis._insertDescriptor( descriptor );\n\t\tconst newTop = stack[ 0 ];\n\n\t\t// When new object is at the top and stores different information.\n\t\tif ( oldTop !== newTop && !compareDescriptors( oldTop, newTop ) ) {\n\t\t\tthis.fire( 'change:top', {\n\t\t\t\toldDescriptor: oldTop,\n\t\t\t\tnewDescriptor: newTop,\n\t\t\t\twriter\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Removes highlight descriptor from the stack.\n\t *\n\t * @fires change:top\n\t * @param {String} id Id of the descriptor to remove.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n\t */\n\tremove( id, writer ) {\n\t\tconst stack = this._stack;\n\n\t\tconst oldTop = stack[ 0 ];\n\t\tthis._removeDescriptor( id );\n\t\tconst newTop = stack[ 0 ];\n\n\t\t// When new object is at the top and stores different information.\n\t\tif ( oldTop !== newTop && !compareDescriptors( oldTop, newTop ) ) {\n\t\t\tthis.fire( 'change:top', {\n\t\t\t\toldDescriptor: oldTop,\n\t\t\t\tnewDescriptor: newTop,\n\t\t\t\twriter\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Inserts given descriptor in correct place in the stack. It also takes care about updating information when\n\t * descriptor with same id is already present.\n\t *\n\t * @private\n\t * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} descriptor\n\t */\n\t_insertDescriptor( descriptor ) {\n\t\tconst stack = this._stack;\n\t\tconst index = stack.findIndex( item => item.id === descriptor.id );\n\n\t\t// Inserting exact same descriptor - do nothing.\n\t\tif ( compareDescriptors( descriptor, stack[ index ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If descriptor with same id but with different information is on the stack - remove it.\n\t\tif ( index > -1 ) {\n\t\t\tstack.splice( index, 1 );\n\t\t}\n\n\t\t// Find correct place to insert descriptor in the stack.\n\t\t// It have different information (for example priority) so it must be re-inserted in correct place.\n\t\tlet i = 0;\n\n\t\twhile ( stack[ i ] && shouldABeBeforeB( stack[ i ], descriptor ) ) {\n\t\t\ti++;\n\t\t}\n\n\t\tstack.splice( i, 0, descriptor );\n\t}\n\n\t/**\n\t * Removes descriptor with given id from the stack.\n\t *\n\t * @private\n\t * @param {String} id Descriptor's id.\n\t */\n\t_removeDescriptor( id ) {\n\t\tconst stack = this._stack;\n\t\tconst index = stack.findIndex( item => item.id === id );\n\n\t\t// If descriptor with same id is on the list - remove it.\n\t\tif ( index > -1 ) {\n\t\t\tstack.splice( index, 1 );\n\t\t}\n\t}\n}\n\nmix( HighlightStack, EmitterMixin );\n\n// Compares two descriptors by checking their priority and class list.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} a\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} b\n// @returns {Boolean} Returns true if both descriptors are defined and have same priority and classes.\nfunction compareDescriptors( a, b ) {\n\treturn a && b && a.priority == b.priority && classesToString( a.classes ) == classesToString( b.classes );\n}\n\n// Checks whenever first descriptor should be placed in the stack before second one.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} a\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} b\n// @returns {Boolean}\nfunction shouldABeBeforeB( a, b ) {\n\tif ( a.priority > b.priority ) {\n\t\treturn true;\n\t} else if ( a.priority < b.priority ) {\n\t\treturn false;\n\t}\n\n\t// When priorities are equal and names are different - use classes to compare.\n\treturn classesToString( a.classes ) > classesToString( b.classes );\n}\n\n// Converts CSS classes passed with {@link module:engine/conversion/downcasthelpers~HighlightDescriptor} to\n// sorted string.\n//\n// @param {String|Array<String>} descriptor\n// @returns {String}\nfunction classesToString( classes ) {\n\treturn Array.isArray( classes ) ? classes.sort().join( ',' ) : classes;\n}\n\n/**\n * Fired when top element on {@link module:widget/highlightstack~HighlightStack} has been changed\n *\n * @event change:top\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} [data.newDescriptor] New highlight\n * descriptor. It will be `undefined` when last descriptor is removed from the stack.\n * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} [data.oldDescriptor] Old highlight\n * descriptor. It will be `undefined` when first descriptor is added to the stack.\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that can be used to modify element.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module widget/utils\n */\n\nimport HighlightStack from './highlightstack';\nimport IconView from '@ckeditor/ckeditor5-ui/src/icon/iconview';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\nimport BalloonPanelView from '@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\n\nimport dragHandleIcon from '../theme/icons/drag-handle.svg';\n\n/**\n * CSS class added to each widget element.\n *\n * @const {String}\n */\nexport const WIDGET_CLASS_NAME = 'ck-widget';\n\n/**\n * CSS class added to currently selected widget element.\n *\n * @const {String}\n */\nexport const WIDGET_SELECTED_CLASS_NAME = 'ck-widget_selected';\n\n/**\n * Returns `true` if given {@link module:engine/view/node~Node} is an {@link module:engine/view/element~Element} and a widget.\n *\n * @param {module:engine/view/node~Node} node\n * @returns {Boolean}\n */\nexport function isWidget( node ) {\n\tif ( !node.is( 'element' ) ) {\n\t\treturn false;\n\t}\n\n\treturn !!node.getCustomProperty( 'widget' );\n}\n\n/* eslint-disable max-len */\n/**\n * Converts the given {@link module:engine/view/element~Element} to a widget in the following way:\n *\n * * sets the `contenteditable` attribute to `\"true\"`,\n * * adds the `ck-widget` CSS class,\n * * adds a custom {@link module:engine/view/element~Element#getFillerOffset `getFillerOffset()`} method returning `null`,\n * * adds a custom property allowing to recognize widget elements by using {@link ~isWidget `isWidget()`},\n * * implements the {@link ~setHighlightHandling view highlight on widgets}.\n *\n * This function needs to be used in conjunction with\n * {@link module:engine/conversion/downcasthelpers~DowncastHelpers downcast conversion helpers}\n * like {@link module:engine/conversion/downcasthelpers~DowncastHelpers#elementToElement `elementToElement()`}.\n * Moreover, typically you will want to use `toWidget()` only for `editingDowncast`, while keeping the `dataDowncast` clean.\n *\n * For example, in order to convert a `<widget>` model element to `<div class=\"widget\">` in the view, you can define\n * such converters:\n *\n *\t\teditor.conversion.for( 'editingDowncast' )\n *\t\t\t.elementToElement( {\n *\t\t\t\tmodel: 'widget',\n *\t\t\t\tview: ( modelItem, writer ) => {\n *\t\t\t\t\tconst div = writer.createContainerElement( 'div', { class: 'widget' } );\n *\n *\t\t\t\t\treturn toWidget( div, writer, { label: 'some widget' } );\n *\t\t\t\t}\n *\t\t\t} );\n *\n *\t\teditor.conversion.for( 'dataDowncast' )\n *\t\t\t.elementToElement( {\n *\t\t\t\tmodel: 'widget',\n *\t\t\t\tview: ( modelItem, writer ) => {\n *\t\t\t\t\treturn writer.createContainerElement( 'div', { class: 'widget' } );\n *\t\t\t\t}\n *\t\t\t} );\n *\n * See the full source code of the widget (with a nested editable) schema definition and converters in\n * [this sample](https://github.com/ckeditor/ckeditor5-widget/blob/master/tests/manual/widget-with-nestededitable.js).\n *\n * @param {module:engine/view/element~Element} element\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {Object} [options={}]\n * @param {String|Function} [options.label] Element's label provided to the {@link ~setLabel} function. It can be passed as\n * a plain string or a function returning a string. It represents the widget for assistive technologies (like screen readers).\n * @param {Boolean} [options.hasSelectionHandle=false] If `true`, the widget will have a selection handle added.\n * @returns {module:engine/view/element~Element} Returns the same element.\n */\n/* eslint-enable max-len */\nexport function toWidget( element, writer, options = {} ) {\n\twriter.setAttribute( 'contenteditable', 'false', element );\n\n\twriter.addClass( WIDGET_CLASS_NAME, element );\n\twriter.setCustomProperty( 'widget', true, element );\n\telement.getFillerOffset = getFillerOffset;\n\n\tif ( options.label ) {\n\t\tsetLabel( element, options.label, writer );\n\t}\n\n\tif ( options.hasSelectionHandle ) {\n\t\taddSelectionHandle( element, writer );\n\t}\n\n\tsetHighlightHandling(\n\t\telement,\n\t\twriter,\n\t\t( element, descriptor, writer ) => writer.addClass( normalizeToArray( descriptor.classes ), element ),\n\t\t( element, descriptor, writer ) => writer.removeClass( normalizeToArray( descriptor.classes ), element )\n\t);\n\n\treturn element;\n\n\t// Normalizes CSS class in descriptor that can be provided in form of an array or a string.\n\tfunction normalizeToArray( classes ) {\n\t\treturn Array.isArray( classes ) ? classes : [ classes ];\n\t}\n}\n\n/**\n * Sets highlight handling methods. Uses {@link module:widget/highlightstack~HighlightStack} to\n * properly determine which highlight descriptor should be used at given time.\n *\n * @param {module:engine/view/element~Element} element\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {Function} add\n * @param {Function} remove\n */\nexport function setHighlightHandling( element, writer, add, remove ) {\n\tconst stack = new HighlightStack();\n\n\tstack.on( 'change:top', ( evt, data ) => {\n\t\tif ( data.oldDescriptor ) {\n\t\t\tremove( element, data.oldDescriptor, data.writer );\n\t\t}\n\n\t\tif ( data.newDescriptor ) {\n\t\t\tadd( element, data.newDescriptor, data.writer );\n\t\t}\n\t} );\n\n\twriter.setCustomProperty( 'addHighlight', ( element, descriptor, writer ) => stack.add( descriptor, writer ), element );\n\twriter.setCustomProperty( 'removeHighlight', ( element, id, writer ) => stack.remove( id, writer ), element );\n}\n\n/**\n * Sets label for given element.\n * It can be passed as a plain string or a function returning a string. Function will be called each time label is retrieved by\n * {@link ~getLabel `getLabel()`}.\n *\n * @param {module:engine/view/element~Element} element\n * @param {String|Function} labelOrCreator\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n */\nexport function setLabel( element, labelOrCreator, writer ) {\n\twriter.setCustomProperty( 'widgetLabel', labelOrCreator, element );\n}\n\n/**\n * Returns the label of the provided element.\n *\n * @param {module:engine/view/element~Element} element\n * @returns {String}\n */\nexport function getLabel( element ) {\n\tconst labelCreator = element.getCustomProperty( 'widgetLabel' );\n\n\tif ( !labelCreator ) {\n\t\treturn '';\n\t}\n\n\treturn typeof labelCreator == 'function' ? labelCreator() : labelCreator;\n}\n\n/**\n * Adds functionality to the provided {@link module:engine/view/editableelement~EditableElement} to act as a widget's editable:\n *\n * * sets the `contenteditable` attribute to `true` when {@link module:engine/view/editableelement~EditableElement#isReadOnly} is `false`,\n * otherwise sets it to `false`,\n * * adds the `ck-editor__editable` and `ck-editor__nested-editable` CSS classes,\n * * adds the `ck-editor__nested-editable_focused` CSS class when the editable is focused and removes it when it is blurred.\n *\n * Similarly to {@link ~toWidget `toWidget()`} this function should be used in `dataDowncast` only and it is usually\n * used together with {@link module:engine/conversion/downcasthelpers~DowncastHelpers#elementToElement `elementToElement()`}.\n *\n * For example, in order to convert a `<nested>` model element to `<div class=\"nested\">` in the view, you can define\n * such converters:\n *\n *\t\teditor.conversion.for( 'editingDowncast' )\n *\t\t\t.elementToElement( {\n *\t\t\t\tmodel: 'nested',\n *\t\t\t\tview: ( modelItem, writer ) => {\n *\t\t\t\t\tconst div = writer.createEditableElement( 'div', { class: 'nested' } );\n *\n *\t\t\t\t\treturn toWidgetEditable( nested, writer );\n *\t\t\t\t}\n *\t\t\t} );\n *\n *\t\teditor.conversion.for( 'dataDowncast' )\n *\t\t\t.elementToElement( {\n *\t\t\t\tmodel: 'nested',\n *\t\t\t\tview: ( modelItem, writer ) => {\n *\t\t\t\t\treturn writer.createContainerElement( 'div', { class: 'nested' } );\n *\t\t\t\t}\n *\t\t\t} );\n *\n * See the full source code of the widget (with nested editable) schema definition and converters in\n * [this sample](https://github.com/ckeditor/ckeditor5-widget/blob/master/tests/manual/widget-with-nestededitable.js).\n *\n * @param {module:engine/view/editableelement~EditableElement} editable\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @returns {module:engine/view/editableelement~EditableElement} Returns the same element that was provided in the `editable` parameter\n */\nexport function toWidgetEditable( editable, writer ) {\n\twriter.addClass( [ 'ck-editor__editable', 'ck-editor__nested-editable' ], editable );\n\n\t// Set initial contenteditable value.\n\twriter.setAttribute( 'contenteditable', editable.isReadOnly ? 'false' : 'true', editable );\n\n\t// Bind the contenteditable property to element#isReadOnly.\n\teditable.on( 'change:isReadOnly', ( evt, property, is ) => {\n\t\twriter.setAttribute( 'contenteditable', is ? 'false' : 'true', editable );\n\t} );\n\n\teditable.on( 'change:isFocused', ( evt, property, is ) => {\n\t\tif ( is ) {\n\t\t\twriter.addClass( 'ck-editor__nested-editable_focused', editable );\n\t\t} else {\n\t\t\twriter.removeClass( 'ck-editor__nested-editable_focused', editable );\n\t\t}\n\t} );\n\n\treturn editable;\n}\n\n/**\n * Returns a model position which is optimal (in terms of UX) for inserting a widget block.\n *\n * For instance, if a selection is in the middle of a paragraph, the position before this paragraph\n * will be returned so that it is not split. If the selection is at the end of a paragraph,\n * the position after this paragraph will be returned.\n *\n * Note: If the selection is placed in an empty block, that block will be returned. If that position\n * is then passed to {@link module:engine/model/model~Model#insertContent},\n * the block will be fully replaced by the image.\n *\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection based on which the insertion position should be calculated.\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {module:engine/model/position~Position} The optimal position.\n */\nexport function findOptimalInsertionPosition( selection, model ) {\n\tconst selectedElement = selection.getSelectedElement();\n\n\tif ( selectedElement && model.schema.isBlock( selectedElement ) ) {\n\t\treturn model.createPositionAfter( selectedElement );\n\t}\n\n\tconst firstBlock = selection.getSelectedBlocks().next().value;\n\n\tif ( firstBlock ) {\n\t\t// If inserting into an empty block – return position in that block. It will get\n\t\t// replaced with the image by insertContent(). #42.\n\t\tif ( firstBlock.isEmpty ) {\n\t\t\treturn model.createPositionAt( firstBlock, 0 );\n\t\t}\n\n\t\tconst positionAfter = model.createPositionAfter( firstBlock );\n\n\t\t// If selection is at the end of the block - return position after the block.\n\t\tif ( selection.focus.isTouching( positionAfter ) ) {\n\t\t\treturn positionAfter;\n\t\t}\n\n\t\t// Otherwise return position before the block.\n\t\treturn model.createPositionBefore( firstBlock );\n\t}\n\n\treturn selection.focus;\n}\n\n/**\n * A util to be used in order to map view positions to correct model positions when implementing a widget\n * which renders non-empty view element for an empty model element.\n *\n * For example:\n *\n *\t\t// Model:\n *\t\t<placeholder type=\"name\"></placeholder>\n *\n *\t\t// View:\n *\t\t<span class=\"placeholder\">name</span>\n *\n * In such case, view positions inside `<span>` cannot be correct mapped to the model (because the model element is empty).\n * To handle mapping positions inside `<span class=\"placeholder\">` to the model use this util as follows:\n *\n *\t\teditor.editing.mapper.on(\n *\t\t\t'viewToModelPosition',\n *\t\t\tviewToModelPositionOutsideModelElement( model, viewElement => viewElement.hasClass( 'placeholder' ) )\n *\t\t);\n *\n * The callback will try to map the view offset of selection to an expected model position.\n *\n * 1. When the position is at the end (or in the middle) of the inline widget:\n *\n *\t\t// View:\n *\t\t<p>foo <span class=\"placeholder\">name|</span> bar</p>\n *\n *\t\t// Model:\n *\t\t<paragraph>foo <placeholder type=\"name\"></placeholder>| bar</paragraph>\n *\n * 2. When the position is at the beginning of the inline widget:\n *\n *\t\t// View:\n *\t\t<p>foo <span class=\"placeholder\">|name</span> bar</p>\n *\n *\t\t// Model:\n *\t\t<paragraph>foo |<placeholder type=\"name\"></placeholder> bar</paragraph>\n *\n * @param {module:engine/model/model~Model} model Model instance on which the callback operates.\n * @param {Function} viewElementMatcher Function that is passed a view element and should return `true` if the custom mapping\n * should be applied to the given view element.\n * @return {Function}\n */\nexport function viewToModelPositionOutsideModelElement( model, viewElementMatcher ) {\n\treturn ( evt, data ) => {\n\t\tconst { mapper, viewPosition } = data;\n\n\t\tconst viewParent = mapper.findMappedViewAncestor( viewPosition );\n\n\t\tif ( !viewElementMatcher( viewParent ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelParent = mapper.toModelElement( viewParent );\n\n\t\tdata.modelPosition = model.createPositionAt( modelParent, viewPosition.isAtStart ? 'before' : 'after' );\n\t};\n}\n\n/**\n * A positioning function passed to the {@link module:utils/dom/position~getOptimalPosition} helper as a last resort\n * when attaching {@link  module:ui/panel/balloon/balloonpanelview~BalloonPanelView balloon UI} to widgets.\n * It comes in handy when a widget is longer than the visual viewport of the web browser and/or upper/lower boundaries\n * of a widget are off screen because of the web page scroll.\n *\n *\t                                       ┌─┄┄┄┄┄┄┄┄┄Widget┄┄┄┄┄┄┄┄┄┐\n *\t                                       ┊                         ┊\n *\t┌────────────Viewport───────────┐   ┌──╁─────────Viewport────────╁──┐\n *\t│  ┏━━━━━━━━━━Widget━━━━━━━━━┓  │   │  ┃            ^            ┃  │\n *\t│  ┃            ^            ┃  │   │  ┃   ╭───────/ \\───────╮   ┃  │\n *\t│  ┃   ╭───────/ \\───────╮   ┃  │   │  ┃   │     Balloon     │   ┃  │\n *\t│  ┃   │     Balloon     │   ┃  │   │  ┃   ╰─────────────────╯   ┃  │\n *\t│  ┃   ╰─────────────────╯   ┃  │   │  ┃                         ┃  │\n *\t│  ┃                         ┃  │   │  ┃                         ┃  │\n *\t│  ┃                         ┃  │   │  ┃                         ┃  │\n *\t│  ┃                         ┃  │   │  ┃                         ┃  │\n *\t│  ┃                         ┃  │   │  ┃                         ┃  │\n *\t│  ┃                         ┃  │   │  ┃                         ┃  │\n *\t│  ┃                         ┃  │   │  ┃                         ┃  │\n *\t└──╀─────────────────────────╀──┘   └──╀─────────────────────────╀──┘\n *\t   ┊                         ┊         ┊                         ┊\n *\t   ┊                         ┊         └┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┘\n *\t   ┊                         ┊\n *\t   └┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┘\n *\n * **Note**: Works best if used together with\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions default `BalloonPanelView` positions}\n * like `northArrowSouth` and `southArrowNorth`; the transition between these two and this position is smooth.\n *\n * @param {module:utils/dom/rect~Rect} widgetRect A rect of the widget.\n * @param {module:utils/dom/rect~Rect} balloonRect A rect of the balloon.\n * @returns {module:utils/dom/position~Position|null}\n */\nexport function centeredBalloonPositionForLongWidgets( widgetRect, balloonRect ) {\n\tconst viewportRect = new Rect( global.window );\n\tconst viewportWidgetInsersectionRect = viewportRect.getIntersection( widgetRect );\n\n\tconst balloonTotalHeight = balloonRect.height + BalloonPanelView.arrowVerticalOffset;\n\n\t// If there is enough space above or below the widget then this position should not be used.\n\tif ( widgetRect.top - balloonTotalHeight > viewportRect.top || widgetRect.bottom + balloonTotalHeight < viewportRect.bottom ) {\n\t\treturn null;\n\t}\n\n\t// Because this is a last resort positioning, to keep things simple we're not playing with positions of the arrow\n\t// like, for instance, \"south west\" or whatever. Just try to keep the balloon in the middle of the visible area of\n\t// the widget for as long as it is possible. If the widgets becomes invisible (because cropped by the viewport),\n\t// just... place the balloon in the middle of it (because why not?).\n\tconst targetRect = viewportWidgetInsersectionRect || widgetRect;\n\tconst left = targetRect.left + targetRect.width / 2 - balloonRect.width / 2;\n\n\treturn {\n\t\ttop: Math.max( widgetRect.top, 0 ) + BalloonPanelView.arrowVerticalOffset,\n\t\tleft,\n\t\tname: 'arrow_n'\n\t};\n}\n\n// Default filler offset function applied to all widget elements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n\n// Adds a drag handle to the widget.\n//\n// @param {module:engine/view/containerelement~ContainerElement}\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\nfunction addSelectionHandle( widgetElement, writer ) {\n\tconst selectionHandle = writer.createUIElement( 'div', { class: 'ck ck-widget__selection-handle' }, function( domDocument ) {\n\t\tconst domElement = this.toDomElement( domDocument );\n\n\t\t// Use the IconView from the ui library.\n\t\tconst icon = new IconView();\n\t\ticon.set( 'content', dragHandleIcon );\n\n\t\t// Render the icon view right away to append its #element to the selectionHandle DOM element.\n\t\ticon.render();\n\n\t\tdomElement.appendChild( icon.element );\n\n\t\treturn domElement;\n\t} );\n\n\t// Append the selection handle into the widget wrapper.\n\twriter.insert( writer.createPositionAt( widgetElement, 0 ), selectionHandle );\n\twriter.addClass( [ 'ck-widget_with-selection-handle' ], widgetElement );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module media-embed/utils\n */\n\nimport { isWidget, toWidget } from '@ckeditor/ckeditor5-widget/src/utils';\n\n/**\n * Converts a given {@link module:engine/view/element~Element} to a media embed widget:\n * * Adds a {@link module:engine/view/element~Element#_setCustomProperty custom property} allowing to recognize the media widget element.\n * * Calls the {@link module:widget/utils~toWidget} function with the proper element's label creator.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer An instance of the view writer.\n * @param {String} label The element's label.\n * @returns {module:engine/view/element~Element}\n */\nexport function toMediaWidget( viewElement, writer, label ) {\n\twriter.setCustomProperty( 'media', true, viewElement );\n\n\treturn toWidget( viewElement, writer, { label } );\n}\n\n/**\n * Returns a media widget editing view element if one is selected.\n *\n * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} selection\n * @returns {module:engine/view/element~Element|null}\n */\nexport function getSelectedMediaViewWidget( selection ) {\n\tconst viewElement = selection.getSelectedElement();\n\n\tif ( viewElement && isMediaWidget( viewElement ) ) {\n\t\treturn viewElement;\n\t}\n\n\treturn null;\n}\n\n/**\n * Checks if a given view element is a media widget.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @returns {Boolean}\n */\nexport function isMediaWidget( viewElement ) {\n\treturn !!viewElement.getCustomProperty( 'media' ) && isWidget( viewElement );\n}\n\n/**\n * Creates a view element representing the media. Either \"semantic\" one for the data pipeline:\n *\n *\t\t<figure class=\"media\">\n *\t\t\t<oembed url=\"foo\"></oembed>\n *\t\t</figure>\n *\n * or \"non-semantic\" (for the editing view pipeline):\n *\n *\t\t<figure class=\"media\">\n *\t\t\t<div data-oembed-url=\"foo\">[ non-semantic media preview for \"foo\" ]</div>\n *\t\t</figure>\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:media-embed/mediaregistry~MediaRegistry} registry\n * @param {String} url\n * @param {Object} options\n * @param {String} [options.useSemanticWrapper]\n * @param {String} [options.renderForEditingView]\n * @returns {module:engine/view/containerelement~ContainerElement}\n */\nexport function createMediaFigureElement( writer, registry, url, options ) {\n\tconst figure = writer.createContainerElement( 'figure', { class: 'media' } );\n\n\t// TODO: This is a hack. Without it, the figure in the data pipeline will contain &nbsp; because\n\t// its only child is the UIElement (wrapper).\n\t//\n\t// Note: The hack is a copy&paste from widget utils; it makes the figure act like it's a widget.\n\tfigure.getFillerOffset = getFillerOffset;\n\n\twriter.insert( writer.createPositionAt( figure, 0 ), registry.getMediaViewElement( writer, url, options ) );\n\n\treturn figure;\n}\n\n/**\n * Returns a selected media element in the model, if any.\n *\n * @param {module:engine/model/selection~Selection} selection\n * @returns {module:engine/model/element~Element|null}\n */\nexport function getSelectedMediaModelWidget( selection ) {\n\tconst selectedElement = selection.getSelectedElement();\n\n\tif ( selectedElement && selectedElement.is( 'media' ) ) {\n\t\treturn selectedElement;\n\t}\n\n\treturn null;\n}\n\n/**\n * Creates a media element and inserts it into the model.\n *\n * **Note**: This method will use {@link module:engine/model/model~Model#insertContent `model.insertContent()`} logic of inserting content\n * if no `insertPosition` is passed.\n *\n * @param {module:engine/model/model~Model} model\n * @param {String} url An URL of an embeddable media.\n * @param {module:engine/model/position~Position} [insertPosition] Position to insert media. If not specified,\n * the default behavior of {@link module:engine/model/model~Model#insertContent `model.insertContent()`} will\n * be applied.\n */\nexport function insertMedia( model, url, insertPosition ) {\n\tmodel.change( writer => {\n\t\tconst mediaElement = writer.createElement( 'media', { url } );\n\n\t\tmodel.insertContent( mediaElement, insertPosition );\n\n\t\twriter.setSelection( mediaElement, 'on' );\n\t} );\n}\n\nfunction getFillerOffset() {\n\treturn null;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module media-embed/mediaembedcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { findOptimalInsertionPosition } from '@ckeditor/ckeditor5-widget/src/utils';\nimport { getSelectedMediaModelWidget, insertMedia } from './utils';\n\n/**\n * The insert media command.\n *\n * The command is registered by the {@link module:media-embed/mediaembedediting~MediaEmbedEditing} as `'mediaEmbed'`.\n *\n * To insert media at the current selection, execute the command and specify the URL:\n *\n *\t\teditor.execute( 'mediaEmbed', 'http://url.to.the/media' );\n *\n * @extends module:core/command~Command\n */\nexport default class MediaEmbedCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst schema = model.schema;\n\t\tconst position = selection.getFirstPosition();\n\t\tconst selectedMedia = getSelectedMediaModelWidget( selection );\n\n\t\tlet parent = position.parent;\n\n\t\tif ( parent != parent.root ) {\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\tthis.value = selectedMedia ? selectedMedia.getAttribute( 'url' ) : null;\n\t\tthis.isEnabled = schema.checkChild( parent, 'media' );\n\t}\n\n\t/**\n\t * Executes the command, which either:\n\t *\n\t * * updates the URL of the selected media,\n\t * * inserts the new media into the editor and puts the selection around it.\n\t *\n\t * @fires execute\n\t * @param {String} url The URL of the media.\n\t */\n\texecute( url ) {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst selectedMedia = getSelectedMediaModelWidget( selection );\n\n\t\tif ( selectedMedia ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.setAttribute( 'url', url, selectedMedia );\n\t\t\t} );\n\t\t} else {\n\t\t\tconst insertPosition = findOptimalInsertionPosition( selection, model );\n\n\t\t\tinsertMedia( model, url, insertPosition );\n\t\t}\n\t}\n}\n\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module media-embed/mediaregistry\n */\n\n/* globals console */\n\nimport mediaPlaceholderIcon from '../theme/icons/media-placeholder.svg';\nimport TooltipView from '@ckeditor/ckeditor5-ui/src/tooltip/tooltipview';\nimport IconView from '@ckeditor/ckeditor5-ui/src/icon/iconview';\nimport Template from '@ckeditor/ckeditor5-ui/src/template';\nimport { attachLinkToDocumentation } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nconst mediaPlaceholderIconViewBox = '0 0 64 42';\n\n/**\n * A bridge between the raw media content provider definitions and the editor view content.\n *\n * It helps translating media URLs to corresponding {@link module:engine/view/element~Element view elements}.\n *\n * Mostly used by the {@link module:media-embed/mediaembedediting~MediaEmbedEditing} plugin.\n */\nexport default class MediaRegistry {\n\t/**\n\t * Creates an instance of the {@link module:media-embed/mediaregistry~MediaRegistry} class.\n\t *\n\t * @param {module:utils/locale~Locale} locale The localization services instance.\n\t * @param {module:media-embed/mediaembed~MediaEmbedConfig} config The configuration of the media embed feature.\n\t */\n\tconstructor( locale, config ) {\n\t\tconst providers = config.providers;\n\t\tconst extraProviders = config.extraProviders || [];\n\t\tconst removedProviders = new Set( config.removeProviders );\n\t\tconst providerDefinitions = providers\n\t\t\t.concat( extraProviders )\n\t\t\t.filter( provider => {\n\t\t\t\tconst name = provider.name;\n\n\t\t\t\tif ( !name ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * One of the providers (or extra providers) specified in the media embed configuration\n\t\t\t\t\t * has no name and will not be used by the editor. In order to get this media\n\t\t\t\t\t * provider working, double check your editor configuration.\n\t\t\t\t\t *\n\t\t\t\t\t * @warning media-embed-no-provider-name\n\t\t\t\t\t */\n\t\t\t\t\tconsole.warn( attachLinkToDocumentation(\n\t\t\t\t\t\t'media-embed-no-provider-name: The configured media provider has no name and cannot be used.'\n\t\t\t\t\t), { provider } );\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn !removedProviders.has( name );\n\t\t\t} );\n\n\t\t/**\n\t\t * The locale {@link module:utils/locale~Locale} instance.\n\t\t *\n\t\t * @member {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = locale;\n\n\t\t/**\n\t\t * The media provider definitions available for the registry. Usually corresponding with the\n\t\t * {@link module:media-embed/mediaembed~MediaEmbedConfig media configuration}.\n\t\t *\n\t\t * @member {Array}\n\t\t */\n\t\tthis.providerDefinitions = providerDefinitions;\n\t}\n\n\t/**\n\t * Checks whether the passed URL is representing a certain media type allowed in the editor.\n\t *\n\t * @param {String} url The URL to be checked\n\t * @returns {Boolean}\n\t */\n\thasMedia( url ) {\n\t\treturn !!this._getMedia( url );\n\t}\n\n\t/**\n\t * For the given media URL string and options, it returns the {@link module:engine/view/element~Element view element}\n\t * representing that media.\n\t *\n\t * **Note:** If no URL is specified, an empty view element is returned.\n\t *\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer The view writer used to produce a view element.\n\t * @param {String} url The URL to be translated into a view element.\n\t * @param {Object} options\n\t * @param {String} [options.renderMediaPreview]\n\t * @param {String} [options.renderForEditingView]\n\t * @returns {module:engine/view/element~Element}\n\t */\n\tgetMediaViewElement( writer, url, options ) {\n\t\treturn this._getMedia( url ).getViewElement( writer, options );\n\t}\n\n\t/**\n\t * Returns a `Media` instance for the given URL.\n\t *\n\t * @protected\n\t * @param {String} url The URL of the media.\n\t * @returns {module:media-embed/mediaregistry~Media|null} The `Media` instance or `null` when there is none.\n\t */\n\t_getMedia( url ) {\n\t\tif ( !url ) {\n\t\t\treturn new Media( this.locale );\n\t\t}\n\n\t\turl = url.trim();\n\n\t\tfor ( const definition of this.providerDefinitions ) {\n\t\t\tconst previewRenderer = definition.html;\n\t\t\tlet pattern = definition.url;\n\n\t\t\tif ( !Array.isArray( pattern ) ) {\n\t\t\t\tpattern = [ pattern ];\n\t\t\t}\n\n\t\t\tfor ( const subPattern of pattern ) {\n\t\t\t\tconst match = this._getUrlMatches( url, subPattern );\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\treturn new Media( this.locale, url, match, previewRenderer );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Tries to match `url` to `pattern`.\n\t *\n\t * @private\n\t * @param {String} url The URL of the media.\n\t * @param {RegExp} pattern The pattern that should accept the media URL.\n\t * @returns {Array|null}\n\t */\n\t_getUrlMatches( url, pattern ) {\n\t\t// 1. Try to match without stripping the protocol and \"www\" subdomain.\n\t\tlet match = url.match( pattern );\n\n\t\tif ( match ) {\n\t\t\treturn match;\n\t\t}\n\n\t\t// 2. Try to match after stripping the protocol.\n\t\tlet rawUrl = url.replace( /^https?:\\/\\//, '' );\n\t\tmatch = rawUrl.match( pattern );\n\n\t\tif ( match ) {\n\t\t\treturn match;\n\t\t}\n\n\t\t// 3. Try to match after stripping the \"www\" subdomain.\n\t\trawUrl = rawUrl.replace( /^www\\./, '' );\n\t\tmatch = rawUrl.match( pattern );\n\n\t\tif ( match ) {\n\t\t\treturn match;\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\n/**\n * Represents media defined by the provider configuration.\n *\n * It can be rendered to the {@link module:engine/view/element~Element view element} and used in the editing or data pipeline.\n *\n * @private\n */\nclass Media {\n\tconstructor( locale, url, match, previewRenderer ) {\n\t\t/**\n\t\t * The URL this Media instance represents.\n\t\t *\n\t\t * @member {String}\n\t\t */\n\t\tthis.url = this._getValidUrl( url );\n\n\t\t/**\n\t\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t\t *\n\t\t * @see module:utils/locale~Locale#t\n\t\t * @method\n\t\t */\n\t\tthis._t = locale.t;\n\n\t\t/**\n\t\t * The output of the `RegExp.match` which validated the {@link #url} of this media.\n\t\t *\n\t\t * @member {Object}\n\t\t */\n\t\tthis._match = match;\n\n\t\t/**\n\t\t * The function returning the HTML string preview of this media.\n\t\t *\n\t\t * @member {Function}\n\t\t */\n\t\tthis._previewRenderer = previewRenderer;\n\t}\n\n\t/**\n\t * Returns the view element representation of the media.\n\t *\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer The view writer used to produce a view element.\n\t * @param {Object} options\n\t * @param {String} [options.renderMediaPreview]\n\t * @param {String} [options.renderForEditingView]\n\t * @returns {module:engine/view/element~Element}\n\t */\n\tgetViewElement( writer, options ) {\n\t\tconst attributes = {};\n\t\tlet viewElement;\n\n\t\tif ( options.renderForEditingView || ( options.renderMediaPreview && this.url && this._previewRenderer ) ) {\n\t\t\tif ( this.url ) {\n\t\t\t\tattributes[ 'data-oembed-url' ] = this.url;\n\t\t\t}\n\n\t\t\tif ( options.renderForEditingView ) {\n\t\t\t\tattributes.class = 'ck-media__wrapper';\n\t\t\t}\n\n\t\t\tconst mediaHtml = this._getPreviewHtml( options );\n\n\t\t\tviewElement = writer.createUIElement( 'div', attributes, function( domDocument ) {\n\t\t\t\tconst domElement = this.toDomElement( domDocument );\n\n\t\t\t\tdomElement.innerHTML = mediaHtml;\n\n\t\t\t\treturn domElement;\n\t\t\t} );\n\t\t} else {\n\t\t\tif ( this.url ) {\n\t\t\t\tattributes.url = this.url;\n\t\t\t}\n\n\t\t\tviewElement = writer.createEmptyElement( 'oembed', attributes );\n\t\t}\n\n\t\twriter.setCustomProperty( 'media-content', true, viewElement );\n\n\t\treturn viewElement;\n\t}\n\n\t/**\n\t * Returns the HTML string of the media content preview.\n\t *\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer The view writer used to produce a view element.\n\t * @param {Object} options\n\t * @param {String} [options.renderForEditingView]\n\t * @returns {String}\n\t */\n\t_getPreviewHtml( options ) {\n\t\tif ( this._previewRenderer ) {\n\t\t\treturn this._previewRenderer( this._match );\n\t\t} else {\n\t\t\t// The placeholder only makes sense for editing view and media which have URLs.\n\t\t\t// Placeholder is never displayed in data and URL-less media have no content.\n\t\t\tif ( this.url && options.renderForEditingView ) {\n\t\t\t\treturn this._getPlaceholderHtml();\n\t\t\t}\n\n\t\t\treturn '';\n\t\t}\n\t}\n\n\t/**\n\t * Returns the placeholder HTML when the media has no content preview.\n\t *\n\t * @returns {String}\n\t */\n\t_getPlaceholderHtml() {\n\t\tconst tooltip = new TooltipView();\n\t\tconst icon = new IconView();\n\n\t\ttooltip.text = this._t( 'Open media in new tab' );\n\t\ticon.content = mediaPlaceholderIcon;\n\t\ticon.viewBox = mediaPlaceholderIconViewBox;\n\n\t\tconst placeholder = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck ck-reset_all ck-media__placeholder'\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: 'ck-media__placeholder__icon'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [ icon ]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'a',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: 'ck-media__placeholder__url',\n\t\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\t\trel: 'noopener noreferrer',\n\t\t\t\t\t\thref: this.url\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttag: 'span',\n\t\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t\tclass: 'ck-media__placeholder__url__text'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tchildren: [ this.url ]\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttooltip\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t} ).render();\n\n\t\treturn placeholder.outerHTML;\n\t}\n\n\t/**\n\t * Returns the full URL to the specified media.\n\t *\n\t * @param {String} url The URL of the media.\n\t * @returns {String|null}\n\t */\n\t_getValidUrl( url ) {\n\t\tif ( !url ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( url.match( /^https?/ ) ) {\n\t\t\treturn url;\n\t\t}\n\n\t\treturn 'https://' + url;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module media-embed/mediaembedediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport { modelToViewUrlAttributeConverter } from './converters';\nimport MediaEmbedCommand from './mediaembedcommand';\nimport MediaRegistry from './mediaregistry';\nimport { toMediaWidget, createMediaFigureElement } from './utils';\n\nimport '../theme/mediaembedediting.css';\n\n/**\n * The media embed editing feature.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class MediaEmbedEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'MediaEmbedEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'mediaEmbed', {\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tname: 'dailymotion',\n\t\t\t\t\turl: /^dailymotion\\.com\\/video\\/(\\w+)/,\n\t\t\t\t\thtml: match => {\n\t\t\t\t\t\tconst id = match[ 1 ];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t'<div style=\"position: relative; padding-bottom: 100%; height: 0; \">' +\n\t\t\t\t\t\t\t\t`<iframe src=\"https://www.dailymotion.com/embed/video/${ id }\" ` +\n\t\t\t\t\t\t\t\t\t'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' +\n\t\t\t\t\t\t\t\t\t'frameborder=\"0\" width=\"480\" height=\"270\" allowfullscreen allow=\"autoplay\">' +\n\t\t\t\t\t\t\t\t'</iframe>' +\n\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tname: 'spotify',\n\t\t\t\t\turl: [\n\t\t\t\t\t\t/^open\\.spotify\\.com\\/(artist\\/\\w+)/,\n\t\t\t\t\t\t/^open\\.spotify\\.com\\/(album\\/\\w+)/,\n\t\t\t\t\t\t/^open\\.spotify\\.com\\/(track\\/\\w+)/\n\t\t\t\t\t],\n\t\t\t\t\thtml: match => {\n\t\t\t\t\t\tconst id = match[ 1 ];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t'<div style=\"position: relative; padding-bottom: 100%; height: 0; padding-bottom: 126%;\">' +\n\t\t\t\t\t\t\t\t`<iframe src=\"https://open.spotify.com/embed/${ id }\" ` +\n\t\t\t\t\t\t\t\t\t'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' +\n\t\t\t\t\t\t\t\t\t'frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\">' +\n\t\t\t\t\t\t\t\t'</iframe>' +\n\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tname: 'youtube',\n\t\t\t\t\turl: [\n\t\t\t\t\t\t/^(?:m\\.)?youtube\\.com\\/watch\\?v=([\\w-]+)/,\n\t\t\t\t\t\t/^(?:m\\.)?youtube\\.com\\/v\\/([\\w-]+)/,\n\t\t\t\t\t\t/^youtube\\.com\\/embed\\/([\\w-]+)/,\n\t\t\t\t\t\t/^youtu\\.be\\/([\\w-]+)/\n\t\t\t\t\t],\n\t\t\t\t\thtml: match => {\n\t\t\t\t\t\tconst id = match[ 1 ];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t'<div style=\"position: relative; padding-bottom: 100%; height: 0; padding-bottom: 56.2493%;\">' +\n\t\t\t\t\t\t\t\t`<iframe src=\"https://www.youtube.com/embed/${ id }\" ` +\n\t\t\t\t\t\t\t\t\t'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' +\n\t\t\t\t\t\t\t\t\t'frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen>' +\n\t\t\t\t\t\t\t\t'</iframe>' +\n\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tname: 'vimeo',\n\t\t\t\t\turl: [\n\t\t\t\t\t\t/^vimeo\\.com\\/(\\d+)/,\n\t\t\t\t\t\t/^vimeo\\.com\\/[^/]+\\/[^/]+\\/video\\/(\\d+)/,\n\t\t\t\t\t\t/^vimeo\\.com\\/album\\/[^/]+\\/video\\/(\\d+)/,\n\t\t\t\t\t\t/^vimeo\\.com\\/channels\\/[^/]+\\/(\\d+)/,\n\t\t\t\t\t\t/^vimeo\\.com\\/groups\\/[^/]+\\/videos\\/(\\d+)/,\n\t\t\t\t\t\t/^vimeo\\.com\\/ondemand\\/[^/]+\\/(\\d+)/,\n\t\t\t\t\t\t/^player\\.vimeo\\.com\\/video\\/(\\d+)/\n\t\t\t\t\t],\n\t\t\t\t\thtml: match => {\n\t\t\t\t\t\tconst id = match[ 1 ];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t'<div style=\"position: relative; padding-bottom: 100%; height: 0; padding-bottom: 56.2493%;\">' +\n\t\t\t\t\t\t\t\t`<iframe src=\"https://player.vimeo.com/video/${ id }\" ` +\n\t\t\t\t\t\t\t\t\t'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' +\n\t\t\t\t\t\t\t\t\t'frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen>' +\n\t\t\t\t\t\t\t\t'</iframe>' +\n\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tname: 'instagram',\n\t\t\t\t\turl: /^instagram\\.com\\/p\\/(\\w+)/\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'twitter',\n\t\t\t\t\turl: /^twitter\\.com/\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'googleMaps',\n\t\t\t\t\turl: /^google\\.com\\/maps/\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'flickr',\n\t\t\t\t\turl: /^flickr\\.com/\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'facebook',\n\t\t\t\t\turl: /^facebook\\.com/\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\t/**\n\t\t * The media registry managing the media providers in the editor.\n\t\t *\n\t\t * @member {module:media-embed/mediaregistry~MediaRegistry} #registry\n\t\t */\n\t\tthis.registry = new MediaRegistry( editor.locale, editor.config.get( 'mediaEmbed' ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\t\tconst t = editor.t;\n\t\tconst conversion = editor.conversion;\n\t\tconst renderMediaPreview = editor.config.get( 'mediaEmbed.previewsInData' );\n\t\tconst registry = this.registry;\n\n\t\teditor.commands.add( 'mediaEmbed', new MediaEmbedCommand( editor ) );\n\n\t\t// Configure the schema.\n\t\tschema.register( 'media', {\n\t\t\tisObject: true,\n\t\t\tisBlock: true,\n\t\t\tallowWhere: '$block',\n\t\t\tallowAttributes: [ 'url' ]\n\t\t} );\n\n\t\t// Model -> Data\n\t\tconversion.for( 'dataDowncast' ).elementToElement( {\n\t\t\tmodel: 'media',\n\t\t\tview: ( modelElement, viewWriter ) => {\n\t\t\t\tconst url = modelElement.getAttribute( 'url' );\n\n\t\t\t\treturn createMediaFigureElement( viewWriter, registry, url, {\n\t\t\t\t\trenderMediaPreview: url && renderMediaPreview\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// Model -> Data (url -> data-oembed-url)\n\t\tconversion.for( 'dataDowncast' ).add(\n\t\t\tmodelToViewUrlAttributeConverter( registry, {\n\t\t\t\trenderMediaPreview\n\t\t\t} ) );\n\n\t\t// Model -> View (element)\n\t\tconversion.for( 'editingDowncast' ).elementToElement( {\n\t\t\tmodel: 'media',\n\t\t\tview: ( modelElement, viewWriter ) => {\n\t\t\t\tconst url = modelElement.getAttribute( 'url' );\n\t\t\t\tconst figure = createMediaFigureElement( viewWriter, registry, url, {\n\t\t\t\t\trenderForEditingView: true\n\t\t\t\t} );\n\n\t\t\t\treturn toMediaWidget( figure, viewWriter, t( 'media widget' ) );\n\t\t\t}\n\t\t} );\n\n\t\t// Model -> View (url -> data-oembed-url)\n\t\tconversion.for( 'editingDowncast' ).add(\n\t\t\tmodelToViewUrlAttributeConverter( registry, {\n\t\t\t\trenderForEditingView: true\n\t\t\t} ) );\n\n\t\t// View -> Model (data-oembed-url -> url)\n\t\tconversion.for( 'upcast' )\n\t\t\t// Upcast semantic media.\n\t\t\t.elementToElement( {\n\t\t\t\tview: {\n\t\t\t\t\tname: 'oembed',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\turl: true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmodel: ( viewMedia, modelWriter ) => {\n\t\t\t\t\tconst url = viewMedia.getAttribute( 'url' );\n\n\t\t\t\t\tif ( registry.hasMedia( url ) ) {\n\t\t\t\t\t\treturn modelWriter.createElement( 'media', { url } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} )\n\t\t\t// Upcast non-semantic media.\n\t\t\t.elementToElement( {\n\t\t\t\tview: {\n\t\t\t\t\tname: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\t'data-oembed-url': true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmodel: ( viewMedia, modelWriter ) => {\n\t\t\t\t\tconst url = viewMedia.getAttribute( 'data-oembed-url' );\n\n\t\t\t\t\tif ( registry.hasMedia( url ) ) {\n\t\t\t\t\t\treturn modelWriter.createElement( 'media', { url } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module media-embed/automediaembed\n */\n\nimport MediaEmbedEditing from './mediaembedediting';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Clipboard from '@ckeditor/ckeditor5-clipboard/src/clipboard';\nimport LiveRange from '@ckeditor/ckeditor5-engine/src/model/liverange';\nimport LivePosition from '@ckeditor/ckeditor5-engine/src/model/liveposition';\nimport Undo from '@ckeditor/ckeditor5-undo/src/undo';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport { insertMedia } from './utils';\n\nconst URL_REGEXP = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w.-]+)+[\\w\\-._~:/?#[\\]@!$&'()*+,;=]+$/;\n\n/**\n * The auto-media embed plugin. It recognizes media links in the pasted content and embeds\n * them shortly after they are injected into the document.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class AutoMediaEmbed extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Clipboard, Undo ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'AutoMediaEmbed';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The paste–to–embed `setTimeout` ID. Stored as a property to allow\n\t\t * cleaning of the timeout.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} #_timeoutId\n\t\t */\n\t\tthis._timeoutId = null;\n\n\t\t/**\n\t\t * The position where the `<media>` element will be inserted after the timeout,\n\t\t * determined each time the new content is pasted into the document.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/liveposition~LivePosition} #_positionToInsert\n\t\t */\n\t\tthis._positionToInsert = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst modelDocument = editor.model.document;\n\n\t\t// We need to listen on `Clipboard#inputTransformation` because we need to save positions of selection.\n\t\t// After pasting, the content between those positions will be checked for a URL that could be transformed\n\t\t// into media.\n\t\tthis.listenTo( editor.plugins.get( Clipboard ), 'inputTransformation', () => {\n\t\t\tconst firstRange = modelDocument.selection.getFirstRange();\n\n\t\t\tconst leftLivePosition = LivePosition.fromPosition( firstRange.start );\n\t\t\tleftLivePosition.stickiness = 'toPrevious';\n\n\t\t\tconst rightLivePosition = LivePosition.fromPosition( firstRange.end );\n\t\t\trightLivePosition.stickiness = 'toNext';\n\n\t\t\tmodelDocument.once( 'change:data', () => {\n\t\t\t\tthis._embedMediaBetweenPositions( leftLivePosition, rightLivePosition );\n\n\t\t\t\tleftLivePosition.detach();\n\t\t\t\trightLivePosition.detach();\n\t\t\t}, { priority: 'high' } );\n\t\t} );\n\n\t\teditor.commands.get( 'undo' ).on( 'execute', () => {\n\t\t\tif ( this._timeoutId ) {\n\t\t\t\tglobal.window.clearTimeout( this._timeoutId );\n\t\t\t\tthis._positionToInsert.detach();\n\n\t\t\t\tthis._timeoutId = null;\n\t\t\t\tthis._positionToInsert = null;\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * Analyzes the part of the document between provided positions in search for a URL representing media.\n\t * When the URL is found, it is automatically converted into media.\n\t *\n\t * @protected\n\t * @param {module:engine/model/liveposition~LivePosition} leftPosition Left position of the selection.\n\t * @param {module:engine/model/liveposition~LivePosition} rightPosition Right position of the selection.\n\t */\n\t_embedMediaBetweenPositions( leftPosition, rightPosition ) {\n\t\tconst editor = this.editor;\n\t\tconst mediaRegistry = editor.plugins.get( MediaEmbedEditing ).registry;\n\t\t// TODO: Use marker instead of LiveRange & LivePositions.\n\t\tconst urlRange = new LiveRange( leftPosition, rightPosition );\n\t\tconst walker = urlRange.getWalker( { ignoreElementEnd: true } );\n\n\t\tlet url = '';\n\n\t\tfor ( const node of walker ) {\n\t\t\tif ( node.item.is( 'textProxy' ) ) {\n\t\t\t\turl += node.item.data;\n\t\t\t}\n\t\t}\n\n\t\turl = url.trim();\n\n\t\t// If the URL does not match to universal URL regexp, let's skip that.\n\t\tif ( !url.match( URL_REGEXP ) ) {\n\t\t\turlRange.detach();\n\n\t\t\treturn;\n\t\t}\n\n\t\t// If the URL represents a media, let's use it.\n\t\tif ( !mediaRegistry.hasMedia( url ) ) {\n\t\t\turlRange.detach();\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst mediaEmbedCommand = editor.commands.get( 'mediaEmbed' );\n\n\t\t// Do not anything if media element cannot be inserted at the current position (#47).\n\t\tif ( !mediaEmbedCommand.isEnabled ) {\n\t\t\turlRange.detach();\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Position won't be available in the `setTimeout` function so let's clone it.\n\t\tthis._positionToInsert = LivePosition.fromPosition( leftPosition );\n\n\t\t// This action mustn't be executed if undo was called between pasting and auto-embedding.\n\t\tthis._timeoutId = global.window.setTimeout( () => {\n\t\t\teditor.model.change( writer => {\n\t\t\t\tthis._timeoutId = null;\n\n\t\t\t\twriter.remove( urlRange );\n\t\t\t\turlRange.detach();\n\n\t\t\t\tlet insertionPosition;\n\n\t\t\t\t// Check if position where the media element should be inserted is still valid.\n\t\t\t\t// Otherwise leave it as undefined to use document.selection - default behavior of model.insertContent().\n\t\t\t\tif ( this._positionToInsert.root.rootName !== '$graveyard' ) {\n\t\t\t\t\tinsertionPosition = this._positionToInsert;\n\t\t\t\t}\n\n\t\t\t\tinsertMedia( editor.model, url, insertionPosition );\n\n\t\t\t\tthis._positionToInsert.detach();\n\t\t\t\tthis._positionToInsert = null;\n\t\t\t} );\n\t\t}, 100 );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module media-embed/ui/mediaformview\n */\n\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport ViewCollection from '@ckeditor/ckeditor5-ui/src/viewcollection';\n\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport LabeledFieldView from '@ckeditor/ckeditor5-ui/src/labeledfield/labeledfieldview';\nimport { createLabeledInputText } from '@ckeditor/ckeditor5-ui/src/labeledfield/utils';\n\nimport submitHandler from '@ckeditor/ckeditor5-ui/src/bindings/submithandler';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '@ckeditor/ckeditor5-ui/src/focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\nimport checkIcon from '@ckeditor/ckeditor5-core/theme/icons/check.svg';\nimport cancelIcon from '@ckeditor/ckeditor5-core/theme/icons/cancel.svg';\nimport '../../theme/mediaform.css';\n\n/**\n * The media form view controller class.\n *\n * See {@link module:media-embed/ui/mediaformview~MediaFormView}.\n *\n * @extends module:ui/view~View\n */\nexport default class MediaFormView extends View {\n\t/**\n\t * @param {Array.<Function>} validators Form validators used by {@link #isValid}.\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t */\n\tconstructor( validators, locale ) {\n\t\tsuper( locale );\n\n\t\tconst t = locale.t;\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * The URL input view.\n\t\t *\n\t\t * @member {module:ui/labeledfield/labeledfieldview~LabeledFieldView}\n\t\t */\n\t\tthis.urlInputView = this._createUrlInput();\n\n\t\t/**\n\t\t * The Save button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.saveButtonView = this._createButton( t( 'Save' ), checkIcon, 'ck-button-save' );\n\t\tthis.saveButtonView.type = 'submit';\n\n\t\t/**\n\t\t * The Cancel button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.cancelButtonView = this._createButton( t( 'Cancel' ), cancelIcon, 'ck-button-cancel', 'cancel' );\n\n\t\t/**\n\t\t * A collection of views that can be focused in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis._focusables = new ViewCollection();\n\n\t\t/**\n\t\t * Helps cycling over {@link #_focusables} in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this._focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate form fields backwards using the Shift + Tab keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate form fields forwards using the Tab key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * An array of form validators used by {@link #isValid}.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Array.<Function>}\n\t\t */\n\t\tthis._validators = validators;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'form',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-media-form'\n\t\t\t\t],\n\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tthis.urlInputView,\n\t\t\t\tthis.saveButtonView,\n\t\t\t\tthis.cancelButtonView\n\t\t\t]\n\t\t} );\n\n\t\t/**\n\t\t * The default info text for the {@link #urlInputView}.\n\t\t *\n\t\t * @private\n\t\t * @member {String} #_urlInputViewInfoDefault\n\t\t */\n\n\t\t/**\n\t\t * The info text with an additional tip for the {@link #urlInputView},\n\t\t * displayed when the input has some value.\n\t\t *\n\t\t * @private\n\t\t * @member {String} #_urlInputViewInfoTip\n\t\t */\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tsubmitHandler( {\n\t\t\tview: this\n\t\t} );\n\n\t\tconst childViews = [\n\t\t\tthis.urlInputView,\n\t\t\tthis.saveButtonView,\n\t\t\tthis.cancelButtonView\n\t\t];\n\n\t\tchildViews.forEach( v => {\n\t\t\t// Register the view as focusable.\n\t\t\tthis._focusables.add( v );\n\n\t\t\t// Register the view in the focus tracker.\n\t\t\tthis.focusTracker.add( v.element );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\tconst stopPropagation = data => data.stopPropagation();\n\n\t\t// Since the form is in the dropdown panel which is a child of the toolbar, the toolbar's\n\t\t// keystroke handler would take over the key management in the URL input. We need to prevent\n\t\t// this ASAP. Otherwise, the basic caret movement using the arrow keys will be impossible.\n\t\tthis.keystrokes.set( 'arrowright', stopPropagation );\n\t\tthis.keystrokes.set( 'arrowleft', stopPropagation );\n\t\tthis.keystrokes.set( 'arrowup', stopPropagation );\n\t\tthis.keystrokes.set( 'arrowdown', stopPropagation );\n\n\t\t// Intercept the \"selectstart\" event, which is blocked by default because of the default behavior\n\t\t// of the DropdownView#panelView.\n\t\t// TODO: blocking \"selectstart\" in the #panelView should be configurable per–drop–down instance.\n\t\tthis.listenTo( this.urlInputView.element, 'selectstart', ( evt, domEvt ) => {\n\t\t\tdomEvt.stopPropagation();\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * Focuses the fist {@link #_focusables} in the form.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * The native DOM `value` of the {@link #urlInputView} element.\n\t *\n\t * **Note**: Do not confuse it with the {@link module:ui/inputtext/inputtextview~InputTextView#value}\n\t * which works one way only and may not represent the actual state of the component in the DOM.\n\t *\n\t * @type {Number}\n\t */\n\tget url() {\n\t\treturn this.urlInputView.fieldView.element.value.trim();\n\t}\n\n\t/**\n\t * Sets the native DOM `value` of the {@link #urlInputView} element.\n\t *\n\t * **Note**: Do not confuse it with the {@link module:ui/inputtext/inputtextview~InputTextView#value}\n\t * which works one way only and may not represent the actual state of the component in the DOM.\n\t *\n\t * @param {String} url\n\t */\n\tset url( url ) {\n\t\tthis.urlInputView.fieldView.element.value = url.trim();\n\t}\n\n\t/**\n\t * Validates the form and returns `false` when some fields are invalid.\n\t *\n\t * @returns {Boolean}\n\t */\n\tisValid() {\n\t\tthis.resetFormStatus();\n\n\t\tfor ( const validator of this._validators ) {\n\t\t\tconst errorText = validator( this );\n\n\t\t\t// One error per field is enough.\n\t\t\tif ( errorText ) {\n\t\t\t\t// Apply updated error.\n\t\t\t\tthis.urlInputView.errorText = errorText;\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Cleans up the supplementary error and information text of the {@link #urlInputView}\n\t * bringing them back to the state when the form has been displayed for the first time.\n\t *\n\t * See {@link #isValid}.\n\t */\n\tresetFormStatus() {\n\t\tthis.urlInputView.errorText = null;\n\t\tthis.urlInputView.infoText = this._urlInputViewInfoDefault;\n\t}\n\n\t/**\n\t * Creates a labeled input view.\n\t *\n\t * @private\n\t * @returns {module:ui/labeledfield/labeledfieldview~LabeledFieldView} Labeled input view instance.\n\t */\n\t_createUrlInput() {\n\t\tconst t = this.locale.t;\n\n\t\tconst labeledInput = new LabeledFieldView( this.locale, createLabeledInputText );\n\t\tconst inputField = labeledInput.fieldView;\n\n\t\tthis._urlInputViewInfoDefault = t( 'Paste the media URL in the input.' );\n\t\tthis._urlInputViewInfoTip = t( 'Tip: Paste the URL into the content to embed faster.' );\n\n\t\tlabeledInput.label = t( 'Media URL' );\n\t\tlabeledInput.infoText = this._urlInputViewInfoDefault;\n\t\tinputField.placeholder = 'https://example.com';\n\n\t\tinputField.on( 'input', () => {\n\t\t\t// Display the tip text only when there's some value. Otherwise fall back to the default info text.\n\t\t\tlabeledInput.infoText = inputField.element.value ? this._urlInputViewInfoTip : this._urlInputViewInfoDefault;\n\t\t} );\n\n\t\treturn labeledInput;\n\t}\n\n\t/**\n\t * Creates a button view.\n\t *\n\t * @private\n\t * @param {String} label The button label.\n\t * @param {String} icon The button icon.\n\t * @param {String} className The additional button CSS class name.\n\t * @param {String} [eventName] An event name that the `ButtonView#execute` event will be delegated to.\n\t * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n\t */\n\t_createButton( label, icon, className, eventName ) {\n\t\tconst button = new ButtonView( this.locale );\n\n\t\tbutton.set( {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ttooltip: true\n\t\t} );\n\n\t\tbutton.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: className\n\t\t\t}\n\t\t} );\n\n\t\tif ( eventName ) {\n\t\t\tbutton.delegate( 'execute' ).to( this, eventName );\n\t\t}\n\n\t\treturn button;\n\t}\n}\n\n/**\n * Fired when the form view is submitted (when one of the children triggered the submit event),\n * e.g. click on {@link #saveButtonView}.\n *\n * @event submit\n */\n\n/**\n * Fired when the form view is canceled, e.g. click on {@link #cancelButtonView}.\n *\n * @event cancel\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module media-embed/mediaembedui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport { createDropdown } from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\nimport MediaFormView from './ui/mediaformview';\nimport MediaEmbedEditing from './mediaembedediting';\nimport mediaIcon from '../theme/icons/media.svg';\n\n/**\n * The media embed UI plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class MediaEmbedUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ MediaEmbedEditing ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'MediaEmbedUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst command = editor.commands.get( 'mediaEmbed' );\n\t\tconst registry = editor.plugins.get( MediaEmbedEditing ).registry;\n\n\t\t// Setup `imageUpload` button.\n\t\teditor.ui.componentFactory.add( 'mediaEmbed', locale => {\n\t\t\tconst dropdown = createDropdown( locale );\n\n\t\t\tconst mediaForm = new MediaFormView( getFormValidators( editor.t, registry ), editor.locale );\n\n\t\t\tthis._setUpDropdown( dropdown, mediaForm, command, editor );\n\t\t\tthis._setUpForm( dropdown, mediaForm, command );\n\n\t\t\treturn dropdown;\n\t\t} );\n\t}\n\n\t_setUpDropdown( dropdown, form, command ) {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst button = dropdown.buttonView;\n\n\t\tdropdown.bind( 'isEnabled' ).to( command );\n\t\tdropdown.panelView.children.add( form );\n\n\t\tbutton.set( {\n\t\t\tlabel: t( 'Insert media' ),\n\t\t\ticon: mediaIcon,\n\t\t\ttooltip: true\n\t\t} );\n\n\t\t// Note: Use the low priority to make sure the following listener starts working after the\n\t\t// default action of the drop-down is executed (i.e. the panel showed up). Otherwise, the\n\t\t// invisible form/input cannot be focused/selected.\n\t\tbutton.on( 'open', () => {\n\t\t\t// Make sure that each time the panel shows up, the URL field remains in sync with the value of\n\t\t\t// the command. If the user typed in the input, then canceled (`urlInputView#fieldView#value` stays\n\t\t\t// unaltered) and re-opened it without changing the value of the media command (e.g. because they\n\t\t\t// didn't change the selection), they would see the old value instead of the actual value of the\n\t\t\t// command.\n\t\t\tform.url = command.value || '';\n\t\t\tform.urlInputView.fieldView.select();\n\t\t\tform.focus();\n\t\t}, { priority: 'low' } );\n\n\t\tdropdown.on( 'submit', () => {\n\t\t\tif ( form.isValid() ) {\n\t\t\t\teditor.execute( 'mediaEmbed', form.url );\n\t\t\t\tcloseUI();\n\t\t\t}\n\t\t} );\n\n\t\tdropdown.on( 'change:isOpen', () => form.resetFormStatus() );\n\t\tdropdown.on( 'cancel', () => closeUI() );\n\n\t\tfunction closeUI() {\n\t\t\teditor.editing.view.focus();\n\t\t\tdropdown.isOpen = false;\n\t\t}\n\t}\n\n\t_setUpForm( dropdown, form, command ) {\n\t\tform.delegate( 'submit', 'cancel' ).to( dropdown );\n\t\tform.urlInputView.bind( 'value' ).to( command, 'value' );\n\n\t\t// Form elements should be read-only when corresponding commands are disabled.\n\t\tform.urlInputView.bind( 'isReadOnly' ).to( command, 'isEnabled', value => !value );\n\t\tform.saveButtonView.bind( 'isEnabled' ).to( command );\n\t}\n}\n\nfunction getFormValidators( t, registry ) {\n\treturn [\n\t\tform => {\n\t\t\tif ( !form.url.length ) {\n\t\t\t\treturn t( 'The URL must not be empty.' );\n\t\t\t}\n\t\t},\n\t\tform => {\n\t\t\tif ( !registry.hasMedia( form.url ) ) {\n\t\t\t\treturn t( 'This media URL is not supported.' );\n\t\t\t}\n\t\t}\n\t];\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/mouseobserver\n */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * Mouse events observer.\n *\n * Note that this observer is not available by default. To make it available it needs to be added to\n * {@link module:engine/view/view~View} by {@link module:engine/view/view~View#addObserver} method.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class MouseObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = 'mousedown';\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n}\n\n/**\n * Fired when mouse button is pressed down on one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/mouseobserver~MouseObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:engine/view/observer/mouseobserver~MouseObserver}\n * needs to be added to {@link module:engine/view/view~View} by a {@link module:engine/view/view~View#addObserver} method.\n *\n * @see module:engine/view/observer/mouseobserver~MouseObserver\n * @event module:engine/view/document~Document#event:mousedown\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module widget/widgettypearound/utils\n */\n\nimport { isWidget } from '../utils';\n\n/**\n * Checks if an element is a widget that qualifies to get the type around UI.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @param {module:engine/model/element~Element} modelElement\n * @param {module:engine/model/schema~Schema} schema\n * @returns {Boolean}\n */\nexport function isTypeAroundWidget( viewElement, modelElement, schema ) {\n\treturn viewElement && isWidget( viewElement ) && !schema.isInline( modelElement );\n}\n\n/**\n * For the passed HTML element, this helper finds the closest type around button ancestor.\n *\n * @param {HTMLElement} domElement\n * @returns {HTMLElement|null}\n */\nexport function getClosestTypeAroundDomButton( domElement ) {\n\treturn domElement.closest( '.ck-widget__type-around__button' );\n}\n\n/**\n * For the passed type around button element, this helper determines at which position\n * the paragraph would be inserted into the content if, for instance, the button was\n * clicked by the user.\n *\n * @param {HTMLElement} domElement\n * @returns {String} Either `'before'` or `'after'`.\n */\nexport function getTypeAroundButtonPosition( domElement ) {\n\treturn domElement.classList.contains( 'ck-widget__type-around__button_before' ) ? 'before' : 'after';\n}\n\n/**\n * For the passed HTML element, this helper returns the closest view widget ancestor.\n *\n * @param {HTMLElement} domElement\n * @param {module:engine/view/domconverter~DomConverter} domConverter\n * @returns {module:engine/view/element~Element}\n */\nexport function getClosestWidgetViewElement( domElement, domConverter ) {\n\tconst widgetDomElement = domElement.closest( '.ck-widget' );\n\n\treturn domConverter.mapDomToView( widgetDomElement );\n}\n\n/**\n * For the passed widget view element, this helper returns an array of positions which\n * correspond to the \"tight spots\" around the widget which cannot be accessed due to\n * limitations of selection rendering in web browsers.\n *\n * @param {module:engine/view/element~Element} widgetViewElement\n * @returns {Array.<String>}\n */\nexport function getWidgetTypeAroundPositions( widgetViewElement ) {\n\tconst positions = [];\n\n\tif ( isFirstChild( widgetViewElement ) || hasPreviousWidgetSibling( widgetViewElement ) ) {\n\t\tpositions.push( 'before' );\n\t}\n\n\tif ( isLastChild( widgetViewElement ) || hasNextWidgetSibling( widgetViewElement ) ) {\n\t\tpositions.push( 'after' );\n\t}\n\n\treturn positions;\n}\n\nfunction isFirstChild( widget ) {\n\treturn !widget.previousSibling;\n}\n\nfunction isLastChild( widget ) {\n\treturn !widget.nextSibling;\n}\n\nfunction hasPreviousWidgetSibling( widget ) {\n\treturn widget.previousSibling && isWidget( widget.previousSibling );\n}\n\nfunction hasNextWidgetSibling( widget ) {\n\treturn widget.nextSibling && isWidget( widget.nextSibling );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* global DOMParser */\n\n/**\n * @module widget/widgettypearound\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\nimport Template from '@ckeditor/ckeditor5-ui/src/template';\n\nimport {\n\tisTypeAroundWidget,\n\tgetWidgetTypeAroundPositions,\n\tgetClosestTypeAroundDomButton,\n\tgetTypeAroundButtonPosition,\n\tgetClosestWidgetViewElement\n} from './utils';\n\nimport returnIcon from '../../theme/icons/return-arrow.svg';\nimport '../../theme/widgettypearound.css';\n\nconst POSSIBLE_INSERTION_POSITIONS = [ 'before', 'after' ];\n\n// Do the SVG parsing once and then clone the result <svg> DOM element for each new button.\nconst RETURN_ARROW_ICON_ELEMENT = new DOMParser().parseFromString( returnIcon, 'image/svg+xml' ).firstChild;\n\n/**\n * A plugin that allows users to type around widgets where normally it is impossible to place the caret due\n * to limitations of web browsers. These \"tight spots\" occur, for instance, before (or after) a widget being\n * the first (or last) child of its parent or between two block widgets.\n *\n * This plugin extends the {@link module:widget/widget~Widget `Widget`} plugin and injects a user interface\n * with two buttons into each widget instance in the editor. Each of the buttons can be clicked by the\n * user if the widget is next to the \"tight spot\". Once clicked, a paragraph is created with the selection anchored\n * in it so that users can type (or insert content, paste, etc.) straight away.\n *\n * @extends module:core/plugin~Plugin\n * @private\n */\nexport default class WidgetTypeAround extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Paragraph ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'WidgetTypeAround';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * A set containing all widgets in all editor roots that have the type around UI injected in\n\t\t * {@link #_enableTypeAroundUIInjection}.\n\t\t *\n\t\t * Keeping track of them saves time, for instance, when updating their CSS classes.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @member {Set} #_widgetsWithTypeAroundUI\n\t\t */\n\t\tthis._widgetsWithTypeAroundUI = new Set();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tthis._widgetsWithTypeAroundUI.clear();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tthis._enableTypeAroundUIInjection();\n\t\tthis._enableDetectionOfTypeAroundWidgets();\n\t\tthis._enableInsertingParagraphsOnButtonClick();\n\t}\n\n\t/**\n\t * Inserts a new paragraph next to a widget element with the selection anchored in it.\n\t *\n\t * **Note**: This method is heavily user-oriented and will both focus the editing view and scroll\n\t * the viewport to the selection in the inserted paragraph.\n\t *\n\t * @protected\n\t * @param {module:engine/view/element~Element} widgetViewElement The view widget element next to which a paragraph is inserted.\n\t * @param {'before'|'after'} position The position where the paragraph is inserted. Either `'before'` or `'after'` the widget.\n\t */\n\t_insertParagraph( widgetViewElement, position ) {\n\t\tconst editor = this.editor;\n\t\tconst editingView = editor.editing.view;\n\t\tconst widgetModelElement = editor.editing.mapper.toModelElement( widgetViewElement );\n\t\tlet modelPosition;\n\n\t\tif ( position === 'before' ) {\n\t\t\tmodelPosition = editor.model.createPositionBefore( widgetModelElement );\n\t\t} else {\n\t\t\tmodelPosition = editor.model.createPositionAfter( widgetModelElement );\n\t\t}\n\n\t\teditor.execute( 'insertParagraph', {\n\t\t\tposition: modelPosition\n\t\t} );\n\n\t\teditingView.focus();\n\t\teditingView.scrollToTheSelection();\n\t}\n\n\t/**\n\t * Creates a listener in the editing conversion pipeline that injects the type around\n\t * UI into every single widget instance created in the editor.\n\t *\n\t * The UI is delivered as a {@link module:engine/view/uielement~UIElement}\n\t * wrapper which renders DOM buttons that users can use to insert paragraphs.\n\t *\n\t * @private\n\t */\n\t_enableTypeAroundUIInjection() {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\t\tconst t = editor.locale.t;\n\t\tconst buttonTitles = {\n\t\t\tbefore: t( 'Insert paragraph before block' ),\n\t\t\tafter: t( 'Insert paragraph after block' )\n\t\t};\n\n\t\teditor.editing.downcastDispatcher.on( 'insert', ( evt, data, conversionApi ) => {\n\t\t\tconst viewElement = conversionApi.mapper.toViewElement( data.item );\n\n\t\t\t// Filter out non-widgets and inline widgets.\n\t\t\tif ( isTypeAroundWidget( viewElement, data.item, schema ) ) {\n\t\t\t\tinjectUIIntoWidget( conversionApi.writer, buttonTitles, viewElement );\n\n\t\t\t\t// Keep track of widgets that have the type around UI injected.\n\t\t\t\t// In the #_enableDetectionOfTypeAroundWidgets() we will iterate only over these\n\t\t\t\t// widgets instead of all children of the root. This should improve the performance.\n\t\t\t\tthis._widgetsWithTypeAroundUI.add( viewElement );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\t}\n\n\t/**\n\t * Registers an editing view post-fixer which checks all block widgets in the content\n\t * and adds CSS classes to these which should have the typing around (UI) enabled\n\t * and visible for the users.\n\t *\n\t * @private\n\t */\n\t_enableDetectionOfTypeAroundWidgets() {\n\t\tconst editor = this.editor;\n\t\tconst editingView = editor.editing.view;\n\n\t\tfunction positionToWidgetCssClass( position ) {\n\t\t\treturn `ck-widget_can-type-around_${ position }`;\n\t\t}\n\n\t\teditingView.document.registerPostFixer( writer => {\n\t\t\tfor ( const widgetViewElement of this._widgetsWithTypeAroundUI ) {\n\t\t\t\t// If the widget is no longer attached to the root (for instance, because it was removed),\n\t\t\t\t// there is no need to update its classes and we can safely forget about it.\n\t\t\t\tif ( !widgetViewElement.isAttached() ) {\n\t\t\t\t\tthis._widgetsWithTypeAroundUI.delete( widgetViewElement );\n\t\t\t\t} else {\n\t\t\t\t\t// Update widgets' classes depending on possible positions for paragraph insertion.\n\t\t\t\t\tconst positions = getWidgetTypeAroundPositions( widgetViewElement );\n\n\t\t\t\t\t// Remove all classes. In theory we could remove only these that will not be added a few lines later,\n\t\t\t\t\t// but since there are only two... KISS.\n\t\t\t\t\twriter.removeClass( POSSIBLE_INSERTION_POSITIONS.map( positionToWidgetCssClass ), widgetViewElement );\n\n\t\t\t\t\t// Set CSS classes related to possible positions. They are used so the UI knows which buttons to display.\n\t\t\t\t\twriter.addClass( positions.map( positionToWidgetCssClass ), widgetViewElement );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Registers a `mousedown` listener for the view document which intercepts events\n\t * coming from the type around UI, which happens when a user clicks one of the buttons\n\t * that insert a paragraph next to a widget.\n\t *\n\t * @private\n\t */\n\t_enableInsertingParagraphsOnButtonClick() {\n\t\tconst editor = this.editor;\n\t\tconst editingView = editor.editing.view;\n\n\t\teditingView.document.on( 'mousedown', ( evt, domEventData ) => {\n\t\t\tconst button = getClosestTypeAroundDomButton( domEventData.domTarget );\n\n\t\t\tif ( !button ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst buttonPosition = getTypeAroundButtonPosition( button );\n\t\t\tconst widgetViewElement = getClosestWidgetViewElement( button, editingView.domConverter );\n\n\t\t\tthis._insertParagraph( widgetViewElement, buttonPosition );\n\n\t\t\tdomEventData.preventDefault();\n\t\t\tevt.stop();\n\t\t} );\n\t}\n}\n\n// Injects the type around UI into a view widget instance.\n//\n// @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter\n// @param {Object.<String,String>} buttonTitles\n// @param {module:engine/view/element~Element} widgetViewElement\nfunction injectUIIntoWidget( viewWriter, buttonTitles, widgetViewElement ) {\n\tconst typeAroundWrapper = viewWriter.createUIElement( 'div', {\n\t\tclass: 'ck ck-reset_all ck-widget__type-around'\n\t}, function( domDocument ) {\n\t\tconst wrapperDomElement = this.toDomElement( domDocument );\n\n\t\tinjectButtons( wrapperDomElement, buttonTitles );\n\n\t\treturn wrapperDomElement;\n\t} );\n\n\t// Inject the type around wrapper into the widget's wrapper.\n\tviewWriter.insert( viewWriter.createPositionAt( widgetViewElement, 'end' ), typeAroundWrapper );\n}\n\n// FYI: Not using the IconView class because each instance would need to be destroyed to avoid memory leaks\n// and it's pretty hard to figure out when a view (widget) is gone for good so it's cheaper to use raw\n// <svg> here.\n//\n// @param {HTMLElement} wrapperDomElement\n// @param {Object.<String,String>} buttonTitles\nfunction injectButtons( wrapperDomElement, buttonTitles ) {\n\tfor ( const position of POSSIBLE_INSERTION_POSITIONS ) {\n\t\tconst buttonTemplate = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-widget__type-around__button',\n\t\t\t\t\t`ck-widget__type-around__button_${ position }`\n\t\t\t\t],\n\t\t\t\ttitle: buttonTitles[ position ]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\twrapperDomElement.ownerDocument.importNode( RETURN_ARROW_ICON_ELEMENT, true )\n\t\t\t]\n\t\t} );\n\n\t\twrapperDomElement.appendChild( buttonTemplate.render() );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module widget/widget\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport MouseObserver from '@ckeditor/ckeditor5-engine/src/view/observer/mouseobserver';\nimport WidgetTypeAround from './widgettypearound/widgettypearound';\nimport { getLabel, isWidget, WIDGET_SELECTED_CLASS_NAME } from './utils';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\nimport '../theme/widget.css';\n\n/**\n * The widget plugin. It enables base support for widgets.\n *\n * See {@glink api/widget package page} for more details and documentation.\n *\n * This plugin enables multiple behaviors required by widgets:\n *\n * * The model to view selection converter for the editing pipeline (it handles widget custom selection rendering).\n * If a converted selection wraps around a widget element, that selection is marked as\n * {@link module:engine/view/selection~Selection#isFake fake}. Additionally, the `ck-widget_selected` CSS class\n * is added to indicate that widget has been selected.\n * * The mouse and keyboard events handling on and around widget elements.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Widget extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Widget';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ WidgetTypeAround ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst view = this.editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\t/**\n\t\t * Holds previously selected widgets.\n\t\t *\n\t\t * @private\n\t\t * @type {Set.<module:engine/view/element~Element>}\n\t\t */\n\t\tthis._previouslySelected = new Set();\n\n\t\t// Model to view selection converter.\n\t\t// Converts selection placed over widget element to fake selection\n\t\tthis.editor.editing.downcastDispatcher.on( 'selection', ( evt, data, conversionApi ) => {\n\t\t\t// Remove selected class from previously selected widgets.\n\t\t\tthis._clearPreviouslySelectedWidgets( conversionApi.writer );\n\n\t\t\tconst viewWriter = conversionApi.writer;\n\t\t\tconst viewSelection = viewWriter.document.selection;\n\t\t\tconst selectedElement = viewSelection.getSelectedElement();\n\t\t\tlet lastMarked = null;\n\n\t\t\tfor ( const range of viewSelection.getRanges() ) {\n\t\t\t\tfor ( const value of range ) {\n\t\t\t\t\tconst node = value.item;\n\n\t\t\t\t\t// Do not mark nested widgets in selected one. See: #57.\n\t\t\t\t\tif ( isWidget( node ) && !isChild( node, lastMarked ) ) {\n\t\t\t\t\t\tviewWriter.addClass( WIDGET_SELECTED_CLASS_NAME, node );\n\n\t\t\t\t\t\tthis._previouslySelected.add( node );\n\t\t\t\t\t\tlastMarked = node;\n\n\t\t\t\t\t\t// Check if widget is a single element selected.\n\t\t\t\t\t\tif ( node == selectedElement ) {\n\t\t\t\t\t\t\tviewWriter.setSelection( viewSelection.getRanges(), { fake: true, label: getLabel( selectedElement ) } );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\t// If mouse down is pressed on widget - create selection over whole widget.\n\t\tview.addObserver( MouseObserver );\n\t\tthis.listenTo( viewDocument, 'mousedown', ( ...args ) => this._onMousedown( ...args ) );\n\n\t\t// Handle custom keydown behaviour.\n\t\tthis.listenTo( viewDocument, 'keydown', ( ...args ) => this._onKeydown( ...args ), { priority: 'high' } );\n\n\t\t// Handle custom delete behaviour.\n\t\tthis.listenTo( viewDocument, 'delete', ( evt, data ) => {\n\t\t\tif ( this._handleDelete( data.direction == 'forward' ) ) {\n\t\t\t\tdata.preventDefault();\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * Handles {@link module:engine/view/document~Document#event:mousedown mousedown} events on widget elements.\n\t *\n\t * @private\n\t * @param {module:utils/eventinfo~EventInfo} eventInfo\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData\n\t */\n\t_onMousedown( eventInfo, domEventData ) {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\t\tlet element = domEventData.target;\n\n\t\t// Do nothing for single or double click inside nested editable.\n\t\tif ( isInsideNestedEditable( element ) ) {\n\t\t\t// But at least triple click inside nested editable causes broken selection in Safari.\n\t\t\t// For such event, we select the entire nested editable element.\n\t\t\t// See: https://github.com/ckeditor/ckeditor5/issues/1463.\n\t\t\tif ( env.isSafari && domEventData.domEvent.detail >= 3 ) {\n\t\t\t\tconst mapper = editor.editing.mapper;\n\t\t\t\tconst modelElement = mapper.toModelElement( element );\n\n\t\t\t\tthis.editor.model.change( writer => {\n\t\t\t\t\tdomEventData.preventDefault();\n\t\t\t\t\twriter.setSelection( modelElement, 'in' );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// If target is not a widget element - check if one of the ancestors is.\n\t\tif ( !isWidget( element ) ) {\n\t\t\telement = element.findAncestor( isWidget );\n\n\t\t\tif ( !element ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tdomEventData.preventDefault();\n\n\t\t// Focus editor if is not focused already.\n\t\tif ( !viewDocument.isFocused ) {\n\t\t\tview.focus();\n\t\t}\n\n\t\t// Create model selection over widget.\n\t\tconst modelElement = editor.editing.mapper.toModelElement( element );\n\n\t\tthis._setSelectionOverElement( modelElement );\n\t}\n\n\t/**\n\t * Handles {@link module:engine/view/document~Document#event:keydown keydown} events.\n\t *\n\t * @private\n\t * @param {module:utils/eventinfo~EventInfo} eventInfo\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData\n\t */\n\t_onKeydown( eventInfo, domEventData ) {\n\t\tconst keyCode = domEventData.keyCode;\n\t\tconst isLtrContent = this.editor.locale.contentLanguageDirection === 'ltr';\n\t\tconst isForward = keyCode == keyCodes.arrowdown || keyCode == keyCodes[ isLtrContent ? 'arrowright' : 'arrowleft' ];\n\t\tlet wasHandled = false;\n\n\t\t// Checks if the keys were handled and then prevents the default event behaviour and stops\n\t\t// the propagation.\n\t\tif ( isArrowKeyCode( keyCode ) ) {\n\t\t\twasHandled = this._handleArrowKeys( isForward );\n\t\t} else if ( keyCode === keyCodes.enter ) {\n\t\t\twasHandled = this._handleEnterKey( domEventData.shiftKey );\n\t\t}\n\n\t\tif ( wasHandled ) {\n\t\t\tdomEventData.preventDefault();\n\t\t\teventInfo.stop();\n\t\t}\n\t}\n\n\t/**\n\t * Handles delete keys: backspace and delete.\n\t *\n\t * @private\n\t * @param {Boolean} isForward Set to true if delete was performed in forward direction.\n\t * @returns {Boolean|undefined} Returns `true` if keys were handled correctly.\n\t */\n\t_handleDelete( isForward ) {\n\t\t// Do nothing when the read only mode is enabled.\n\t\tif ( this.editor.isReadOnly ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelDocument = this.editor.model.document;\n\t\tconst modelSelection = modelDocument.selection;\n\n\t\t// Do nothing on non-collapsed selection.\n\t\tif ( !modelSelection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst objectElement = this._getObjectElementNextToSelection( isForward );\n\n\t\tif ( objectElement ) {\n\t\t\tthis.editor.model.change( writer => {\n\t\t\t\tlet previousNode = modelSelection.anchor.parent;\n\n\t\t\t\t// Remove previous element if empty.\n\t\t\t\twhile ( previousNode.isEmpty ) {\n\t\t\t\t\tconst nodeToRemove = previousNode;\n\t\t\t\t\tpreviousNode = nodeToRemove.parent;\n\n\t\t\t\t\twriter.remove( nodeToRemove );\n\t\t\t\t}\n\n\t\t\t\tthis._setSelectionOverElement( objectElement );\n\t\t\t} );\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Handles arrow keys.\n\t *\n\t * @private\n\t * @param {Boolean} isForward Set to true if arrow key should be handled in forward direction.\n\t * @returns {Boolean|undefined} Returns `true` if keys were handled correctly.\n\t */\n\t_handleArrowKeys( isForward ) {\n\t\tconst model = this.editor.model;\n\t\tconst schema = model.schema;\n\t\tconst modelDocument = model.document;\n\t\tconst modelSelection = modelDocument.selection;\n\t\tconst objectElement = modelSelection.getSelectedElement();\n\n\t\t// If object element is selected.\n\t\tif ( objectElement && schema.isObject( objectElement ) ) {\n\t\t\tconst position = isForward ? modelSelection.getLastPosition() : modelSelection.getFirstPosition();\n\t\t\tconst newRange = schema.getNearestSelectionRange( position, isForward ? 'forward' : 'backward' );\n\n\t\t\tif ( newRange ) {\n\t\t\t\tmodel.change( writer => {\n\t\t\t\t\twriter.setSelection( newRange );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// If selection is next to object element.\n\t\t// Return if not collapsed.\n\t\tif ( !modelSelection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst objectElement2 = this._getObjectElementNextToSelection( isForward );\n\n\t\tif ( !!objectElement2 && schema.isObject( objectElement2 ) ) {\n\t\t\tthis._setSelectionOverElement( objectElement2 );\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Handles the enter key, giving users and access to positions in the editable directly before\n\t * (<kbd>Shift</kbd>+<kbd>Enter</kbd>) or after (<kbd>Enter</kbd>) the selected widget.\n\t * It improves the UX, mainly when the widget is the first or last child of the root editable\n\t * and there's no other way to type after or before it.\n\t *\n\t * @private\n\t * @param {Boolean} isBackwards Set to true if the new paragraph is to be inserted before\n\t * the selected widget (<kbd>Shift</kbd>+<kbd>Enter</kbd>).\n\t * @returns {Boolean|undefined} Returns `true` if keys were handled correctly.\n\t */\n\t_handleEnterKey( isBackwards ) {\n\t\tconst model = this.editor.model;\n\t\tconst modelSelection = model.document.selection;\n\t\tconst selectedElement = modelSelection.getSelectedElement();\n\n\t\tif ( shouldInsertParagraph( selectedElement, model.schema ) ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\tlet position = writer.createPositionAt( selectedElement, isBackwards ? 'before' : 'after' );\n\t\t\t\tconst paragraph = writer.createElement( 'paragraph' );\n\n\t\t\t\t// Split the parent when inside a block element.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5/issues/1529\n\t\t\t\tif ( model.schema.isBlock( selectedElement.parent ) ) {\n\t\t\t\t\tconst paragraphLimit = model.schema.findAllowedParent( position, paragraph );\n\n\t\t\t\t\tposition = writer.split( position, paragraphLimit ).position;\n\t\t\t\t}\n\n\t\t\t\twriter.insert( paragraph, position );\n\t\t\t\twriter.setSelection( paragraph, 'in' );\n\t\t\t} );\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Sets {@link module:engine/model/selection~Selection document's selection} over given element.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} element\n\t */\n\t_setSelectionOverElement( element ) {\n\t\tthis.editor.model.change( writer => {\n\t\t\twriter.setSelection( writer.createRangeOn( element ) );\n\t\t} );\n\t}\n\n\t/**\n\t * Checks if {@link module:engine/model/element~Element element} placed next to the current\n\t * {@link module:engine/model/selection~Selection model selection} exists and is marked in\n\t * {@link module:engine/model/schema~Schema schema} as `object`.\n\t *\n\t * @private\n\t * @param {Boolean} forward Direction of checking.\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\t_getObjectElementNextToSelection( forward ) {\n\t\tconst model = this.editor.model;\n\t\tconst schema = model.schema;\n\t\tconst modelSelection = model.document.selection;\n\n\t\t// Clone current selection to use it as a probe. We must leave default selection as it is so it can return\n\t\t// to its current state after undo.\n\t\tconst probe = model.createSelection( modelSelection );\n\t\tmodel.modifySelection( probe, { direction: forward ? 'forward' : 'backward' } );\n\t\tconst objectElement = forward ? probe.focus.nodeBefore : probe.focus.nodeAfter;\n\n\t\tif ( !!objectElement && schema.isObject( objectElement ) ) {\n\t\t\treturn objectElement;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Removes CSS class from previously selected widgets.\n\t *\n\t * @private\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n\t */\n\t_clearPreviouslySelectedWidgets( writer ) {\n\t\tfor ( const widget of this._previouslySelected ) {\n\t\t\twriter.removeClass( WIDGET_SELECTED_CLASS_NAME, widget );\n\t\t}\n\n\t\tthis._previouslySelected.clear();\n\t}\n}\n\n// Returns 'true' if provided key code represents one of the arrow keys.\n//\n// @param {Number} keyCode\n// @returns {Boolean}\nfunction isArrowKeyCode( keyCode ) {\n\treturn keyCode == keyCodes.arrowright ||\n\t\tkeyCode == keyCodes.arrowleft ||\n\t\tkeyCode == keyCodes.arrowup ||\n\t\tkeyCode == keyCodes.arrowdown;\n}\n\n// Returns `true` when element is a nested editable or is placed inside one.\n//\n// @param {module:engine/view/element~Element}\n// @returns {Boolean}\nfunction isInsideNestedEditable( element ) {\n\twhile ( element ) {\n\t\tif ( element.is( 'editableElement' ) && !element.is( 'rootElement' ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Click on nested widget should select it.\n\t\tif ( isWidget( element ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\telement = element.parent;\n\t}\n\n\treturn false;\n}\n\n// Checks whether the specified `element` is a child of the `parent` element.\n//\n// @param {module:engine/view/element~Element} element An element to check.\n// @param {module:engine/view/element~Element|null} parent A parent for the element.\n// @returns {Boolean}\nfunction isChild( element, parent ) {\n\tif ( !parent ) {\n\t\treturn false;\n\t}\n\n\treturn Array.from( element.getAncestors() ).includes( parent );\n}\n\n// Checks if enter key should insert paragraph. This should be done only on elements of type object (excluding inline objects).\n//\n// @param {module:engine/model/element~Element} element And element to check.\n// @param {module:engine/model/schema~Schema} schema\nfunction shouldInsertParagraph( element, schema ) {\n\treturn element && schema.isObject( element ) && !schema.isInline( element );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module media-embed/mediaembed\n */\n\nimport MediaEmbedEditing from './mediaembedediting';\nimport AutoMediaEmbed from './automediaembed';\nimport MediaEmbedUI from './mediaembedui';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Widget from '@ckeditor/ckeditor5-widget/src/widget';\n\nimport '../theme/mediaembed.css';\n\n/**\n * The media embed plugin.\n *\n * For a detailed overview, check the {@glink features/media-embed Media Embed feature documentation}.\n *\n * This is a \"glue\" plugin which loads the following plugins:\n *\n * * The {@link module:media-embed/mediaembedediting~MediaEmbedEditing media embed editing feature},\n * * The {@link module:media-embed/mediaembedui~MediaEmbedUI media embed UI feature} and\n * * The {@link module:media-embed/automediaembed~AutoMediaEmbed auto-media embed feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class MediaEmbed extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ MediaEmbedEditing, MediaEmbedUI, AutoMediaEmbed, Widget ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'MediaEmbed';\n\t}\n}\n\n/**\n * The media embed provider descriptor. Used in\n * {@link module:media-embed/mediaembed~MediaEmbedConfig#providers `config.mediaEmbed.providers`} and\n * {@link module:media-embed/mediaembed~MediaEmbedConfig#extraProviders `config.mediaEmbed.extraProviders`}.\n *\n * See {@link module:media-embed/mediaembed~MediaEmbedConfig} to learn more.\n *\n *\t\t{\n *\t\t\tname: 'example',\n *\n *\t\t\t// The following RegExp matches https://www.example.com/media/{media id},\n *\t\t\t// (either with \"http(s)://\" and \"www\" or without), so the valid URLs are:\n *\t\t\t//\n *\t\t\t// * https://www.example.com/media/{media id},\n *\t\t\t// * http://www.example.com/media/{media id},\n *\t\t\t// * www.example.com/media/{media id},\n *\t\t\t// * example.com/media/{media id}\n *\t\t\turl: /^example\\.com\\/media\\/(\\w+)/,\n *\n *\t\t\t// The rendering function of the provider.\n *\t\t\t// Used to represent the media when editing the content (i.e. in the view)\n *\t\t\t// and also in the data output of the editor if semantic data output is disabled.\n *\t\t\thtml: match => `The HTML representing the media with ID=${ match[ 1 ] }.`\n *\t\t}\n *\n * You can allow any sort of media in the editor using the \"allow–all\" `RegExp`.\n * But mind that, since URLs are processed in the order of configuration, if one of the previous\n * `RegExps` matches the URL, it will have a precedence over this one.\n *\n *\t\t{\n *\t\t\tname: 'allow-all',\n *\t\t\turl: /^.+/\n *\t\t}\n *\n * To implement responsive media, you can use the following HTML structure:\n *\n *\t\t{\n *\t\t\t...\n *\t\t\thtml: match =>\n *\t\t\t\t'<div style=\"position:relative; padding-bottom:100%; height:0\">' +\n *\t\t\t\t\t'<iframe src=\"...\" frameborder=\"0\" ' +\n *\t\t\t\t\t\t'style=\"position:absolute; width:100%; height:100%; top:0; left:0\">' +\n *\t\t\t\t\t'</iframe>' +\n *\t\t\t\t'</div>'\n *\t\t}\n *\n * @typedef {Object} module:media-embed/mediaembed~MediaEmbedProvider\n * @property {String} name The name of the provider. Used e.g. when\n * {@link module:media-embed/mediaembed~MediaEmbedConfig#removeProviders removing providers}.\n * @property {RegExp|Array.<RegExp>} url The `RegExp` object (or array of objects) defining the URL of the media.\n * If any URL matches the `RegExp`, it becomes the media in the editor model, as defined by the provider. The result\n * of matching (output of `String.prototype.match()`) is passed to the `html` rendering function of the media.\n *\n * **Note:** You do not need to include the protocol (`http://`, `https://`) and `www` subdomain in your `RegExps`,\n * they are stripped from the URLs before matching anyway.\n * @property {Function} [html] (optional) The rendering function of the media. The function receives the entire matching\n * array from the corresponding `url` `RegExp` as an argument, allowing rendering a dedicated\n * preview of the media identified by a certain ID or a hash. When not defined, the media embed feature\n * will use a generic media representation in the view and output data.\n * Note that when\n * {@link module:media-embed/mediaembed~MediaEmbedConfig#previewsInData `config.mediaEmbed.previewsInData`}\n * is `true`, the rendering function **will always** be used for the media in the editor data output.\n */\n\n/**\n * The configuration of the {@link module:media-embed/mediaembed~MediaEmbed} feature.\n *\n * Read more in {@link module:media-embed/mediaembed~MediaEmbedConfig}.\n *\n * @member {module:media-embed/mediaembed~MediaEmbedConfig} module:core/editor/editorconfig~EditorConfig#mediaEmbed\n */\n\n/**\n * The configuration of the media embed features.\n *\n * Read more about {@glink features/media-embed#configuration configuring the media embed feature}.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\tmediaEmbed: ... // Media embed feature options.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface MediaEmbedConfig\n */\n\n/**\n * The default media providers supported by the editor.\n *\n * The names of providers with rendering functions (previews):\n *\n * * \"dailymotion\",\n * * \"spotify\",\n * * \"youtube\",\n * * \"vimeo\"\n *\n * The names of providers without rendering functions:\n *\n * * \"instagram\",\n * * \"twitter\",\n * * \"googleMaps\",\n * * \"flickr\",\n * * \"facebook\"\n *\n * See the {@link module:media-embed/mediaembed~MediaEmbedProvider provider syntax} to learn more about\n * different kinds of media and media providers.\n *\n * **Note**: The default media provider configuration may not support all possible media URLs,\n * only the most common are included.\n *\n * Media without rendering functions are always represented in the data using the \"semantic\" markup. See\n * {@link module:media-embed/mediaembed~MediaEmbedConfig#previewsInData `config.mediaEmbed.previewsInData`} to\n * learn more about possible data outputs.\n *\n * The priority of media providers corresponds to the order of configuration. The first provider\n * to match the URL is always used, even if there are other providers that support a particular URL.\n * The URL is never matched against the remaining providers.\n *\n * To discard **all** default media providers, simply override this configuration with your own\n * {@link module:media-embed/mediaembed~MediaEmbedProvider definitions}:\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\tplugins: [ MediaEmbed, ... ],\n *\t\t\t\tmediaEmbed: {\n *\t\t\t\t\tproviders: [\n *\t\t\t\t\t\t{\n *\t\t\t\t\t\t\t name: 'myProvider',\n *\t\t\t\t\t\t\t url: /^example\\.com\\/media\\/(\\w+)/,\n *\t\t\t\t\t\t\t html: match => '...'\n *\t\t\t\t\t\t},\n *\t\t\t\t\t\t...\n * \t\t\t\t\t]\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * You can take inspiration from the default configuration of this feature which you can find in:\n * https://github.com/ckeditor/ckeditor5-media-embed/blob/master/src/mediaembedediting.js\n *\n * To **extend** the list of default providers, use\n * {@link module:media-embed/mediaembed~MediaEmbedConfig#extraProviders `config.mediaEmbed.extraProviders`}.\n *\n * To **remove** certain providers, use\n * {@link module:media-embed/mediaembed~MediaEmbedConfig#removeProviders `config.mediaEmbed.removeProviders`}.\n *\n * @member {Array.<module:media-embed/mediaembed~MediaEmbedProvider>} module:media-embed/mediaembed~MediaEmbedConfig#providers\n */\n\n/**\n * The additional media providers supported by the editor. This configuration helps extend the default\n * {@link module:media-embed/mediaembed~MediaEmbedConfig#providers}.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\tplugins: [ MediaEmbed, ... ],\n *\t\t\t\tmediaEmbed: {\n *\t\t\t\t\textraProviders: [\n *\t\t\t\t\t\t{\n *\t\t\t\t\t\t\t name: 'extraProvider',\n *\t\t\t\t\t\t\t url: /^example\\.com\\/media\\/(\\w+)/,\n *\t\t\t\t\t\t\t html: match => '...'\n *\t\t\t\t\t\t},\n *\t\t\t\t\t\t...\n * \t\t\t\t\t]\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See the {@link module:media-embed/mediaembed~MediaEmbedProvider provider syntax} to learn more.\n *\n * @member {Array.<module:media-embed/mediaembed~MediaEmbedProvider>} module:media-embed/mediaembed~MediaEmbedConfig#extraProviders\n */\n\n/**\n * The list of media providers that should not be used despite being available in\n * {@link module:media-embed/mediaembed~MediaEmbedConfig#providers `config.mediaEmbed.providers`} and\n * {@link module:media-embed/mediaembed~MediaEmbedConfig#extraProviders `config.mediaEmbed.extraProviders`}\n *\n *\t\tmediaEmbed: {\n *\t\t\tremoveProviders: [ 'youtube', 'twitter' ]\n *\t\t}\n *\n * @member {Array.<String>} module:media-embed/mediaembed~MediaEmbedConfig#removeProviders\n */\n\n/**\n * Controls the data format produced by the feature.\n *\n * When `false` (default), the feature produces \"semantic\" data, i.e. it does not include the preview of\n * the media, just the `<oembed>` tag with the `url` attribute:\n *\n *\t\t<figure class=\"media\">\n *\t\t\t<oembed url=\"https://url\"></oembed>\n *\t\t</figure>\n *\n * When `true`, the media is represented in the output in the same way it looks in the editor,\n * i.e. the media preview is saved to the database:\n *\n *\t\t<figure class=\"media\">\n *\t\t\t<div data-oembed-url=\"https://url\">\n *\t\t\t\t<iframe src=\"https://preview\"></iframe>\n *\t\t\t</div>\n *\t\t</figure>\n *\n * **Note:** Media without preview are always represented in the data using the \"semantic\" markup\n * regardless of the value of the `previewsInData`. Learn more about different kinds of media\n * in the {@link module:media-embed/mediaembed~MediaEmbedConfig#providers `config.mediaEmbed.providers`}\n * configuration description.\n *\n * @member {Boolean} [module:media-embed/mediaembed~MediaEmbedConfig#previewsInData=false]\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/listcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The list command. It is used by the {@link module:list/list~List list feature}.\n *\n * @extends module:core/command~Command\n */\nexport default class ListCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t * @param {'numbered'|'bulleted'} type List type that will be handled by this command.\n\t */\n\tconstructor( editor, type ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The type of the list created by the command.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'numbered'|'bulleted'|'todo'}\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * A flag indicating whether the command is active, which means that the selection starts in a list of the same type.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #value\n\t\t */\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.value = this._getValue();\n\t\tthis.isEnabled = this._checkEnabled();\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @protected\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\t\tconst blocks = Array.from( document.selection.getSelectedBlocks() )\n\t\t\t.filter( block => checkCanBecomeListItem( block, model.schema ) );\n\n\t\t// Whether we are turning off some items.\n\t\tconst turnOff = this.value === true;\n\t\t// If we are turning off items, we are going to rename them to paragraphs.\n\n\t\tmodel.change( writer => {\n\t\t\t// If part of a list got turned off, we need to handle (outdent) all of sub-items of the last turned-off item.\n\t\t\t// To be sure that model is all the time in a good state, we first fix items below turned-off item.\n\t\t\tif ( turnOff ) {\n\t\t\t\t// Start from the model item that is just after the last turned-off item.\n\t\t\t\tlet next = blocks[ blocks.length - 1 ].nextSibling;\n\t\t\t\tlet currentIndent = Number.POSITIVE_INFINITY;\n\t\t\t\tlet changes = [];\n\n\t\t\t\t// Correct indent of all items after the last turned off item.\n\t\t\t\t// Rules that should be followed:\n\t\t\t\t// 1. All direct sub-items of turned-off item should become indent 0, because the first item after it\n\t\t\t\t//    will be the first item of a new list. Other items are at the same level, so should have same 0 index.\n\t\t\t\t// 2. All items with indent lower than indent of turned-off item should become indent 0, because they\n\t\t\t\t//    should not end up as a child of any of list items that they were not children of before.\n\t\t\t\t// 3. All other items should have their indent changed relatively to it's parent.\n\t\t\t\t//\n\t\t\t\t// For example:\n\t\t\t\t// 1  * --------\n\t\t\t\t// 2     * --------\n\t\t\t\t// 3        * --------\t\t\t<-- this is turned off.\n\t\t\t\t// 4           * --------\t\t<-- this has to become indent = 0, because it will be first item on a new list.\n\t\t\t\t// 5              * --------\t<-- this should be still be a child of item above, so indent = 1.\n\t\t\t\t// 6        * --------\t\t\t<-- this has to become indent = 0, because it should not be a child of any of items above.\n\t\t\t\t// 7           * --------\t\t<-- this should be still be a child of item above, so indent = 1.\n\t\t\t\t// 8     * --------\t\t\t\t<-- this has to become indent = 0.\n\t\t\t\t// 9        * --------\t\t\t<-- this should still be a child of item above, so indent = 1.\n\t\t\t\t// 10          * --------\t\t<-- this should still be a child of item above, so indent = 2.\n\t\t\t\t// 11          * --------\t\t<-- this should still be at the same level as item above, so indent = 2.\n\t\t\t\t// 12 * --------\t\t\t\t<-- this and all below are left unchanged.\n\t\t\t\t// 13    * --------\n\t\t\t\t// 14       * --------\n\t\t\t\t//\n\t\t\t\t// After turning off 3 the list becomes:\n\t\t\t\t//\n\t\t\t\t// 1  * --------\n\t\t\t\t// 2     * --------\n\t\t\t\t//\n\t\t\t\t// 3  --------\n\t\t\t\t//\n\t\t\t\t// 4  * --------\n\t\t\t\t// 5     * --------\n\t\t\t\t// 6  * --------\n\t\t\t\t// 7     * --------\n\t\t\t\t// 8  * --------\n\t\t\t\t// 9     * --------\n\t\t\t\t// 10       * --------\n\t\t\t\t// 11       * --------\n\t\t\t\t// 12 * --------\n\t\t\t\t// 13    * --------\n\t\t\t\t// 14       * --------\n\t\t\t\t//\n\t\t\t\t// Thanks to this algorithm no lists are mismatched and no items get unexpected children/parent, while\n\t\t\t\t// those parent-child connection which are possible to maintain are still maintained. It's worth noting\n\t\t\t\t// that this is the same effect that we would be get by multiple use of outdent command. However doing\n\t\t\t\t// it like this is much more efficient because it's less operation (less memory usage, easier OT) and\n\t\t\t\t// less conversion (faster).\n\t\t\t\twhile ( next && next.name == 'listItem' && next.getAttribute( 'listIndent' ) !== 0 ) {\n\t\t\t\t\t// Check each next list item, as long as its indent is bigger than 0.\n\t\t\t\t\t// If the indent is 0 we are not going to change anything anyway.\n\t\t\t\t\tconst indent = next.getAttribute( 'listIndent' );\n\n\t\t\t\t\t// We check if that's item indent is lower as current relative indent.\n\t\t\t\t\tif ( indent < currentIndent ) {\n\t\t\t\t\t\t// If it is, current relative indent becomes that indent.\n\t\t\t\t\t\tcurrentIndent = indent;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fix indent relatively to current relative indent.\n\t\t\t\t\t// Note, that if we just changed the current relative indent, the newIndent will be equal to 0.\n\t\t\t\t\tconst newIndent = indent - currentIndent;\n\n\t\t\t\t\t// Save the entry in changes array. We do not apply it at the moment, because we will need to\n\t\t\t\t\t// reverse the changes so the last item is changed first.\n\t\t\t\t\t// This is to keep model in correct state all the time.\n\t\t\t\t\tchanges.push( { element: next, listIndent: newIndent } );\n\n\t\t\t\t\t// Find next item.\n\t\t\t\t\tnext = next.nextSibling;\n\t\t\t\t}\n\n\t\t\t\tchanges = changes.reverse();\n\n\t\t\t\tfor ( const item of changes ) {\n\t\t\t\t\twriter.setAttribute( 'listIndent', item.listIndent, item.element );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we are turning on, we might change some items that are already `listItem`s but with different type.\n\t\t\t// Changing one nested list item to other type should also trigger changing all its siblings so the\n\t\t\t// whole nested list is of the same type.\n\t\t\t// Example (assume changing to numbered list):\n\t\t\t// * ------\t\t\t\t<-- do not fix, top level item\n\t\t\t//   * ------\t\t\t<-- fix, because latter list item of this item's list is changed\n\t\t\t//      * ------\t\t<-- do not fix, item is not affected (different list)\n\t\t\t//   * ------\t\t\t<-- fix, because latter list item of this item's list is changed\n\t\t\t//      * ------\t\t<-- fix, because latter list item of this item's list is changed\n\t\t\t//      * ---[--\t\t<-- already in selection\n\t\t\t//   * ------\t\t\t<-- already in selection\n\t\t\t//   * ------\t\t\t<-- already in selection\n\t\t\t// * ------\t\t\t\t<-- already in selection, but does not cause other list items to change because is top-level\n\t\t\t//   * ---]--\t\t\t<-- already in selection\n\t\t\t//   * ------\t\t\t<-- fix, because preceding list item of this item's list is changed\n\t\t\t//      * ------\t\t<-- do not fix, item is not affected (different list)\n\t\t\t// * ------\t\t\t\t<-- do not fix, top level item\n\t\t\tif ( !turnOff ) {\n\t\t\t\t// Find lowest indent among selected items. This will be indicator what is the indent of\n\t\t\t\t// top-most list affected by the command.\n\t\t\t\tlet lowestIndent = Number.POSITIVE_INFINITY;\n\n\t\t\t\tfor ( const item of blocks ) {\n\t\t\t\t\tif ( item.is( 'listItem' ) && item.getAttribute( 'listIndent' ) < lowestIndent ) {\n\t\t\t\t\t\tlowestIndent = item.getAttribute( 'listIndent' );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Do not execute the fix for top-level lists.\n\t\t\t\tlowestIndent = lowestIndent === 0 ? 1 : lowestIndent;\n\n\t\t\t\t// Fix types of list items that are \"before\" the selected blocks.\n\t\t\t\t_fixType( blocks, true, lowestIndent );\n\n\t\t\t\t// Fix types of list items that are \"after\" the selected blocks.\n\t\t\t\t_fixType( blocks, false, lowestIndent );\n\t\t\t}\n\n\t\t\t// Phew! Now it will be easier :).\n\t\t\t// For each block element that was in the selection, we will either: turn it to list item,\n\t\t\t// turn it to paragraph, or change it's type. Or leave it as it is.\n\t\t\t// Do it in reverse as there might be multiple blocks (same as with changing indents).\n\t\t\tfor ( const element of blocks.reverse() ) {\n\t\t\t\tif ( turnOff && element.name == 'listItem' ) {\n\t\t\t\t\t// We are turning off and the element is a `listItem` - it should be converted to `paragraph`.\n\t\t\t\t\t// List item specific attributes are removed by post fixer.\n\t\t\t\t\twriter.rename( element, 'paragraph' );\n\t\t\t\t} else if ( !turnOff && element.name != 'listItem' ) {\n\t\t\t\t\t// We are turning on and the element is not a `listItem` - it should be converted to `listItem`.\n\t\t\t\t\t// The order of operations is important to keep model in correct state.\n\t\t\t\t\twriter.setAttributes( { listType: this.type, listIndent: 0 }, element );\n\t\t\t\t\twriter.rename( element, 'listItem' );\n\t\t\t\t} else if ( !turnOff && element.name == 'listItem' && element.getAttribute( 'listType' ) != this.type ) {\n\t\t\t\t\t// We are turning on and the element is a `listItem` but has different type - change it's type and\n\t\t\t\t\t// type of it's all siblings that have same indent.\n\t\t\t\t\twriter.setAttribute( 'listType', this.type, element );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Checks the command's {@link #value}.\n\t *\n\t * @private\n\t * @returns {Boolean} The current value.\n\t */\n\t_getValue() {\n\t\t// Check whether closest `listItem` ancestor of the position has a correct type.\n\t\tconst listItem = first( this.editor.model.document.selection.getSelectedBlocks() );\n\n\t\treturn !!listItem && listItem.is( 'listItem' ) && listItem.getAttribute( 'listType' ) == this.type;\n\t}\n\n\t/**\n\t * Checks whether the command can be enabled in the current context.\n\t *\n\t * @private\n\t * @returns {Boolean} Whether the command should be enabled.\n\t */\n\t_checkEnabled() {\n\t\t// If command value is true it means that we are in list item, so the command should be enabled.\n\t\tif ( this.value ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst selection = this.editor.model.document.selection;\n\t\tconst schema = this.editor.model.schema;\n\n\t\tconst firstBlock = first( selection.getSelectedBlocks() );\n\n\t\tif ( !firstBlock ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Otherwise, check if list item can be inserted at the position start.\n\t\treturn checkCanBecomeListItem( firstBlock, schema );\n\t}\n}\n\n// Helper function used when one or more list item have their type changed. Fixes type of other list items\n// that are affected by the change (are in same lists) but are not directly in selection. The function got extracted\n// not to duplicated code, as same fix has to be performed before and after selection.\n//\n// @param {Array.<module:engine/model/node~Node>} blocks Blocks that are in selection.\n// @param {Boolean} isBackward Specified whether fix will be applied for blocks before first selected block (`true`)\n// or blocks after last selected block (`false`).\n// @param {Number} lowestIndent Lowest indent among selected blocks.\nfunction _fixType( blocks, isBackward, lowestIndent ) {\n\t// We need to check previous sibling of first changed item and next siblings of last changed item.\n\tconst startingItem = isBackward ? blocks[ 0 ] : blocks[ blocks.length - 1 ];\n\n\tif ( startingItem.is( 'listItem' ) ) {\n\t\tlet item = startingItem[ isBackward ? 'previousSibling' : 'nextSibling' ];\n\t\t// During processing items, keeps the lowest indent of already processed items.\n\t\t// This saves us from changing too many items.\n\t\t// Following example is for going forward as it is easier to read, however same applies to going backward.\n\t\t// * ------\n\t\t//   * ------\n\t\t//     * --[---\n\t\t//   * ------\t\t<-- `lowestIndent` should be 1\n\t\t//     * --]---\t\t<-- `startingItem`, `currentIndent` = 2, `lowestIndent` == 1\n\t\t//     * ------\t\t<-- should be fixed, `indent` == 2 == `currentIndent`\n\t\t//   * ------\t\t<-- should be fixed, set `currentIndent` to 1, `indent` == 1 == `currentIndent`\n\t\t//     * ------\t\t<-- should not be fixed, item is in different list, `indent` = 2, `indent` != `currentIndent`\n\t\t//   * ------\t\t<-- should be fixed, `indent` == 1 == `currentIndent`\n\t\t// * ------\t\t\t<-- break loop (`indent` < `lowestIndent`)\n\t\tlet currentIndent = startingItem.getAttribute( 'listIndent' );\n\n\t\t// Look back until a list item with indent lower than reference `lowestIndent`.\n\t\t// That would be the parent of nested sublist which contains item having `lowestIndent`.\n\t\twhile ( item && item.is( 'listItem' ) && item.getAttribute( 'listIndent' ) >= lowestIndent ) {\n\t\t\tif ( currentIndent > item.getAttribute( 'listIndent' ) ) {\n\t\t\t\tcurrentIndent = item.getAttribute( 'listIndent' );\n\t\t\t}\n\n\t\t\t// Found an item that is in the same nested sublist.\n\t\t\tif ( item.getAttribute( 'listIndent' ) == currentIndent ) {\n\t\t\t\t// Just add the item to selected blocks like it was selected by the user.\n\t\t\t\tblocks[ isBackward ? 'unshift' : 'push' ]( item );\n\t\t\t}\n\n\t\t\titem = item[ isBackward ? 'previousSibling' : 'nextSibling' ];\n\t\t}\n\t}\n}\n\n// Checks whether the given block can be replaced by a listItem.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\nfunction checkCanBecomeListItem( block, schema ) {\n\treturn schema.checkChild( block.parent, 'listItem' ) && !schema.isObject( block );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/indentcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The list indent command. It is used by the {@link module:list/list~List list feature}.\n *\n * @extends module:core/command~Command\n */\nexport default class IndentCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t * @param {'forward'|'backward'} indentDirection The direction of indent. If it is equal to `backward`, the command\n\t * will outdent a list item.\n\t */\n\tconstructor( editor, indentDirection ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Determines by how much the command will change the list item's indent attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {Number}\n\t\t */\n\t\tthis._indentBy = indentDirection == 'forward' ? 1 : -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = this._checkEnabled();\n\t}\n\n\t/**\n\t * Indents or outdents (depending on the {@link #constructor}'s `indentDirection` parameter) selected list items.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tlet itemsToChange = Array.from( doc.selection.getSelectedBlocks() );\n\n\t\tmodel.change( writer => {\n\t\t\tconst lastItem = itemsToChange[ itemsToChange.length - 1 ];\n\n\t\t\t// Indenting a list item should also indent all the items that are already sub-items of indented item.\n\t\t\tlet next = lastItem.nextSibling;\n\n\t\t\t// Check all items after last indented item, as long as their indent is bigger than indent of that item.\n\t\t\twhile ( next && next.name == 'listItem' && next.getAttribute( 'listIndent' ) > lastItem.getAttribute( 'listIndent' ) ) {\n\t\t\t\titemsToChange.push( next );\n\n\t\t\t\tnext = next.nextSibling;\n\t\t\t}\n\n\t\t\t// We need to be sure to keep model in correct state after each small change, because converters\n\t\t\t// bases on that state and assumes that model is correct.\n\t\t\t// Because of that, if the command outdents items, we will outdent them starting from the last item, as\n\t\t\t// it is safer.\n\t\t\tif ( this._indentBy < 0 ) {\n\t\t\t\titemsToChange = itemsToChange.reverse();\n\t\t\t}\n\n\t\t\tfor ( const item of itemsToChange ) {\n\t\t\t\tconst indent = item.getAttribute( 'listIndent' ) + this._indentBy;\n\n\t\t\t\t// If indent is lower than 0, it means that the item got outdented when it was not indented.\n\t\t\t\t// This means that we need to convert that list item to paragraph.\n\t\t\t\tif ( indent < 0 ) {\n\t\t\t\t\t// To keep the model as correct as possible, first rename listItem, then remove attributes,\n\t\t\t\t\t// as listItem without attributes is very incorrect and will cause problems in converters.\n\t\t\t\t\t// No need to remove attributes, will be removed by post fixer.\n\t\t\t\t\twriter.rename( item, 'paragraph' );\n\t\t\t\t}\n\t\t\t\t// If indent is >= 0, change the attribute value.\n\t\t\t\telse {\n\t\t\t\t\twriter.setAttribute( 'listIndent', indent, item );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Checks whether the command can be enabled in the current context.\n\t *\n\t * @private\n\t * @returns {Boolean} Whether the command should be enabled.\n\t */\n\t_checkEnabled() {\n\t\t// Check whether any of position's ancestor is a list item.\n\t\tconst listItem = first( this.editor.model.document.selection.getSelectedBlocks() );\n\n\t\t// If selection is not in a list item, the command is disabled.\n\t\tif ( !listItem || !listItem.is( 'listItem' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this._indentBy > 0 ) {\n\t\t\t// Cannot indent first item in it's list. Check if before `listItem` is a list item that is in same list.\n\t\t\t// To be in the same list, the item has to have same attributes and cannot be \"split\" by an item with lower indent.\n\t\t\tconst indent = listItem.getAttribute( 'listIndent' );\n\t\t\tconst type = listItem.getAttribute( 'listType' );\n\n\t\t\tlet prev = listItem.previousSibling;\n\n\t\t\twhile ( prev && prev.is( 'listItem' ) && prev.getAttribute( 'listIndent' ) >= indent ) {\n\t\t\t\tif ( prev.getAttribute( 'listIndent' ) == indent ) {\n\t\t\t\t\t// The item is on the same level.\n\t\t\t\t\t// If it has same type, it means that we found a preceding sibling from the same list.\n\t\t\t\t\t// If it does not have same type, it means that `listItem` is on different list (this can happen only\n\t\t\t\t\t// on top level lists, though).\n\t\t\t\t\treturn prev.getAttribute( 'listType' ) == type;\n\t\t\t\t}\n\n\t\t\t\tprev = prev.previousSibling;\n\t\t\t}\n\n\t\t\t// Could not find similar list item, this means that `listItem` is first in its list.\n\t\t\treturn false;\n\t\t}\n\n\t\t// If we are outdenting it is enough to be in list item. Every list item can always be outdented.\n\t\treturn true;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/utils\n */\n\nimport { getFillerOffset } from '@ckeditor/ckeditor5-engine/src/view/containerelement';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\n/**\n * Creates a list item {@link module:engine/view/containerelement~ContainerElement}.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer The writer instance.\n * @returns {module:engine/view/containerelement~ContainerElement}\n */\nexport function createViewListItemElement( writer ) {\n\tconst viewItem = writer.createContainerElement( 'li' );\n\n\tviewItem.getFillerOffset = getListItemFillerOffset;\n\n\treturn viewItem;\n}\n\n/**\n * Helper function that creates a `<ul><li></li></ul>` or (`<ol>`) structure out of the given `modelItem` model `listItem` element.\n * Then, it binds the created view list item (<li>) with the model `listItem` element.\n * The function then returns the created view list item (<li>).\n *\n * @param {module:engine/model/item~Item} modelItem Model list item.\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface.\n * @returns {module:engine/view/containerelement~ContainerElement} View list element.\n */\nexport function generateLiInUl( modelItem, conversionApi ) {\n\tconst mapper = conversionApi.mapper;\n\tconst viewWriter = conversionApi.writer;\n\tconst listType = modelItem.getAttribute( 'listType' ) == 'numbered' ? 'ol' : 'ul';\n\tconst viewItem = createViewListItemElement( viewWriter );\n\n\tconst viewList = viewWriter.createContainerElement( listType, null );\n\n\tviewWriter.insert( viewWriter.createPositionAt( viewList, 0 ), viewItem );\n\n\tmapper.bindElements( modelItem, viewItem );\n\n\treturn viewItem;\n}\n\n/**\n * Helper function that inserts a view list at a correct place and merges it with its siblings.\n * It takes a model list item element (`modelItem`) and a corresponding view list item element (`injectedItem`). The view list item\n * should be in a view list element (`<ul>` or `<ol>`) and should be its only child.\n * See comments below to better understand the algorithm.\n *\n * @param {module:engine/view/item~Item} modelItem Model list item.\n * @param {module:engine/view/containerelement~ContainerElement} injectedItem\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface.\n * @param {module:engine/model/model~Model} model The model instance.\n */\nexport function injectViewList( modelItem, injectedItem, conversionApi, model ) {\n\tconst injectedList = injectedItem.parent;\n\tconst mapper = conversionApi.mapper;\n\tconst viewWriter = conversionApi.writer;\n\n\t// The position where the view list will be inserted.\n\tlet insertPosition = mapper.toViewPosition( model.createPositionBefore( modelItem ) );\n\n\t// 1. Find the previous list item that has the same or smaller indent. Basically we are looking for the first model item\n\t// that is a \"parent\" or \"sibling\" of the injected model item.\n\t// If there is no such list item, it means that the injected list item is the first item in \"its list\".\n\tconst refItem = getSiblingListItem( modelItem.previousSibling, {\n\t\tsameIndent: true,\n\t\tsmallerIndent: true,\n\t\tlistIndent: modelItem.getAttribute( 'listIndent' )\n\t} );\n\tconst prevItem = modelItem.previousSibling;\n\n\tif ( refItem && refItem.getAttribute( 'listIndent' ) == modelItem.getAttribute( 'listIndent' ) ) {\n\t\t// There is a list item with the same indent - we found the same-level sibling.\n\t\t// Break the list after it. The inserted view item will be added in the broken space.\n\t\tconst viewItem = mapper.toViewElement( refItem );\n\t\tinsertPosition = viewWriter.breakContainer( viewWriter.createPositionAfter( viewItem ) );\n\t} else {\n\t\t// There is no list item with the same indent. Check the previous model item.\n\t\tif ( prevItem && prevItem.name == 'listItem' ) {\n\t\t\t// If it is a list item, it has to have a lower indent.\n\t\t\t// It means that the inserted item should be added to it as its nested item.\n\t\t\tinsertPosition = mapper.toViewPosition( model.createPositionAt( prevItem, 'end' ) );\n\t\t} else {\n\t\t\t// The previous item is not a list item (or does not exist at all).\n\t\t\t// Just map the position and insert the view item at the mapped position.\n\t\t\tinsertPosition = mapper.toViewPosition( model.createPositionBefore( modelItem ) );\n\t\t}\n\t}\n\n\tinsertPosition = positionAfterUiElements( insertPosition );\n\n\t// Insert the view item.\n\tviewWriter.insert( insertPosition, injectedList );\n\n\t// 2. Handle possible children of the injected model item.\n\tif ( prevItem && prevItem.name == 'listItem' ) {\n\t\tconst prevView = mapper.toViewElement( prevItem );\n\n\t\tconst walkerBoundaries = viewWriter.createRange( viewWriter.createPositionAt( prevView, 0 ), insertPosition );\n\t\tconst walker = walkerBoundaries.getWalker( { ignoreElementEnd: true } );\n\n\t\tfor ( const value of walker ) {\n\t\t\tif ( value.item.is( 'li' ) ) {\n\t\t\t\tconst breakPosition = viewWriter.breakContainer( viewWriter.createPositionBefore( value.item ) );\n\t\t\t\tconst viewList = value.item.parent;\n\n\t\t\t\tconst targetPosition = viewWriter.createPositionAt( injectedItem, 'end' );\n\t\t\t\tmergeViewLists( viewWriter, targetPosition.nodeBefore, targetPosition.nodeAfter );\n\t\t\t\tviewWriter.move( viewWriter.createRangeOn( viewList ), targetPosition );\n\n\t\t\t\twalker.position = breakPosition;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst nextViewList = injectedList.nextSibling;\n\n\t\tif ( nextViewList && ( nextViewList.is( 'ul' ) || nextViewList.is( 'ol' ) ) ) {\n\t\t\tlet lastSubChild = null;\n\n\t\t\tfor ( const child of nextViewList.getChildren() ) {\n\t\t\t\tconst modelChild = mapper.toModelElement( child );\n\n\t\t\t\tif ( modelChild && modelChild.getAttribute( 'listIndent' ) > modelItem.getAttribute( 'listIndent' ) ) {\n\t\t\t\t\tlastSubChild = child;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( lastSubChild ) {\n\t\t\t\tviewWriter.breakContainer( viewWriter.createPositionAfter( lastSubChild ) );\n\t\t\t\tviewWriter.move( viewWriter.createRangeOn( lastSubChild.parent ), viewWriter.createPositionAt( injectedItem, 'end' ) );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Merge the inserted view list with its possible neighbor lists.\n\tmergeViewLists( viewWriter, injectedList, injectedList.nextSibling );\n\tmergeViewLists( viewWriter, injectedList.previousSibling, injectedList );\n}\n\n/**\n * Helper function that takes two parameters that are expected to be view list elements, and merges them.\n * The merge happens only if both parameters are list elements of the same type (the same element name and the same class attributes).\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter The writer instance.\n * @param {module:engine/view/item~Item} firstList The first element to compare.\n * @param {module:engine/view/item~Item} secondList The second element to compare.\n * @returns {module:engine/view/position~Position|null} The position after merge or `null` when there was no merge.\n */\nexport function mergeViewLists( viewWriter, firstList, secondList ) {\n\t// Check if two lists are going to be merged.\n\tif ( !firstList || !secondList || ( firstList.name != 'ul' && firstList.name != 'ol' ) ) {\n\t\treturn null;\n\t}\n\n\t// Both parameters are list elements, so compare types now.\n\tif ( firstList.name != secondList.name || firstList.getAttribute( 'class' ) !== secondList.getAttribute( 'class' ) ) {\n\t\treturn null;\n\t}\n\n\treturn viewWriter.mergeContainers( viewWriter.createPositionAfter( firstList ) );\n}\n\n/**\n * Helper function that for a given `view.Position`, returns a `view.Position` that is after all `view.UIElement`s that\n * are after the given position.\n *\n * For example:\n * `<container:p>foo^<ui:span></ui:span><ui:span></ui:span>bar</container:p>`\n * For position ^, the position before \"bar\" will be returned.\n *\n * @param {module:engine/view/position~Position} viewPosition\n * @returns {module:engine/view/position~Position}\n */\nexport function positionAfterUiElements( viewPosition ) {\n\treturn viewPosition.getLastMatchingPosition( value => value.item.is( 'uiElement' ) );\n}\n\n/**\n * Helper function that searches for a previous list item sibling of a given model item that meets the given criteria\n * passed by the options object.\n *\n * @param {module:engine/model/item~Item} modelItem\n * @param {Object} options Search criteria.\n * @param {Boolean} [options.sameIndent=false] Whether the sought sibling should have the same indentation.\n * @param {Boolean} [options.smallerIndent=false] Whether the sought sibling should have a smaller indentation.\n * @param {Number} [options.listIndent] The reference indentation.\n * @returns {module:engine/model/item~Item|null}\n */\nexport function getSiblingListItem( modelItem, options ) {\n\tconst sameIndent = !!options.sameIndent;\n\tconst smallerIndent = !!options.smallerIndent;\n\tconst indent = options.listIndent;\n\n\tlet item = modelItem;\n\n\twhile ( item && item.name == 'listItem' ) {\n\t\tconst itemIndent = item.getAttribute( 'listIndent' );\n\n\t\tif ( ( sameIndent && indent == itemIndent ) || ( smallerIndent && indent > itemIndent ) ) {\n\t\t\treturn item;\n\t\t}\n\n\t\titem = item.previousSibling;\n\t}\n\n\treturn null;\n}\n\n/**\n * Helper method for creating a UI button and linking it with an appropriate command.\n *\n * @private\n * @param {module:core/editor/editor~Editor} editor The editor instance to which the UI component will be added.\n * @param {String} commandName The name of the command.\n * @param {Object} label The button label.\n * @param {String} icon The source of the icon.\n */\nexport function createUIComponent( editor, commandName, label, icon ) {\n\teditor.ui.componentFactory.add( commandName, locale => {\n\t\tconst command = editor.commands.get( commandName );\n\t\tconst buttonView = new ButtonView( locale );\n\n\t\tbuttonView.set( {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ttooltip: true,\n\t\t\tisToggleable: true\n\t\t} );\n\n\t\t// Bind button model to command.\n\t\tbuttonView.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t// Execute command.\n\t\tbuttonView.on( 'execute', () => {\n\t\t\teditor.execute( commandName );\n\t\t\teditor.editing.view.focus();\n\t\t} );\n\n\t\treturn buttonView;\n\t} );\n}\n\n// Implementation of getFillerOffset for view list item element.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\nfunction getListItemFillerOffset() {\n\tconst hasOnlyLists = !this.isEmpty && ( this.getChild( 0 ).name == 'ul' || this.getChild( 0 ).name == 'ol' );\n\n\tif ( this.isEmpty || hasOnlyLists ) {\n\t\treturn 0;\n\t}\n\n\treturn getFillerOffset.call( this );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/converters\n */\n\nimport {\n\tgenerateLiInUl,\n\tinjectViewList,\n\tmergeViewLists,\n\tgetSiblingListItem,\n\tpositionAfterUiElements\n} from './utils';\nimport TreeWalker from '@ckeditor/ckeditor5-engine/src/model/treewalker';\n\n/**\n * A model-to-view converter for the `listItem` model element insertion.\n *\n * It creates a `<ul><li></li><ul>` (or `<ol>`) view structure out of a `listItem` model element, inserts it at the correct\n * position, and merges the list with surrounding lists (if available).\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\nexport function modelViewInsertion( model ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst consumable = conversionApi.consumable;\n\n\t\tif ( !consumable.test( data.item, 'insert' ) ||\n\t\t\t!consumable.test( data.item, 'attribute:listType' ) ||\n\t\t\t!consumable.test( data.item, 'attribute:listIndent' )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconsumable.consume( data.item, 'insert' );\n\t\tconsumable.consume( data.item, 'attribute:listType' );\n\t\tconsumable.consume( data.item, 'attribute:listIndent' );\n\n\t\tconst modelItem = data.item;\n\t\tconst viewItem = generateLiInUl( modelItem, conversionApi );\n\n\t\tinjectViewList( modelItem, viewItem, conversionApi, model );\n\t};\n}\n\n/**\n * A model-to-view converter for the `listItem` model element removal.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\nexport function modelViewRemove( model ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst viewStart = conversionApi.mapper.toViewPosition( data.position ).getLastMatchingPosition( value => !value.item.is( 'li' ) );\n\t\tconst viewItem = viewStart.nodeAfter;\n\t\tconst viewWriter = conversionApi.writer;\n\n\t\t// 1. Break the container after and before the list item.\n\t\t// This will create a view list with one view list item - the one to remove.\n\t\tviewWriter.breakContainer( viewWriter.createPositionBefore( viewItem ) );\n\t\tviewWriter.breakContainer( viewWriter.createPositionAfter( viewItem ) );\n\n\t\t// 2. Remove the list with the item to remove.\n\t\tconst viewList = viewItem.parent;\n\t\tconst viewListPrev = viewList.previousSibling;\n\t\tconst removeRange = viewWriter.createRangeOn( viewList );\n\t\tconst removed = viewWriter.remove( removeRange );\n\n\t\t// 3. Merge the whole created by breaking and removing the list.\n\t\tif ( viewListPrev && viewListPrev.nextSibling ) {\n\t\t\tmergeViewLists( viewWriter, viewListPrev, viewListPrev.nextSibling );\n\t\t}\n\n\t\t// 4. Bring back nested list that was in the removed <li>.\n\t\tconst modelItem = conversionApi.mapper.toModelElement( viewItem );\n\n\t\thoistNestedLists( modelItem.getAttribute( 'listIndent' ) + 1, data.position, removeRange.start, viewItem, conversionApi, model );\n\n\t\t// 5. Unbind removed view item and all children.\n\t\tfor ( const child of viewWriter.createRangeIn( removed ).getItems() ) {\n\t\t\tconversionApi.mapper.unbindViewElement( child );\n\t\t}\n\n\t\tevt.stop();\n\t};\n}\n\n/**\n * A model-to-view converter for the `type` attribute change on the `listItem` model element.\n *\n * This change means that the `<li>` element parent changes from `<ul>` to `<ol>` (or vice versa). This is accomplished\n * by breaking view elements and changing their name. The next {@link module:list/converters~modelViewMergeAfterChangeType}\n * converter will attempt to merge split nodes.\n *\n * Splitting this conversion into 2 steps makes it possible to add an additional conversion in the middle.\n * Check {@link module:list/todolistconverters~modelViewChangeType} to see an example of it.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface.\n */\nexport function modelViewChangeType( evt, data, conversionApi ) {\n\tif ( !conversionApi.consumable.consume( data.item, 'attribute:listType' ) ) {\n\t\treturn;\n\t}\n\n\tconst viewItem = conversionApi.mapper.toViewElement( data.item );\n\tconst viewWriter = conversionApi.writer;\n\n\t// Break the container after and before the list item.\n\t// This will create a view list with one view list item -- the one that changed type.\n\tviewWriter.breakContainer( viewWriter.createPositionBefore( viewItem ) );\n\tviewWriter.breakContainer( viewWriter.createPositionAfter( viewItem ) );\n\n\t// Change name of the view list that holds the changed view item.\n\t// We cannot just change name property, because that would not render properly.\n\tconst viewList = viewItem.parent;\n\tconst listName = data.attributeNewValue == 'numbered' ? 'ol' : 'ul';\n\n\tviewWriter.rename( listName, viewList );\n}\n\n/**\n * A model-to-view converter that attempts to merge nodes split by {@link module:list/converters~modelViewChangeType}.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface.\n */\nexport function modelViewMergeAfterChangeType( evt, data, conversionApi ) {\n\tconst viewItem = conversionApi.mapper.toViewElement( data.item );\n\tconst viewList = viewItem.parent;\n\tconst viewWriter = conversionApi.writer;\n\n\t// Merge the changed view list with other lists, if possible.\n\tmergeViewLists( viewWriter, viewList, viewList.nextSibling );\n\tmergeViewLists( viewWriter, viewList.previousSibling, viewList );\n\n\t// Consumable insertion of children inside the item. They are already handled by re-building the item in view.\n\tfor ( const child of data.item.getChildren() ) {\n\t\tconversionApi.consumable.consume( child, 'insert' );\n\t}\n}\n\n/**\n * A model-to-view converter for the `listIndent` attribute change on the `listItem` model element.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\nexport function modelViewChangeIndent( model ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( !conversionApi.consumable.consume( data.item, 'attribute:listIndent' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewItem = conversionApi.mapper.toViewElement( data.item );\n\t\tconst viewWriter = conversionApi.writer;\n\n\t\t// 1. Break the container after and before the list item.\n\t\t// This will create a view list with one view list item -- the one that changed type.\n\t\tviewWriter.breakContainer( viewWriter.createPositionBefore( viewItem ) );\n\t\tviewWriter.breakContainer( viewWriter.createPositionAfter( viewItem ) );\n\n\t\t// 2. Extract view list with changed view list item and merge \"hole\" possibly created by breaking and removing elements.\n\t\tconst viewList = viewItem.parent;\n\t\tconst viewListPrev = viewList.previousSibling;\n\t\tconst removeRange = viewWriter.createRangeOn( viewList );\n\t\tviewWriter.remove( removeRange );\n\n\t\tif ( viewListPrev && viewListPrev.nextSibling ) {\n\t\t\tmergeViewLists( viewWriter, viewListPrev, viewListPrev.nextSibling );\n\t\t}\n\n\t\t// 3. Bring back nested list that was in the removed <li>.\n\t\thoistNestedLists( data.attributeOldValue + 1, data.range.start, removeRange.start, viewItem, conversionApi, model );\n\n\t\t// 4. Inject view list like it is newly inserted.\n\t\tinjectViewList( data.item, viewItem, conversionApi, model );\n\n\t\t// 5. Consume insertion of children inside the item. They are already handled by re-building the item in view.\n\t\tfor ( const child of data.item.getChildren() ) {\n\t\t\tconversionApi.consumable.consume( child, 'insert' );\n\t\t}\n\t};\n}\n\n/**\n * A special model-to-view converter introduced by the {@link module:list/list~List list feature}. This converter is fired for\n * insert change of every model item, and should be fired before the actual converter. The converter checks whether the inserted\n * model item is a non-`listItem` element. If it is, and it is inserted inside a view list, the converter breaks the\n * list so the model element is inserted to the view parent element corresponding to its model parent element.\n *\n * The converter prevents such situations:\n *\n *\t\t// Model:                        // View:\n *\t\t<listItem>foo</listItem>         <ul>\n *\t\t<listItem>bar</listItem>             <li>foo</li>\n *\t\t                                     <li>bar</li>\n *\t\t                                 </ul>\n *\n *\t\t// After change:                 // Correct view guaranteed by this converter:\n *\t\t<listItem>foo</listItem>         <ul><li>foo</li></ul><p>xxx</p><ul><li>bar</li></ul>\n *\t\t<paragraph>xxx</paragraph>       // Instead of this wrong view state:\n *\t\t<listItem>bar</listItem>         <ul><li>foo</li><p>xxx</p><li>bar</li></ul>\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface.\n */\nexport function modelViewSplitOnInsert( evt, data, conversionApi ) {\n\tif ( data.item.name != 'listItem' ) {\n\t\tlet viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst lists = [];\n\n\t\t// Break multiple ULs/OLs if there are.\n\t\t//\n\t\t// Imagine following list:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//     1.1.1 --------\n\t\t//     1.1.2 --------\n\t\t//     1.1.3 --------\n\t\t//       1.1.3.1 --------\n\t\t//   1.2 --------\n\t\t//     1.2.1 --------\n\t\t// 2 --------\n\t\t//\n\t\t// Insert paragraph after item 1.1.1:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//     1.1.1 --------\n\t\t//\n\t\t// Lorem ipsum.\n\t\t//\n\t\t//     1.1.2 --------\n\t\t//     1.1.3 --------\n\t\t//       1.1.3.1 --------\n\t\t//   1.2 --------\n\t\t//     1.2.1 --------\n\t\t// 2 --------\n\t\t//\n\t\t// In this case 1.1.2 has to become beginning of a new list.\n\t\t// We need to break list before 1.1.2 (obvious), then we need to break list also before 1.2.\n\t\t// Then we need to move those broken pieces one after another and merge:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//     1.1.1 --------\n\t\t//\n\t\t// Lorem ipsum.\n\t\t//\n\t\t// 1.1.2 --------\n\t\t//   1.1.3 --------\n\t\t//     1.1.3.1 --------\n\t\t// 1.2 --------\n\t\t//   1.2.1 --------\n\t\t// 2 --------\n\t\t//\n\t\twhile ( viewPosition.parent.name == 'ul' || viewPosition.parent.name == 'ol' ) {\n\t\t\tviewPosition = viewWriter.breakContainer( viewPosition );\n\n\t\t\tif ( viewPosition.parent.name != 'li' ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Remove lists that are after inserted element.\n\t\t\t// They will be brought back later, below the inserted element.\n\t\t\tconst removeStart = viewPosition;\n\t\t\tconst removeEnd = viewWriter.createPositionAt( viewPosition.parent, 'end' );\n\n\t\t\t// Don't remove if there is nothing to remove.\n\t\t\tif ( !removeStart.isEqual( removeEnd ) ) {\n\t\t\t\tconst removed = viewWriter.remove( viewWriter.createRange( removeStart, removeEnd ) );\n\t\t\t\tlists.push( removed );\n\t\t\t}\n\n\t\t\tviewPosition = viewWriter.createPositionAfter( viewPosition.parent );\n\t\t}\n\n\t\t// Bring back removed lists.\n\t\tif ( lists.length > 0 ) {\n\t\t\tfor ( let i = 0; i < lists.length; i++ ) {\n\t\t\t\tconst previousList = viewPosition.nodeBefore;\n\t\t\t\tconst insertedRange = viewWriter.insert( viewPosition, lists[ i ] );\n\t\t\t\tviewPosition = insertedRange.end;\n\n\t\t\t\t// Don't merge first list! We want a split in that place (this is why this converter is introduced).\n\t\t\t\tif ( i > 0 ) {\n\t\t\t\t\tconst mergePos = mergeViewLists( viewWriter, previousList, previousList.nextSibling );\n\n\t\t\t\t\t// If `mergePos` is in `previousList` it means that the lists got merged.\n\t\t\t\t\t// In this case, we need to fix insert position.\n\t\t\t\t\tif ( mergePos && mergePos.parent == previousList ) {\n\t\t\t\t\t\tviewPosition.offset--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Merge last inserted list with element after it.\n\t\t\tmergeViewLists( viewWriter, viewPosition.nodeBefore, viewPosition.nodeAfter );\n\t\t}\n\t}\n}\n\n/**\n * A special model-to-view converter introduced by the {@link module:list/list~List list feature}. This converter takes care of\n * merging view lists after something is removed or moved from near them.\n *\n * Example:\n *\n *\t\t// Model:                        // View:\n *\t\t<listItem>foo</listItem>         <ul><li>foo</li></ul>\n *\t\t<paragraph>xxx</paragraph>       <p>xxx</p>\n *\t\t<listItem>bar</listItem>         <ul><li>bar</li></ul>\n *\n *\t\t// After change:                 // Correct view guaranteed by this converter:\n *\t\t<listItem>foo</listItem>         <ul>\n *\t\t<listItem>bar</listItem>             <li>foo</li>\n *\t\t                                     <li>bar</li>\n *\t\t                                 </ul>\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface.\n */\nexport function modelViewMergeAfter( evt, data, conversionApi ) {\n\tconst viewPosition = conversionApi.mapper.toViewPosition( data.position );\n\tconst viewItemPrev = viewPosition.nodeBefore;\n\tconst viewItemNext = viewPosition.nodeAfter;\n\n\t// Merge lists if something (remove, move) was done from inside of list.\n\t// Merging will be done only if both items are view lists of the same type.\n\t// The check is done inside the helper function.\n\tmergeViewLists( conversionApi.writer, viewItemPrev, viewItemNext );\n}\n\n/**\n * A view-to-model converter that converts the `<li>` view elements into the `listItem` model elements.\n *\n * To set correct values of the `listType` and `listIndent` attributes the converter:\n * * checks `<li>`'s parent,\n * * stores and increases the `conversionApi.store.indent` value when `<li>`'s sub-items are converted.\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface to be used by the callback.\n */\nexport function viewModelConverter( evt, data, conversionApi ) {\n\tif ( conversionApi.consumable.consume( data.viewItem, { name: true } ) ) {\n\t\tconst writer = conversionApi.writer;\n\n\t\t// 1. Create `listItem` model element.\n\t\tconst listItem = writer.createElement( 'listItem' );\n\n\t\t// 2. Handle `listItem` model element attributes.\n\t\tconst indent = getIndent( data.viewItem );\n\n\t\twriter.setAttribute( 'listIndent', indent, listItem );\n\n\t\t// Set 'bulleted' as default. If this item is pasted into a context,\n\t\tconst type = data.viewItem.parent && data.viewItem.parent.name == 'ol' ? 'numbered' : 'bulleted';\n\t\twriter.setAttribute( 'listType', type, listItem );\n\n\t\t// Try to find allowed parent for list item.\n\t\tconst splitResult = conversionApi.splitToAllowedParent( listItem, data.modelCursor );\n\n\t\t// When there is no allowed parent it means that list item cannot be converted at current model position\n\t\t// and in any of position ancestors.\n\t\tif ( !splitResult ) {\n\t\t\treturn;\n\t\t}\n\n\t\twriter.insert( listItem, splitResult.position );\n\n\t\tconst nextPosition = viewToModelListItemChildrenConverter( listItem, data.viewItem.getChildren(), conversionApi );\n\n\t\t// Result range starts before the first item and ends after the last.\n\t\tdata.modelRange = writer.createRange( data.modelCursor, nextPosition );\n\n\t\t// When `data.modelCursor` parent had to be split to insert list item...\n\t\tif ( splitResult.cursorParent ) {\n\t\t\t// Continue conversion in the split element.\n\t\t\tdata.modelCursor = writer.createPositionAt( splitResult.cursorParent, 0 );\n\t\t} else {\n\t\t\t// Otherwise continue conversion after the last list item.\n\t\t\tdata.modelCursor = data.modelRange.end;\n\t\t}\n\t}\n}\n\n/**\n * A view-to-model converter for the `<ul>` and `<ol>` view elements that cleans the input view of garbage.\n * This is mostly to clean whitespaces from between the `<li>` view elements inside the view list element, however, also\n * incorrect data can be cleared if the view was incorrect.\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface to be used by the callback.\n */\nexport function cleanList( evt, data, conversionApi ) {\n\tif ( conversionApi.consumable.test( data.viewItem, { name: true } ) ) {\n\t\t// Caching children because when we start removing them iterating fails.\n\t\tconst children = Array.from( data.viewItem.getChildren() );\n\n\t\tfor ( const child of children ) {\n\t\t\tconst isWrongElement = !( child.is( 'li' ) || isList( child ) );\n\n\t\t\tif ( isWrongElement ) {\n\t\t\t\tchild._remove();\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A view-to-model converter for the `<li>` elements that cleans whitespace formatting from the input view.\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface to be used by the callback.\n */\nexport function cleanListItem( evt, data, conversionApi ) {\n\tif ( conversionApi.consumable.test( data.viewItem, { name: true } ) ) {\n\t\tif ( data.viewItem.childCount === 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst children = [ ...data.viewItem.getChildren() ];\n\n\t\tlet foundList = false;\n\t\tlet firstNode = true;\n\n\t\tfor ( const child of children ) {\n\t\t\tif ( foundList && !isList( child ) ) {\n\t\t\t\tchild._remove();\n\t\t\t}\n\n\t\t\tif ( child.is( 'text' ) ) {\n\t\t\t\t// If this is the first node and it's a text node, left-trim it.\n\t\t\t\tif ( firstNode ) {\n\t\t\t\t\tchild._data = child.data.replace( /^\\s+/, '' );\n\t\t\t\t}\n\n\t\t\t\t// If this is the last text node before <ul> or <ol>, right-trim it.\n\t\t\t\tif ( !child.nextSibling || isList( child.nextSibling ) ) {\n\t\t\t\t\tchild._data = child.data.replace( /\\s+$/, '' );\n\t\t\t\t}\n\t\t\t} else if ( isList( child ) ) {\n\t\t\t\t// If this is a <ul> or <ol>, do not process it, just mark that we already visited list element.\n\t\t\t\tfoundList = true;\n\t\t\t}\n\n\t\t\tfirstNode = false;\n\t\t}\n\t}\n}\n\n/**\n * Returns a callback for model position to view position mapping for {@link module:engine/conversion/mapper~Mapper}. The callback fixes\n * positions between the `listItem` elements that would be incorrectly mapped because of how list items are represented in the model\n * and in the view.\n *\n * @see module:engine/conversion/mapper~Mapper#event:modelToViewPosition\n * @param {module:engine/view/view~View} view A view instance.\n * @returns {Function}\n */\nexport function modelToViewPosition( view ) {\n\treturn ( evt, data ) => {\n\t\tif ( data.isPhantom ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelItem = data.modelPosition.nodeBefore;\n\n\t\tif ( modelItem && modelItem.is( 'listItem' ) ) {\n\t\t\tconst viewItem = data.mapper.toViewElement( modelItem );\n\t\t\tconst topmostViewList = viewItem.getAncestors().find( isList );\n\t\t\tconst walker = view.createPositionAt( viewItem, 0 ).getWalker();\n\n\t\t\tfor ( const value of walker ) {\n\t\t\t\tif ( value.type == 'elementStart' && value.item.is( 'li' ) ) {\n\t\t\t\t\tdata.viewPosition = value.previousPosition;\n\n\t\t\t\t\tbreak;\n\t\t\t\t} else if ( value.type == 'elementEnd' && value.item == topmostViewList ) {\n\t\t\t\t\tdata.viewPosition = value.nextPosition;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * The callback for view position to model position mapping for {@link module:engine/conversion/mapper~Mapper}. The callback fixes\n * positions between the `<li>` elements that would be incorrectly mapped because of how list items are represented in the model\n * and in the view.\n *\n * @see module:engine/conversion/mapper~Mapper#event:viewToModelPosition\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\nexport function viewToModelPosition( model ) {\n\treturn ( evt, data ) => {\n\t\tconst viewPos = data.viewPosition;\n\t\tconst viewParent = viewPos.parent;\n\t\tconst mapper = data.mapper;\n\n\t\tif ( viewParent.name == 'ul' || viewParent.name == 'ol' ) {\n\t\t\t// Position is directly in <ul> or <ol>.\n\t\t\tif ( !viewPos.isAtEnd ) {\n\t\t\t\t// If position is not at the end, it must be before <li>.\n\t\t\t\t// Get that <li>, map it to `listItem` and set model position before that `listItem`.\n\t\t\t\tconst modelNode = mapper.toModelElement( viewPos.nodeAfter );\n\n\t\t\t\tdata.modelPosition = model.createPositionBefore( modelNode );\n\t\t\t} else {\n\t\t\t\t// Position is at the end of <ul> or <ol>, so there is no <li> after it to be mapped.\n\t\t\t\t// There is <li> before the position, but we cannot just map it to `listItem` and set model position after it,\n\t\t\t\t// because that <li> may contain nested items.\n\t\t\t\t// We will check \"model length\" of that <li>, in other words - how many `listItem`s are in that <li>.\n\t\t\t\tconst modelNode = mapper.toModelElement( viewPos.nodeBefore );\n\t\t\t\tconst modelLength = mapper.getModelLength( viewPos.nodeBefore );\n\n\t\t\t\t// Then we get model position before mapped `listItem` and shift it accordingly.\n\t\t\t\tdata.modelPosition = model.createPositionBefore( modelNode ).getShiftedBy( modelLength );\n\t\t\t}\n\n\t\t\tevt.stop();\n\t\t} else if (\n\t\t\tviewParent.name == 'li' &&\n\t\t\tviewPos.nodeBefore &&\n\t\t\t( viewPos.nodeBefore.name == 'ul' || viewPos.nodeBefore.name == 'ol' )\n\t\t) {\n\t\t\t// In most cases when view position is in <li> it is in text and this is a correct position.\n\t\t\t// However, if position is after <ul> or <ol> we have to fix it -- because in model <ul>/<ol> are not in the `listItem`.\n\t\t\tconst modelNode = mapper.toModelElement( viewParent );\n\n\t\t\t// Check all <ul>s and <ol>s that are in the <li> but before mapped position.\n\t\t\t// Get model length of those elements and then add it to the offset of `listItem` mapped to the original <li>.\n\t\t\tlet modelLength = 1; // Starts from 1 because the original <li> has to be counted in too.\n\t\t\tlet viewList = viewPos.nodeBefore;\n\n\t\t\twhile ( viewList && isList( viewList ) ) {\n\t\t\t\tmodelLength += mapper.getModelLength( viewList );\n\n\t\t\t\tviewList = viewList.previousSibling;\n\t\t\t}\n\n\t\t\tdata.modelPosition = model.createPositionBefore( modelNode ).getShiftedBy( modelLength );\n\n\t\t\tevt.stop();\n\t\t}\n\t};\n}\n\n/**\n * Post-fixer that reacts to changes on document and fixes incorrect model states.\n *\n * In the example below, there is a correct list structure.\n * Then the middle element is removed so the list structure will become incorrect:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>Item 1</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>Item 2</listItem>   <--- this is removed.\n *\t\t<listItem listType=\"bulleted\" listIndent=2>Item 3</listItem>\n *\n * The list structure after the middle element is removed:\n *\n * \t\t<listItem listType=\"bulleted\" listIndent=0>Item 1</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>Item 3</listItem>\n *\n * Should become:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>Item 1</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>Item 3</listItem>   <--- note that indent got post-fixed.\n *\n * @param {module:engine/model/model~Model} model The data model.\n * @param {module:engine/model/writer~Writer} writer The writer to do changes with.\n * @returns {Boolean} `true` if any change has been applied, `false` otherwise.\n */\nexport function modelChangePostFixer( model, writer ) {\n\tconst changes = model.document.differ.getChanges();\n\tconst itemToListHead = new Map();\n\n\tlet applied = false;\n\n\tfor ( const entry of changes ) {\n\t\tif ( entry.type == 'insert' && entry.name == 'listItem' ) {\n\t\t\t_addListToFix( entry.position );\n\t\t} else if ( entry.type == 'insert' && entry.name != 'listItem' ) {\n\t\t\tif ( entry.name != '$text' ) {\n\t\t\t\t// In case of renamed element.\n\t\t\t\tconst item = entry.position.nodeAfter;\n\n\t\t\t\tif ( item.hasAttribute( 'listIndent' ) ) {\n\t\t\t\t\twriter.removeAttribute( 'listIndent', item );\n\n\t\t\t\t\tapplied = true;\n\t\t\t\t}\n\n\t\t\t\tif ( item.hasAttribute( 'listType' ) ) {\n\t\t\t\t\twriter.removeAttribute( 'listType', item );\n\n\t\t\t\t\tapplied = true;\n\t\t\t\t}\n\n\t\t\t\tfor ( const innerItem of Array.from( model.createRangeIn( item ) ).filter( e => e.item.is( 'listItem' ) ) ) {\n\t\t\t\t\t_addListToFix( innerItem.previousPosition );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst posAfter = entry.position.getShiftedBy( entry.length );\n\n\t\t\t_addListToFix( posAfter );\n\t\t} else if ( entry.type == 'remove' && entry.name == 'listItem' ) {\n\t\t\t_addListToFix( entry.position );\n\t\t} else if ( entry.type == 'attribute' && entry.attributeKey == 'listIndent' ) {\n\t\t\t_addListToFix( entry.range.start );\n\t\t} else if ( entry.type == 'attribute' && entry.attributeKey == 'listType' ) {\n\t\t\t_addListToFix( entry.range.start );\n\t\t}\n\t}\n\n\tfor ( const listHead of itemToListHead.values() ) {\n\t\t_fixListIndents( listHead );\n\t\t_fixListTypes( listHead );\n\t}\n\n\treturn applied;\n\n\tfunction _addListToFix( position ) {\n\t\tconst previousNode = position.nodeBefore;\n\n\t\tif ( !previousNode || !previousNode.is( 'listItem' ) ) {\n\t\t\tconst item = position.nodeAfter;\n\n\t\t\tif ( item && item.is( 'listItem' ) ) {\n\t\t\t\titemToListHead.set( item, item );\n\t\t\t}\n\t\t} else {\n\t\t\tlet listHead = previousNode;\n\n\t\t\tif ( itemToListHead.has( listHead ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (\n\t\t\t\t// Cache previousSibling and reuse for performance reasons. See #6581.\n\t\t\t\tlet previousSibling = listHead.previousSibling;\n\t\t\t\tpreviousSibling && previousSibling.is( 'listItem' );\n\t\t\t\tpreviousSibling = listHead.previousSibling\n\t\t\t) {\n\t\t\t\tlistHead = previousSibling;\n\n\t\t\t\tif ( itemToListHead.has( listHead ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemToListHead.set( previousNode, listHead );\n\t\t}\n\t}\n\n\tfunction _fixListIndents( item ) {\n\t\tlet maxIndent = 0;\n\t\tlet fixBy = null;\n\n\t\twhile ( item && item.is( 'listItem' ) ) {\n\t\t\tconst itemIndent = item.getAttribute( 'listIndent' );\n\n\t\t\tif ( itemIndent > maxIndent ) {\n\t\t\t\tlet newIndent;\n\n\t\t\t\tif ( fixBy === null ) {\n\t\t\t\t\tfixBy = itemIndent - maxIndent;\n\t\t\t\t\tnewIndent = maxIndent;\n\t\t\t\t} else {\n\t\t\t\t\tif ( fixBy > itemIndent ) {\n\t\t\t\t\t\tfixBy = itemIndent;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewIndent = itemIndent - fixBy;\n\t\t\t\t}\n\n\t\t\t\twriter.setAttribute( 'listIndent', newIndent, item );\n\n\t\t\t\tapplied = true;\n\t\t\t} else {\n\t\t\t\tfixBy = null;\n\t\t\t\tmaxIndent = item.getAttribute( 'listIndent' ) + 1;\n\t\t\t}\n\n\t\t\titem = item.nextSibling;\n\t\t}\n\t}\n\n\tfunction _fixListTypes( item ) {\n\t\tlet typesStack = [];\n\t\tlet prev = null;\n\n\t\twhile ( item && item.is( 'listItem' ) ) {\n\t\t\tconst itemIndent = item.getAttribute( 'listIndent' );\n\n\t\t\tif ( prev && prev.getAttribute( 'listIndent' ) > itemIndent ) {\n\t\t\t\ttypesStack = typesStack.slice( 0, itemIndent + 1 );\n\t\t\t}\n\n\t\t\tif ( itemIndent != 0 ) {\n\t\t\t\tif ( typesStack[ itemIndent ] ) {\n\t\t\t\t\tconst type = typesStack[ itemIndent ];\n\n\t\t\t\t\tif ( item.getAttribute( 'listType' ) != type ) {\n\t\t\t\t\t\twriter.setAttribute( 'listType', type, item );\n\n\t\t\t\t\t\tapplied = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttypesStack[ itemIndent ] = item.getAttribute( 'listType' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprev = item;\n\t\t\titem = item.nextSibling;\n\t\t}\n\t}\n}\n\n/**\n * A fixer for pasted content that includes list items.\n *\n * It fixes indentation of pasted list items so the pasted items match correctly to the context they are pasted into.\n *\n * Example:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>A</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>B^</listItem>\n *\t\t// At ^ paste:  <listItem listType=\"bulleted\" listIndent=4>X</listItem>\n *\t\t//              <listItem listType=\"bulleted\" listIndent=5>Y</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>C</listItem>\n *\n * Should become:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>A</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>BX</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>Y/listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>C</listItem>\n *\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Array} args Arguments of {@link module:engine/model/model~Model#insertContent}.\n */\nexport function modelIndentPasteFixer( evt, [ content, selectable ] ) {\n\t// Check whether inserted content starts from a `listItem`. If it does not, it means that there are some other\n\t// elements before it and there is no need to fix indents, because even if we insert that content into a list,\n\t// that list will be broken.\n\t// Note: we also need to handle singular elements because inserting item with indent 0 into 0,1,[],2\n\t// would create incorrect model.\n\tlet item = content.is( 'documentFragment' ) ? content.getChild( 0 ) : content;\n\n\tlet selection;\n\n\tif ( !selectable ) {\n\t\tselection = this.document.selection;\n\t} else {\n\t\tselection = this.createSelection( selectable );\n\t}\n\n\tif ( item && item.is( 'listItem' ) ) {\n\t\t// Get a reference list item. Inserted list items will be fixed according to that item.\n\t\tconst pos = selection.getFirstPosition();\n\t\tlet refItem = null;\n\n\t\tif ( pos.parent.is( 'listItem' ) ) {\n\t\t\trefItem = pos.parent;\n\t\t} else if ( pos.nodeBefore && pos.nodeBefore.is( 'listItem' ) ) {\n\t\t\trefItem = pos.nodeBefore;\n\t\t}\n\n\t\t// If there is `refItem` it means that we do insert list items into an existing list.\n\t\tif ( refItem ) {\n\t\t\t// First list item in `data` has indent equal to 0 (it is a first list item). It should have indent equal\n\t\t\t// to the indent of reference item. We have to fix the first item and all of it's children and following siblings.\n\t\t\t// Indent of all those items has to be adjusted to reference item.\n\t\t\tconst indentChange = refItem.getAttribute( 'listIndent' );\n\n\t\t\t// Fix only if there is anything to fix.\n\t\t\tif ( indentChange > 0 ) {\n\t\t\t\t// Adjust indent of all \"first\" list items in inserted data.\n\t\t\t\twhile ( item && item.is( 'listItem' ) ) {\n\t\t\t\t\titem._setAttribute( 'listIndent', item.getAttribute( 'listIndent' ) + indentChange );\n\n\t\t\t\t\titem = item.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Helper function that converts children of a given `<li>` view element into corresponding model elements.\n// The function maintains proper order of elements if model `listItem` is split during the conversion\n// due to block children conversion.\n//\n// @param {module:engine/model/element~Element} listItemModel List item model element to which converted children will be inserted.\n// @param {Iterable.<module:engine/view/node~Node>} viewChildren View elements which will be converted.\n// @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface to be used by the callback.\n// @returns {module:engine/model/position~Position} Position on which next elements should be inserted after children conversion.\nfunction viewToModelListItemChildrenConverter( listItemModel, viewChildren, conversionApi ) {\n\tconst { writer, schema } = conversionApi;\n\n\t// A position after the last inserted `listItem`.\n\tlet nextPosition = writer.createPositionAfter( listItemModel );\n\n\t// Check all children of the converted `<li>`. At this point we assume there are no \"whitespace\" view text nodes\n\t// in view list, between view list items. This should be handled by `<ul>` and `<ol>` converters.\n\tfor ( const child of viewChildren ) {\n\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n\t\t\t// If the children is a list, we will insert its conversion result after currently handled `listItem`.\n\t\t\t// Then, next insertion position will be set after all the new list items (and maybe other elements if\n\t\t\t// something split list item).\n\t\t\t//\n\t\t\t// If this is a list, we expect that some `listItem`s and possibly other blocks will be inserted, however `.modelCursor`\n\t\t\t// should be set after last `listItem` (or block). This is why it feels safe to use it as `nextPosition`\n\t\t\tnextPosition = conversionApi.convertItem( child, nextPosition ).modelCursor;\n\t\t} else {\n\t\t\t// If this is not a list, try inserting content at the end of the currently handled `listItem`.\n\t\t\tconst result = conversionApi.convertItem( child, writer.createPositionAt( listItemModel, 'end' ) );\n\n\t\t\t// It may end up that the current `listItem` becomes split (if that content cannot be inside `listItem`). For example:\n\t\t\t//\n\t\t\t// <li><p>Foo</p></li>\n\t\t\t//\n\t\t\t// will be converted to:\n\t\t\t//\n\t\t\t// <listItem></listItem><paragraph>Foo</paragraph><listItem></listItem>\n\t\t\t//\n\t\t\tconst convertedChild = result.modelRange.start.nodeAfter;\n\t\t\tconst wasSplit = convertedChild && convertedChild.is( 'element' ) && !schema.checkChild( listItemModel, convertedChild.name );\n\n\t\t\tif ( wasSplit ) {\n\t\t\t\t// As `lastListItem` got split, we need to update it to the second part of the split `listItem` element.\n\t\t\t\t//\n\t\t\t\t// `modelCursor` should be set to a position where the conversion should continue. There are multiple possible scenarios\n\t\t\t\t// that may happen. Usually, `modelCursor` (marked as `#` below) would point to the second list item after conversion:\n\t\t\t\t//\n\t\t\t\t//\t\t`<li><p>Foo</p></li>` -> `<listItem></listItem><paragraph>Foo</paragraph><listItem>#</listItem>`\n\t\t\t\t//\n\t\t\t\t// However, in some cases, like auto-paragraphing, the position is placed at the end of the block element:\n\t\t\t\t//\n\t\t\t\t//\t\t`<li><div>Foo</div></li>` -> `<listItem></listItem><paragraph>Foo#</paragraph><listItem></listItem>`\n\t\t\t\t//\n\t\t\t\t// or after an element if another element broken auto-paragraphed element:\n\t\t\t\t//\n\t\t\t\t//\t\t`<li><div><h2>Foo</h2></div></li>` -> `<listItem></listItem><heading1>Foo</heading1>#<listItem></listItem>`\n\t\t\t\t//\n\t\t\t\t// We need to check for such cases and use proper list item and position based on it.\n\t\t\t\t//\n\t\t\t\tif ( result.modelCursor.parent.is( 'listItem' ) ) {\n\t\t\t\t\t// (1).\n\t\t\t\t\tlistItemModel = result.modelCursor.parent;\n\t\t\t\t} else {\n\t\t\t\t\t// (2), (3).\n\t\t\t\t\tlistItemModel = findNextListItem( result.modelCursor );\n\t\t\t\t}\n\n\t\t\t\tnextPosition = writer.createPositionAfter( listItemModel );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn nextPosition;\n}\n\n// Helper function that seeks for a next list item starting from given `startPosition`.\nfunction findNextListItem( startPosition ) {\n\tconst treeWalker = new TreeWalker( { startPosition } );\n\n\tlet value;\n\n\tdo {\n\t\tvalue = treeWalker.next();\n\t} while ( !value.value.item.is( 'listItem' ) );\n\n\treturn value.value.item;\n}\n\n// Helper function that takes all children of given `viewRemovedItem` and moves them in a correct place, according\n// to other given parameters.\nfunction hoistNestedLists( nextIndent, modelRemoveStartPosition, viewRemoveStartPosition, viewRemovedItem, conversionApi, model ) {\n\t// Find correct previous model list item element.\n\t// The element has to have either same or smaller indent than given reference indent.\n\t// This will be the model element which will get nested items (if it has smaller indent) or sibling items (if it has same indent).\n\t// Keep in mind that such element might not be found, if removed item was the first item.\n\tconst prevModelItem = getSiblingListItem( modelRemoveStartPosition.nodeBefore, {\n\t\tsameIndent: true,\n\t\tsmallerIndent: true,\n\t\tlistIndent: nextIndent,\n\t\tfoo: 'b'\n\t} );\n\n\tconst mapper = conversionApi.mapper;\n\tconst viewWriter = conversionApi.writer;\n\n\t// Indent of found element or `null` if the element has not been found.\n\tconst prevIndent = prevModelItem ? prevModelItem.getAttribute( 'listIndent' ) : null;\n\n\tlet insertPosition;\n\n\tif ( !prevModelItem ) {\n\t\t// If element has not been found, simply insert lists at the position where the removed item was:\n\t\t//\n\t\t// Lorem ipsum.\n\t\t// 1 --------           <--- this is removed, no previous list item, put nested items in place of removed item.\n\t\t//   1.1 --------       <--- this is reference indent.\n\t\t//     1.1.1 --------\n\t\t//     1.1.2 --------\n\t\t//   1.2 --------\n\t\t//\n\t\t// Becomes:\n\t\t//\n\t\t// Lorem ipsum.\n\t\t// 1.1 --------\n\t\t//   1.1.1 --------\n\t\t//   1.1.2 --------\n\t\t// 1.2 --------\n\t\tinsertPosition = viewRemoveStartPosition;\n\t} else if ( prevIndent == nextIndent ) {\n\t\t// If element has been found and has same indent as reference indent it means that nested items should\n\t\t// become siblings of found element:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//   1.2 --------       <--- this is `prevModelItem`.\n\t\t// 2 --------           <--- this is removed, previous list item has indent same as reference indent.\n\t\t//   2.1 --------       <--- this is reference indent, this and 2.2 should become siblings of 1.2.\n\t\t//   2.2 --------\n\t\t//\n\t\t// Becomes:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//   1.2 --------\n\t\t//   2.1 --------\n\t\t//   2.2 --------\n\t\tconst prevViewList = mapper.toViewElement( prevModelItem ).parent;\n\t\tinsertPosition = viewWriter.createPositionAfter( prevViewList );\n\t} else {\n\t\t// If element has been found and has smaller indent as reference indent it means that nested items\n\t\t// should become nested items of found item:\n\t\t//\n\t\t// 1 --------           <--- this is `prevModelItem`.\n\t\t//   1.1 --------       <--- this is removed, previous list item has indent smaller than reference indent.\n\t\t//     1.1.1 --------   <--- this is reference indent, this and 1.1.1 should become nested items of 1.\n\t\t//     1.1.2 --------\n\t\t//   1.2 --------\n\t\t//\n\t\t// Becomes:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1.1 --------\n\t\t//   1.1.2 --------\n\t\t//   1.2 --------\n\t\t//\n\t\t// Note: in this case 1.1.1 have indent 2 while 1 have indent 0. In model that should not be possible,\n\t\t// because following item may have indent bigger only by one. But this is fixed by postfixer.\n\t\tconst modelPosition = model.createPositionAt( prevModelItem, 'end' );\n\t\tinsertPosition = mapper.toViewPosition( modelPosition );\n\t}\n\n\tinsertPosition = positionAfterUiElements( insertPosition );\n\n\t// Handle multiple lists. This happens if list item has nested numbered and bulleted lists. Following lists\n\t// are inserted after the first list (no need to recalculate insertion position for them).\n\tfor ( const child of [ ...viewRemovedItem.getChildren() ] ) {\n\t\tif ( isList( child ) ) {\n\t\t\tinsertPosition = viewWriter.move( viewWriter.createRangeOn( child ), insertPosition ).end;\n\n\t\t\tmergeViewLists( viewWriter, child, child.nextSibling );\n\t\t\tmergeViewLists( viewWriter, child.previousSibling, child );\n\t\t}\n\t}\n}\n\n// Checks if view element is a list type (ul or ol).\n//\n// @param {module:engine/view/element~Element} viewElement\n// @returns {Boolean}\nfunction isList( viewElement ) {\n\treturn viewElement.is( 'ol' ) || viewElement.is( 'ul' );\n}\n\n// Calculates the indent value for a list item. Handles HTML compliant and non-compliant lists.\n//\n// Also, fixes non HTML compliant lists indents:\n//\n//\t\tbefore:                                     fixed list:\n//\t\tOL                                          OL\n//\t\t|-> LI (parent LIs: 0)                      |-> LI     (indent: 0)\n//\t\t    |-> OL                                  |-> OL\n//\t\t        |-> OL                                  |\n//\t\t        |   |-> OL                              |\n//\t\t        |       |-> OL                          |\n//\t\t        |           |-> LI (parent LIs: 1)      |-> LI (indent: 1)\n//\t\t        |-> LI (parent LIs: 1)                  |-> LI (indent: 1)\n//\n//\t\tbefore:                                     fixed list:\n//\t\tOL                                          OL\n//\t\t|-> OL                                      |\n//\t\t    |-> OL                                  |\n//\t\t         |-> OL                             |\n//\t\t             |-> LI (parent LIs: 0)         |-> LI        (indent: 0)\n//\n//\t\tbefore:                                     fixed list:\n//\t\tOL                                          OL\n//\t\t|-> LI (parent LIs: 0)                      |-> LI         (indent: 0)\n//\t\t|-> OL                                          |-> OL\n//\t\t    |-> LI (parent LIs: 0)                          |-> LI (indent: 1)\n//\n// @param {module:engine/view/element~Element} listItem\n// @param {Object} conversionStore\n// @returns {Number}\nfunction getIndent( listItem ) {\n\tlet indent = 0;\n\n\tlet parent = listItem.parent;\n\n\twhile ( parent ) {\n\t\t// Each LI in the tree will result in an increased indent for HTML compliant lists.\n\t\tif ( parent.is( 'li' ) ) {\n\t\t\tindent++;\n\t\t} else {\n\t\t\t// If however the list is nested in other list we should check previous sibling of any of the list elements...\n\t\t\tconst previousSibling = parent.previousSibling;\n\n\t\t\t// ...because the we might need increase its indent:\n\t\t\t//\t\tbefore:                           fixed list:\n\t\t\t//\t\tOL                                OL\n\t\t\t//\t\t|-> LI (parent LIs: 0)            |-> LI         (indent: 0)\n\t\t\t//\t\t|-> OL                                |-> OL\n\t\t\t//\t\t    |-> LI (parent LIs: 0)                |-> LI (indent: 1)\n\t\t\tif ( previousSibling && previousSibling.is( 'li' ) ) {\n\t\t\t\tindent++;\n\t\t\t}\n\t\t}\n\n\t\tparent = parent.parent;\n\t}\n\n\treturn indent;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/listediting\n */\n\nimport ListCommand from './listcommand';\nimport IndentCommand from './indentcommand';\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n\nimport {\n\tcleanList,\n\tcleanListItem,\n\tmodelViewInsertion,\n\tmodelViewChangeType,\n\tmodelViewMergeAfterChangeType,\n\tmodelViewMergeAfter,\n\tmodelViewRemove,\n\tmodelViewSplitOnInsert,\n\tmodelViewChangeIndent,\n\tmodelChangePostFixer,\n\tmodelIndentPasteFixer,\n\tviewModelConverter,\n\tmodelToViewPosition,\n\tviewToModelPosition\n} from './converters';\n\n/**\n * The engine of the list feature. It handles creating, editing and removing lists and list items.\n *\n * It registers the `'numberedList'`, `'bulletedList'`, `'indentList'` and `'outdentList'` commands.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ListEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ListEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Paragraph ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Schema.\n\t\t// Note: in case `$block` will ever be allowed in `listItem`, keep in mind that this feature\n\t\t// uses `Selection#getSelectedBlocks()` without any additional processing to obtain all selected list items.\n\t\t// If there are blocks allowed inside list item, algorithms using `getSelectedBlocks()` will have to be modified.\n\t\teditor.model.schema.register( 'listItem', {\n\t\t\tinheritAllFrom: '$block',\n\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\n\t\t} );\n\n\t\t// Converters.\n\t\tconst data = editor.data;\n\t\tconst editing = editor.editing;\n\n\t\teditor.model.document.registerPostFixer( writer => modelChangePostFixer( editor.model, writer ) );\n\n\t\tediting.mapper.registerViewToModelLength( 'li', getViewListItemLength );\n\t\tdata.mapper.registerViewToModelLength( 'li', getViewListItemLength );\n\n\t\tediting.mapper.on( 'modelToViewPosition', modelToViewPosition( editing.view ) );\n\t\tediting.mapper.on( 'viewToModelPosition', viewToModelPosition( editor.model ) );\n\t\tdata.mapper.on( 'modelToViewPosition', modelToViewPosition( editing.view ) );\n\n\t\teditor.conversion.for( 'editingDowncast' )\n\t\t\t.add( dispatcher => {\n\t\t\t\tdispatcher.on( 'insert', modelViewSplitOnInsert, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'insert:listItem', modelViewInsertion( editor.model ) );\n\t\t\t\tdispatcher.on( 'attribute:listType:listItem', modelViewChangeType, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'attribute:listType:listItem', modelViewMergeAfterChangeType, { priority: 'low' } );\n\t\t\t\tdispatcher.on( 'attribute:listIndent:listItem', modelViewChangeIndent( editor.model ) );\n\t\t\t\tdispatcher.on( 'remove:listItem', modelViewRemove( editor.model ) );\n\t\t\t\tdispatcher.on( 'remove', modelViewMergeAfter, { priority: 'low' } );\n\t\t\t} );\n\n\t\teditor.conversion.for( 'dataDowncast' )\n\t\t\t.add( dispatcher => {\n\t\t\t\tdispatcher.on( 'insert', modelViewSplitOnInsert, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'insert:listItem', modelViewInsertion( editor.model ) );\n\t\t\t} );\n\n\t\teditor.conversion.for( 'upcast' )\n\t\t\t.add( dispatcher => {\n\t\t\t\tdispatcher.on( 'element:ul', cleanList, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'element:ol', cleanList, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'element:li', cleanListItem, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'element:li', viewModelConverter );\n\t\t\t} );\n\n\t\t// Fix indentation of pasted items.\n\t\teditor.model.on( 'insertContent', modelIndentPasteFixer, { priority: 'high' } );\n\n\t\t// Register commands for numbered and bulleted list.\n\t\teditor.commands.add( 'numberedList', new ListCommand( editor, 'numbered' ) );\n\t\teditor.commands.add( 'bulletedList', new ListCommand( editor, 'bulleted' ) );\n\n\t\t// Register commands for indenting.\n\t\teditor.commands.add( 'indentList', new IndentCommand( editor, 'forward' ) );\n\t\teditor.commands.add( 'outdentList', new IndentCommand( editor, 'backward' ) );\n\n\t\tconst viewDocument = editing.view.document;\n\n\t\t// Overwrite default Enter key behavior.\n\t\t// If Enter key is pressed with selection collapsed in empty list item, outdent it instead of breaking it.\n\t\tthis.listenTo( viewDocument, 'enter', ( evt, data ) => {\n\t\t\tconst doc = this.editor.model.document;\n\t\t\tconst positionParent = doc.selection.getLastPosition().parent;\n\n\t\t\tif ( doc.selection.isCollapsed && positionParent.name == 'listItem' && positionParent.isEmpty ) {\n\t\t\t\tthis.editor.execute( 'outdentList' );\n\n\t\t\t\tdata.preventDefault();\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t} );\n\n\t\t// Overwrite default Backspace key behavior.\n\t\t// If Backspace key is pressed with selection collapsed on first position in first list item, outdent it. #83\n\t\tthis.listenTo( viewDocument, 'delete', ( evt, data ) => {\n\t\t\t// Check conditions from those that require less computations like those immediately available.\n\t\t\tif ( data.direction !== 'backward' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selection = this.editor.model.document.selection;\n\n\t\t\tif ( !selection.isCollapsed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst firstPosition = selection.getFirstPosition();\n\n\t\t\tif ( !firstPosition.isAtStart ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst positionParent = firstPosition.parent;\n\n\t\t\tif ( positionParent.name !== 'listItem' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst previousIsAListItem = positionParent.previousSibling && positionParent.previousSibling.name === 'listItem';\n\n\t\t\tif ( previousIsAListItem ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.editor.execute( 'outdentList' );\n\n\t\t\tdata.preventDefault();\n\t\t\tevt.stop();\n\t\t}, { priority: 'high' } );\n\n\t\tconst getCommandExecuter = commandName => {\n\t\t\treturn ( data, cancel ) => {\n\t\t\t\tconst command = this.editor.commands.get( commandName );\n\n\t\t\t\tif ( command.isEnabled ) {\n\t\t\t\t\tthis.editor.execute( commandName );\n\t\t\t\t\tcancel();\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\n\t\teditor.keystrokes.set( 'Tab', getCommandExecuter( 'indentList' ) );\n\t\teditor.keystrokes.set( 'Shift+Tab', getCommandExecuter( 'outdentList' ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tconst commands = this.editor.commands;\n\n\t\tconst indent = commands.get( 'indent' );\n\t\tconst outdent = commands.get( 'outdent' );\n\n\t\tif ( indent ) {\n\t\t\tindent.registerChildCommand( commands.get( 'indentList' ) );\n\t\t}\n\n\t\tif ( outdent ) {\n\t\t\toutdent.registerChildCommand( commands.get( 'outdentList' ) );\n\t\t}\n\t}\n}\n\nfunction getViewListItemLength( element ) {\n\tlet length = 1;\n\n\tfor ( const child of element.getChildren() ) {\n\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n\t\t\tfor ( const item of child.getChildren() ) {\n\t\t\t\tlength += getViewListItemLength( item );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn length;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/listui\n */\n\nimport { createUIComponent } from './utils';\n\nimport numberedListIcon from '../theme/icons/numberedlist.svg';\nimport bulletedListIcon from '../theme/icons/bulletedlist.svg';\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * The list UI feature. It introduces the `'numberedList'` and `'bulletedList'` buttons that\n * allow to convert paragraphs to and from list items and indent or outdent them.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ListUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst t = this.editor.t;\n\n\t\t// Create two buttons and link them with numberedList and bulletedList commands.\n\t\tcreateUIComponent( this.editor, 'numberedList', t( 'Numbered List' ), numberedListIcon );\n\t\tcreateUIComponent( this.editor, 'bulletedList', t( 'Bulleted List' ), bulletedListIcon );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/list\n */\n\nimport ListEditing from './listediting';\nimport ListUI from './listui';\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * The list feature.\n *\n * This is a \"glue\" plugin that loads the {@link module:list/listediting~ListEditing list editing feature}\n * and {@link module:list/listui~ListUI list UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class List extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ListEditing, ListUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'List';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/imageloadobserver\n */\n\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\n\n/**\n * Observes all new images added to the {@link module:engine/view/document~Document},\n * fires {@link module:engine/view/document~Document#event:imageLoaded} and\n * {@link module:engine/view/document~Document#event:layoutChanged} event every time when the new image\n * has been loaded.\n *\n * **Note:** This event is not fired for images that has been added to the document and rendered as `complete` (already loaded).\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class ImageLoadObserver extends Observer {\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domRoot ) {\n\t\tthis.listenTo( domRoot, 'load', ( event, domEvent ) => {\n\t\t\tconst domElement = domEvent.target;\n\n\t\t\tif ( domElement.tagName == 'IMG' ) {\n\t\t\t\tthis._fireEvents( domEvent );\n\t\t\t}\n\t\t\t// Use capture phase for better performance (#4504).\n\t\t}, { useCapture: true } );\n\t}\n\n\t/**\n\t * Fires {@link module:engine/view/document~Document#event:layoutChanged} and\n\t * {@link module:engine/view/document~Document#event:imageLoaded}\n\t * if observer {@link #isEnabled is enabled}.\n\t *\n\t * @protected\n\t * @param {Event} domEvent The DOM event.\n\t */\n\t_fireEvents( domEvent ) {\n\t\tif ( this.isEnabled ) {\n\t\t\tthis.document.fire( 'layoutChanged' );\n\t\t\tthis.document.fire( 'imageLoaded', domEvent );\n\t\t}\n\t}\n}\n\n/**\n * Fired when an <img/> DOM element has been loaded in the DOM root.\n *\n * Introduced by {@link module:image/image/imageloadobserver~ImageLoadObserver}.\n *\n * @see module:image/image/imageloadobserver~ImageLoadObserver\n * @event module:engine/view/document~Document#event:imageLoaded\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/utils\n */\n\nimport { findOptimalInsertionPosition, isWidget, toWidget } from '@ckeditor/ckeditor5-widget/src/utils';\n\n/**\n * Converts a given {@link module:engine/view/element~Element} to an image widget:\n * * Adds a {@link module:engine/view/element~Element#_setCustomProperty custom property} allowing to recognize the image widget element.\n * * Calls the {@link module:widget/utils~toWidget} function with the proper element's label creator.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer An instance of the view writer.\n * @param {String} label The element's label. It will be concatenated with the image `alt` attribute if one is present.\n * @returns {module:engine/view/element~Element}\n */\nexport function toImageWidget( viewElement, writer, label ) {\n\twriter.setCustomProperty( 'image', true, viewElement );\n\n\treturn toWidget( viewElement, writer, { label: labelCreator } );\n\n\tfunction labelCreator() {\n\t\tconst imgElement = getViewImgFromWidget( viewElement );\n\t\tconst altText = imgElement.getAttribute( 'alt' );\n\n\t\treturn altText ? `${ altText } ${ label }` : label;\n\t}\n}\n\n/**\n * Checks if a given view element is an image widget.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @returns {Boolean}\n */\nexport function isImageWidget( viewElement ) {\n\treturn !!viewElement.getCustomProperty( 'image' ) && isWidget( viewElement );\n}\n\n/**\n * Returns an image widget editing view element if one is selected.\n *\n * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} selection\n * @returns {module:engine/view/element~Element|null}\n */\nexport function getSelectedImageWidget( selection ) {\n\tconst viewElement = selection.getSelectedElement();\n\n\tif ( viewElement && isImageWidget( viewElement ) ) {\n\t\treturn viewElement;\n\t}\n\n\treturn null;\n}\n\n/**\n * Checks if the provided model element is an `image`.\n *\n * @param {module:engine/model/element~Element} modelElement\n * @returns {Boolean}\n */\nexport function isImage( modelElement ) {\n\treturn !!modelElement && modelElement.is( 'image' );\n}\n\n/**\n * Handles inserting single file. This method unifies image insertion using {@link module:widget/utils~findOptimalInsertionPosition} method.\n *\n *\t\tmodel.change( writer => {\n *\t\t\tinsertImage( writer, model, { src: 'path/to/image.jpg' } );\n *\t\t} );\n *\n * @param {module:engine/model/writer~Writer} writer\n * @param {module:engine/model/model~Model} model\n * @param {Object} [attributes={}] Attributes of inserted image\n */\nexport function insertImage( writer, model, attributes = {} ) {\n\tconst imageElement = writer.createElement( 'image', attributes );\n\n\tconst insertAtSelection = findOptimalInsertionPosition( model.document.selection, model );\n\n\tmodel.insertContent( imageElement, insertAtSelection );\n\n\t// Inserting an image might've failed due to schema regulations.\n\tif ( imageElement.parent ) {\n\t\twriter.setSelection( imageElement, 'on' );\n\t}\n}\n\n/**\n * Checks if image can be inserted at current model selection.\n *\n * @param {module:engine/model/model~Model} model\n * @returns {Boolean}\n */\nexport function isImageAllowed( model ) {\n\tconst schema = model.schema;\n\tconst selection = model.document.selection;\n\n\treturn isImageAllowedInParent( selection, schema, model ) &&\n\t\t!checkSelectionOnObject( selection, schema ) &&\n\t\tisInOtherImage( selection );\n}\n\n/**\n * Get view `<img>` element from the view widget (`<figure>`).\n *\n * Assuming that image is always a first child of a widget (ie. `figureView.getChild( 0 )`) is unsafe as other features might\n * inject their own elements to the widget.\n *\n * @param {module:engine/view/element~Element} figureView\n * @returns {module:engine/view/element~Element}\n */\nexport function getViewImgFromWidget( figureView ) {\n\treturn Array.from( figureView.getChildren() ).find( viewChild => viewChild.is( 'img' ) );\n}\n\n// Checks if image is allowed by schema in optimal insertion parent.\n//\n// @returns {Boolean}\nfunction isImageAllowedInParent( selection, schema, model ) {\n\tconst parent = getInsertImageParent( selection, model );\n\n\treturn schema.checkChild( parent, 'image' );\n}\n\n// Check if selection is on object.\n//\n// @returns {Boolean}\nfunction checkSelectionOnObject( selection, schema ) {\n\tconst selectedElement = selection.getSelectedElement();\n\n\treturn selectedElement && schema.isObject( selectedElement );\n}\n\n// Checks if selection is placed in other image (ie. in caption).\nfunction isInOtherImage( selection ) {\n\treturn [ ...selection.focus.getAncestors() ].every( ancestor => !ancestor.is( 'image' ) );\n}\n\n// Returns a node that will be used to insert image with `model.insertContent` to check if image can be placed there.\nfunction getInsertImageParent( selection, model ) {\n\tconst insertAt = findOptimalInsertionPosition( selection, model );\n\n\tconst parent = insertAt.parent;\n\n\tif ( parent.isEmpty && !parent.is( '$root' ) ) {\n\t\treturn parent.parent;\n\t}\n\n\treturn parent;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/converters\n */\n\nimport first from '@ckeditor/ckeditor5-utils/src/first';\nimport { getViewImgFromWidget } from './utils';\n\n/**\n * Returns a function that converts the image view representation:\n *\n *\t\t<figure class=\"image\"><img src=\"...\" alt=\"...\"></img></figure>\n *\n * to the model representation:\n *\n *\t\t<image src=\"...\" alt=\"...\"></image>\n *\n * The entire content of the `<figure>` element except the first `<img>` is being converted as children\n * of the `<image>` model element.\n *\n * @returns {Function}\n */\nexport function viewFigureToModel() {\n\treturn dispatcher => {\n\t\tdispatcher.on( 'element:figure', converter );\n\t};\n\n\tfunction converter( evt, data, conversionApi ) {\n\t\t// Do not convert if this is not an \"image figure\".\n\t\tif ( !conversionApi.consumable.test( data.viewItem, { name: true, classes: 'image' } ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Find an image element inside the figure element.\n\t\tconst viewImage = getViewImgFromWidget( data.viewItem );\n\n\t\t// Do not convert if image element is absent, is missing src attribute or was already converted.\n\t\tif ( !viewImage || !viewImage.hasAttribute( 'src' ) || !conversionApi.consumable.test( viewImage, { name: true } ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Convert view image to model image.\n\t\tconst conversionResult = conversionApi.convertItem( viewImage, data.modelCursor );\n\n\t\t// Get image element from conversion result.\n\t\tconst modelImage = first( conversionResult.modelRange.getItems() );\n\n\t\t// When image wasn't successfully converted then finish conversion.\n\t\tif ( !modelImage ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Convert rest of the figure element's children as an image children.\n\t\tconversionApi.convertChildren( data.viewItem, conversionApi.writer.createPositionAt( modelImage, 0 ) );\n\n\t\t// Set image range as conversion result.\n\t\tdata.modelRange = conversionResult.modelRange;\n\n\t\t// Continue conversion where image conversion ends.\n\t\tdata.modelCursor = conversionResult.modelCursor;\n\t}\n}\n\n/**\n * Converter used to convert the `srcset` model image attribute to the `srcset`, `sizes` and `width` attributes in the view.\n *\n * @returns {Function}\n */\nexport function srcsetAttributeConverter() {\n\treturn dispatcher => {\n\t\tdispatcher.on( 'attribute:srcset:image', converter );\n\t};\n\n\tfunction converter( evt, data, conversionApi ) {\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst writer = conversionApi.writer;\n\t\tconst figure = conversionApi.mapper.toViewElement( data.item );\n\t\tconst img = getViewImgFromWidget( figure );\n\n\t\tif ( data.attributeNewValue === null ) {\n\t\t\tconst srcset = data.attributeOldValue;\n\n\t\t\tif ( srcset.data ) {\n\t\t\t\twriter.removeAttribute( 'srcset', img );\n\t\t\t\twriter.removeAttribute( 'sizes', img );\n\n\t\t\t\tif ( srcset.width ) {\n\t\t\t\t\twriter.removeAttribute( 'width', img );\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst srcset = data.attributeNewValue;\n\n\t\t\tif ( srcset.data ) {\n\t\t\t\twriter.setAttribute( 'srcset', srcset.data, img );\n\t\t\t\t// Always outputting `100vw`. See https://github.com/ckeditor/ckeditor5-image/issues/2.\n\t\t\t\twriter.setAttribute( 'sizes', '100vw', img );\n\n\t\t\t\tif ( srcset.width ) {\n\t\t\t\t\twriter.setAttribute( 'width', srcset.width, img );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function modelToViewAttributeConverter( attributeKey ) {\n\treturn dispatcher => {\n\t\tdispatcher.on( `attribute:${ attributeKey }:image`, converter );\n\t};\n\n\tfunction converter( evt, data, conversionApi ) {\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst figure = conversionApi.mapper.toViewElement( data.item );\n\t\tconst img = getViewImgFromWidget( figure );\n\n\t\tif ( data.attributeNewValue !== null ) {\n\t\t\tviewWriter.setAttribute( data.attributeKey, data.attributeNewValue, img );\n\t\t} else {\n\t\t\tviewWriter.removeAttribute( data.attributeKey, img );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { insertImage, isImageAllowed } from './utils';\n\n/**\n * @module image/image/imageinsertcommand\n */\n\n/**\n * Insert image command.\n *\n * The command is registered by the {@link module:image/image/imageediting~ImageEditing} plugin as `'imageInsert'`.\n *\n * In order to insert an image at the current selection position\n * (according to the {@link module:widget/utils~findOptimalInsertionPosition} algorithm),\n * execute the command and specify the image source:\n *\n *\t\teditor.execute( 'imageInsert', { source: 'http://url.to.the/image' } );\n *\n * It is also possible to insert multiple images at once:\n *\n *\t\teditor.execute( 'imageInsert', {\n *\t\t\tsource:  [\n *\t\t\t\t'path/to/image.jpg',\n *\t\t\t\t'path/to/other-image.jpg'\n *\t\t\t]\n *\t\t} );\n *\n * @extends module:core/command~Command\n */\nexport default class ImageInsertCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = isImageAllowed( this.editor.model );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @fires execute\n\t * @param {Object} options Options for the executed command.\n\t * @param {String|Array.<String>} options.source The image source or an array of image sources to insert.\n\t */\n\texecute( options ) {\n\t\tconst model = this.editor.model;\n\n\t\tmodel.change( writer => {\n\t\t\tconst sources = Array.isArray( options.source ) ? options.source : [ options.source ];\n\n\t\t\tfor ( const src of sources ) {\n\t\t\t\tinsertImage( writer, model, { src } );\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/imageediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageLoadObserver from './imageloadobserver';\n\nimport {\n\tviewFigureToModel,\n\tmodelToViewAttributeConverter,\n\tsrcsetAttributeConverter\n} from './converters';\n\nimport { toImageWidget } from './utils';\n\nimport ImageInsertCommand from './imageinsertcommand';\n\n/**\n * The image engine plugin.\n *\n * It registers:\n *\n * * `<image>` as a block element in the document schema, and allows `alt`, `src` and `srcset` attributes.\n * * converters for editing and data pipelines.\n * * `'imageInsert'` command.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\t\tconst t = editor.t;\n\t\tconst conversion = editor.conversion;\n\n\t\t// See https://github.com/ckeditor/ckeditor5-image/issues/142.\n\t\teditor.editing.view.addObserver( ImageLoadObserver );\n\n\t\t// Configure schema.\n\t\tschema.register( 'image', {\n\t\t\tisObject: true,\n\t\t\tisBlock: true,\n\t\t\tallowWhere: '$block',\n\t\t\tallowAttributes: [ 'alt', 'src', 'srcset' ]\n\t\t} );\n\n\t\tconversion.for( 'dataDowncast' ).elementToElement( {\n\t\t\tmodel: 'image',\n\t\t\tview: ( modelElement, viewWriter ) => createImageViewElement( viewWriter )\n\t\t} );\n\n\t\tconversion.for( 'editingDowncast' ).elementToElement( {\n\t\t\tmodel: 'image',\n\t\t\tview: ( modelElement, viewWriter ) => toImageWidget( createImageViewElement( viewWriter ), viewWriter, t( 'image widget' ) )\n\t\t} );\n\n\t\tconversion.for( 'downcast' )\n\t\t\t.add( modelToViewAttributeConverter( 'src' ) )\n\t\t\t.add( modelToViewAttributeConverter( 'alt' ) )\n\t\t\t.add( srcsetAttributeConverter() );\n\n\t\tconversion.for( 'upcast' )\n\t\t\t.elementToElement( {\n\t\t\t\tview: {\n\t\t\t\t\tname: 'img',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tsrc: true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmodel: ( viewImage, modelWriter ) => modelWriter.createElement( 'image', { src: viewImage.getAttribute( 'src' ) } )\n\t\t\t} )\n\t\t\t.attributeToAttribute( {\n\t\t\t\tview: {\n\t\t\t\t\tname: 'img',\n\t\t\t\t\tkey: 'alt'\n\t\t\t\t},\n\t\t\t\tmodel: 'alt'\n\t\t\t} )\n\t\t\t.attributeToAttribute( {\n\t\t\t\tview: {\n\t\t\t\t\tname: 'img',\n\t\t\t\t\tkey: 'srcset'\n\t\t\t\t},\n\t\t\t\tmodel: {\n\t\t\t\t\tkey: 'srcset',\n\t\t\t\t\tvalue: viewImage => {\n\t\t\t\t\t\tconst value = {\n\t\t\t\t\t\t\tdata: viewImage.getAttribute( 'srcset' )\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif ( viewImage.hasAttribute( 'width' ) ) {\n\t\t\t\t\t\t\tvalue.width = viewImage.getAttribute( 'width' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.add( viewFigureToModel() );\n\n\t\t// Register imageUpload command.\n\t\teditor.commands.add( 'imageInsert', new ImageInsertCommand( editor ) );\n\t}\n}\n\n// Creates a view element representing the image.\n//\n//\t\t<figure class=\"image\"><img></img></figure>\n//\n// Note that `alt` and `src` attributes are converted separately, so they are not included.\n//\n// @private\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @returns {module:engine/view/containerelement~ContainerElement}\nexport function createImageViewElement( writer ) {\n\tconst emptyElement = writer.createEmptyElement( 'img' );\n\tconst figure = writer.createContainerElement( 'figure', { class: 'image' } );\n\n\twriter.insert( writer.createPositionAt( figure, 0 ), emptyElement );\n\n\treturn figure;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagetextalternative/imagetextalternativecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { isImage } from '../image/utils';\n\n/**\n * The image text alternative command. It is used to change the `alt` attribute of `<image>` elements.\n *\n * @extends module:core/command~Command\n */\nexport default class ImageTextAlternativeCommand extends Command {\n\t/**\n\t * The command value: `false` if there is no `alt` attribute, otherwise the value of the `alt` attribute.\n\t *\n\t * @readonly\n\t * @observable\n\t * @member {String|Boolean} #value\n\t */\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst element = this.editor.model.document.selection.getSelectedElement();\n\n\t\tthis.isEnabled = isImage( element );\n\n\t\tif ( isImage( element ) && element.hasAttribute( 'alt' ) ) {\n\t\t\tthis.value = element.getAttribute( 'alt' );\n\t\t} else {\n\t\t\tthis.value = false;\n\t\t}\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @fires execute\n\t * @param {Object} options\n\t * @param {String} options.newValue The new value of the `alt` attribute to set.\n\t */\n\texecute( options ) {\n\t\tconst model = this.editor.model;\n\t\tconst imageElement = model.document.selection.getSelectedElement();\n\n\t\tmodel.change( writer => {\n\t\t\twriter.setAttribute( 'alt', options.newValue, imageElement );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagetextalternative/imagetextalternativeediting\n */\n\nimport ImageTextAlternativeCommand from './imagetextalternativecommand';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * The image text alternative editing plugin.\n *\n * Registers the `'imageTextAlternative'` command.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageTextAlternativeEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageTextAlternativeEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tthis.editor.commands.add( 'imageTextAlternative', new ImageTextAlternativeCommand( this.editor ) );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagetextalternative/ui/textalternativeformview\n */\n\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport ViewCollection from '@ckeditor/ckeditor5-ui/src/viewcollection';\n\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport LabeledFieldView from '@ckeditor/ckeditor5-ui/src/labeledfield/labeledfieldview';\nimport { createLabeledInputText } from '@ckeditor/ckeditor5-ui/src/labeledfield/utils';\n\nimport submitHandler from '@ckeditor/ckeditor5-ui/src/bindings/submithandler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '@ckeditor/ckeditor5-ui/src/focuscycler';\n\nimport checkIcon from '@ckeditor/ckeditor5-core/theme/icons/check.svg';\nimport cancelIcon from '@ckeditor/ckeditor5-core/theme/icons/cancel.svg';\nimport '../../../theme/textalternativeform.css';\n\n/**\n * The TextAlternativeFormView class.\n *\n * @extends module:ui/view~View\n */\nexport default class TextAlternativeFormView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst t = this.locale.t;\n\n\t\t/**\n\t\t * Tracks information about the DOM focus in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * An input with a label.\n\t\t *\n\t\t * @member {module:ui/labeledfield/labeledfieldview~LabeledFieldView} #labeledInput\n\t\t */\n\t\tthis.labeledInput = this._createLabeledInputView();\n\n\t\t/**\n\t\t * A button used to submit the form.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView} #saveButtonView\n\t\t */\n\t\tthis.saveButtonView = this._createButton( t( 'Save' ), checkIcon, 'ck-button-save' );\n\t\tthis.saveButtonView.type = 'submit';\n\n\t\t/**\n\t\t * A button used to cancel the form.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView} #cancelButtonView\n\t\t */\n\t\tthis.cancelButtonView = this._createButton( t( 'Cancel' ), cancelIcon, 'ck-button-cancel', 'cancel' );\n\n\t\t/**\n\t\t * A collection of views which can be focused in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis._focusables = new ViewCollection();\n\n\t\t/**\n\t\t * Helps cycling over {@link #_focusables} in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this._focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate form fields backwards using the Shift + Tab keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate form fields forwards using the Tab key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'form',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-text-alternative-form'\n\t\t\t\t],\n\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-image/issues/40\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tthis.labeledInput,\n\t\t\t\tthis.saveButtonView,\n\t\t\t\tthis.cancelButtonView\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\tsubmitHandler( { view: this } );\n\n\t\t[ this.labeledInput, this.saveButtonView, this.cancelButtonView ]\n\t\t\t.forEach( v => {\n\t\t\t\t// Register the view as focusable.\n\t\t\t\tthis._focusables.add( v );\n\n\t\t\t\t// Register the view in the focus tracker.\n\t\t\t\tthis.focusTracker.add( v.element );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Creates the button view.\n\t *\n\t * @private\n\t * @param {String} label The button label\n\t * @param {String} icon The button's icon.\n\t * @param {String} className The additional button CSS class name.\n\t * @param {String} [eventName] The event name that the ButtonView#execute event will be delegated to.\n\t * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n\t */\n\t_createButton( label, icon, className, eventName ) {\n\t\tconst button = new ButtonView( this.locale );\n\n\t\tbutton.set( {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ttooltip: true\n\t\t} );\n\n\t\tbutton.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: className\n\t\t\t}\n\t\t} );\n\n\t\tif ( eventName ) {\n\t\t\tbutton.delegate( 'execute' ).to( this, eventName );\n\t\t}\n\n\t\treturn button;\n\t}\n\n\t/**\n\t * Creates an input with a label.\n\t *\n\t * @private\n\t * @returns {module:ui/labeledfield/labeledfieldview~LabeledFieldView} Labeled field view instance.\n\t */\n\t_createLabeledInputView() {\n\t\tconst t = this.locale.t;\n\t\tconst labeledInput = new LabeledFieldView( this.locale, createLabeledInputText );\n\n\t\tlabeledInput.label = t( 'Text alternative' );\n\t\tlabeledInput.fieldView.placeholder = t( 'Text alternative' );\n\n\t\treturn labeledInput;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/ui/utils\n */\n\nimport BalloonPanelView from '@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview';\nimport { getSelectedImageWidget } from '../utils';\n\n/**\n * A helper utility that positions the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} instance\n * with respect to the image in the editor content, if one is selected.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\nexport function repositionContextualBalloon( editor ) {\n\tconst balloon = editor.plugins.get( 'ContextualBalloon' );\n\n\tif ( getSelectedImageWidget( editor.editing.view.document.selection ) ) {\n\t\tconst position = getBalloonPositionData( editor );\n\n\t\tballoon.updatePosition( position );\n\t}\n}\n\n/**\n * Returns the positioning options that control the geometry of the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} with respect\n * to the selected element in the editor content.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @returns {module:utils/dom/position~Options}\n */\nexport function getBalloonPositionData( editor ) {\n\tconst editingView = editor.editing.view;\n\tconst defaultPositions = BalloonPanelView.defaultPositions;\n\n\treturn {\n\t\ttarget: editingView.domConverter.viewToDom( editingView.document.selection.getSelectedElement() ),\n\t\tpositions: [\n\t\t\tdefaultPositions.northArrowSouth,\n\t\t\tdefaultPositions.northArrowSouthWest,\n\t\t\tdefaultPositions.northArrowSouthEast,\n\t\t\tdefaultPositions.southArrowNorth,\n\t\t\tdefaultPositions.southArrowNorthWest,\n\t\t\tdefaultPositions.southArrowNorthEast\n\t\t]\n\t};\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagetextalternative/imagetextalternativeui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport clickOutsideHandler from '@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler';\nimport TextAlternativeFormView from './ui/textalternativeformview';\nimport ContextualBalloon from '@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon';\nimport textAlternativeIcon from '@ckeditor/ckeditor5-core/theme/icons/low-vision.svg';\nimport { repositionContextualBalloon, getBalloonPositionData } from '../image/ui/utils';\nimport { getSelectedImageWidget } from '../image/utils';\n\n/**\n * The image text alternative UI plugin.\n *\n * The plugin uses the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageTextAlternativeUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ContextualBalloon ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageTextAlternativeUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tthis._createButton();\n\t\tthis._createForm();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\t// Destroy created UI components as they are not automatically destroyed (see ckeditor5#1341).\n\t\tthis._form.destroy();\n\t}\n\n\t/**\n\t * Creates a button showing the balloon panel for changing the image text alternative and\n\t * registers it in the editor {@link module:ui/componentfactory~ComponentFactory ComponentFactory}.\n\t *\n\t * @private\n\t */\n\t_createButton() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\teditor.ui.componentFactory.add( 'imageTextAlternative', locale => {\n\t\t\tconst command = editor.commands.get( 'imageTextAlternative' );\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel: t( 'Change image text alternative' ),\n\t\t\t\ticon: textAlternativeIcon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\n\t\t\tthis.listenTo( view, 'execute', () => {\n\t\t\t\tthis._showForm();\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n\n\t/**\n\t * Creates the {@link module:image/imagetextalternative/ui/textalternativeformview~TextAlternativeFormView}\n\t * form.\n\t *\n\t * @private\n\t */\n\t_createForm() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\t/**\n\t\t * The contextual balloon plugin instance.\n\t\t *\n\t\t * @private\n\t\t * @member {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\n\t\t */\n\t\tthis._balloon = this.editor.plugins.get( 'ContextualBalloon' );\n\n\t\t/**\n\t\t * A form containing a textarea and buttons, used to change the `alt` text value.\n\t\t *\n\t\t * @member {module:image/imagetextalternative/ui/textalternativeformview~TextAlternativeFormView}\n\t\t */\n\t\tthis._form = new TextAlternativeFormView( editor.locale );\n\n\t\t// Render the form so its #element is available for clickOutsideHandler.\n\t\tthis._form.render();\n\n\t\tthis.listenTo( this._form, 'submit', () => {\n\t\t\teditor.execute( 'imageTextAlternative', {\n\t\t\t\tnewValue: this._form.labeledInput.fieldView.element.value\n\t\t\t} );\n\n\t\t\tthis._hideForm( true );\n\t\t} );\n\n\t\tthis.listenTo( this._form, 'cancel', () => {\n\t\t\tthis._hideForm( true );\n\t\t} );\n\n\t\t// Close the form on Esc key press.\n\t\tthis._form.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tthis._hideForm( true );\n\t\t\tcancel();\n\t\t} );\n\n\t\t// Reposition the balloon or hide the form if an image widget is no longer selected.\n\t\tthis.listenTo( editor.ui, 'update', () => {\n\t\t\tif ( !getSelectedImageWidget( viewDocument.selection ) ) {\n\t\t\t\tthis._hideForm( true );\n\t\t\t} else if ( this._isVisible ) {\n\t\t\t\trepositionContextualBalloon( editor );\n\t\t\t}\n\t\t} );\n\n\t\t// Close on click outside of balloon panel element.\n\t\tclickOutsideHandler( {\n\t\t\temitter: this._form,\n\t\t\tactivator: () => this._isVisible,\n\t\t\tcontextElements: [ this._balloon.view.element ],\n\t\t\tcallback: () => this._hideForm()\n\t\t} );\n\t}\n\n\t/**\n\t * Shows the {@link #_form} in the {@link #_balloon}.\n\t *\n\t * @private\n\t */\n\t_showForm() {\n\t\tif ( this._isVisible ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this.editor;\n\t\tconst command = editor.commands.get( 'imageTextAlternative' );\n\t\tconst labeledInput = this._form.labeledInput;\n\n\t\tif ( !this._isInBalloon ) {\n\t\t\tthis._balloon.add( {\n\t\t\t\tview: this._form,\n\t\t\t\tposition: getBalloonPositionData( editor )\n\t\t\t} );\n\t\t}\n\n\t\t// Make sure that each time the panel shows up, the field remains in sync with the value of\n\t\t// the command. If the user typed in the input, then canceled the balloon (`labeledInput#value`\n\t\t// stays unaltered) and re-opened it without changing the value of the command, they would see the\n\t\t// old value instead of the actual value of the command.\n\t\t// https://github.com/ckeditor/ckeditor5-image/issues/114\n\t\tlabeledInput.fieldView.value = labeledInput.fieldView.element.value = command.value || '';\n\n\t\tthis._form.labeledInput.fieldView.select();\n\t}\n\n\t/**\n\t * Removes the {@link #_form} from the {@link #_balloon}.\n\t *\n\t * @param {Boolean} [focusEditable=false] Controls whether the editing view is focused afterwards.\n\t * @private\n\t */\n\t_hideForm( focusEditable ) {\n\t\tif ( !this._isInBalloon ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Blur the input element before removing it from DOM to prevent issues in some browsers.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/1501.\n\t\tif ( this._form.focusTracker.isFocused ) {\n\t\t\tthis._form.saveButtonView.focus();\n\t\t}\n\n\t\tthis._balloon.remove( this._form );\n\n\t\tif ( focusEditable ) {\n\t\t\tthis.editor.editing.view.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` when the {@link #_form} is the visible view in the {@link #_balloon}.\n\t *\n\t * @private\n\t * @type {Boolean}\n\t */\n\tget _isVisible() {\n\t\treturn this._balloon.visibleView === this._form;\n\t}\n\n\t/**\n\t * Returns `true` when the {@link #_form} is in the {@link #_balloon}.\n\t *\n\t * @private\n\t * @type {Boolean}\n\t */\n\tget _isInBalloon() {\n\t\treturn this._balloon.hasView( this._form );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagetextalternative\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageTextAlternativeEditing from './imagetextalternative/imagetextalternativeediting';\nimport ImageTextAlternativeUI from './imagetextalternative/imagetextalternativeui';\n\n/**\n * The image text alternative plugin.\n *\n * For a detailed overview, check the {@glink features/image#image-styles image styles} documentation.\n *\n * This is a \"glue\" plugin which loads the\n *  {@link module:image/imagetextalternative/imagetextalternativeediting~ImageTextAlternativeEditing}\n * and {@link module:image/imagetextalternative/imagetextalternativeui~ImageTextAlternativeUI} plugins.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageTextAlternative extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageTextAlternativeEditing, ImageTextAlternativeUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageTextAlternative';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageEditing from '../src/image/imageediting';\nimport Widget from '@ckeditor/ckeditor5-widget/src/widget';\nimport ImageTextAlternative from './imagetextalternative';\n\nimport '../theme/image.css';\n\n/**\n * The image plugin.\n *\n * For a detailed overview, check the {@glink features/image image feature} documentation.\n *\n * This is a \"glue\" plugin which loads the following plugins:\n *\n * * {@link module:image/image/imageediting~ImageEditing},\n * * {@link module:image/imagetextalternative~ImageTextAlternative}.\n *\n * Usually, it is used in conjuction with other plugins from this package. See the {@glink api/image package page}\n * for more information.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Image extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageEditing, Widget, ImageTextAlternative ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Image';\n\t}\n}\n\n/**\n * The configuration of the image features. Used by the image features in the `@ckeditor/ckeditor5-image` package.\n *\n * Read more in {@link module:image/image~ImageConfig}.\n *\n * @member {module:image/image~ImageConfig} module:core/editor/editorconfig~EditorConfig#image\n */\n\n/**\n * The configuration of the image features. Used by the image features in the `@ckeditor/ckeditor5-image` package.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\timage: ... // Image feature options.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface ImageConfig\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagecaption/utils\n */\n\nimport { enablePlaceholder } from '@ckeditor/ckeditor5-engine/src/view/placeholder';\nimport { toWidgetEditable } from '@ckeditor/ckeditor5-widget/src/utils';\n\n/**\n * Returns a function that creates a caption editable element for the given {@link module:engine/view/document~Document}.\n *\n * @param {module:engine/view/view~View} view\n * @param {String} placeholderText The text to be displayed when the caption is empty.\n * @returns {Function}\n */\nexport function captionElementCreator( view, placeholderText ) {\n\treturn writer => {\n\t\tconst editable = writer.createEditableElement( 'figcaption' );\n\t\twriter.setCustomProperty( 'imageCaption', true, editable );\n\n\t\tenablePlaceholder( {\n\t\t\tview,\n\t\t\telement: editable,\n\t\t\ttext: placeholderText\n\t\t} );\n\n\t\treturn toWidgetEditable( editable, writer );\n\t};\n}\n\n/**\n * Returns `true` if a given view element is the image caption editable.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @returns {Boolean}\n */\nexport function isCaption( viewElement ) {\n\treturn !!viewElement.getCustomProperty( 'imageCaption' );\n}\n\n/**\n * Returns the caption model element from a given image element. Returns `null` if no caption is found.\n *\n * @param {module:engine/model/element~Element} imageModelElement\n * @returns {module:engine/model/element~Element|null}\n */\nexport function getCaptionFromImage( imageModelElement ) {\n\tfor ( const node of imageModelElement.getChildren() ) {\n\t\tif ( !!node && node.is( 'caption' ) ) {\n\t\t\treturn node;\n\t\t}\n\t}\n\n\treturn null;\n}\n\n/**\n * {@link module:engine/view/matcher~Matcher} pattern. Checks if a given element is a `<figcaption>` element that is placed\n * inside the image `<figure>` element.\n *\n * @param {module:engine/view/element~Element} element\n * @returns {Object|null} Returns the object accepted by {@link module:engine/view/matcher~Matcher} or `null` if the element\n * cannot be matched.\n */\nexport function matchImageCaption( element ) {\n\tconst parent = element.parent;\n\n\t// Convert only captions for images.\n\tif ( element.name == 'figcaption' && parent && parent.name == 'figure' && parent.hasClass( 'image' ) ) {\n\t\treturn { name: true };\n\t}\n\n\treturn null;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagecaption/imagecaptionediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport { isImage } from '../image/utils';\nimport { captionElementCreator, getCaptionFromImage, matchImageCaption } from './utils';\n\n/**\n * The image caption engine plugin.\n *\n * It registers proper converters. It takes care of adding a caption element if the image without it is inserted\n * to the model document.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageCaptionEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageCaptionEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst schema = editor.model.schema;\n\t\tconst data = editor.data;\n\t\tconst editing = editor.editing;\n\t\tconst t = editor.t;\n\n\t\t/**\n\t\t * The last selected caption editable.\n\t\t * It is used for hiding the editable when it is empty and the image widget is no longer selected.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/editableelement~EditableElement} #_lastSelectedCaption\n\t\t */\n\n\t\t// Schema configuration.\n\t\tschema.register( 'caption', {\n\t\t\tallowIn: 'image',\n\t\t\tallowContentOf: '$block',\n\t\t\tisLimit: true\n\t\t} );\n\n\t\t// Add caption element to each image inserted without it.\n\t\teditor.model.document.registerPostFixer( writer => this._insertMissingModelCaptionElement( writer ) );\n\n\t\t// View to model converter for the data pipeline.\n\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t\t\tview: matchImageCaption,\n\t\t\tmodel: 'caption'\n\t\t} );\n\n\t\t// Model to view converter for the data pipeline.\n\t\tconst createCaptionForData = writer => writer.createContainerElement( 'figcaption' );\n\t\tdata.downcastDispatcher.on( 'insert:caption', captionModelToView( createCaptionForData, false ) );\n\n\t\t// Model to view converter for the editing pipeline.\n\t\tconst createCaptionForEditing = captionElementCreator( view, t( 'Enter image caption' ) );\n\t\tediting.downcastDispatcher.on( 'insert:caption', captionModelToView( createCaptionForEditing ) );\n\n\t\t// Always show caption in view when something is inserted in model.\n\t\tediting.downcastDispatcher.on(\n\t\t\t'insert',\n\t\t\tthis._fixCaptionVisibility( data => data.item ),\n\t\t\t{ priority: 'high' }\n\t\t);\n\n\t\t// Hide caption when everything is removed from it.\n\t\tediting.downcastDispatcher.on( 'remove', this._fixCaptionVisibility( data => data.position.parent ), { priority: 'high' } );\n\n\t\t// Update caption visibility on view in post fixer.\n\t\tview.document.registerPostFixer( writer => this._updateCaptionVisibility( writer ) );\n\t}\n\n\t/**\n\t * Updates the view before each rendering, making sure that empty captions (so unnecessary ones) are hidden\n\t * and then visible when the image is selected.\n\t *\n\t * @private\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter\n\t * @returns {Boolean} Returns `true` when the view is updated.\n\t */\n\t_updateCaptionVisibility( viewWriter ) {\n\t\tconst mapper = this.editor.editing.mapper;\n\t\tconst lastCaption = this._lastSelectedCaption;\n\t\tlet viewCaption;\n\n\t\t// If whole image is selected.\n\t\tconst modelSelection = this.editor.model.document.selection;\n\t\tconst selectedElement = modelSelection.getSelectedElement();\n\n\t\tif ( selectedElement && selectedElement.is( 'image' ) ) {\n\t\t\tconst modelCaption = getCaptionFromImage( selectedElement );\n\t\t\tviewCaption = mapper.toViewElement( modelCaption );\n\t\t}\n\n\t\t// If selection is placed inside caption.\n\t\tconst position = modelSelection.getFirstPosition();\n\t\tconst modelCaption = getParentCaption( position.parent );\n\n\t\tif ( modelCaption ) {\n\t\t\tviewCaption = mapper.toViewElement( modelCaption );\n\t\t}\n\n\t\t// Is currently any caption selected?\n\t\tif ( viewCaption ) {\n\t\t\t// Was any caption selected before?\n\t\t\tif ( lastCaption ) {\n\t\t\t\t// Same caption as before?\n\t\t\t\tif ( lastCaption === viewCaption ) {\n\t\t\t\t\treturn showCaption( viewCaption, viewWriter );\n\t\t\t\t} else {\n\t\t\t\t\thideCaptionIfEmpty( lastCaption, viewWriter );\n\t\t\t\t\tthis._lastSelectedCaption = viewCaption;\n\n\t\t\t\t\treturn showCaption( viewCaption, viewWriter );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._lastSelectedCaption = viewCaption;\n\t\t\t\treturn showCaption( viewCaption, viewWriter );\n\t\t\t}\n\t\t} else {\n\t\t\t// Was any caption selected before?\n\t\t\tif ( lastCaption ) {\n\t\t\t\tconst viewModified = hideCaptionIfEmpty( lastCaption, viewWriter );\n\t\t\t\tthis._lastSelectedCaption = null;\n\n\t\t\t\treturn viewModified;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns a converter that fixes caption visibility during the model-to-view conversion.\n\t * Checks if the changed node is placed inside the caption element and fixes its visibility in the view.\n\t *\n\t * @private\n\t * @param {Function} nodeFinder\n\t * @returns {Function}\n\t */\n\t_fixCaptionVisibility( nodeFinder ) {\n\t\treturn ( evt, data, conversionApi ) => {\n\t\t\tconst node = nodeFinder( data );\n\t\t\tconst modelCaption = getParentCaption( node );\n\t\t\tconst mapper = this.editor.editing.mapper;\n\t\t\tconst viewWriter = conversionApi.writer;\n\n\t\t\tif ( modelCaption ) {\n\t\t\t\tconst viewCaption = mapper.toViewElement( modelCaption );\n\n\t\t\t\tif ( viewCaption ) {\n\t\t\t\t\tif ( modelCaption.childCount ) {\n\t\t\t\t\t\tviewWriter.removeClass( 'ck-hidden', viewCaption );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tviewWriter.addClass( 'ck-hidden', viewCaption );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Checks whether the data inserted to the model document have an image element that has no caption element inside it.\n\t * If there is none, it adds it to the image element.\n\t *\n\t * @private\n\t * @param {module:engine/model/writer~Writer} writer The writer to make changes with.\n\t * @returns {Boolean} `true` if any change was applied, `false` otherwise.\n\t */\n\t_insertMissingModelCaptionElement( writer ) {\n\t\tconst model = this.editor.model;\n\t\tconst changes = model.document.differ.getChanges();\n\n\t\tconst imagesWithoutCaption = [];\n\n\t\tfor ( const entry of changes ) {\n\t\t\tif ( entry.type == 'insert' && entry.name != '$text' ) {\n\t\t\t\tconst item = entry.position.nodeAfter;\n\n\t\t\t\tif ( item.is( 'image' ) && !getCaptionFromImage( item ) ) {\n\t\t\t\t\timagesWithoutCaption.push( item );\n\t\t\t\t}\n\n\t\t\t\t// Check elements with children for nested images.\n\t\t\t\tif ( !item.is( 'image' ) && item.childCount ) {\n\t\t\t\t\tfor ( const nestedItem of model.createRangeIn( item ).getItems() ) {\n\t\t\t\t\t\tif ( nestedItem.is( 'image' ) && !getCaptionFromImage( nestedItem ) ) {\n\t\t\t\t\t\t\timagesWithoutCaption.push( nestedItem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor ( const image of imagesWithoutCaption ) {\n\t\t\twriter.appendElement( 'caption', image );\n\t\t}\n\n\t\treturn !!imagesWithoutCaption.length;\n\t}\n}\n\n// Creates a converter that converts image caption model element to view element.\n//\n// @private\n// @param {Function} elementCreator\n// @param {Boolean} [hide=true] When set to `false` view element will not be inserted when it's empty.\n// @returns {Function}\nfunction captionModelToView( elementCreator, hide = true ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst captionElement = data.item;\n\n\t\t// Return if element shouldn't be present when empty.\n\t\tif ( !captionElement.childCount && !hide ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isImage( captionElement.parent ) ) {\n\t\t\tif ( !conversionApi.consumable.consume( data.item, 'insert' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst viewImage = conversionApi.mapper.toViewElement( data.range.start.parent );\n\t\t\tconst viewCaption = elementCreator( conversionApi.writer );\n\t\t\tconst viewWriter = conversionApi.writer;\n\n\t\t\t// Hide if empty.\n\t\t\tif ( !captionElement.childCount ) {\n\t\t\t\tviewWriter.addClass( 'ck-hidden', viewCaption );\n\t\t\t}\n\n\t\t\tinsertViewCaptionAndBind( viewCaption, data.item, viewImage, conversionApi );\n\t\t}\n\t};\n}\n\n// Inserts `viewCaption` at the end of `viewImage` and binds it to `modelCaption`.\n//\n// @private\n// @param {module:engine/view/containerelement~ContainerElement} viewCaption\n// @param {module:engine/model/element~Element} modelCaption\n// @param {module:engine/view/containerelement~ContainerElement} viewImage\n// @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi\nfunction insertViewCaptionAndBind( viewCaption, modelCaption, viewImage, conversionApi ) {\n\tconst viewPosition = conversionApi.writer.createPositionAt( viewImage, 'end' );\n\n\tconversionApi.writer.insert( viewPosition, viewCaption );\n\tconversionApi.mapper.bindElements( modelCaption, viewCaption );\n}\n\n// Checks if the provided node or one of its ancestors is a caption element, and returns it.\n//\n// @private\n// @param {module:engine/model/node~Node} node\n// @returns {module:engine/model/element~Element|null}\nfunction getParentCaption( node ) {\n\tconst ancestors = node.getAncestors( { includeSelf: true } );\n\tconst caption = ancestors.find( ancestor => ancestor.name == 'caption' );\n\n\tif ( caption && caption.parent && caption.parent.name == 'image' ) {\n\t\treturn caption;\n\t}\n\n\treturn null;\n}\n\n// Hides a given caption in the view if it is empty.\n//\n// @private\n// @param {module:engine/view/containerelement~ContainerElement} caption\n// @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter\n// @returns {Boolean} Returns `true` if the view was modified.\nfunction hideCaptionIfEmpty( caption, viewWriter ) {\n\tif ( !caption.childCount && !caption.hasClass( 'ck-hidden' ) ) {\n\t\tviewWriter.addClass( 'ck-hidden', caption );\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// Shows the caption.\n//\n// @private\n// @param {module:engine/view/containerelement~ContainerElement} caption\n// @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter\n// @returns {Boolean} Returns `true` if the view was modified.\nfunction showCaption( caption, viewWriter ) {\n\tif ( caption.hasClass( 'ck-hidden' ) ) {\n\t\tviewWriter.removeClass( 'ck-hidden', caption );\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagecaption\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageCaptionEditing from './imagecaption/imagecaptionediting';\n\nimport '../theme/imagecaption.css';\n\n/**\n * The image caption plugin.\n *\n * For a detailed overview, check the {@glink features/image#image-captions image caption} documentation.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageCaption extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageCaptionEditing ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageCaption';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module widget/widgetresize/resizerstate\n */\n\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Stores the internal state of a single resizable object.\n *\n */\nexport default class ResizeState {\n\t/**\n\t * @param {module:widget/widgetresize~ResizerOptions} options Resizer options.\n\t */\n\tconstructor( options ) {\n\t\t/**\n\t\t * The original width (pixels) of the resized object when the resize process was started.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #originalWidth\n\t\t */\n\n\t\t/**\n\t\t * The original height (pixels) of the resized object when the resize process was started.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #originalHeight\n\t\t */\n\n\t\t/**\n\t\t * The original width (percents) of the resized object when the resize process was started.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #originalWidthPercents\n\t\t */\n\n\t\t/**\n\t\t * The position of the handle that initiated the resizing. E.g. `\"top-left\"`, `\"bottom-right\"` etc. or `null`\n\t\t * if unknown.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {String|null} #activeHandlePosition\n\t\t */\n\t\tthis.set( 'activeHandlePosition', null );\n\n\t\t/**\n\t\t * The width (percents) proposed, but not committed yet, in the current resize process.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number|null} #proposedWidthPercents\n\t\t */\n\t\tthis.set( 'proposedWidthPercents', null );\n\n\t\t/**\n\t\t * The width (pixels) proposed, but not committed yet, in the current resize process.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number|null} #proposedWidthPixels\n\t\t */\n\t\tthis.set( 'proposedWidth', null );\n\n\t\t/**\n\t\t * The height (pixels) proposed, but not committed yet, in the current resize process.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number|null} #proposedHeightPixels\n\t\t */\n\t\tthis.set( 'proposedHeight', null );\n\n\t\tthis.set( 'proposedHandleHostWidth', null );\n\t\tthis.set( 'proposedHandleHostHeight', null );\n\n\t\t/**\n\t\t * A width to height ratio of the resized image.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #aspectRatio\n\t\t */\n\n\t\t/**\n\t\t * @private\n\t\t * @type {module:widget/widgetresize~ResizerOptions}\n\t\t */\n\t\tthis._options = options;\n\n\t\t/**\n\t\t * The reference point of the resizer where the dragging started. It is used to measure the distance the user cursor\n\t\t * traveled, so how much the image should be enlarged.\n\t\t * This information is only known after the DOM was rendered, so it will be updated later.\n\t\t *\n\t\t * @private\n\t\t * @type {Object}\n\t\t */\n\t\tthis._referenceCoordinates = null;\n\t}\n\n\t/**\n\t *\n\t * @param {HTMLElement} domResizeHandle The handle used to calculate the reference point.\n\t * @param {HTMLElement} domHandleHost\n\t * @param {HTMLElement} domResizeHost\n\t */\n\tbegin( domResizeHandle, domHandleHost, domResizeHost ) {\n\t\tconst clientRect = new Rect( domHandleHost );\n\n\t\tthis.activeHandlePosition = getHandlePosition( domResizeHandle );\n\n\t\tthis._referenceCoordinates = getAbsoluteBoundaryPoint( domHandleHost, getOppositePosition( this.activeHandlePosition ) );\n\n\t\tthis.originalWidth = clientRect.width;\n\t\tthis.originalHeight = clientRect.height;\n\n\t\tthis.aspectRatio = clientRect.width / clientRect.height;\n\n\t\tconst widthStyle = domResizeHost.style.width;\n\n\t\tif ( widthStyle && widthStyle.match( /^\\d+\\.?\\d*%$/ ) ) {\n\t\t\tthis.originalWidthPercents = parseFloat( widthStyle );\n\t\t} else {\n\t\t\tthis.originalWidthPercents = calculateHostPercentageWidth( domResizeHost, clientRect );\n\t\t}\n\t}\n\n\tupdate( newSize ) {\n\t\tthis.proposedWidth = newSize.width;\n\t\tthis.proposedHeight = newSize.height;\n\t\tthis.proposedWidthPercents = newSize.widthPercents;\n\n\t\tthis.proposedHandleHostWidth = newSize.handleHostWidth;\n\t\tthis.proposedHandleHostHeight = newSize.handleHostHeight;\n\t}\n}\n\nmix( ResizeState, ObservableMixin );\n\n// Calculates a relative width of a `domResizeHost` compared to it's parent in percents.\n//\n// @private\n// @param {HTMLElement} domResizeHost\n// @param {module:utils/dom/rect~Rect} resizeHostRect\n// @returns {Number}\nfunction calculateHostPercentageWidth( domResizeHost, resizeHostRect ) {\n\tconst domResizeHostParent = domResizeHost.parentElement;\n\t// Need to use computed style as it properly excludes parent's paddings from the returned value.\n\tconst parentWidth = parseFloat( domResizeHostParent.ownerDocument.defaultView.getComputedStyle( domResizeHostParent ).width );\n\n\treturn resizeHostRect.width / parentWidth * 100;\n}\n\n// Returns coordinates of the top-left corner of an element, relative to the document's top-left corner.\n//\n// @private\n// @param {HTMLElement} element\n// @param {String} resizerPosition The position of the resize handle, e.g. `\"top-left\"`, `\"bottom-right\"`.\n// @returns {Object} return\n// @returns {Number} return.x\n// @returns {Number} return.y\nfunction getAbsoluteBoundaryPoint( element, resizerPosition ) {\n\tconst elementRect = new Rect( element );\n\tconst positionParts = resizerPosition.split( '-' );\n\tconst ret = {\n\t\tx: positionParts[ 1 ] == 'right' ? elementRect.right : elementRect.left,\n\t\ty: positionParts[ 0 ] == 'bottom' ? elementRect.bottom : elementRect.top\n\t};\n\n\tret.x += element.ownerDocument.defaultView.scrollX;\n\tret.y += element.ownerDocument.defaultView.scrollY;\n\n\treturn ret;\n}\n\n// @private\n// @param {String} resizerPosition The expected resizer position, like `\"top-left\"`, `\"bottom-right\"`.\n// @returns {String} A prefixed HTML class name for the resizer element.\nfunction getResizerHandleClass( resizerPosition ) {\n\treturn `ck-widget__resizer__handle-${ resizerPosition }`;\n}\n\n// Determines the position of a given resize handle.\n//\n// @private\n// @param {HTMLElement} domHandle Handle used to calculate the reference point.\n// @returns {String|undefined} Returns a string like `\"top-left\"` or `undefined` if not matched.\nfunction getHandlePosition( domHandle ) {\n\tconst resizerPositions = [ 'top-left', 'top-right', 'bottom-right', 'bottom-left' ];\n\n\tfor ( const position of resizerPositions ) {\n\t\tif ( domHandle.classList.contains( getResizerHandleClass( position ) ) ) {\n\t\t\treturn position;\n\t\t}\n\t}\n}\n\n// @private\n// @param {String} position Like `\"top-left\"`.\n// @returns {String} Inverted `position`, e.g. it returns `\"bottom-right\"` if `\"top-left\"` was given as `position`.\nfunction getOppositePosition( position ) {\n\tconst parts = position.split( '-' );\n\tconst replacements = {\n\t\ttop: 'bottom',\n\t\tbottom: 'top',\n\t\tleft: 'right',\n\t\tright: 'left'\n\t};\n\n\treturn `${ replacements[ parts[ 0 ] ] }-${ replacements[ parts[ 1 ] ] }`;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module widget/widgetresize/resizer\n */\n\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport Template from '@ckeditor/ckeditor5-ui/src/template';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\nimport ResizeState from './resizerstate';\n\n/**\n * Represents a resizer for a single resizable object.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Resizer {\n\t/**\n\t * @param {module:widget/widgetresize~ResizerOptions} options Resizer options.\n\t */\n\tconstructor( options ) {\n\t\t/**\n\t\t * Stores the state of the resizable host geometry, such as the original width, the currently proposed height, etc.\n\t\t *\n\t\t * Note that a new state is created for each resize transaction.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:widget/widgetresize/resizerstate~ResizerState} #state\n\t\t */\n\n\t\t/**\n\t\t * A view displaying the proposed new element size during the resizing.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @member {module:widget/widgetresize/resizer~SizeView} #_sizeUI\n\t\t */\n\n\t\t/**\n\t\t * Options passed to the {@link #constructor}.\n\t\t *\n\t\t * @private\n\t\t * @type {module:widget/widgetresize~ResizerOptions}\n\t\t */\n\t\tthis._options = options;\n\n\t\t/**\n\t\t * Container of the entire resize UI.\n\t\t *\n\t\t * Note that this property is initialized only after the element bound with the resizer is drawn\n\t\t * so it will be a `null` when uninitialized.\n\t\t *\n\t\t * @private\n\t\t * @type {HTMLElement|null}\n\t\t */\n\t\tthis._domResizerWrapper = null;\n\n\t\t/**\n\t\t * A wrapper that is controlled by the resizer. This is usually a widget element.\n\t\t *\n\t\t * @private\n\t\t * @type {module:engine/view/element~Element|null}\n\t\t */\n\t\tthis._viewResizerWrapper = null;\n\n\t\t/**\n\t\t * The width of the resized {@link module:widget/widgetresize~ResizerOptions#viewElement viewElement} before the resizing started.\n\t\t *\n\t\t * @private\n\t\t * @member {Number|String|undefined} #_initialViewWidth\n\t\t */\n\n\t\t/**\n\t\t * @observable\n\t\t */\n\t\tthis.set( 'isEnabled', true );\n\n\t\tthis.decorate( 'begin' );\n\t\tthis.decorate( 'cancel' );\n\t\tthis.decorate( 'commit' );\n\t\tthis.decorate( 'updateSize' );\n\n\t\tthis.on( 'commit', event => {\n\t\t\t// State might not be initialized yet. In this case, prevent further handling and make sure that the resizer is\n\t\t\t// cleaned up (#5195).\n\t\t\tif ( !this.state.proposedWidth && !this.state.proposedWidthPercents ) {\n\t\t\t\tthis._cleanup();\n\t\t\t\tevent.stop();\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * Attaches the resizer to the DOM.\n\t */\n\tattach() {\n\t\tconst that = this;\n\t\tconst widgetElement = this._options.viewElement;\n\t\tconst editingView = this._options.editor.editing.view;\n\n\t\teditingView.change( writer => {\n\t\t\tconst viewResizerWrapper = writer.createUIElement( 'div', {\n\t\t\t\tclass: 'ck ck-reset_all ck-widget__resizer'\n\t\t\t}, function( domDocument ) {\n\t\t\t\tconst domElement = this.toDomElement( domDocument );\n\n\t\t\t\tthat._appendHandles( domElement );\n\t\t\t\tthat._appendSizeUI( domElement );\n\n\t\t\t\tthat._domResizerWrapper = domElement;\n\n\t\t\t\tthat.on( 'change:isEnabled', ( evt, propName, newValue ) => {\n\t\t\t\t\tdomElement.style.display = newValue ? '' : 'none';\n\t\t\t\t} );\n\n\t\t\t\tdomElement.style.display = that.isEnabled ? '' : 'none';\n\n\t\t\t\treturn domElement;\n\t\t\t} );\n\n\t\t\t// Append the resizer wrapper to the widget's wrapper.\n\t\t\twriter.insert( writer.createPositionAt( widgetElement, 'end' ), viewResizerWrapper );\n\t\t\twriter.addClass( 'ck-widget_with-resizer', widgetElement );\n\n\t\t\tthis._viewResizerWrapper = viewResizerWrapper;\n\t\t} );\n\t}\n\n\t/**\n\t * Starts the resizing process.\n\t *\n\t * Creates a new {@link #state} for the current process.\n\t *\n\t * @fires begin\n\t * @param {HTMLElement} domResizeHandle Clicked handle.\n\t */\n\tbegin( domResizeHandle ) {\n\t\tthis.state = new ResizeState( this._options );\n\n\t\tthis._sizeUI.bindToState( this._options, this.state );\n\n\t\tthis._initialViewWidth = this._options.viewElement.getStyle( 'width' );\n\n\t\tthis.state.begin( domResizeHandle, this._getHandleHost(), this._getResizeHost() );\n\t}\n\n\t/**\n\t * Updates the proposed size based on `domEventData`.\n\t *\n\t * @fires updateSize\n\t * @param {Event} domEventData\n\t */\n\tupdateSize( domEventData ) {\n\t\tconst newSize = this._proposeNewSize( domEventData );\n\t\tconst editingView = this._options.editor.editing.view;\n\n\t\teditingView.change( writer => {\n\t\t\tconst unit = this._options.unit || '%';\n\t\t\tconst newWidth = ( unit === '%' ? newSize.widthPercents : newSize.width ) + unit;\n\n\t\t\twriter.setStyle( 'width', newWidth, this._options.viewElement );\n\t\t} );\n\n\t\t// Get an actual image width, and:\n\t\t// * reflect this size to the resize wrapper\n\t\t// * apply this **real** size to the state\n\t\tconst domHandleHost = this._getHandleHost();\n\t\tconst domHandleHostRect = new Rect( domHandleHost );\n\n\t\tnewSize.handleHostWidth = Math.round( domHandleHostRect.width );\n\t\tnewSize.handleHostHeight = Math.round( domHandleHostRect.height );\n\n\t\t// Handle max-width limitation.\n\t\tconst domResizeHostRect = new Rect( domHandleHost );\n\n\t\tnewSize.width = Math.round( domResizeHostRect.width );\n\t\tnewSize.height = Math.round( domResizeHostRect.height );\n\n\t\tthis.redraw( domHandleHostRect );\n\n\t\tthis.state.update( newSize );\n\t}\n\n\t/**\n\t * Applies the geometry proposed with the resizer.\n\t *\n\t * @fires commit\n\t */\n\tcommit() {\n\t\tconst unit = this._options.unit || '%';\n\t\tconst newValue = ( unit === '%' ? this.state.proposedWidthPercents : this.state.proposedWidth ) + unit;\n\n\t\t// Both cleanup and onCommit callback are very likely to make view changes. Ensure that it is made in a single step.\n\t\tthis._options.editor.editing.view.change( () => {\n\t\t\tthis._cleanup();\n\t\t\tthis._options.onCommit( newValue );\n\t\t} );\n\t}\n\n\t/**\n\t * Cancels and rejects the proposed resize dimensions, hiding the UI.\n\t *\n\t * @fires cancel\n\t */\n\tcancel() {\n\t\tthis._cleanup();\n\t}\n\n\t/**\n\t * Destroys the resizer.\n\t */\n\tdestroy() {\n\t\tthis.cancel();\n\t}\n\n\t/**\n\t * Redraws the resizer.\n\t *\n\t * @param {module:utils/dom/rect~Rect} [handleHostRect] Handle host rectangle might be given to improve performance.\n\t */\n\tredraw( handleHostRect ) {\n\t\tconst domWrapper = this._domResizerWrapper;\n\n\t\tif ( existsInDom( domWrapper ) ) {\n\t\t\tthis._options.editor.editing.view.change( writer => {\n\t\t\t\t// Refresh only if resizer exists in the DOM.\n\t\t\t\tconst widgetWrapper = domWrapper.parentElement;\n\t\t\t\tconst handleHost = this._getHandleHost();\n\t\t\t\tconst clientRect = handleHostRect || new Rect( handleHost );\n\n\t\t\t\twriter.setStyle( 'width', clientRect.width + 'px', this._viewResizerWrapper );\n\t\t\t\twriter.setStyle( 'height', clientRect.height + 'px', this._viewResizerWrapper );\n\n\t\t\t\tconst offsets = {\n\t\t\t\t\tleft: handleHost.offsetLeft,\n\t\t\t\t\ttop: handleHost.offsetTop,\n\t\t\t\t\theight: handleHost.offsetHeight,\n\t\t\t\t\twidth: handleHost.offsetWidth\n\t\t\t\t};\n\n\t\t\t\t// In case a resizing host is not a widget wrapper, we need to compensate\n\t\t\t\t// for any additional offsets the resize host might have. E.g. wrapper padding\n\t\t\t\t// or simply another editable. By doing that the border and resizers are shown\n\t\t\t\t// only around the resize host.\n\t\t\t\tif ( !widgetWrapper.isSameNode( handleHost ) ) {\n\t\t\t\t\twriter.setStyle( 'left', offsets.left + 'px', this._viewResizerWrapper );\n\t\t\t\t\twriter.setStyle( 'top', offsets.top + 'px', this._viewResizerWrapper );\n\n\t\t\t\t\twriter.setStyle( 'height', offsets.height + 'px', this._viewResizerWrapper );\n\t\t\t\t\twriter.setStyle( 'width', offsets.width + 'px', this._viewResizerWrapper );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\tfunction existsInDom( element ) {\n\t\t\treturn element && element.ownerDocument && element.ownerDocument.contains( element );\n\t\t}\n\t}\n\n\tcontainsHandle( domElement ) {\n\t\treturn this._domResizerWrapper.contains( domElement );\n\t}\n\n\tstatic isResizeHandle( domElement ) {\n\t\treturn domElement.classList.contains( 'ck-widget__resizer__handle' );\n\t}\n\n\t/**\n\t * Cleans up the context state.\n\t *\n\t * @protected\n\t */\n\t_cleanup() {\n\t\tthis._sizeUI.dismiss();\n\t\tthis._sizeUI.isVisible = false;\n\n\t\tconst editingView = this._options.editor.editing.view;\n\n\t\teditingView.change( writer => {\n\t\t\twriter.setStyle( 'width', this._initialViewWidth, this._options.viewElement );\n\t\t} );\n\t}\n\n\t/**\n\t * Calculates the proposed size as the resize handles are dragged.\n\t *\n\t * @private\n\t * @param {Event} domEventData Event data that caused the size update request. It should be used to calculate the proposed size.\n\t * @returns {Object} return\n\t * @returns {Number} return.width Proposed width.\n\t * @returns {Number} return.height Proposed height.\n\t */\n\t_proposeNewSize( domEventData ) {\n\t\tconst state = this.state;\n\t\tconst currentCoordinates = extractCoordinates( domEventData );\n\t\tconst isCentered = this._options.isCentered ? this._options.isCentered( this ) : true;\n\n\t\t// Enlargement defines how much the resize host has changed in a given axis. Naturally it could be a negative number\n\t\t// meaning that it has been shrunk.\n\t\t//\n\t\t// +----------------+--+\n\t\t// |                |  |\n\t\t// |       img      |  |\n\t\t// |  /handle host  |  |\n\t\t// +----------------+  | ^\n\t\t// |                   | | - enlarge y\n\t\t// +-------------------+ v\n\t\t// \t\t\t\t\t<-->\n\t\t// \t\t\t\t\t enlarge x\n\t\tconst enlargement = {\n\t\t\tx: state._referenceCoordinates.x - ( currentCoordinates.x + state.originalWidth ),\n\t\t\ty: ( currentCoordinates.y - state.originalHeight ) - state._referenceCoordinates.y\n\t\t};\n\n\t\tif ( isCentered && state.activeHandlePosition.endsWith( '-right' ) ) {\n\t\t\tenlargement.x = currentCoordinates.x - ( state._referenceCoordinates.x + state.originalWidth );\n\t\t}\n\n\t\t// Objects needs to be resized twice as much in horizontal axis if centered, since enlargement is counted from\n\t\t// one resized corner to your cursor. It needs to be duplicated to compensate for the other side too.\n\t\tif ( isCentered ) {\n\t\t\tenlargement.x *= 2;\n\t\t}\n\n\t\t// const resizeHost = this._getResizeHost();\n\n\t\t// The size proposed by the user. It does not consider the aspect ratio.\n\t\tconst proposedSize = {\n\t\t\twidth: Math.abs( state.originalWidth + enlargement.x ),\n\t\t\theight: Math.abs( state.originalHeight + enlargement.y )\n\t\t};\n\n\t\t// Dominant determination must take the ratio into account.\n\t\tproposedSize.dominant = proposedSize.width / state.aspectRatio > proposedSize.height ? 'width' : 'height';\n\t\tproposedSize.max = proposedSize[ proposedSize.dominant ];\n\n\t\t// Proposed size, respecting the aspect ratio.\n\t\tconst targetSize = {\n\t\t\twidth: proposedSize.width,\n\t\t\theight: proposedSize.height\n\t\t};\n\n\t\tif ( proposedSize.dominant == 'width' ) {\n\t\t\ttargetSize.height = targetSize.width / state.aspectRatio;\n\t\t} else {\n\t\t\ttargetSize.width = targetSize.height * state.aspectRatio;\n\t\t}\n\n\t\treturn {\n\t\t\twidth: Math.round( targetSize.width ),\n\t\t\theight: Math.round( targetSize.height ),\n\t\t\twidthPercents: Math.min( Math.round( state.originalWidthPercents / state.originalWidth * targetSize.width * 100 ) / 100, 100 )\n\t\t};\n\t}\n\n\t/**\n\t * Obtains the resize host.\n\t *\n\t * Resize host is an object that receives dimensions which are the result of resizing.\n\t *\n\t * @protected\n\t * @returns {HTMLElement}\n\t */\n\t_getResizeHost() {\n\t\tconst widgetWrapper = this._domResizerWrapper.parentElement;\n\n\t\treturn this._options.getResizeHost( widgetWrapper );\n\t}\n\n\t/**\n\t * Obtains the handle host.\n\t *\n\t * Handle host is an object that the handles are aligned to.\n\t *\n\t * Handle host will not always be an entire widget itself. Take an image as an example. The image widget\n\t * contains an image and a caption. Only the image should be surrounded with handles.\n\t *\n\t * @protected\n\t * @returns {HTMLElement}\n\t */\n\t_getHandleHost() {\n\t\tconst widgetWrapper = this._domResizerWrapper.parentElement;\n\n\t\treturn this._options.getHandleHost( widgetWrapper );\n\t}\n\n\t/**\n\t * Renders the resize handles in the DOM.\n\t *\n\t * @private\n\t * @param {HTMLElement} domElement The resizer wrapper.\n\t */\n\t_appendHandles( domElement ) {\n\t\tconst resizerPositions = [ 'top-left', 'top-right', 'bottom-right', 'bottom-left' ];\n\n\t\tfor ( const currentPosition of resizerPositions ) {\n\t\t\tdomElement.appendChild( ( new Template( {\n\t\t\t\ttag: 'div',\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: `ck-widget__resizer__handle ${ getResizerClass( currentPosition ) }`\n\t\t\t\t}\n\t\t\t} ).render() ) );\n\t\t}\n\t}\n\n\t/**\n\t * Sets up the {@link #_sizeUI} property and adds it to the passed `domElement`.\n\t *\n\t * @private\n\t * @param {HTMLElement} domElement\n\t */\n\t_appendSizeUI( domElement ) {\n\t\tconst sizeUI = new SizeView();\n\n\t\t// Make sure icon#element is rendered before passing to appendChild().\n\t\tsizeUI.render();\n\n\t\tthis._sizeUI = sizeUI;\n\n\t\tdomElement.appendChild( sizeUI.element );\n\t}\n\n\t/**\n\t * @event begin\n\t */\n\n\t/**\n\t * @event updateSize\n\t */\n\n\t/**\n\t * @event commit\n\t */\n\n\t/**\n\t * @event cancel\n\t */\n}\n\nmix( Resizer, ObservableMixin );\n\n/**\n * A view displaying the proposed new element size during the resizing.\n *\n * @extends {module:ui/view~View}\n */\nclass SizeView extends View {\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-size-view',\n\t\t\t\t\tbind.to( 'activeHandlePosition', value => value ? `ck-orientation-${ value }` : '' )\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\tdisplay: bind.if( 'isVisible', 'none', visible => !visible )\n\t\t\t\t}\n\t\t\t},\n\t\t\tchildren: [ {\n\t\t\t\ttext: bind.to( 'label' )\n\t\t\t} ]\n\t\t} );\n\t}\n\n\tbindToState( options, resizerState ) {\n\t\tthis.bind( 'isVisible' ).to( resizerState, 'proposedWidth', resizerState, 'proposedHeight', ( width, height ) =>\n\t\t\twidth !== null && height !== null );\n\n\t\tthis.bind( 'label' ).to(\n\t\t\tresizerState, 'proposedHandleHostWidth',\n\t\t\tresizerState, 'proposedHandleHostHeight',\n\t\t\tresizerState, 'proposedWidthPercents',\n\t\t\t( width, height, widthPercents ) => {\n\t\t\t\tif ( options.unit === 'px' ) {\n\t\t\t\t\treturn `${ width }×${ height }`;\n\t\t\t\t} else {\n\t\t\t\t\treturn `${ widthPercents }%`;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.bind( 'activeHandlePosition' ).to( resizerState );\n\t}\n\n\tdismiss() {\n\t\tthis.unbind();\n\t\tthis.isVisible = false;\n\t}\n}\n\n// @private\n// @param {String} resizerPosition Expected resizer position like `\"top-left\"`, `\"bottom-right\"`.\n// @returns {String} A prefixed HTML class name for the resizer element\nfunction getResizerClass( resizerPosition ) {\n\treturn `ck-widget__resizer__handle-${ resizerPosition }`;\n}\n\nfunction extractCoordinates( event ) {\n\treturn {\n\t\tx: event.pageX,\n\t\ty: event.pageY\n\t};\n}\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module widget/widgetresize\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Resizer from './widgetresize/resizer';\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { throttle } from 'lodash-es';\n\nimport '../theme/widgetresize.css';\n\n/**\n * The widget resize feature plugin.\n *\n * Use the {@link module:widget/widgetresize~WidgetResize#attachTo} method to create a resizer for the specified widget.\n *\n * @extends module:core/plugin~Plugin\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class WidgetResize extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'WidgetResize';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\t/**\n\t\t * The currently visible resizer.\n\t\t *\n\t\t * @protected\n\t\t * @observable\n\t\t * @member {module:widget/widgetresize/resizer~Resizer|null} #_visibleResizer\n\t\t */\n\t\tthis.set( '_visibleResizer', null );\n\n\t\t/**\n\t\t * References an active resizer.\n\t\t *\n\t\t * Active resizer means a resizer which handle is actively used by the end user.\n\t\t *\n\t\t * @protected\n\t\t * @observable\n\t\t * @member {module:widget/widgetresize/resizer~Resizer|null} #_activeResizer\n\t\t */\n\t\tthis.set( '_activeResizer', null );\n\n\t\t/**\n\t\t * A map of resizers created using this plugin instance.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<module:engine/view/containerelement~ContainerElement, module:widget/widgetresize/resizer~Resizer>}\n\t\t */\n\t\tthis._resizers = new Map();\n\n\t\tconst domDocument = global.window.document;\n\n\t\tthis.editor.model.schema.setAttributeProperties( 'width', {\n\t\t\tisFormatting: true\n\t\t} );\n\n\t\tthis._observer = Object.create( DomEmitterMixin );\n\n\t\tthis._observer.listenTo( domDocument, 'mousedown', this._mouseDownListener.bind( this ) );\n\n\t\tthis._observer.listenTo( domDocument, 'mousemove', this._mouseMoveListener.bind( this ) );\n\n\t\tthis._observer.listenTo( domDocument, 'mouseup', this._mouseUpListener.bind( this ) );\n\n\t\tconst redrawFocusedResizer = () => {\n\t\t\tif ( this._visibleResizer ) {\n\t\t\t\tthis._visibleResizer.redraw();\n\t\t\t}\n\t\t};\n\n\t\tconst redrawFocusedResizerThrottled = throttle( redrawFocusedResizer, 200 ); // 5fps\n\n\t\t// Redraws occurring upon a change of visible resizer must not be throttled, as it is crucial for the initial\n\t\t// render. Without it the resizer frame would be misaligned with resizing host for a fraction of second.\n\t\tthis.on( 'change:_visibleResizer', redrawFocusedResizer );\n\n\t\t// Redrawing on any change of the UI of the editor (including content changes).\n\t\tthis.editor.ui.on( 'update', redrawFocusedResizerThrottled );\n\n\t\t// Resizers need to be redrawn upon window resize, because new window might shrink resize host.\n\t\tthis._observer.listenTo( global.window, 'resize', redrawFocusedResizerThrottled );\n\n\t\tconst viewSelection = this.editor.editing.view.document.selection;\n\n\t\tviewSelection.on( 'change', () => {\n\t\t\tconst selectedElement = viewSelection.getSelectedElement();\n\n\t\t\tthis._visibleResizer = this._getResizerByViewElement( selectedElement ) || null;\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tthis._observer.stopListening();\n\n\t\tfor ( const resizer of this._resizers.values() ) {\n\t\t\tresizer.destroy();\n\t\t}\n\t}\n\n\t/**\n\t * @param {module:widget/widgetresize~ResizerOptions} [options] Resizer options.\n\t * @returns {module:widget/widgetresize/resizer~Resizer}\n\t */\n\tattachTo( options ) {\n\t\tconst resizer = new Resizer( options );\n\t\tconst plugins = this.editor.plugins;\n\n\t\tresizer.attach();\n\n\t\tif ( plugins.has( 'WidgetToolbarRepository' ) ) {\n\t\t\t// Hiding widget toolbar to improve the performance\n\t\t\t// (https://github.com/ckeditor/ckeditor5-widget/pull/112#issuecomment-564528765).\n\t\t\tconst widgetToolbarRepository = plugins.get( 'WidgetToolbarRepository' );\n\n\t\t\tresizer.on( 'begin', () => {\n\t\t\t\twidgetToolbarRepository.forceDisabled( 'resize' );\n\t\t\t}, { priority: 'lowest' } );\n\n\t\t\tresizer.on( 'cancel', () => {\n\t\t\t\twidgetToolbarRepository.clearForceDisabled( 'resize' );\n\t\t\t}, { priority: 'highest' } );\n\n\t\t\tresizer.on( 'commit', () => {\n\t\t\t\twidgetToolbarRepository.clearForceDisabled( 'resize' );\n\t\t\t}, { priority: 'highest' } );\n\t\t}\n\n\t\tthis._resizers.set( options.viewElement, resizer );\n\n\t\treturn resizer;\n\t}\n\n\t/**\n\t * Returns a resizer that contains a given resize handle.\n\t *\n\t * @protected\n\t * @param {HTMLElement} domResizeHandle\n\t * @returns {module:widget/widgetresize/resizer~Resizer}\n\t */\n\t_getResizerByHandle( domResizeHandle ) {\n\t\tfor ( const resizer of this._resizers.values() ) {\n\t\t\tif ( resizer.containsHandle( domResizeHandle ) ) {\n\t\t\t\treturn resizer;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns a resizer created for a given view element (widget element).\n\t *\n\t * @protected\n\t * @param {module:engine/view/containerelement~ContainerElement} viewElement\n\t * @returns {module:widget/widgetresize/resizer~Resizer}\n\t */\n\t_getResizerByViewElement( viewElement ) {\n\t\treturn this._resizers.get( viewElement );\n\t}\n\n\t/**\n\t * @protected\n\t * @param {module:utils/eventinfo~EventInfo} event\n\t * @param {Event} domEventData Native DOM event.\n\t */\n\t_mouseDownListener( event, domEventData ) {\n\t\tif ( !Resizer.isResizeHandle( domEventData.target ) ) {\n\t\t\treturn;\n\t\t}\n\t\tconst resizeHandle = domEventData.target;\n\t\tthis._activeResizer = this._getResizerByHandle( resizeHandle );\n\t\tif ( this._activeResizer ) {\n\t\t\tthis._activeResizer.begin( resizeHandle );\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {module:utils/eventinfo~EventInfo} event\n\t * @param {Event} domEventData Native DOM event.\n\t */\n\t_mouseMoveListener( event, domEventData ) {\n\t\tif ( this._activeResizer ) {\n\t\t\tthis._activeResizer.updateSize( domEventData );\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\t_mouseUpListener() {\n\t\tif ( this._activeResizer ) {\n\t\t\tthis._activeResizer.commit();\n\t\t\tthis._activeResizer = null;\n\t\t}\n\t}\n}\n\nmix( WidgetResize, ObservableMixin );\n\n/**\n * Interface describing a resizer. It allows to specify the resizing host, custom logic for calculating aspect ratio, etc.\n *\n * @interface ResizerOptions\n */\n\n/**\n * Editor instance associated with the resizer.\n *\n * @member {module:core/editor/editor~Editor} module:widget/widgetresize~ResizerOptions#editor\n */\n\n/**\n * @member {module:engine/model/element~Element} module:widget/widgetresize~ResizerOptions#modelElement\n */\n\n/**\n * A view of an element to be resized. Typically it's the main widget's view instance.\n *\n * @member {module:engine/view/containerelement~ContainerElement} module:widget/widgetresize~ResizerOptions#viewElement\n */\n\n/**\n * A callback to be executed once the resizing process is done.\n *\n * It receives a `Number` (`newValue`) as a parameter.\n *\n * For example, {@link module:image/imageresize~ImageResize} uses it to execute the image resize command\n * which puts the new value into the model.\n *\n * ```js\n * {\n *\teditor,\n *\tmodelElement: data.item,\n *\tviewElement: widget,\n *\n *\tonCommit( newValue ) {\n *\t\teditor.execute( 'imageResize', { width: newValue } );\n *\t}\n * };\n * ```\n *\n *\n * @member {Function} module:widget/widgetresize~ResizerOptions#onCommit\n */\n\n/**\n * @member {Function} module:widget/widgetresize~ResizerOptions#getResizeHost\n */\n\n/**\n * @member {Function} module:widget/widgetresize~ResizerOptions#isCentered\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageresize/imageresizecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { isImage } from '../image/utils';\n\n/**\n * The image resize command. Currently, it supports only the width attribute.\n *\n * @extends module:core/command~Command\n */\nexport default class ImageResizeCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst element = this.editor.model.document.selection.getSelectedElement();\n\n\t\tthis.isEnabled = isImage( element );\n\n\t\tif ( !element || !element.hasAttribute( 'width' ) ) {\n\t\t\tthis.value = null;\n\t\t} else {\n\t\t\tthis.value = {\n\t\t\t\twidth: element.getAttribute( 'width' ),\n\t\t\t\theight: null\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t *\t\t// Sets the width to 50%:\n\t *\t\teditor.execute( 'imageResize', { width: '50%' } );\n\t *\n\t *\t\t// Removes the width attribute:\n\t *\t\teditor.execute( 'imageResize', { width: null } );\n\t *\n\t * @param {Object} options\n\t * @param {String|null} options.width The new width of the image.\n\t * @fires execute\n\t */\n\texecute( options ) {\n\t\tconst model = this.editor.model;\n\t\tconst imageElement = model.document.selection.getSelectedElement();\n\n\t\tmodel.change( writer => {\n\t\t\twriter.setAttribute( 'width', options.width, imageElement );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageresize\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport WidgetResize from '@ckeditor/ckeditor5-widget/src/widgetresize';\nimport ImageResizeCommand from './imageresize/imageresizecommand';\n\nimport '../theme/imageresize.css';\n\n/**\n * The image resize plugin.\n *\n * It adds a possibility to resize each image using handles.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageResize extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ WidgetResize ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageResize';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst command = new ImageResizeCommand( editor );\n\n\t\tthis._registerSchema();\n\t\tthis._registerConverters();\n\n\t\teditor.commands.add( 'imageResize', command );\n\n\t\teditor.editing.downcastDispatcher.on( 'insert:image', ( evt, data, conversionApi ) => {\n\t\t\tconst widget = conversionApi.mapper.toViewElement( data.item );\n\n\t\t\tconst resizer = editor.plugins\n\t\t\t\t.get( WidgetResize )\n\t\t\t\t.attachTo( {\n\t\t\t\t\tunit: editor.config.get( 'image.resizeUnit' ) || '%',\n\n\t\t\t\t\tmodelElement: data.item,\n\t\t\t\t\tviewElement: widget,\n\t\t\t\t\teditor,\n\n\t\t\t\t\tgetHandleHost( domWidgetElement ) {\n\t\t\t\t\t\treturn domWidgetElement.querySelector( 'img' );\n\t\t\t\t\t},\n\t\t\t\t\tgetResizeHost( domWidgetElement ) {\n\t\t\t\t\t\treturn domWidgetElement;\n\t\t\t\t\t},\n\t\t\t\t\t// TODO consider other positions.\n\t\t\t\t\tisCentered() {\n\t\t\t\t\t\tconst imageStyle = data.item.getAttribute( 'imageStyle' );\n\n\t\t\t\t\t\treturn !imageStyle || imageStyle == 'full' || imageStyle == 'alignCenter';\n\t\t\t\t\t},\n\n\t\t\t\t\tonCommit( newValue ) {\n\t\t\t\t\t\teditor.execute( 'imageResize', { width: newValue } );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\tresizer.on( 'updateSize', () => {\n\t\t\t\tif ( !widget.hasClass( 'image_resized' ) ) {\n\t\t\t\t\teditor.editing.view.change( writer => {\n\t\t\t\t\t\twriter.addClass( 'image_resized', widget );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tresizer.bind( 'isEnabled' ).to( command );\n\t\t}, { priority: 'low' } );\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_registerSchema() {\n\t\tthis.editor.model.schema.extend( 'image', {\n\t\t\tallowAttributes: 'width'\n\t\t} );\n\t}\n\n\t/**\n\t * Registers image resize converters.\n\t *\n\t * @private\n\t */\n\t_registerConverters() {\n\t\tconst editor = this.editor;\n\n\t\t// Dedicated converter to propagate image's attribute to the img tag.\n\t\teditor.conversion.for( 'downcast' ).add( dispatcher =>\n\t\t\tdispatcher.on( 'attribute:width:image', ( evt, data, conversionApi ) => {\n\t\t\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst viewWriter = conversionApi.writer;\n\t\t\t\tconst figure = conversionApi.mapper.toViewElement( data.item );\n\n\t\t\t\tif ( data.attributeNewValue !== null ) {\n\t\t\t\t\tviewWriter.setStyle( 'width', data.attributeNewValue, figure );\n\t\t\t\t\tviewWriter.addClass( 'image_resized', figure );\n\t\t\t\t} else {\n\t\t\t\t\tviewWriter.removeStyle( 'width', figure );\n\t\t\t\t\tviewWriter.removeClass( 'image_resized', figure );\n\t\t\t\t}\n\t\t\t} )\n\t\t);\n\n\t\teditor.conversion.for( 'upcast' )\n\t\t\t.attributeToAttribute( {\n\t\t\t\tview: {\n\t\t\t\t\tname: 'figure',\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\twidth: /.+/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmodel: {\n\t\t\t\t\tkey: 'width',\n\t\t\t\t\tvalue: viewElement => viewElement.getStyle( 'width' )\n\t\t\t\t}\n\t\t\t} );\n\t}\n}\n\n/**\n * The available options are `'px'` or `'%'`.\n *\n * Determines the size unit applied to the resized image.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\timage: {\n *\t\t\t\t\tresizeUnit: 'px'\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n *\n * This option is used by the {@link module:image/imageresize~ImageResize} feature.\n *\n * @default '%'\n * @member {String} module:image/image~ImageConfig#resizeUnit\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagestyle/imagestylecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { isImage } from '../image/utils';\n\n/**\n * The image style command. It is used to apply different image styles.\n *\n * @extends module:core/command~Command\n */\nexport default class ImageStyleCommand extends Command {\n\t/**\n\t * Creates an instance of the image style command. Each command instance is handling one style.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t * @param {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>} styles The styles that this command supports.\n\t */\n\tconstructor( editor, styles ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The name of the default style, if it is present. If there is no default style, it defaults to `false`.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Boolean|String}\n\t\t */\n\t\tthis.defaultStyle = false;\n\n\t\t/**\n\t\t * A style handled by this command.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>} #styles\n\t\t */\n\t\tthis.styles = styles.reduce( ( styles, style ) => {\n\t\t\tstyles[ style.name ] = style;\n\n\t\t\tif ( style.isDefault ) {\n\t\t\t\tthis.defaultStyle = style.name;\n\t\t\t}\n\n\t\t\treturn styles;\n\t\t}, {} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst element = this.editor.model.document.selection.getSelectedElement();\n\n\t\tthis.isEnabled = isImage( element );\n\n\t\tif ( !element ) {\n\t\t\tthis.value = false;\n\t\t} else if ( element.hasAttribute( 'imageStyle' ) ) {\n\t\t\tconst attributeValue = element.getAttribute( 'imageStyle' );\n\t\t\tthis.value = this.styles[ attributeValue ] ? attributeValue : false;\n\t\t} else {\n\t\t\tthis.value = this.defaultStyle;\n\t\t}\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t *\t\teditor.execute( 'imageStyle', { value: 'side' } );\n\t *\n\t * @param {Object} options\n\t * @param {String} options.value The name of the style (based on the\n\t * {@link module:image/image~ImageConfig#styles `image.styles`} configuration option).\n\t * @fires execute\n\t */\n\texecute( options ) {\n\t\tconst styleName = options.value;\n\n\t\tconst model = this.editor.model;\n\t\tconst imageElement = model.document.selection.getSelectedElement();\n\n\t\tmodel.change( writer => {\n\t\t\t// Default style means that there is no `imageStyle` attribute in the model.\n\t\t\t// https://github.com/ckeditor/ckeditor5-image/issues/147\n\t\t\tif ( this.styles[ styleName ].isDefault ) {\n\t\t\t\twriter.removeAttribute( 'imageStyle', imageElement );\n\t\t\t} else {\n\t\t\t\twriter.setAttribute( 'imageStyle', styleName, imageElement );\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * @module image/imagestyle/converters\n */\n\n/**\n * Returns a converter for the `imageStyle` attribute. It can be used for adding, changing and removing the attribute.\n *\n * @param {Object} styles An object containing available styles. See {@link module:image/imagestyle/imagestyleediting~ImageStyleFormat}\n * for more details.\n * @returns {Function} A model-to-view attribute converter.\n */\nexport function modelToViewStyleAttribute( styles ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if there is class name associated with given value.\n\t\tconst newStyle = getStyleByName( data.attributeNewValue, styles );\n\t\tconst oldStyle = getStyleByName( data.attributeOldValue, styles );\n\n\t\tconst viewElement = conversionApi.mapper.toViewElement( data.item );\n\t\tconst viewWriter = conversionApi.writer;\n\n\t\tif ( oldStyle ) {\n\t\t\tviewWriter.removeClass( oldStyle.className, viewElement );\n\t\t}\n\n\t\tif ( newStyle ) {\n\t\t\tviewWriter.addClass( newStyle.className, viewElement );\n\t\t}\n\t};\n}\n\n/**\n * Returns a view-to-model converter converting image CSS classes to a proper value in the model.\n *\n * @param {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>} styles The styles for which the converter is created.\n * @returns {Function} A view-to-model converter.\n */\nexport function viewToModelStyleAttribute( styles ) {\n\t// Convert only non–default styles.\n\tconst filteredStyles = styles.filter( style => !style.isDefault );\n\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( !data.modelRange ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewFigureElement = data.viewItem;\n\t\tconst modelImageElement = first( data.modelRange.getItems() );\n\n\t\t// Check if `imageStyle` attribute is allowed for current element.\n\t\tif ( !conversionApi.schema.checkAttribute( modelImageElement, 'imageStyle' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Convert style one by one.\n\t\tfor ( const style of filteredStyles ) {\n\t\t\t// Try to consume class corresponding with style.\n\t\t\tif ( conversionApi.consumable.consume( viewFigureElement, { classes: style.className } ) ) {\n\t\t\t\t// And convert this style to model attribute.\n\t\t\t\tconversionApi.writer.setAttribute( 'imageStyle', style.name, modelImageElement );\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Returns the style with a given `name` from an array of styles.\n//\n// @param {String} name\n// @param {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat> } styles\n// @returns {module:image/imagestyle/imagestyleediting~ImageStyleFormat|undefined}\nfunction getStyleByName( name, styles ) {\n\tfor ( const style of styles ) {\n\t\tif ( style.name === name ) {\n\t\t\treturn style;\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagestyle/utils\n */\n\n/* globals console */\n\nimport fullWidthIcon from '@ckeditor/ckeditor5-core/theme/icons/object-full-width.svg';\nimport leftIcon from '@ckeditor/ckeditor5-core/theme/icons/object-left.svg';\nimport centerIcon from '@ckeditor/ckeditor5-core/theme/icons/object-center.svg';\nimport rightIcon from '@ckeditor/ckeditor5-core/theme/icons/object-right.svg';\nimport { attachLinkToDocumentation } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Default image styles provided by the plugin that can be referred in the\n * {@link module:image/image~ImageConfig#styles} configuration.\n *\n * Among them, 2 default semantic content styles are available:\n *\n * * `full` is a full–width image without any CSS class,\n * * `side` is a side image styled with the `image-style-side` CSS class.\n *\n * There are also 3 styles focused on formatting:\n *\n * * `alignLeft` aligns the image to the left using the `image-style-align-left` class,\n * * `alignCenter` centers the image using the `image-style-align-center` class,\n * * `alignRight` aligns the image to the right using the `image-style-align-right` class,\n *\n * @member {Object.<String,Object>}\n */\nconst defaultStyles = {\n\t// This option is equal to the situation when no style is applied.\n\tfull: {\n\t\tname: 'full',\n\t\ttitle: 'Full size image',\n\t\ticon: fullWidthIcon,\n\t\tisDefault: true\n\t},\n\n\t// This represents a side image.\n\tside: {\n\t\tname: 'side',\n\t\ttitle: 'Side image',\n\t\ticon: rightIcon,\n\t\tclassName: 'image-style-side'\n\t},\n\n\t// This style represents an image aligned to the left.\n\talignLeft: {\n\t\tname: 'alignLeft',\n\t\ttitle: 'Left aligned image',\n\t\ticon: leftIcon,\n\t\tclassName: 'image-style-align-left'\n\t},\n\n\t// This style represents a centered image.\n\talignCenter: {\n\t\tname: 'alignCenter',\n\t\ttitle: 'Centered image',\n\t\ticon: centerIcon,\n\t\tclassName: 'image-style-align-center'\n\t},\n\n\t// This style represents an image aligned to the right.\n\talignRight: {\n\t\tname: 'alignRight',\n\t\ttitle: 'Right aligned image',\n\t\ticon: rightIcon,\n\t\tclassName: 'image-style-align-right'\n\t}\n};\n\n/**\n * Default image style icons provided by the plugin that can be referred in the\n * {@link module:image/image~ImageConfig#styles} configuration.\n *\n * There are 4 icons available: `'full'`, `'left'`, `'center'` and `'right'`.\n *\n * @member {Object.<String, String>}\n */\nconst defaultIcons = {\n\tfull: fullWidthIcon,\n\tleft: leftIcon,\n\tright: rightIcon,\n\tcenter: centerIcon\n};\n\n/**\n * Returns a {@link module:image/image~ImageConfig#styles} array with items normalized in the\n * {@link module:image/imagestyle/imagestyleediting~ImageStyleFormat} format and a complete `icon` markup for each style.\n *\n * @returns {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>}\n */\nexport function normalizeImageStyles( configuredStyles = [] ) {\n\treturn configuredStyles.map( _normalizeStyle );\n}\n\n// Normalizes an image style provided in the {@link module:image/image~ImageConfig#styles}\n// and returns it in a {@link module:image/imagestyle/imagestyleediting~ImageStyleFormat}.\n//\n// @param {Object} style\n// @returns {@link module:image/imagestyle/imagestyleediting~ImageStyleFormat}\nfunction _normalizeStyle( style ) {\n\t// Just the name of the style has been passed.\n\tif ( typeof style == 'string' ) {\n\t\tconst styleName = style;\n\n\t\t// If it's one of the defaults, just use it.\n\t\tif ( defaultStyles[ styleName ] ) {\n\t\t\t// Clone the style to avoid overriding defaults.\n\t\t\tstyle = Object.assign( {}, defaultStyles[ styleName ] );\n\t\t}\n\t\t// If it's just a name but none of the defaults, warn because probably it's a mistake.\n\t\telse {\n\t\t\tconsole.warn(\n\t\t\t\tattachLinkToDocumentation( 'image-style-not-found: There is no such image style of given name.' ),\n\t\t\t\t{ name: styleName }\n\t\t\t);\n\n\t\t\t// Normalize the style anyway to prevent errors.\n\t\t\tstyle = {\n\t\t\t\tname: styleName\n\t\t\t};\n\t\t}\n\t}\n\t// If an object style has been passed and if the name matches one of the defaults,\n\t// extend it with defaults – the user wants to customize a default style.\n\t// Note: Don't override the user–defined style object, clone it instead.\n\telse if ( defaultStyles[ style.name ] ) {\n\t\tconst defaultStyle = defaultStyles[ style.name ];\n\t\tconst extendedStyle = Object.assign( {}, style );\n\n\t\tfor ( const prop in defaultStyle ) {\n\t\t\tif ( !style.hasOwnProperty( prop ) ) {\n\t\t\t\textendedStyle[ prop ] = defaultStyle[ prop ];\n\t\t\t}\n\t\t}\n\n\t\tstyle = extendedStyle;\n\t}\n\n\t// If an icon is defined as a string and correspond with a name\n\t// in default icons, use the default icon provided by the plugin.\n\tif ( typeof style.icon == 'string' && defaultIcons[ style.icon ] ) {\n\t\tstyle.icon = defaultIcons[ style.icon ];\n\t}\n\n\treturn style;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagestyle/imagestyleediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageStyleCommand from './imagestylecommand';\nimport { viewToModelStyleAttribute, modelToViewStyleAttribute } from './converters';\nimport { normalizeImageStyles } from './utils';\n\n/**\n * The image style engine plugin. It sets the default configuration, creates converters and registers\n * {@link module:image/imagestyle/imagestylecommand~ImageStyleCommand ImageStyleCommand}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageStyleEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageStyleEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\t\tconst data = editor.data;\n\t\tconst editing = editor.editing;\n\n\t\t// Define default configuration.\n\t\teditor.config.define( 'image.styles', [ 'full', 'side' ] );\n\n\t\t// Get configuration.\n\t\tconst styles = normalizeImageStyles( editor.config.get( 'image.styles' ) );\n\n\t\t// Allow imageStyle attribute in image.\n\t\t// We could call it 'style' but https://github.com/ckeditor/ckeditor5-engine/issues/559.\n\t\tschema.extend( 'image', { allowAttributes: 'imageStyle' } );\n\n\t\t// Converters for imageStyle attribute from model to view.\n\t\tconst modelToViewConverter = modelToViewStyleAttribute( styles );\n\t\tediting.downcastDispatcher.on( 'attribute:imageStyle:image', modelToViewConverter );\n\t\tdata.downcastDispatcher.on( 'attribute:imageStyle:image', modelToViewConverter );\n\n\t\t// Converter for figure element from view to model.\n\t\tdata.upcastDispatcher.on( 'element:figure', viewToModelStyleAttribute( styles ), { priority: 'low' } );\n\n\t\t// Register imageStyle command.\n\t\teditor.commands.add( 'imageStyle', new ImageStyleCommand( editor, styles ) );\n\t}\n}\n\n/**\n * The image style format descriptor.\n *\n *\t\timport fullSizeIcon from 'path/to/icon.svg';\n *\n *\t\tconst imageStyleFormat = {\n *\t\t\tname: 'fullSize',\n *\t\t\ticon: fullSizeIcon,\n *\t\t\ttitle: 'Full size image',\n *\t\t\tclassName: 'image-full-size'\n *\t\t}\n *\n * @typedef {Object} module:image/imagestyle/imagestyleediting~ImageStyleFormat\n *\n * @property {String} name The unique name of the style. It will be used to:\n *\n * * Store the chosen style in the model by setting the `imageStyle` attribute of the `<image>` element.\n * * As a value of the {@link module:image/imagestyle/imagestylecommand~ImageStyleCommand#execute `imageStyle` command},\n * * when registering a button for each of the styles (`'imageStyle:{name}'`) in the\n * {@link module:ui/componentfactory~ComponentFactory UI components factory} (this functionality is provided by the\n * {@link module:image/imagestyle/imagestyleui~ImageStyleUI} plugin).\n *\n * @property {Boolean} [isDefault] When set, the style will be used as the default one.\n * A default style does not apply any CSS class to the view element.\n *\n * @property {String} icon One of the following to be used when creating the style's button:\n *\n * * An SVG icon source (as an XML string).\n * * One of {@link module:image/imagestyle/utils~defaultIcons} to use a default icon provided by the plugin.\n *\n * @property {String} title The style's title.\n *\n * @property {String} className The CSS class used to represent the style in the view.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagestyle/imagestyleui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport { normalizeImageStyles } from './utils';\n\nimport '../../theme/imagestyle.css';\n\n/**\n * The image style UI plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageStyleUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageStyleUI';\n\t}\n\n\t/**\n\t * Returns the default localized style titles provided by the plugin.\n\t *\n\t * The following localized titles corresponding with\n\t * {@link module:image/imagestyle/utils~defaultStyles} are available:\n\t *\n\t * * `'Full size image'`,\n\t * * `'Side image'`,\n\t * * `'Left aligned image'`,\n\t * * `'Centered image'`,\n\t * * `'Right aligned image'`\n\t *\n\t * @returns {Object.<String,String>}\n\t */\n\tget localizedDefaultStylesTitles() {\n\t\tconst t = this.editor.t;\n\n\t\treturn {\n\t\t\t'Full size image': t( 'Full size image' ),\n\t\t\t'Side image': t( 'Side image' ),\n\t\t\t'Left aligned image': t( 'Left aligned image' ),\n\t\t\t'Centered image': t( 'Centered image' ),\n\t\t\t'Right aligned image': t( 'Right aligned image' )\n\t\t};\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst configuredStyles = editor.config.get( 'image.styles' );\n\n\t\tconst translatedStyles = translateStyles( normalizeImageStyles( configuredStyles ), this.localizedDefaultStylesTitles );\n\n\t\tfor ( const style of translatedStyles ) {\n\t\t\tthis._createButton( style );\n\t\t}\n\t}\n\n\t/**\n\t * Creates a button for each style and stores it in the editor {@link module:ui/componentfactory~ComponentFactory ComponentFactory}.\n\t *\n\t * @private\n\t * @param {module:image/imagestyle/imagestyleediting~ImageStyleFormat} style\n\t */\n\t_createButton( style ) {\n\t\tconst editor = this.editor;\n\n\t\tconst componentName = `imageStyle:${ style.name }`;\n\n\t\teditor.ui.componentFactory.add( componentName, locale => {\n\t\t\tconst command = editor.commands.get( 'imageStyle' );\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel: style.title,\n\t\t\t\ticon: style.icon,\n\t\t\t\ttooltip: true,\n\t\t\t\tisToggleable: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\t\t\tview.bind( 'isOn' ).to( command, 'value', value => value === style.name );\n\n\t\t\tthis.listenTo( view, 'execute', () => {\n\t\t\t\teditor.execute( 'imageStyle', { value: style.name } );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n\n/**\n * Returns the translated `title` from the passed styles array.\n *\n * @param {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>} styles\n * @param titles\n * @returns {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>}\n */\nfunction translateStyles( styles, titles ) {\n\tfor ( const style of styles ) {\n\t\t// Localize the titles of the styles, if a title corresponds with\n\t\t// a localized default provided by the plugin.\n\t\tif ( titles[ style.title ] ) {\n\t\t\tstyle.title = titles[ style.title ];\n\t\t}\n\t}\n\n\treturn styles;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagestyle\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageStyleEditing from './imagestyle/imagestyleediting';\nimport ImageStyleUI from './imagestyle/imagestyleui';\n\n/**\n * The image style plugin.\n *\n * For a detailed overview, check the {@glink features/image#image-styles image styles} documentation.\n *\n * This is a \"glue\" plugin which loads the {@link module:image/imagestyle/imagestyleediting~ImageStyleEditing}\n * and {@link module:image/imagestyle/imagestyleui~ImageStyleUI} plugins.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageStyle extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageStyleEditing, ImageStyleUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageStyle';\n\t}\n}\n\n/**\n * Available image styles.\n *\n * The default value is:\n *\n *\t\tconst imageConfig = {\n *\t\t\tstyles: [ 'full', 'side' ]\n *\t\t};\n *\n * which configures two default styles:\n *\n *  * the \"full\" style which does not apply any class, e.g. for images styled to span 100% width of the content,\n *  * the \"side\" style with the `.image-style-side` CSS class.\n *\n * See {@link module:image/imagestyle/utils~defaultStyles} to learn more about default\n * styles provided by the image feature.\n *\n * The {@link module:image/imagestyle/utils~defaultStyles default styles} can be customized,\n * e.g. to change the icon, title or CSS class of the style. The feature also provides several\n * {@link module:image/imagestyle/utils~defaultIcons default icons} to choose from.\n *\n *\t\timport customIcon from 'custom-icon.svg';\n *\n *\t\t// ...\n *\n *\t\tconst imageConfig = {\n *\t\t\tstyles: [\n *\t\t\t\t// This will only customize the icon of the \"full\" style.\n *\t\t\t\t// Note: 'right' is one of default icons provided by the feature.\n *\t\t\t\t{ name: 'full', icon: 'right' },\n *\n *\t\t\t\t// This will customize the icon, title and CSS class of the default \"side\" style.\n *\t\t\t\t{ name: 'side', icon: customIcon, title: 'My side style', className: 'custom-side-image' }\n *\t\t\t]\n *\t\t};\n *\n * If none of the default styles is good enough, it is possible to define independent custom styles, too:\n *\n *\t\timport fullSizeIcon from '@ckeditor/ckeditor5-core/theme/icons/object-center.svg';\n *\t\timport sideIcon from '@ckeditor/ckeditor5-core/theme/icons/object-right.svg';\n *\n *\t\t// ...\n *\n *\t\tconst imageConfig = {\n *\t\t\tstyles: [\n *\t\t\t\t// A completely custom full size style with no class, used as a default.\n *\t\t\t\t{ name: 'fullSize', title: 'Full size', icon: fullSizeIcon, isDefault: true },\n *\n *\t\t\t\t{ name: 'side', title: 'To the side', icon: sideIcon, className: 'side-image' }\n *\t\t\t]\n *\t\t};\n *\n * Note: Setting `title` to one of {@link module:image/imagestyle/imagestyleui~ImageStyleUI#localizedDefaultStylesTitles}\n * will automatically translate it to the language of the editor.\n *\n * Read more about styling images in the {@glink features/image#image-styles Image styles guide}.\n *\n * The feature creates commands based on defined styles, so you can change the style of a selected image by executing\n * the following command:\n *\n *\t\teditor.execute( 'imageStyle' { value: 'side' } );\n *\n * The feature also creates buttons that execute the commands. So, assuming that you use the\n * default image styles setting, you can {@link module:image/image~ImageConfig#toolbar configure the image toolbar}\n * (or any other toolbar) to contain these options:\n *\n *\t\tconst imageConfig = {\n *\t\t\ttoolbar: [ 'imageStyle:full', 'imageStyle:side' ]\n *\t\t};\n *\n * @member {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>} module:image/image~ImageConfig#styles\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module widget/widgettoolbarrepository\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ContextualBalloon from '@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon';\nimport ToolbarView from '@ckeditor/ckeditor5-ui/src/toolbar/toolbarview';\nimport BalloonPanelView from '@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview';\nimport {\n\tisWidget,\n\tcenteredBalloonPositionForLongWidgets\n} from './utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Widget toolbar repository plugin. A central point for registering widget toolbars. This plugin handles the whole\n * toolbar rendering process and exposes a concise API.\n *\n * To add a toolbar for your widget use the {@link ~WidgetToolbarRepository#register `WidgetToolbarRepository#register()`} method.\n *\n * The following example comes from the {@link module:image/imagetoolbar~ImageToolbar} plugin:\n *\n * \t\tclass ImageToolbar extends Plugin {\n *\t\t\tstatic get requires() {\n *\t\t\t\treturn [ WidgetToolbarRepository ];\n *\t\t\t}\n *\n *\t\t\tafterInit() {\n *\t\t\t\tconst editor = this.editor;\n *\t\t\t\tconst widgetToolbarRepository = editor.plugins.get( WidgetToolbarRepository );\n *\n *\t\t\t\twidgetToolbarRepository.register( 'image', {\n *\t\t\t\t\titems: editor.config.get( 'image.toolbar' ),\n *\t\t\t\t\tgetRelatedElement: getSelectedImageWidget\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n */\nexport default class WidgetToolbarRepository extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ContextualBalloon ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'WidgetToolbarRepository';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Disables the default balloon toolbar for all widgets.\n\t\tif ( editor.plugins.has( 'BalloonToolbar' ) ) {\n\t\t\tconst balloonToolbar = editor.plugins.get( 'BalloonToolbar' );\n\n\t\t\tthis.listenTo( balloonToolbar, 'show', evt => {\n\t\t\t\tif ( isWidgetSelected( editor.editing.view.document.selection ) ) {\n\t\t\t\t\tevt.stop();\n\t\t\t\t}\n\t\t\t}, { priority: 'high' } );\n\t\t}\n\n\t\t/**\n\t\t * A map of toolbar definitions.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map.<String,module:widget/widgettoolbarrepository~WidgetRepositoryToolbarDefinition>} #_toolbarDefinitions\n\t\t */\n\t\tthis._toolbarDefinitions = new Map();\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tthis._balloon = this.editor.plugins.get( 'ContextualBalloon' );\n\n\t\tthis.on( 'change:isEnabled', () => {\n\t\t\tthis._updateToolbarsVisibility();\n\t\t} );\n\n\t\tthis.listenTo( editor.ui, 'update', () => {\n\t\t\tthis._updateToolbarsVisibility();\n\t\t} );\n\n\t\t// UI#update is not fired after focus is back in editor, we need to check if balloon panel should be visible.\n\t\tthis.listenTo( editor.ui.focusTracker, 'change:isFocused', () => {\n\t\t\tthis._updateToolbarsVisibility();\n\t\t}, { priority: 'low' } );\n\t}\n\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tfor ( const toolbarConfig of this._toolbarDefinitions.values() ) {\n\t\t\ttoolbarConfig.view.destroy();\n\t\t}\n\t}\n\n\t/**\n\t * Registers toolbar in the WidgetToolbarRepository. It renders it in the `ContextualBalloon` based on the value of the invoked\n\t * `getRelatedElement` function. Toolbar items are gathered from `items` array.\n\t * The balloon's CSS class is by default `ck-toolbar-container` and may be override with the `balloonClassName` option.\n\t *\n\t * Note: This method should be called in the {@link module:core/plugin~PluginInterface#afterInit `Plugin#afterInit()`}\n\t * callback (or later) to make sure that the given toolbar items were already registered by other plugins.\n\t *\n\t * @param {String} toolbarId An id for the toolbar. Used to\n\t * @param {Object} options\n\t * @param {String} [options.ariaLabel] Label used by assistive technologies to describe this toolbar element.\n\t * @param {Array.<String>} options.items Array of toolbar items.\n\t * @param {Function} options.getRelatedElement Callback which returns an element the toolbar should be attached to.\n\t * @param {String} [options.balloonClassName='ck-toolbar-container'] CSS class for the widget balloon.\n\t */\n\tregister( toolbarId, { ariaLabel, items, getRelatedElement, balloonClassName = 'ck-toolbar-container' } ) {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst toolbarView = new ToolbarView( editor.locale );\n\n\t\ttoolbarView.ariaLabel = ariaLabel || t( 'Widget toolbar' );\n\n\t\tif ( this._toolbarDefinitions.has( toolbarId ) ) {\n\t\t\t/**\n\t\t\t * Toolbar with the given id was already added.\n\t\t\t *\n\t\t\t * @error widget-toolbar-duplicated\n\t\t\t * @param toolbarId Toolbar id.\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'widget-toolbar-duplicated: Toolbar with the given id was already added.', this, { toolbarId } );\n\t\t}\n\n\t\ttoolbarView.fillFromConfig( items, editor.ui.componentFactory );\n\n\t\tthis._toolbarDefinitions.set( toolbarId, {\n\t\t\tview: toolbarView,\n\t\t\tgetRelatedElement,\n\t\t\tballoonClassName\n\t\t} );\n\t}\n\n\t/**\n\t * Iterates over stored toolbars and makes them visible or hidden.\n\t *\n\t * @private\n\t */\n\t_updateToolbarsVisibility() {\n\t\tlet maxRelatedElementDepth = 0;\n\t\tlet deepestRelatedElement = null;\n\t\tlet deepestToolbarDefinition = null;\n\n\t\tfor ( const definition of this._toolbarDefinitions.values() ) {\n\t\t\tconst relatedElement = definition.getRelatedElement( this.editor.editing.view.document.selection );\n\n\t\t\tif ( !this.isEnabled || !relatedElement ) {\n\t\t\t\tif ( this._isToolbarInBalloon( definition ) ) {\n\t\t\t\t\tthis._hideToolbar( definition );\n\t\t\t\t}\n\t\t\t} else if ( !this.editor.ui.focusTracker.isFocused ) {\n\t\t\t\tif ( this._isToolbarVisible( definition ) ) {\n\t\t\t\t\tthis._hideToolbar( definition );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst relatedElementDepth = relatedElement.getAncestors().length;\n\n\t\t\t\t// Many toolbars can express willingness to be displayed but they do not know about\n\t\t\t\t// each other. Figure out which toolbar is deepest in the view tree to decide which\n\t\t\t\t// should be displayed. For instance, if a selected image is inside a table cell, display\n\t\t\t\t// the ImageToolbar rather than the TableToolbar (#60).\n\t\t\t\tif ( relatedElementDepth > maxRelatedElementDepth ) {\n\t\t\t\t\tmaxRelatedElementDepth = relatedElementDepth;\n\t\t\t\t\tdeepestRelatedElement = relatedElement;\n\t\t\t\t\tdeepestToolbarDefinition = definition;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( deepestToolbarDefinition ) {\n\t\t\tthis._showToolbar( deepestToolbarDefinition, deepestRelatedElement );\n\t\t}\n\t}\n\n\t/**\n\t * Hides the given toolbar.\n\t *\n\t * @private\n\t * @param {module:widget/widgettoolbarrepository~WidgetRepositoryToolbarDefinition} toolbarDefinition\n\t */\n\t_hideToolbar( toolbarDefinition ) {\n\t\tthis._balloon.remove( toolbarDefinition.view );\n\t\tthis.stopListening( this._balloon, 'change:visibleView' );\n\t}\n\n\t/**\n\t * Shows up the toolbar if the toolbar is not visible.\n\t * Otherwise, repositions the toolbar's balloon when toolbar's view is the most top view in balloon stack.\n\t *\n\t * It might happen here that the toolbar's view is under another view. Then do nothing as the other toolbar view\n\t * should be still visible after the {@link module:core/editor/editorui~EditorUI#event:update}.\n\t *\n\t * @private\n\t * @param {module:widget/widgettoolbarrepository~WidgetRepositoryToolbarDefinition} toolbarDefinition\n\t * @param {module:engine/view/element~Element} relatedElement\n\t */\n\t_showToolbar( toolbarDefinition, relatedElement ) {\n\t\tif ( this._isToolbarVisible( toolbarDefinition ) ) {\n\t\t\trepositionContextualBalloon( this.editor, relatedElement );\n\t\t} else if ( !this._isToolbarInBalloon( toolbarDefinition ) ) {\n\t\t\tthis._balloon.add( {\n\t\t\t\tview: toolbarDefinition.view,\n\t\t\t\tposition: getBalloonPositionData( this.editor, relatedElement ),\n\t\t\t\tballoonClassName: toolbarDefinition.balloonClassName\n\t\t\t} );\n\n\t\t\t// Update toolbar position each time stack with toolbar view is switched to visible.\n\t\t\t// This is in a case target element has changed when toolbar was in invisible stack\n\t\t\t// e.g. target image was wrapped by a block quote.\n\t\t\t// See https://github.com/ckeditor/ckeditor5-widget/issues/92.\n\t\t\tthis.listenTo( this._balloon, 'change:visibleView', () => {\n\t\t\t\tfor ( const definition of this._toolbarDefinitions.values() ) {\n\t\t\t\t\tif ( this._isToolbarVisible( definition ) ) {\n\t\t\t\t\t\tconst relatedElement = definition.getRelatedElement( this.editor.editing.view.document.selection );\n\t\t\t\t\t\trepositionContextualBalloon( this.editor, relatedElement );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object} toolbar\n\t * @returns {Boolean}\n\t */\n\t_isToolbarVisible( toolbar ) {\n\t\treturn this._balloon.visibleView === toolbar.view;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object} toolbar\n\t * @returns {Boolean}\n\t */\n\t_isToolbarInBalloon( toolbar ) {\n\t\treturn this._balloon.hasView( toolbar.view );\n\t}\n}\n\nfunction repositionContextualBalloon( editor, relatedElement ) {\n\tconst balloon = editor.plugins.get( 'ContextualBalloon' );\n\tconst position = getBalloonPositionData( editor, relatedElement );\n\n\tballoon.updatePosition( position );\n}\n\nfunction getBalloonPositionData( editor, relatedElement ) {\n\tconst editingView = editor.editing.view;\n\tconst defaultPositions = BalloonPanelView.defaultPositions;\n\n\treturn {\n\t\ttarget: editingView.domConverter.mapViewToDom( relatedElement ),\n\t\tpositions: [\n\t\t\tdefaultPositions.northArrowSouth,\n\t\t\tdefaultPositions.northArrowSouthWest,\n\t\t\tdefaultPositions.northArrowSouthEast,\n\t\t\tdefaultPositions.southArrowNorth,\n\t\t\tdefaultPositions.southArrowNorthWest,\n\t\t\tdefaultPositions.southArrowNorthEast,\n\t\t\tcenteredBalloonPositionForLongWidgets\n\t\t]\n\t};\n}\n\nfunction isWidgetSelected( selection ) {\n\tconst viewElement = selection.getSelectedElement();\n\n\treturn !!( viewElement && isWidget( viewElement ) );\n}\n\n/**\n * The toolbar definition object used by the toolbar repository to manage toolbars.\n * It contains information necessary to display the toolbar in the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} and\n * update it during its life (display) cycle.\n *\n * @typedef {Object} module:widget/widgettoolbarrepository~WidgetRepositoryToolbarDefinition\n *\n * @property {module:ui/view~View} view The UI view of the toolbar.\n * @property {Function} getRelatedElement A function that returns an engine {@link module:engine/view/view~View}\n * element the toolbar is to be attached to. For instance, an image widget or a table widget (or `null` when\n * there is no such element). The function accepts an instance of {@link module:engine/view/selection~Selection}.\n * @property {String} balloonClassName CSS class for the widget balloon when a toolbar is displayed.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagetoolbar\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport { getSelectedImageWidget } from './image/utils';\nimport WidgetToolbarRepository from '@ckeditor/ckeditor5-widget/src/widgettoolbarrepository';\n\n/**\n * The image toolbar plugin. It creates and manages the image toolbar (the toolbar displayed when an image is selected).\n *\n * For a detailed overview, check the {@glink features/image#image-contextual-toolbar image contextual toolbar} documentation.\n *\n * Instances of toolbar components (e.g. buttons) are created using the editor's\n * {@link module:ui/componentfactory~ComponentFactory component factory}\n * based on the {@link module:image/image~ImageConfig#toolbar `image.toolbar` configuration option}.\n *\n * The toolbar uses the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageToolbar extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ WidgetToolbarRepository ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageToolbar';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst widgetToolbarRepository = editor.plugins.get( WidgetToolbarRepository );\n\n\t\twidgetToolbarRepository.register( 'image', {\n\t\t\tariaLabel: t( 'Image toolbar' ),\n\t\t\titems: editor.config.get( 'image.toolbar' ) || [],\n\t\t\tgetRelatedElement: getSelectedImageWidget\n\t\t} );\n\t}\n}\n\n/**\n * Items to be placed in the image toolbar.\n * This option is used by the {@link module:image/imagetoolbar~ImageToolbar} feature.\n *\n * Assuming that you use the following features:\n *\n * * {@link module:image/imagestyle~ImageStyle} (with a default configuration),\n * * {@link module:image/imagetextalternative~ImageTextAlternative},\n *\n * three toolbar items will be available in {@link module:ui/componentfactory~ComponentFactory}:\n * `'imageStyle:full'`, `'imageStyle:side'`, and `'imageTextAlternative'` so you can configure the toolbar like this:\n *\n *\t\tconst imageConfig = {\n *\t\t\ttoolbar: [ 'imageStyle:full', 'imageStyle:side', '|', 'imageTextAlternative' ]\n *\t\t};\n *\n * Of course, the same buttons can also be used in the\n * {@link module:core/editor/editorconfig~EditorConfig#toolbar main editor toolbar}.\n *\n * Read more about configuring toolbar in {@link module:core/editor/editorconfig~EditorConfig#toolbar}.\n *\n * @member {Array.<String>} module:image/image~ImageConfig#toolbar\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module upload/ui/filedialogbuttonview\n */\n\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport View from '@ckeditor/ckeditor5-ui/src/view';\n\n/**\n * The file dialog button view.\n *\n * This component provides a button that opens the native file selection dialog.\n * It can be used to implement the UI of a file upload feature.\n *\n *\t\tconst view = new FileDialogButtonView( locale );\n *\n *\t\tview.set( {\n *\t\t\tacceptedType: 'image/*',\n *\t\t\tallowMultipleFiles: true\n *\t\t} );\n *\n *\t\tview.buttonView.set( {\n *\t\t\tlabel: t( 'Insert image' ),\n *\t\t\ticon: imageIcon,\n *\t\t\ttooltip: true\n *\t\t} );\n *\n *\t\tview.on( 'done', ( evt, files ) => {\n *\t\t\tfor ( const file of Array.from( files ) ) {\n *\t\t\t\tconsole.log( 'Selected file', file );\n *\t\t\t}\n *\t\t} );\n *\n * @extends module:ui/view~View\n */\nexport default class FileDialogButtonView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * The button view of the component.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.buttonView = new ButtonView( locale );\n\n\t\t/**\n\t\t * A hidden `<input>` view used to execute file dialog.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:upload/ui/filedialogbuttonview~FileInputView}\n\t\t */\n\t\tthis._fileInputView = new FileInputView( locale );\n\n\t\t/**\n\t\t * Accepted file types. Can be provided in form of file extensions, media type or one of:\n\t\t * * `audio/*`,\n\t\t * * `video/*`,\n\t\t * * `image/*`.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #acceptedType\n\t\t */\n\t\tthis._fileInputView.bind( 'acceptedType' ).to( this );\n\n\t\t/**\n\t\t * Indicates if multiple files can be selected. Defaults to `true`.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #allowMultipleFiles\n\t\t */\n\t\tthis._fileInputView.bind( 'allowMultipleFiles' ).to( this );\n\n\t\t/**\n\t\t * Fired when file dialog is closed with file selected.\n\t\t *\n\t\t *\t\tview.on( 'done', ( evt, files ) => {\n\t\t *\t\t\tfor ( const file of files ) {\n\t\t *\t\t\t\tconsole.log( 'Selected file', file );\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\n\t\t * @event done\n\t\t * @param {Array.<File>} files Array of selected files.\n\t\t */\n\t\tthis._fileInputView.delegate( 'done' ).to( this );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-file-dialog-button'\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis.buttonView,\n\t\t\t\tthis._fileInputView\n\t\t\t]\n\t\t} );\n\n\t\tthis.buttonView.on( 'execute', () => {\n\t\t\tthis._fileInputView.open();\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the {@link #buttonView}.\n\t */\n\tfocus() {\n\t\tthis.buttonView.focus();\n\t}\n}\n\n/**\n * The hidden file input view class.\n *\n * @private\n * @extends module:ui/view~View\n */\nclass FileInputView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Accepted file types. Can be provided in form of file extensions, media type or one of:\n\t\t * * `audio/*`,\n\t\t * * `video/*`,\n\t\t * * `image/*`.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #acceptedType\n\t\t */\n\t\tthis.set( 'acceptedType' );\n\n\t\t/**\n\t\t * Indicates if multiple files can be selected. Defaults to `false`.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #allowMultipleFiles\n\t\t */\n\t\tthis.set( 'allowMultipleFiles', false );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'input',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-hidden'\n\t\t\t\t],\n\t\t\t\ttype: 'file',\n\t\t\t\ttabindex: '-1',\n\t\t\t\taccept: bind.to( 'acceptedType' ),\n\t\t\t\tmultiple: bind.to( 'allowMultipleFiles' )\n\t\t\t},\n\n\t\t\ton: {\n\t\t\t\t// Removing from code coverage since we cannot programmatically set input element files.\n\t\t\t\tchange: bind.to( /* istanbul ignore next */ () => {\n\t\t\t\t\tif ( this.element && this.element.files && this.element.files.length ) {\n\t\t\t\t\t\tthis.fire( 'done', this.element.files );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.element.value = '';\n\t\t\t\t} )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Opens file dialog.\n\t */\n\topen() {\n\t\tthis.element.click();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageupload/utils\n */\n\n/* global fetch, File */\n\n/**\n * Creates a regular expression used to test for image files.\n *\n *\t\tconst imageType = createImageTypeRegExp( [ 'png', 'jpeg', 'svg+xml', 'vnd.microsoft.icon' ] );\n *\n *\t\tconsole.log( 'is supported image', imageType.test( file.type ) );\n *\n * @param {Array.<String>} types\n * @returns {RegExp}\n */\nexport function createImageTypeRegExp( types ) {\n\t// Sanitize the MIME type name which may include: \"+\", \"-\" or \".\".\n\tconst regExpSafeNames = types.map( type => type.replace( '+', '\\\\+' ) );\n\n\treturn new RegExp( `^image\\\\/(${ regExpSafeNames.join( '|' ) })$` );\n}\n\n/**\n * Creates a promise that fetches the image local source (Base64 or blob) and resolves with a `File` object.\n *\n * @param {module:engine/view/element~Element} image Image whose source to fetch.\n * @returns {Promise.<File>} A promise which resolves when an image source is fetched and converted to a `File` instance.\n * It resolves with a `File` object. If there were any errors during file processing, the promise will be rejected.\n */\nexport function fetchLocalImage( image ) {\n\treturn new Promise( ( resolve, reject ) => {\n\t\tconst imageSrc = image.getAttribute( 'src' );\n\n\t\t// Fetch works asynchronously and so does not block browser UI when processing data.\n\t\tfetch( imageSrc )\n\t\t\t.then( resource => resource.blob() )\n\t\t\t.then( blob => {\n\t\t\t\tconst mimeType = getImageMimeType( blob, imageSrc );\n\t\t\t\tconst ext = mimeType.replace( 'image/', '' );\n\t\t\t\tconst filename = `image.${ ext }`;\n\t\t\t\tconst file = new File( [ blob ], filename, { type: mimeType } );\n\n\t\t\t\tresolve( file );\n\t\t\t} )\n\t\t\t.catch( reject );\n\t} );\n}\n\n/**\n * Checks whether a given node is an image element with a local source (Base64 or blob).\n *\n * @param {module:engine/view/node~Node} node The node to check.\n * @returns {Boolean}\n */\nexport function isLocalImage( node ) {\n\tif ( !node.is( 'element', 'img' ) || !node.getAttribute( 'src' ) ) {\n\t\treturn false;\n\t}\n\n\treturn node.getAttribute( 'src' ).match( /^data:image\\/\\w+;base64,/g ) ||\n\t\tnode.getAttribute( 'src' ).match( /^blob:/g );\n}\n\n// Extracts an image type based on its blob representation or its source.\n//\n// @param {String} src Image `src` attribute value.\n// @param {Blob} blob Image blob representation.\n// @returns {String}\nfunction getImageMimeType( blob, src ) {\n\tif ( blob.type ) {\n\t\treturn blob.type;\n\t} else if ( src.match( /data:(image\\/\\w+);base64/ ) ) {\n\t\treturn src.match( /data:(image\\/\\w+);base64/ )[ 1 ].toLowerCase();\n\t} else {\n\t\t// Fallback to 'jpeg' as common extension.\n\t\treturn 'image/jpeg';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageupload/imageuploadui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FileDialogButtonView from '@ckeditor/ckeditor5-upload/src/ui/filedialogbuttonview';\nimport imageIcon from '@ckeditor/ckeditor5-core/theme/icons/image.svg';\nimport { createImageTypeRegExp } from './utils';\n\n/**\n * The image upload button plugin.\n *\n * For a detailed overview, check the {@glink features/image-upload/image-upload Image upload feature} documentation.\n *\n * Adds the `'imageUpload'` button to the {@link module:ui/componentfactory~ComponentFactory UI component factory}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageUploadUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\t// Setup `imageUpload` button.\n\t\teditor.ui.componentFactory.add( 'imageUpload', locale => {\n\t\t\tconst view = new FileDialogButtonView( locale );\n\t\t\tconst command = editor.commands.get( 'imageUpload' );\n\t\t\tconst imageTypes = editor.config.get( 'image.upload.types' );\n\t\t\tconst imageTypesRegExp = createImageTypeRegExp( imageTypes );\n\n\t\t\tview.set( {\n\t\t\t\tacceptedType: imageTypes.map( type => `image/${ type }` ).join( ',' ),\n\t\t\t\tallowMultipleFiles: true\n\t\t\t} );\n\n\t\t\tview.buttonView.set( {\n\t\t\t\tlabel: t( 'Insert image' ),\n\t\t\t\ticon: imageIcon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tview.buttonView.bind( 'isEnabled' ).to( command );\n\n\t\t\tview.on( 'done', ( evt, files ) => {\n\t\t\t\tconst imagesToUpload = Array.from( files ).filter( file => imageTypesRegExp.test( file.type ) );\n\n\t\t\t\tif ( imagesToUpload.length ) {\n\t\t\t\t\teditor.execute( 'imageUpload', { file: imagesToUpload } );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/contextplugin\n */\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * The base class for {@link module:core/context~Context} plugin classes.\n *\n * A context plugin can either be initialized for an {@link module:core/editor/editor~Editor editor} or for\n * a {@link module:core/context~Context context}. In other words, it can either\n * work within one editor instance or with one or more editor instances that use a single context.\n * It is the context plugin's role to implement handling for both modes.\n *\n * There are a few rules for interaction between the editor plugins and context plugins:\n *\n * * A context plugin can require another context plugin.\n * * An {@link module:core/plugin~Plugin editor plugin} can require a context plugin.\n * * A context plugin MUST NOT require an {@link module:core/plugin~Plugin editor plugin}.\n *\n * @implements module:core/plugin~PluginInterface\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class ContextPlugin {\n\t/**\n\t * Creates a new plugin instance.\n\t *\n\t * @param {module:core/context~Context|module:core/editor/editor~Editor} context\n\t */\n\tconstructor( context ) {\n\t\t/**\n\t\t * The context instance.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:core/context~Context|module:core/editor/editor~Editor}\n\t\t */\n\t\tthis.context = context;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get isContextPlugin() {\n\t\treturn true;\n\t}\n}\n\nmix( ContextPlugin, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/pendingactions\n */\n\nimport ContextPlugin from './contextplugin';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * The list of pending editor actions.\n *\n * This plugin should be used to synchronise plugins that execute long-lasting actions\n * (e.g. file upload) with the editor integration. It gives the developer who integrates the editor\n * an easy way to check if there are any actions pending whenever such information is needed.\n * All plugins that register a pending action also provide a message about the action that is ongoing\n * which can be displayed to the user. This lets them decide if they want to interrupt the action or wait.\n *\n * Adding and updating a pending action:\n *\n * \t\tconst pendingActions = editor.plugins.get( 'PendingActions' );\n * \t\tconst action = pendingActions.add( 'Upload in progress: 0%.' );\n *\n *\t\t// You can update the message:\n * \t\taction.message = 'Upload in progress: 10%.';\n *\n * Removing a pending action:\n *\n * \t\tconst pendingActions = editor.plugins.get( 'PendingActions' );\n * \t\tconst action = pendingActions.add( 'Unsaved changes.' );\n *\n * \t\tpendingActions.remove( action );\n *\n * Getting pending actions:\n *\n * \t\tconst pendingActions = editor.plugins.get( 'PendingActions' );\n *\n * \t\tconst action1 = pendingActions.add( 'Action 1' );\n * \t\tconst action2 = pendingActions.add( 'Action 2' );\n *\n * \t\tpendingActions.first; // Returns action1\n * \t\tArray.from( pendingActions ); // Returns [ action1, action2 ]\n *\n * This plugin is used by features like {@link module:upload/filerepository~FileRepository} to register their ongoing actions\n * and by features like {@link module:autosave/autosave~Autosave} to detect whether there are any ongoing actions.\n * Read more about saving the data in the {@glink builds/guides/integration/saving-data Saving and getting data} guide.\n *\n * @extends module:core/contextplugin~ContextPlugin\n */\nexport default class PendingActions extends ContextPlugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'PendingActions';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\t/**\n\t\t * Defines whether there is any registered pending action.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #hasAny\n\t\t */\n\t\tthis.set( 'hasAny', false );\n\n\t\t/**\n\t\t * A list of pending actions.\n\t\t *\n\t\t * @private\n\t\t * @type {module:utils/collection~Collection}\n\t\t */\n\t\tthis._actions = new Collection( { idProperty: '_id' } );\n\t\tthis._actions.delegate( 'add', 'remove' ).to( this );\n\t}\n\n\t/**\n\t * Adds an action to the list of pending actions.\n\t *\n\t * This method returns an action object with an observable message property.\n\t * The action object can be later used in the {@link #remove} method. It also allows you to change the message.\n\t *\n\t * @param {String} message The action message.\n\t * @returns {Object} An observable object that represents a pending action.\n\t */\n\tadd( message ) {\n\t\tif ( typeof message !== 'string' ) {\n\t\t\t/**\n\t\t\t * The message must be a string.\n\t\t\t *\n\t\t\t * @error pendingactions-add-invalid-message\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'pendingactions-add-invalid-message: The message must be a string.', this );\n\t\t}\n\n\t\tconst action = Object.create( ObservableMixin );\n\n\t\taction.set( 'message', message );\n\t\tthis._actions.add( action );\n\t\tthis.hasAny = true;\n\n\t\treturn action;\n\t}\n\n\t/**\n\t * Removes an action from the list of pending actions.\n\t *\n\t * @param {Object} action An action object.\n\t */\n\tremove( action ) {\n\t\tthis._actions.remove( action );\n\t\tthis.hasAny = !!this._actions.length;\n\t}\n\n\t/**\n\t * Returns the first action from the list or null when list is empty\n\t *\n\t * returns {Object|null} The pending action object.\n\t */\n\tget first() {\n\t\treturn this._actions.get( 0 );\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._actions[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Fired when an action is added to the list.\n\t *\n\t * @event add\n\t * @param {Object} action The added action.\n\t */\n\n\t/**\n\t * Fired when an action is removed from the list.\n\t *\n\t * @event remove\n\t * @param {Object} action The removed action.\n\t */\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module upload/filereader\n */\n\n/* globals window */\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Wrapper over the native `FileReader`.\n */\nexport default class FileReader {\n\t/**\n\t * Creates an instance of the FileReader.\n\t */\n\tconstructor() {\n\t\tconst reader = new window.FileReader();\n\n\t\t/**\n\t\t * Instance of native FileReader.\n\t\t *\n\t\t * @private\n\t\t * @member {FileReader} #_reader\n\t\t */\n\t\tthis._reader = reader;\n\n\t\tthis._data = undefined;\n\n\t\t/**\n\t\t * Number of bytes loaded.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number} #loaded\n\t\t */\n\t\tthis.set( 'loaded', 0 );\n\n\t\treader.onprogress = evt => {\n\t\t\tthis.loaded = evt.loaded;\n\t\t};\n\t}\n\n\t/**\n\t * Returns error that occurred during file reading.\n\t *\n\t * @returns {Error}\n\t */\n\tget error() {\n\t\treturn this._reader.error;\n\t}\n\n\t/**\n\t * Holds the data of an already loaded file. The file must be first loaded\n\t * by using {@link module:upload/filereader~FileReader#read `read()`}.\n\t *\n\t * @type {File|undefined}\n\t */\n\tget data() {\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * Reads the provided file.\n\t *\n\t * @param {File} file Native File object.\n\t * @returns {Promise.<String>} Returns a promise that will be resolved with file's content.\n\t * The promise will be rejected in case of an error or when the reading process is aborted.\n\t */\n\tread( file ) {\n\t\tconst reader = this._reader;\n\t\tthis.total = file.size;\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\t\t\treader.onload = () => {\n\t\t\t\tconst result = reader.result;\n\n\t\t\t\tthis._data = result;\n\n\t\t\t\tresolve( result );\n\t\t\t};\n\n\t\t\treader.onerror = () => {\n\t\t\t\treject( 'error' );\n\t\t\t};\n\n\t\t\treader.onabort = () => {\n\t\t\t\treject( 'aborted' );\n\t\t\t};\n\n\t\t\tthis._reader.readAsDataURL( file );\n\t\t} );\n\t}\n\n\t/**\n\t * Aborts file reader.\n\t */\n\tabort() {\n\t\tthis._reader.abort();\n\t}\n}\n\nmix( FileReader, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module upload/filerepository\n */\n\n/* globals console */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport PendingActions from '@ckeditor/ckeditor5-core/src/pendingactions';\nimport CKEditorError, { attachLinkToDocumentation } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\nimport FileReader from './filereader.js';\n\nimport uid from '@ckeditor/ckeditor5-utils/src/uid.js';\n\n/**\n * File repository plugin. A central point for managing file upload.\n *\n * To use it, first you need an upload adapter. Upload adapter's job is to handle communication with the server\n * (sending the file and handling server's response). You can use one of the existing plugins introducing upload adapters\n * (e.g. {@link module:easy-image/cloudservicesuploadadapter~CloudServicesUploadAdapter} or\n * {@link module:adapter-ckfinder/uploadadapter~CKFinderUploadAdapter}) or write your own one – see\n * the {@glink framework/guides/deep-dive/upload-adapter \"Custom image upload adapter\" deep dive guide}.\n *\n * Then, you can use {@link module:upload/filerepository~FileRepository#createLoader `createLoader()`} and the returned\n * {@link module:upload/filerepository~FileLoader} instance to load and upload files.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FileRepository extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FileRepository';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ PendingActions ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\t/**\n\t\t * Collection of loaders associated with this repository.\n\t\t *\n\t\t * @member {module:utils/collection~Collection} #loaders\n\t\t */\n\t\tthis.loaders = new Collection();\n\n\t\t// Keeps upload in a sync with pending actions.\n\t\tthis.loaders.on( 'add', () => this._updatePendingAction() );\n\t\tthis.loaders.on( 'remove', () => this._updatePendingAction() );\n\n\t\t/**\n\t\t * Loaders mappings used to retrieve loaders references.\n\t\t *\n\t\t * @private\n\t\t * @member {Map<File|Promise, FileLoader>} #_loadersMap\n\t\t */\n\t\tthis._loadersMap = new Map();\n\n\t\t/**\n\t\t * Reference to a pending action registered in a {@link module:core/pendingactions~PendingActions} plugin\n\t\t * while upload is in progress. When there is no upload then value is `null`.\n\t\t *\n\t\t * @private\n\t\t * @member {Object} #_pendingAction\n\t\t */\n\t\tthis._pendingAction = null;\n\n\t\t/**\n\t\t * A factory function which should be defined before using `FileRepository`.\n\t\t *\n\t\t * It should return a new instance of {@link module:upload/filerepository~UploadAdapter} that will be used to upload files.\n\t\t * {@link module:upload/filerepository~FileLoader} instance associated with the adapter\n\t\t * will be passed to that function.\n\t\t *\n\t\t * For more information and example see {@link module:upload/filerepository~UploadAdapter}.\n\t\t *\n\t\t * @member {Function} #createUploadAdapter\n\t\t */\n\n\t\t/**\n\t\t * Number of bytes uploaded.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number} #uploaded\n\t\t */\n\t\tthis.set( 'uploaded', 0 );\n\n\t\t/**\n\t\t * Number of total bytes to upload.\n\t\t *\n\t\t * It might be different than the file size because of headers and additional data.\n\t\t * It contains `null` if value is not available yet, so it's better to use {@link #uploadedPercent} to monitor\n\t\t * the progress.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number|null} #uploadTotal\n\t\t */\n\t\tthis.set( 'uploadTotal', null );\n\n\t\t/**\n\t\t * Upload progress in percents.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number} #uploadedPercent\n\t\t */\n\t\tthis.bind( 'uploadedPercent' ).to( this, 'uploaded', this, 'uploadTotal', ( uploaded, total ) => {\n\t\t\treturn total ? ( uploaded / total * 100 ) : 0;\n\t\t} );\n\t}\n\n\t/**\n\t * Returns the loader associated with specified file or promise.\n\t *\n\t * To get loader by id use `fileRepository.loaders.get( id )`.\n\t *\n\t * @param {File|Promise.<File>} fileOrPromise Native file or promise handle.\n\t * @returns {module:upload/filerepository~FileLoader|null}\n\t */\n\tgetLoader( fileOrPromise ) {\n\t\treturn this._loadersMap.get( fileOrPromise ) || null;\n\t}\n\n\t/**\n\t * Creates a loader instance for the given file.\n\t *\n\t * Requires {@link #createUploadAdapter} factory to be defined.\n\t *\n\t * @param {File|Promise.<File>} fileOrPromise Native File object or native Promise object which resolves to a File.\n\t * @returns {module:upload/filerepository~FileLoader|null}\n\t */\n\tcreateLoader( fileOrPromise ) {\n\t\tif ( !this.createUploadAdapter ) {\n\t\t\t/**\n\t\t\t * You need to enable an upload adapter in order to be able to upload files.\n\t\t\t *\n\t\t\t * This warning shows up when {@link module:upload/filerepository~FileRepository} is being used\n\t\t\t * without {@link #createUploadAdapter definining an upload adapter}.\n\t\t\t *\n\t\t\t * **If you see this warning when using one of the {@glink builds/index CKEditor 5 Builds}**\n\t\t\t * it means that you did not configure any of the upload adapters available by default in those builds.\n\t\t\t *\n\t\t\t * See the {@glink features/image-upload/image-upload comprehensive \"Image upload overview\"} to learn which upload\n\t\t\t * adapters are available in the builds and how to configure them.\n\t\t\t *\n\t\t\t * **If you see this warning when using a custom build** there is a chance that you enabled\n\t\t\t * a feature like {@link module:image/imageupload~ImageUpload},\n\t\t\t * or {@link module:image/imageupload/imageuploadui~ImageUploadUI} but you did not enable any upload adapter.\n\t\t\t * You can choose one of the existing upload adapters listed in the\n\t\t\t * {@glink features/image-upload/image-upload \"Image upload overview\"}.\n\t\t\t *\n\t\t\t * You can also implement your {@glink framework/guides/deep-dive/upload-adapter own image upload adapter}.\n\t\t\t *\n\t\t\t * @error filerepository-no-upload-adapter\n\t\t\t */\n\t\t\tconsole.warn( attachLinkToDocumentation(\n\t\t\t\t'filerepository-no-upload-adapter: Upload adapter is not defined.'\n\t\t\t) );\n\n\t\t\treturn null;\n\t\t}\n\n\t\tconst loader = new FileLoader( Promise.resolve( fileOrPromise ), this.createUploadAdapter );\n\n\t\tthis.loaders.add( loader );\n\t\tthis._loadersMap.set( fileOrPromise, loader );\n\n\t\t// Store also file => loader mapping so loader can be retrieved by file instance returned upon Promise resolution.\n\t\tif ( fileOrPromise instanceof Promise ) {\n\t\t\tloader.file\n\t\t\t\t.then( file => {\n\t\t\t\t\tthis._loadersMap.set( file, loader );\n\t\t\t\t} )\n\t\t\t\t// Every then() must have a catch().\n\t\t\t\t// File loader state (and rejections) are handled in read() and upload().\n\t\t\t\t// Also, see the \"does not swallow the file promise rejection\" test.\n\t\t\t\t.catch( () => {} );\n\t\t}\n\n\t\tloader.on( 'change:uploaded', () => {\n\t\t\tlet aggregatedUploaded = 0;\n\n\t\t\tfor ( const loader of this.loaders ) {\n\t\t\t\taggregatedUploaded += loader.uploaded;\n\t\t\t}\n\n\t\t\tthis.uploaded = aggregatedUploaded;\n\t\t} );\n\n\t\tloader.on( 'change:uploadTotal', () => {\n\t\t\tlet aggregatedTotal = 0;\n\n\t\t\tfor ( const loader of this.loaders ) {\n\t\t\t\tif ( loader.uploadTotal ) {\n\t\t\t\t\taggregatedTotal += loader.uploadTotal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.uploadTotal = aggregatedTotal;\n\t\t} );\n\n\t\treturn loader;\n\t}\n\n\t/**\n\t * Destroys the given loader.\n\t *\n\t * @param {File|Promise|module:upload/filerepository~FileLoader} fileOrPromiseOrLoader File or Promise associated\n\t * with that loader or loader itself.\n\t */\n\tdestroyLoader( fileOrPromiseOrLoader ) {\n\t\tconst loader = fileOrPromiseOrLoader instanceof FileLoader ? fileOrPromiseOrLoader : this.getLoader( fileOrPromiseOrLoader );\n\n\t\tloader._destroy();\n\n\t\tthis.loaders.remove( loader );\n\n\t\tthis._loadersMap.forEach( ( value, key ) => {\n\t\t\tif ( value === loader ) {\n\t\t\t\tthis._loadersMap.delete( key );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Registers or deregisters pending action bound with upload progress.\n\t *\n\t * @private\n\t */\n\t_updatePendingAction() {\n\t\tconst pendingActions = this.editor.plugins.get( PendingActions );\n\n\t\tif ( this.loaders.length ) {\n\t\t\tif ( !this._pendingAction ) {\n\t\t\t\tconst t = this.editor.t;\n\t\t\t\tconst getMessage = value => `${ t( 'Upload in progress' ) } ${ parseInt( value ) }%.`;\n\n\t\t\t\tthis._pendingAction = pendingActions.add( getMessage( this.uploadedPercent ) );\n\t\t\t\tthis._pendingAction.bind( 'message' ).to( this, 'uploadedPercent', getMessage );\n\t\t\t}\n\t\t} else {\n\t\t\tpendingActions.remove( this._pendingAction );\n\t\t\tthis._pendingAction = null;\n\t\t}\n\t}\n}\n\nmix( FileRepository, ObservableMixin );\n\n/**\n * File loader class.\n *\n * It is used to control the process of reading the file and uploading it using the specified upload adapter.\n */\nclass FileLoader {\n\t/**\n\t * Creates a new instance of `FileLoader`.\n\t *\n\t * @param {Promise.<File>} filePromise A promise which resolves to a file instance.\n\t * @param {Function} uploadAdapterCreator The function which returns {@link module:upload/filerepository~UploadAdapter} instance.\n\t */\n\tconstructor( filePromise, uploadAdapterCreator ) {\n\t\t/**\n\t\t * Unique id of FileLoader instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n\t\tthis.id = uid();\n\n\t\t/**\n\t\t * Additional wrapper over the initial file promise passed to this loader.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:upload/filerepository~FilePromiseWrapper}\n\t\t */\n\t\tthis._filePromiseWrapper = this._createFilePromiseWrapper( filePromise );\n\n\t\t/**\n\t\t * Adapter instance associated with this file loader.\n\t\t *\n\t\t * @private\n\t\t * @member {module:upload/filerepository~UploadAdapter}\n\t\t */\n\t\tthis._adapter = uploadAdapterCreator( this );\n\n\t\t/**\n\t\t * FileReader used by FileLoader.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:upload/filereader~FileReader}\n\t\t */\n\t\tthis._reader = new FileReader();\n\n\t\t/**\n\t\t * Current status of FileLoader. It can be one of the following:\n\t\t *\n\t\t * * 'idle',\n\t\t * * 'reading',\n\t\t * * 'uploading',\n\t\t * * 'aborted',\n\t\t * * 'error'.\n\t\t *\n\t\t * When reading status can change in a following way:\n\t\t *\n\t\t * `idle` -> `reading` -> `idle`\n\t\t * `idle` -> `reading -> `aborted`\n\t\t * `idle` -> `reading -> `error`\n\t\t *\n\t\t * When uploading status can change in a following way:\n\t\t *\n\t\t * `idle` -> `uploading` -> `idle`\n\t\t * `idle` -> `uploading` -> `aborted`\n\t\t * `idle` -> `uploading` -> `error`\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {String} #status\n\t\t */\n\t\tthis.set( 'status', 'idle' );\n\n\t\t/**\n\t\t * Number of bytes uploaded.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number} #uploaded\n\t\t */\n\t\tthis.set( 'uploaded', 0 );\n\n\t\t/**\n\t\t * Number of total bytes to upload.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number|null} #uploadTotal\n\t\t */\n\t\tthis.set( 'uploadTotal', null );\n\n\t\t/**\n\t\t * Upload progress in percents.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number} #uploadedPercent\n\t\t */\n\t\tthis.bind( 'uploadedPercent' ).to( this, 'uploaded', this, 'uploadTotal', ( uploaded, total ) => {\n\t\t\treturn total ? ( uploaded / total * 100 ) : 0;\n\t\t} );\n\n\t\t/**\n\t\t * Response of the upload.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Object|null} #uploadResponse\n\t\t */\n\t\tthis.set( 'uploadResponse', null );\n\t}\n\n\t/**\n\t * A `Promise` which resolves to a `File` instance associated with this file loader.\n\t *\n\t * @type {Promise.<File|null>}\n\t */\n\tget file() {\n\t\tif ( !this._filePromiseWrapper ) {\n\t\t\t// Loader was destroyed, return promise which resolves to null.\n\t\t\treturn Promise.resolve( null );\n\t\t} else {\n\t\t\t// The `this._filePromiseWrapper.promise` is chained and not simply returned to handle a case when:\n\t\t\t//\n\t\t\t//\t\t* The `loader.file.then( ... )` is called by external code (returned promise is pending).\n\t\t\t//\t\t* Then `loader._destroy()` is called (call is synchronous) which destroys the `loader`.\n\t\t\t//\t\t* Promise returned by the first `loader.file.then( ... )` call is resolved.\n\t\t\t//\n\t\t\t// Returning `this._filePromiseWrapper.promise` will still resolve to a `File` instance so there\n\t\t\t// is an additional check needed in the chain to see if `loader` was destroyed in the meantime.\n\t\t\treturn this._filePromiseWrapper.promise.then( file => this._filePromiseWrapper ? file : null );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the file data. To read its data, you need for first load the file\n\t * by using the {@link module:upload/filerepository~FileLoader#read `read()`} method.\n\t *\n\t * @type {File|undefined}\n\t */\n\tget data() {\n\t\treturn this._reader.data;\n\t}\n\n\t/**\n\t * Reads file using {@link module:upload/filereader~FileReader}.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `filerepository-read-wrong-status` when status\n\t * is different than `idle`.\n\t *\n\t * Example usage:\n\t *\n\t *\tfileLoader.read()\n\t *\t\t.then( data => { ... } )\n\t *\t\t.catch( err => {\n\t *\t\t\tif ( err === 'aborted' ) {\n\t *\t\t\t\tconsole.log( 'Reading aborted.' );\n\t *\t\t\t} else {\n\t *\t\t\t\tconsole.log( 'Reading error.', err );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * @returns {Promise.<String>} Returns promise that will be resolved with read data. Promise will be rejected if error\n\t * occurs or if read process is aborted.\n\t */\n\tread() {\n\t\tif ( this.status != 'idle' ) {\n\t\t\tthrow new CKEditorError( 'filerepository-read-wrong-status: You cannot call read if the status is different than idle.', this );\n\t\t}\n\n\t\tthis.status = 'reading';\n\n\t\treturn this.file\n\t\t\t.then( file => this._reader.read( file ) )\n\t\t\t.then( data => {\n\t\t\t\t// Edge case: reader was aborted after file was read - double check for proper status.\n\t\t\t\t// It can happen when image was deleted during its upload.\n\t\t\t\tif ( this.status !== 'reading' ) {\n\t\t\t\t\tthrow this.status;\n\t\t\t\t}\n\n\t\t\t\tthis.status = 'idle';\n\n\t\t\t\treturn data;\n\t\t\t} )\n\t\t\t.catch( err => {\n\t\t\t\tif ( err === 'aborted' ) {\n\t\t\t\t\tthis.status = 'aborted';\n\t\t\t\t\tthrow 'aborted';\n\t\t\t\t}\n\n\t\t\t\tthis.status = 'error';\n\t\t\t\tthrow this._reader.error ? this._reader.error : err;\n\t\t\t} );\n\t}\n\n\t/**\n\t * Reads file using the provided {@link module:upload/filerepository~UploadAdapter}.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `filerepository-upload-wrong-status` when status\n\t * is different than `idle`.\n\t * Example usage:\n\t *\n\t *\tfileLoader.upload()\n\t *\t\t.then( data => { ... } )\n\t *\t\t.catch( e => {\n\t *\t\t\tif ( e === 'aborted' ) {\n\t *\t\t\t\tconsole.log( 'Uploading aborted.' );\n\t *\t\t\t} else {\n\t *\t\t\t\tconsole.log( 'Uploading error.', e );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * @returns {Promise.<Object>} Returns promise that will be resolved with response data. Promise will be rejected if error\n\t * occurs or if read process is aborted.\n\t */\n\tupload() {\n\t\tif ( this.status != 'idle' ) {\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'filerepository-upload-wrong-status: You cannot call upload if the status is different than idle.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tthis.status = 'uploading';\n\n\t\treturn this.file\n\t\t\t.then( () => this._adapter.upload() )\n\t\t\t.then( data => {\n\t\t\t\tthis.uploadResponse = data;\n\t\t\t\tthis.status = 'idle';\n\n\t\t\t\treturn data;\n\t\t\t} )\n\t\t\t.catch( err => {\n\t\t\t\tif ( this.status === 'aborted' ) {\n\t\t\t\t\tthrow 'aborted';\n\t\t\t\t}\n\n\t\t\t\tthis.status = 'error';\n\t\t\t\tthrow err;\n\t\t\t} );\n\t}\n\n\t/**\n\t * Aborts loading process.\n\t */\n\tabort() {\n\t\tconst status = this.status;\n\t\tthis.status = 'aborted';\n\n\t\tif ( !this._filePromiseWrapper.isFulfilled ) {\n\t\t\t// Edge case: file loader is aborted before read() is called\n\t\t\t// so it might happen that no one handled the rejection of this promise.\n\t\t\t// See https://github.com/ckeditor/ckeditor5-upload/pull/100\n\t\t\tthis._filePromiseWrapper.promise.catch( () => {} );\n\n\t\t\tthis._filePromiseWrapper.rejecter( 'aborted' );\n\t\t} else if ( status == 'reading' ) {\n\t\t\tthis._reader.abort();\n\t\t} else if ( status == 'uploading' && this._adapter.abort ) {\n\t\t\tthis._adapter.abort();\n\t\t}\n\n\t\tthis._destroy();\n\t}\n\n\t/**\n\t * Performs cleanup.\n\t *\n\t * @private\n\t */\n\t_destroy() {\n\t\tthis._filePromiseWrapper = undefined;\n\t\tthis._reader = undefined;\n\t\tthis._adapter = undefined;\n\t\tthis.uploadResponse = undefined;\n\t}\n\n\t/**\n\t * Wraps a given file promise into another promise giving additional\n\t * control (resolving, rejecting, checking if fulfilled) over it.\n\t *\n\t * @private\n\t * @param filePromise The initial file promise to be wrapped.\n\t * @returns {module:upload/filerepository~FilePromiseWrapper}\n\t */\n\t_createFilePromiseWrapper( filePromise ) {\n\t\tconst wrapper = {};\n\n\t\twrapper.promise = new Promise( ( resolve, reject ) => {\n\t\t\twrapper.rejecter = reject;\n\t\t\twrapper.isFulfilled = false;\n\n\t\t\tfilePromise\n\t\t\t\t.then( file => {\n\t\t\t\t\twrapper.isFulfilled = true;\n\t\t\t\t\tresolve( file );\n\t\t\t\t} )\n\t\t\t\t.catch( err => {\n\t\t\t\t\twrapper.isFulfilled = true;\n\t\t\t\t\treject( err );\n\t\t\t\t} );\n\t\t} );\n\n\t\treturn wrapper;\n\t}\n}\n\nmix( FileLoader, ObservableMixin );\n\n/**\n * Upload adapter interface used by the {@link module:upload/filerepository~FileRepository file repository}\n * to handle file upload. An upload adapter is a bridge between the editor and server that handles file uploads.\n * It should contain a logic necessary to initiate an upload process and monitor its progress.\n *\n * Learn how to develop your own upload adapter for CKEditor 5 in the\n * {@glink framework/guides/deep-dive/upload-adapter \"Custom upload adapter\" guide}.\n *\n * @interface UploadAdapter\n */\n\n/**\n * Executes the upload process.\n * This method should return a promise that will resolve when data will be uploaded to server. Promise should be\n * resolved with an object containing information about uploaded file:\n *\n *\t\t{\n *\t\t\tdefault: 'http://server/default-size.image.png'\n *\t\t}\n *\n * Additionally, other image sizes can be provided:\n *\n *\t\t{\n *\t\t\tdefault: 'http://server/default-size.image.png',\n *\t\t\t'160': 'http://server/size-160.image.png',\n *\t\t\t'500': 'http://server/size-500.image.png',\n *\t\t\t'1000': 'http://server/size-1000.image.png',\n *\t\t\t'1052': 'http://server/default-size.image.png'\n *\t\t}\n *\n * NOTE: When returning multiple images, the widest returned one should equal the default one. It is essential to\n * correctly set `width` attribute of the image. See this discussion:\n * https://github.com/ckeditor/ckeditor5-easy-image/issues/4 for more information.\n *\n * Take a look at {@link module:upload/filerepository~UploadAdapter example Adapter implementation} and\n * {@link module:upload/filerepository~FileRepository#createUploadAdapter createUploadAdapter method}.\n *\n * @method module:upload/filerepository~UploadAdapter#upload\n * @returns {Promise.<Object>} Promise that should be resolved when data is uploaded.\n */\n\n/**\n * Aborts the upload process.\n * After aborting it should reject promise returned from {@link #upload upload()}.\n *\n * Take a look at {@link module:upload/filerepository~UploadAdapter example Adapter implementation} and\n * {@link module:upload/filerepository~FileRepository#createUploadAdapter createUploadAdapter method}.\n *\n * @method module:upload/filerepository~UploadAdapter#abort\n */\n\n/**\n * Object returned by {@link module:upload/filerepository~FileLoader#_createFilePromiseWrapper} method\n * to add more control over the initial file promise passed to {@link module:upload/filerepository~FileLoader}.\n *\n * @protected\n * @typedef {Object} module:upload/filerepository~FilePromiseWrapper\n * @property {Promise.<File>} promise Wrapper promise which can be chained for further processing.\n * @property {Function} rejecter Rejects the promise when called.\n * @property {Boolean} isFulfilled Whether original promise is already fulfilled.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageupload/imageuploadprogress\n */\n\n/* globals setTimeout */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FileRepository from '@ckeditor/ckeditor5-upload/src/filerepository';\nimport uploadingPlaceholder from '../../theme/icons/image_placeholder.svg';\nimport { getViewImgFromWidget } from '../image/utils';\n\nimport '../../theme/imageuploadprogress.css';\nimport '../../theme/imageuploadicon.css';\nimport '../../theme/imageuploadloader.css';\n\n/**\n * The image upload progress plugin.\n * It shows a placeholder when the image is read from the disk and a progress bar while the image is uploading.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageUploadProgress extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The image placeholder that is displayed before real image data can be accessed.\n\t\t *\n\t\t * @protected\n\t\t * @member {String} #placeholder\n\t\t */\n\t\tthis.placeholder = 'data:image/svg+xml;utf8,' + encodeURIComponent( uploadingPlaceholder );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Upload status change - update image's view according to that status.\n\t\teditor.editing.downcastDispatcher.on( 'attribute:uploadStatus:image', ( ...args ) => this.uploadStatusChange( ...args ) );\n\t}\n\n\t/**\n\t * This method is called each time the image `uploadStatus` attribute is changed.\n\t *\n\t * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi\n\t */\n\tuploadStatusChange( evt, data, conversionApi ) {\n\t\tconst editor = this.editor;\n\t\tconst modelImage = data.item;\n\t\tconst uploadId = modelImage.getAttribute( 'uploadId' );\n\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fileRepository = editor.plugins.get( FileRepository );\n\t\tconst status = uploadId ? data.attributeNewValue : null;\n\t\tconst placeholder = this.placeholder;\n\t\tconst viewFigure = editor.editing.mapper.toViewElement( modelImage );\n\t\tconst viewWriter = conversionApi.writer;\n\n\t\tif ( status == 'reading' ) {\n\t\t\t// Start \"appearing\" effect and show placeholder with infinite progress bar on the top\n\t\t\t// while image is read from disk.\n\t\t\t_startAppearEffect( viewFigure, viewWriter );\n\t\t\t_showPlaceholder( placeholder, viewFigure, viewWriter );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Show progress bar on the top of the image when image is uploading.\n\t\tif ( status == 'uploading' ) {\n\t\t\tconst loader = fileRepository.loaders.get( uploadId );\n\n\t\t\t// Start appear effect if needed - see https://github.com/ckeditor/ckeditor5-image/issues/191.\n\t\t\t_startAppearEffect( viewFigure, viewWriter );\n\n\t\t\tif ( !loader ) {\n\t\t\t\t// There is no loader associated with uploadId - this means that image came from external changes.\n\t\t\t\t// In such cases we still want to show the placeholder until image is fully uploaded.\n\t\t\t\t// Show placeholder if needed - see https://github.com/ckeditor/ckeditor5-image/issues/191.\n\t\t\t\t_showPlaceholder( placeholder, viewFigure, viewWriter );\n\t\t\t} else {\n\t\t\t\t// Hide placeholder and initialize progress bar showing upload progress.\n\t\t\t\t_hidePlaceholder( viewFigure, viewWriter );\n\t\t\t\t_showProgressBar( viewFigure, viewWriter, loader, editor.editing.view );\n\t\t\t\t_displayLocalImage( viewFigure, viewWriter, loader );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( status == 'complete' && fileRepository.loaders.get( uploadId ) ) {\n\t\t\t_showCompleteIcon( viewFigure, viewWriter, editor.editing.view );\n\t\t}\n\n\t\t// Clean up.\n\t\t_hideProgressBar( viewFigure, viewWriter );\n\t\t_hidePlaceholder( viewFigure, viewWriter );\n\t\t_stopAppearEffect( viewFigure, viewWriter );\n\t}\n}\n\n// Adds ck-appear class to the image figure if one is not already applied.\n//\n// @param {module:engine/view/containerelement~ContainerElement} viewFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\nfunction _startAppearEffect( viewFigure, writer ) {\n\tif ( !viewFigure.hasClass( 'ck-appear' ) ) {\n\t\twriter.addClass( 'ck-appear', viewFigure );\n\t}\n}\n\n// Removes ck-appear class to the image figure if one is not already removed.\n//\n// @param {module:engine/view/containerelement~ContainerElement} viewFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\nfunction _stopAppearEffect( viewFigure, writer ) {\n\twriter.removeClass( 'ck-appear', viewFigure );\n}\n\n// Shows placeholder together with infinite progress bar on given image figure.\n//\n// @param {String} Data-uri with a svg placeholder.\n// @param {module:engine/view/containerelement~ContainerElement} viewFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\nfunction _showPlaceholder( placeholder, viewFigure, writer ) {\n\tif ( !viewFigure.hasClass( 'ck-image-upload-placeholder' ) ) {\n\t\twriter.addClass( 'ck-image-upload-placeholder', viewFigure );\n\t}\n\n\tconst viewImg = getViewImgFromWidget( viewFigure );\n\n\tif ( viewImg.getAttribute( 'src' ) !== placeholder ) {\n\t\twriter.setAttribute( 'src', placeholder, viewImg );\n\t}\n\n\tif ( !_getUIElement( viewFigure, 'placeholder' ) ) {\n\t\twriter.insert( writer.createPositionAfter( viewImg ), _createPlaceholder( writer ) );\n\t}\n}\n\n// Removes placeholder together with infinite progress bar on given image figure.\n//\n// @param {module:engine/view/containerelement~ContainerElement} viewFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\nfunction _hidePlaceholder( viewFigure, writer ) {\n\tif ( viewFigure.hasClass( 'ck-image-upload-placeholder' ) ) {\n\t\twriter.removeClass( 'ck-image-upload-placeholder', viewFigure );\n\t}\n\n\t_removeUIElement( viewFigure, writer, 'placeholder' );\n}\n\n// Shows progress bar displaying upload progress.\n// Attaches it to the file loader to update when upload percentace is changed.\n//\n// @param {module:engine/view/containerelement~ContainerElement} viewFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @param {module:upload/filerepository~FileLoader} loader\n// @param {module:engine/view/view~View} view\nfunction _showProgressBar( viewFigure, writer, loader, view ) {\n\tconst progressBar = _createProgressBar( writer );\n\twriter.insert( writer.createPositionAt( viewFigure, 'end' ), progressBar );\n\n\t// Update progress bar width when uploadedPercent is changed.\n\tloader.on( 'change:uploadedPercent', ( evt, name, value ) => {\n\t\tview.change( writer => {\n\t\t\twriter.setStyle( 'width', value + '%', progressBar );\n\t\t} );\n\t} );\n}\n\n// Hides upload progress bar.\n//\n// @param {module:engine/view/containerelement~ContainerElement} viewFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\nfunction _hideProgressBar( viewFigure, writer ) {\n\t_removeUIElement( viewFigure, writer, 'progressBar' );\n}\n\n// Shows complete icon and hides after a certain amount of time.\n//\n// @param {module:engine/view/containerelement~ContainerElement} viewFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @param {module:engine/view/view~View} view\nfunction _showCompleteIcon( viewFigure, writer, view ) {\n\tconst completeIcon = writer.createUIElement( 'div', { class: 'ck-image-upload-complete-icon' } );\n\n\twriter.insert( writer.createPositionAt( viewFigure, 'end' ), completeIcon );\n\n\tsetTimeout( () => {\n\t\tview.change( writer => writer.remove( writer.createRangeOn( completeIcon ) ) );\n\t}, 3000 );\n}\n\n// Create progress bar element using {@link module:engine/view/uielement~UIElement}.\n//\n// @private\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @returns {module:engine/view/uielement~UIElement}\nfunction _createProgressBar( writer ) {\n\tconst progressBar = writer.createUIElement( 'div', { class: 'ck-progress-bar' } );\n\n\twriter.setCustomProperty( 'progressBar', true, progressBar );\n\n\treturn progressBar;\n}\n\n// Create placeholder element using {@link module:engine/view/uielement~UIElement}.\n//\n// @private\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @returns {module:engine/view/uielement~UIElement}\nfunction _createPlaceholder( writer ) {\n\tconst placeholder = writer.createUIElement( 'div', { class: 'ck-upload-placeholder-loader' } );\n\n\twriter.setCustomProperty( 'placeholder', true, placeholder );\n\n\treturn placeholder;\n}\n\n// Returns {@link module:engine/view/uielement~UIElement} of given unique property from image figure element.\n// Returns `undefined` if element is not found.\n//\n// @private\n// @param {module:engine/view/element~Element} imageFigure\n// @param {String} uniqueProperty\n// @returns {module:engine/view/uielement~UIElement|undefined}\nfunction _getUIElement( imageFigure, uniqueProperty ) {\n\tfor ( const child of imageFigure.getChildren() ) {\n\t\tif ( child.getCustomProperty( uniqueProperty ) ) {\n\t\t\treturn child;\n\t\t}\n\t}\n}\n\n// Removes {@link module:engine/view/uielement~UIElement} of given unique property from image figure element.\n//\n// @private\n// @param {module:engine/view/element~Element} imageFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @param {String} uniqueProperty\nfunction _removeUIElement( viewFigure, writer, uniqueProperty ) {\n\tconst element = _getUIElement( viewFigure, uniqueProperty );\n\n\tif ( element ) {\n\t\twriter.remove( writer.createRangeOn( element ) );\n\t}\n}\n\n// Displays local data from file loader.\n//\n// @param {module:engine/view/element~Element} imageFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @param {module:upload/filerepository~FileLoader} loader\nfunction _displayLocalImage( viewFigure, writer, loader ) {\n\tif ( loader.data ) {\n\t\tconst viewImg = getViewImgFromWidget( viewFigure );\n\n\t\twriter.setAttribute( 'src', loader.data, viewImg );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/notification/notification\n */\n\n/* globals window */\n\nimport ContextPlugin from '@ckeditor/ckeditor5-core/src/contextplugin';\n\n/**\n * The Notification plugin.\n *\n * This plugin sends a few types of notifications: `success`, `info` and `warning`. The notifications need to be\n * handled and displayed by a plugin responsible for showing the UI of the notifications. Using this plugin for dispatching\n * notifications makes it possible to switch the notifications UI.\n *\n * Note that every unhandled and not stopped `warning` notification will be displayed as a system alert.\n * See {@link module:ui/notification/notification~Notification#showWarning}.\n *\n * @extends module:core/contextplugin~ContextPlugin\n */\nexport default class Notification extends ContextPlugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Notification';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\t// Each unhandled and not stopped `show:warning` event is displayed as a system alert.\n\t\tthis.on( 'show:warning', ( evt, data ) => {\n\t\t\twindow.alert( data.message ); // eslint-disable-line no-alert\n\t\t}, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * Shows a success notification.\n\t *\n\t * By default, it fires the {@link #event:show:success `show:success` event} with the given `data`. The event namespace can be extended\n\t * using the `data.namespace` option. For example:\n\t *\n\t * \t\tshowSuccess( 'Image is uploaded.', {\n\t * \t\t\tnamespace: 'upload:image'\n\t * \t\t} );\n\t *\n\t * will fire the `show:success:upload:image` event.\n\t *\n\t * You can provide the title of the notification:\n\t *\n\t *\t\tshowSuccess( 'Image is uploaded.', {\n\t *\t\t\ttitle: 'Image upload success'\n\t *\t\t} );\n\t *\n\t * @param {String} message The content of the notification.\n\t * @param {Object} [data={}] Additional data.\n\t * @param {String} [data.namespace] Additional event namespace.\n\t * @param {String} [data.title] The title of the notification.\n\t */\n\tshowSuccess( message, data = {} ) {\n\t\tthis._showNotification( {\n\t\t\tmessage,\n\t\t\ttype: 'success',\n\t\t\tnamespace: data.namespace,\n\t\t\ttitle: data.title\n\t\t} );\n\t}\n\n\t/**\n\t * Shows an information notification.\n\t *\n\t * By default, it fires the {@link #event:show:info `show:info` event} with the given `data`. The event namespace can be extended\n\t * using the `data.namespace` option. For example:\n\t *\n\t * \t\tshowInfo( 'Editor is offline.', {\n\t * \t\t\tnamespace: 'editor:status'\n\t * \t\t} );\n\t *\n\t * will fire the `show:info:editor:status` event.\n\t *\n\t * You can provide the title of the notification:\n\t *\n\t *\t\tshowInfo( 'Editor is offline.', {\n\t *\t\t\ttitle: 'Network information'\n\t *\t\t} );\n\t *\n\t * @param {String} message The content of the notification.\n\t * @param {Object} [data={}] Additional data.\n\t * @param {String} [data.namespace] Additional event namespace.\n\t * @param {String} [data.title] The title of the notification.\n\t */\n\tshowInfo( message, data = {} ) {\n\t\tthis._showNotification( {\n\t\t\tmessage,\n\t\t\ttype: 'info',\n\t\t\tnamespace: data.namespace,\n\t\t\ttitle: data.title\n\t\t} );\n\t}\n\n\t/**\n\t * Shows a warning notification.\n\t *\n\t * By default, it fires the {@link #event:show:warning `show:warning` event}\n\t * with the given `data`. The event namespace can be extended using the `data.namespace` option. For example:\n\t *\n\t * \t\tshowWarning( 'Image upload error.', {\n\t * \t\t\tnamespace: 'upload:image'\n\t * \t\t} );\n\t *\n\t * will fire the `show:warning:upload:image` event.\n\t *\n\t * You can provide the title of the notification:\n\t *\n\t *\t\tshowWarning( 'Image upload error.', {\n\t *\t\t\ttitle: 'Upload failed'\n\t *\t\t} );\n\t *\n\t * Note that each unhandled and not stopped `warning` notification will be displayed as a system alert.\n\t * The plugin responsible for displaying warnings should `stop()` the event to prevent displaying it as an alert:\n\t *\n\t * \t\tnotifications.on( 'show:warning', ( evt, data ) => {\n\t * \t\t\t// Do something with the data.\n\t *\n\t * \t\t\t// Stop this event to prevent displaying it as an alert.\n\t * \t\t\tevt.stop();\n\t * \t\t} );\n\t *\n\t * You can attach many listeners to the same event and `stop()` this event in a listener with a low priority:\n\t *\n\t * \t\tnotifications.on( 'show:warning', ( evt, data ) => {\n\t * \t\t\t// Show the warning in the UI, but do not stop it.\n\t * \t\t} );\n\t *\n\t * \t\tnotifications.on( 'show:warning', ( evt, data ) => {\n\t * \t\t\t// Log the warning to some error tracker.\n\t *\n\t * \t\t\t// Stop this event to prevent displaying it as an alert.\n\t * \t\t\tevt.stop();\n\t * \t\t}, { priority: 'low' } );\n\t *\n\t * @param {String} message The content of the notification.\n\t * @param {Object} [data={}] Additional data.\n\t * @param {String} [data.namespace] Additional event namespace.\n\t * @param {String} [data.title] The title of the notification.\n\t */\n\tshowWarning( message, data = {} ) {\n\t\tthis._showNotification( {\n\t\t\tmessage,\n\t\t\ttype: 'warning',\n\t\t\tnamespace: data.namespace,\n\t\t\ttitle: data.title\n\t\t} );\n\t}\n\n\t/**\n\t * Fires the `show` event with the specified type, namespace and message.\n\t *\n\t * @private\n\t * @param {Object} data The message data.\n\t * @param {String} data.message The content of the notification.\n\t * @param {'success'|'info'|'warning'} data.type The type of the message.\n\t * @param {String} [data.namespace] Additional event namespace.\n\t * @param {String} [data.title=''] The title of the notification.\n\t */\n\t_showNotification( data ) {\n\t\tconst event = `show:${ data.type }` + ( data.namespace ? `:${ data.namespace }` : '' );\n\n\t\tthis.fire( event, {\n\t\t\tmessage: data.message,\n\t\t\ttype: data.type,\n\t\t\ttitle: data.title || ''\n\t\t} );\n\t}\n\n\t/**\n\t * Fired when one of the `showSuccess()`, `showInfo()`, `showWarning()` methods is called.\n\t *\n\t * @event show\n\t * @param {Object} data The notification data.\n\t * @param {String} data.message The content of the notification.\n\t * @param {String} data.title The title of the notification.\n\t * @param {'success'|'info'|'warning'} data.type The type of the notification.\n\t */\n\n\t/**\n\t * Fired when the `showSuccess()` method is called.\n\t *\n\t * @event show:success\n\t * @param {Object} data The notification data.\n\t * @param {String} data.message The content of the notification.\n\t * @param {String} data.title The title of the notification.\n\t * @param {'success'} data.type The type of the notification.\n\t */\n\n\t/**\n\t * Fired when the `showInfo()` method is called.\n\t *\n\t * @event show:info\n\t * @param {Object} data The notification data.\n\t * @param {String} data.message The content of the notification.\n\t * @param {String} data.title The title of the notification.\n\t * @param {'info'} data.type The type of the notification.\n\t */\n\n\t/**\n\t * Fired when the `showWarning()` method is called.\n\t *\n\t * When this event is not handled or stopped by `event.stop()`, the `data.message` of this event will\n\t * be automatically displayed as a system alert.\n\t *\n\t * @event show:warning\n\t * @param {Object} data The notification data.\n\t * @param {String} data.message The content of the notification.\n\t * @param {String} data.title The title of the notification.\n\t * @param {'warning'} data.type The type of the notification.\n\t */\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module module:engine/view/upcastwriter\n */\n\nimport DocumentFragment from './documentfragment';\nimport Element from './element';\nimport Text from './text';\nimport { isPlainObject } from 'lodash-es';\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\n\n/**\n * View upcast writer. It provides a set of methods used to manipulate non-semantic view trees.\n *\n * It should be used only while working on a non-semantic view\n * (e.g. a view created from HTML string on paste).\n * To manipulate a view which was or is being downcasted from the the model use the\n * {@link module:engine/view/downcastwriter~DowncastWriter downcast writer}.\n *\n * Read more about changing the view in the {@glink framework/guides/architecture/editing-engine#changing-the-view Changing the view}\n * section of the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide.\n *\n * Unlike `DowncastWriter`, which is available in the {@link module:engine/view/view~View#change `View#change()`} block,\n * `UpcastWriter` can be created wherever you need it:\n *\n *\t\tconst writer = new UpcastWriter( viewDocument );\n *\t\tconst text = writer.createText( 'foo!' );\n *\n *\t\twriter.appendChild( text, someViewElement );\n */\nexport default class UpcastWriter {\n\t/**\n\t * @param {module:engine/view/document~Document} document The view document instance in which this upcast writer operates.\n\t */\n\tconstructor( document ) {\n\t\t/**\n\t\t * The view document instance in which this upcast writer operates.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/documentfragment~DocumentFragment} instance.\n\t *\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into the created document fragment.\n\t * @returns {module:engine/view/documentfragment~DocumentFragment} The created document fragment.\n\t */\n\tcreateDocumentFragment( children ) {\n\t\treturn new DocumentFragment( this.document, children );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/element~Element} instance.\n\t *\n\t * Attributes can be passed in various formats:\n\t *\n\t *\t\tupcastWriter.createElement( 'div', { class: 'editor', contentEditable: 'true' } ); // object\n\t *\t\tupcastWriter.createElement( 'div', [ [ 'class', 'editor' ], [ 'contentEditable', 'true' ] ] ); // map-like iterator\n\t *\t\tupcastWriter.createElement( 'div', mapOfAttributes ); // map\n\t *\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t * @returns {module:engine/view/element~Element} Created element.\n\t */\n\tcreateElement( name, attrs, children ) {\n\t\treturn new Element( this.document, name, attrs, children );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/text~Text} instance.\n\t *\n\t * @param {String} data The text's data.\n\t * @returns {module:engine/view/text~Text} The created text node.\n\t */\n\tcreateText( data ) {\n\t\treturn new Text( this.document, data );\n\t}\n\n\t/**\n\t * Clones the provided element.\n\t *\n\t * @see module:engine/view/element~Element#_clone\n\t * @param {module:engine/view/element~Element} element Element to be cloned.\n\t * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any children.\n\t * @returns {module:engine/view/element~Element} Clone of this element.\n\t */\n\tclone( element, deep = false ) {\n\t\treturn element._clone( deep );\n\t}\n\n\t/**\n\t * Appends a child node or a list of child nodes at the end of this node\n\t * and sets the parent of these nodes to this element.\n\t *\n\t * @see module:engine/view/element~Element#_appendChild\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} element Element\n\t * to which items will be appended.\n\t * @fires module:engine/view/node~Node#event:change\n\t * @returns {Number} Number of appended nodes.\n\t */\n\tappendChild( items, element ) {\n\t\treturn element._appendChild( items );\n\t}\n\n\t/**\n\t * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n\t * this element.\n\t *\n\t * @see module:engine/view/element~Element#_insertChild\n\t * @param {Number} index Offset at which nodes should be inserted.\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} element Element\n\t * to which items will be inserted.\n\t * @fires module:engine/view/node~Node#event:change\n\t * @returns {Number} Number of inserted nodes.\n\t */\n\tinsertChild( index, items, element ) {\n\t\treturn element._insertChild( index, items );\n\t}\n\n\t/**\n\t * Removes the given number of child nodes starting at the given index and set the parent of these nodes to `null`.\n\t *\n\t * @see module:engine/view/element~Element#_removeChildren\n\t * @param {Number} index Offset from which nodes will be removed.\n\t * @param {Number} howMany Number of nodes to remove.\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} element Element\n\t * which children will be removed.\n\t * @fires module:engine/view/node~Node#event:change\n\t * @returns {Array.<module:engine/view/node~Node>} The array containing removed nodes.\n\t */\n\tremoveChildren( index, howMany, element ) {\n\t\treturn element._removeChildren( index, howMany );\n\t}\n\n\t/**\n\t * Removes given element from the view structure. Will not have effect on detached elements.\n\t *\n\t * @param {module:engine/view/element~Element} element Element which will be removed.\n\t * @returns {Array.<module:engine/view/node~Node>} The array containing removed nodes.\n\t */\n\tremove( element ) {\n\t\tconst parent = element.parent;\n\n\t\tif ( parent ) {\n\t\t\treturn this.removeChildren( parent.getChildIndex( element ), 1, parent );\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t/**\n\t * Replaces given element with the new one in the view structure. Will not have effect on detached elements.\n\t *\n\t * @param {module:engine/view/element~Element} oldElement Element which will be replaced.\n\t * @param {module:engine/view/element~Element} newElement Element which will be inserted in the place of the old element.\n\t * @returns {Boolean} Whether old element was successfully replaced.\n\t */\n\treplace( oldElement, newElement ) {\n\t\tconst parent = oldElement.parent;\n\n\t\tif ( parent ) {\n\t\t\tconst index = parent.getChildIndex( oldElement );\n\n\t\t\tthis.removeChildren( index, 1, parent );\n\t\t\tthis.insertChild( index, newElement, parent );\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Removes given element from view structure and places its children in its position.\n\t * It does nothing if element has no parent.\n\t *\n\t * @param {module:engine/view/element~Element} element Element to unwrap.\n\t */\n\tunwrapElement( element ) {\n\t\tconst parent = element.parent;\n\n\t\tif ( parent ) {\n\t\t\tconst index = parent.getChildIndex( element );\n\n\t\t\tthis.remove( element );\n\t\t\tthis.insertChild( index, element.getChildren(), parent );\n\t\t}\n\t}\n\n\t/**\n\t * Renames element by creating a copy of a given element but with its name changed and then moving contents of the\n\t * old element to the new one.\n\t *\n\t * Since this function creates a new element and removes the given one, the new element is returned to keep reference.\n\t *\n\t * @param {String} newName New element name.\n\t * @param {module:engine/view/element~Element} element Element to be renamed.\n\t * @returns {module:engine/view/element~Element|null} New element or null if the old element\n\t * was not replaced (happens for detached elements).\n\t */\n\trename( newName, element ) {\n\t\tconst newElement = new Element( this.document, newName, element.getAttributes(), element.getChildren() );\n\n\t\treturn this.replace( element, newElement ) ? newElement : null;\n\t}\n\n\t/**\n\t * Adds or overwrites element's attribute with a specified key and value.\n\t *\n\t *\t\twriter.setAttribute( linkElement, 'href', 'http://ckeditor.com' );\n\t *\n\t * @see module:engine/view/element~Element#_setAttribute\n\t * @param {String} key Attribute key.\n\t * @param {String} value Attribute value.\n\t * @param {module:engine/view/element~Element} element Element for which attribute will be set.\n\t */\n\tsetAttribute( key, value, element ) {\n\t\telement._setAttribute( key, value );\n\t}\n\n\t/**\n\t * Removes attribute from the element.\n\t *\n\t *\t\twriter.removeAttribute( linkElement, 'href' );\n\t *\n\t * @see module:engine/view/element~Element#_removeAttribute\n\t * @param {String} key Attribute key.\n\t * @param {module:engine/view/element~Element} element Element from which attribute will be removed.\n\t */\n\tremoveAttribute( key, element ) {\n\t\telement._removeAttribute( key );\n\t}\n\n\t/**\n\t * Adds specified class to the element.\n\t *\n\t *\t\twriter.addClass( linkElement, 'foo' );\n\t *\t\twriter.addClass( linkElement, [ 'foo', 'bar' ] );\n\t *\n\t * @see module:engine/view/element~Element#_addClass\n\t * @param {Array.<String>|String} className Single class name or array of class names which will be added.\n\t * @param {module:engine/view/element~Element} element Element for which class will be added.\n\t */\n\taddClass( className, element ) {\n\t\telement._addClass( className );\n\t}\n\n\t/**\n\t * Removes specified class from the element.\n\t *\n\t *\t\twriter.removeClass( linkElement, 'foo' );\n\t *\t\twriter.removeClass( linkElement, [ 'foo', 'bar' ] );\n\t *\n\t * @see module:engine/view/element~Element#_removeClass\n\t * @param {Array.<String>|String} className Single class name or array of class names which will be removed.\n\t * @param {module:engine/view/element~Element} element Element from which class will be removed.\n\t */\n\tremoveClass( className, element ) {\n\t\telement._removeClass( className );\n\t}\n\n\t/**\n\t * Adds style to the element.\n\t *\n\t *\t\twriter.setStyle( element, 'color', 'red' );\n\t *\t\twriter.setStyle( element, {\n\t *\t\t\tcolor: 'red',\n\t *\t\t\tposition: 'fixed'\n\t *\t\t} );\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#set `StylesMap#set()`} for details.\n\t *\n\t * @see module:engine/view/element~Element#_setStyle\n\t * @param {String|Object} property Property name or object with key - value pairs.\n\t * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n\t * @param {module:engine/view/element~Element} element Element for which style will be added.\n\t */\n\tsetStyle( property, value, element ) {\n\t\tif ( isPlainObject( property ) && element === undefined ) {\n\t\t\telement = value;\n\t\t}\n\t\telement._setStyle( property, value );\n\t}\n\n\t/**\n\t * Removes specified style from the element.\n\t *\n\t *\t\twriter.removeStyle( element, 'color' );  // Removes 'color' style.\n\t *\t\twriter.removeStyle( element, [ 'color', 'border-top' ] ); // Removes both 'color' and 'border-top' styles.\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#remove `StylesMap#remove()`} for details.\n\t *\n\t * @see module:engine/view/element~Element#_removeStyle\n\t * @param {Array.<String>|String} property Style property name or names to be removed.\n\t * @param {module:engine/view/element~Element} element Element from which style will be removed.\n\t */\n\tremoveStyle( property, element ) {\n\t\telement._removeStyle( property );\n\t}\n\n\t/**\n\t * Sets a custom property on element. Unlike attributes, custom properties are not rendered to the DOM,\n\t * so they can be used to add special data to elements.\n\t *\n\t * @see module:engine/view/element~Element#_setCustomProperty\n\t * @param {String|Symbol} key Custom property name/key.\n\t * @param {*} value Custom property value to be stored.\n\t * @param {module:engine/view/element~Element} element Element for which custom property will be set.\n\t */\n\tsetCustomProperty( key, value, element ) {\n\t\telement._setCustomProperty( key, value );\n\t}\n\n\t/**\n\t * Removes a custom property stored under the given key.\n\t *\n\t * @see module:engine/view/element~Element#_removeCustomProperty\n\t * @param {String|Symbol} key Name/key of the custom property to be removed.\n\t * @param {module:engine/view/element~Element} element Element from which the custom property will be removed.\n\t * @returns {Boolean} Returns true if property was removed.\n\t */\n\tremoveCustomProperty( key, element ) {\n\t\treturn element._removeCustomProperty( key );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/view/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link #createPositionBefore},\n\t * * {@link #createPositionAfter},\n\t *\n\t * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tcreatePositionAt( itemOrPosition, offset ) {\n\t\treturn Position._createAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new position after given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionAfter( item ) {\n\t\treturn Position._createAfter( item );\n\t}\n\n\t/**\n\t * Creates a new position before given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionBefore( item ) {\n\t\treturn Position._createBefore( item );\n\t}\n\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** This factory method creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/view/position~Position} start Start position.\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRange( start, end ) {\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n\t *\n\t * @param {module:engine/view/item~Item} item\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeOn( item ) {\n\t\treturn Range._createOn( item );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeIn( element ) {\n\t\treturn Range._createIn( element );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/selection~Selection} instance.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the document selection.\n\t *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t * @returns {module:engine/view/selection~Selection}\n\t */\n\tcreateSelection( selectable, placeOrOffset, options ) {\n\t\treturn new Selection( selectable, placeOrOffset, options );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport FileRepository from '@ckeditor/ckeditor5-upload/src/filerepository';\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { insertImage, isImageAllowed } from '../image/utils';\n\n/**\n * @module image/imageupload/imageuploadcommand\n */\n\n/**\n * The image upload command.\n *\n * The command is registered by the {@link module:image/imageupload/imageuploadediting~ImageUploadEditing} plugin as `'imageUpload'`.\n *\n * In order to upload an image at the current selection position\n * (according to the {@link module:widget/utils~findOptimalInsertionPosition} algorithm),\n * execute the command and pass the native image file instance:\n *\n *\t\tthis.listenTo( editor.editing.view.document, 'clipboardInput', ( evt, data ) => {\n *\t\t\t// Assuming that only images were pasted:\n *\t\t\tconst images = Array.from( data.dataTransfer.files );\n *\n *\t\t\t// Upload the first image:\n *\t\t\teditor.execute( 'imageUpload', { file: images[ 0 ] } );\n *\t\t} );\n *\n * It is also possible to insert multiple images at once:\n *\n *\t\teditor.execute( 'imageUpload', {\n *\t\t\tfile: [\n *\t\t\t\tfile1,\n *\t\t\t\tfile2\n *\t\t\t]\n *\t\t} );\n *\n * @extends module:core/command~Command\n */\nexport default class ImageUploadCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = isImageAllowed( this.editor.model );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @fires execute\n\t * @param {Object} options Options for the executed command.\n\t * @param {File|Array.<File>} options.file The image file or an array of image files to upload.\n\t */\n\texecute( options ) {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\n\t\tconst fileRepository = editor.plugins.get( FileRepository );\n\n\t\tmodel.change( writer => {\n\t\t\tconst filesToUpload = Array.isArray( options.file ) ? options.file : [ options.file ];\n\n\t\t\tfor ( const file of filesToUpload ) {\n\t\t\t\tuploadImage( writer, model, fileRepository, file );\n\t\t\t}\n\t\t} );\n\t}\n}\n\n// Handles uploading single file.\n//\n// @param {module:engine/model/writer~writer} writer\n// @param {module:engine/model/model~Model} model\n// @param {File} file\nfunction uploadImage( writer, model, fileRepository, file ) {\n\tconst loader = fileRepository.createLoader( file );\n\n\t// Do not throw when upload adapter is not set. FileRepository will log an error anyway.\n\tif ( !loader ) {\n\t\treturn;\n\t}\n\n\tinsertImage( writer, model, { uploadId: loader.id } );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageupload/imageuploadediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FileRepository from '@ckeditor/ckeditor5-upload/src/filerepository';\nimport Notification from '@ckeditor/ckeditor5-ui/src/notification/notification';\nimport Clipboard from '@ckeditor/ckeditor5-clipboard/src/clipboard';\nimport UpcastWriter from '@ckeditor/ckeditor5-engine/src/view/upcastwriter';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\nimport ImageUploadCommand from '../../src/imageupload/imageuploadcommand';\nimport { fetchLocalImage, isLocalImage } from '../../src/imageupload/utils';\nimport { createImageTypeRegExp } from './utils';\nimport { getViewImgFromWidget } from '../image/utils';\n\n/**\n * The editing part of the image upload feature. It registers the `'imageUpload'` command.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageUploadEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ FileRepository, Notification, Clipboard ];\n\t}\n\n\tstatic get pluginName() {\n\t\treturn 'ImageUploadEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'image', {\n\t\t\tupload: {\n\t\t\t\ttypes: [ 'jpeg', 'png', 'gif', 'bmp', 'webp', 'tiff' ]\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst doc = editor.model.document;\n\t\tconst schema = editor.model.schema;\n\t\tconst conversion = editor.conversion;\n\t\tconst fileRepository = editor.plugins.get( FileRepository );\n\n\t\tconst imageTypes = createImageTypeRegExp( editor.config.get( 'image.upload.types' ) );\n\n\t\t// Setup schema to allow uploadId and uploadStatus for images.\n\t\tschema.extend( 'image', {\n\t\t\tallowAttributes: [ 'uploadId', 'uploadStatus' ]\n\t\t} );\n\n\t\t// Register imageUpload command.\n\t\teditor.commands.add( 'imageUpload', new ImageUploadCommand( editor ) );\n\n\t\t// Register upcast converter for uploadId.\n\t\tconversion.for( 'upcast' )\n\t\t\t.attributeToAttribute( {\n\t\t\t\tview: {\n\t\t\t\t\tname: 'img',\n\t\t\t\t\tkey: 'uploadId'\n\t\t\t\t},\n\t\t\t\tmodel: 'uploadId'\n\t\t\t} );\n\n\t\t// Handle pasted images.\n\t\t// For every image file, a new file loader is created and a placeholder image is\n\t\t// inserted into the content. Then, those images are uploaded once they appear in the model\n\t\t// (see Document#change listener below).\n\t\tthis.listenTo( editor.editing.view.document, 'clipboardInput', ( evt, data ) => {\n\t\t\t// Skip if non empty HTML data is included.\n\t\t\t// https://github.com/ckeditor/ckeditor5-upload/issues/68\n\t\t\tif ( isHtmlIncluded( data.dataTransfer ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst images = Array.from( data.dataTransfer.files ).filter( file => {\n\t\t\t\t// See https://github.com/ckeditor/ckeditor5-image/pull/254.\n\t\t\t\tif ( !file ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn imageTypes.test( file.type );\n\t\t\t} );\n\n\t\t\tconst ranges = data.targetRanges.map( viewRange => editor.editing.mapper.toModelRange( viewRange ) );\n\n\t\t\teditor.model.change( writer => {\n\t\t\t\t// Set selection to paste target.\n\t\t\t\twriter.setSelection( ranges );\n\n\t\t\t\tif ( images.length ) {\n\t\t\t\t\tevt.stop();\n\n\t\t\t\t\t// Upload images after the selection has changed in order to ensure the command's state is refreshed.\n\t\t\t\t\teditor.model.enqueueChange( 'default', () => {\n\t\t\t\t\t\teditor.execute( 'imageUpload', { file: images } );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Handle HTML pasted with images with base64 or blob sources.\n\t\t// For every image file, a new file loader is created and a placeholder image is\n\t\t// inserted into the content. Then, those images are uploaded once they appear in the model\n\t\t// (see Document#change listener below).\n\t\tthis.listenTo( editor.plugins.get( Clipboard ), 'inputTransformation', ( evt, data ) => {\n\t\t\tconst fetchableImages = Array.from( editor.editing.view.createRangeIn( data.content ) )\n\t\t\t\t.filter( value => isLocalImage( value.item ) && !value.item.getAttribute( 'uploadProcessed' ) )\n\t\t\t\t.map( value => { return { promise: fetchLocalImage( value.item ), imageElement: value.item }; } );\n\n\t\t\tif ( !fetchableImages.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst writer = new UpcastWriter( editor.editing.view.document );\n\n\t\t\tfor ( const fetchableImage of fetchableImages ) {\n\t\t\t\t// Set attribute marking that the image was processed already.\n\t\t\t\twriter.setAttribute( 'uploadProcessed', true, fetchableImage.imageElement );\n\n\t\t\t\tconst loader = fileRepository.createLoader( fetchableImage.promise );\n\n\t\t\t\tif ( loader ) {\n\t\t\t\t\twriter.setAttribute( 'src', '', fetchableImage.imageElement );\n\t\t\t\t\twriter.setAttribute( 'uploadId', loader.id, fetchableImage.imageElement );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Prevents from the browser redirecting to the dropped image.\n\t\teditor.editing.view.document.on( 'dragover', ( evt, data ) => {\n\t\t\tdata.preventDefault();\n\t\t} );\n\n\t\t// Upload placeholder images that appeared in the model.\n\t\tdoc.on( 'change', () => {\n\t\t\tconst changes = doc.differ.getChanges( { includeChangesInGraveyard: true } );\n\n\t\t\tfor ( const entry of changes ) {\n\t\t\t\tif ( entry.type == 'insert' && entry.name != '$text' ) {\n\t\t\t\t\tconst item = entry.position.nodeAfter;\n\t\t\t\t\tconst isInGraveyard = entry.position.root.rootName == '$graveyard';\n\n\t\t\t\t\tfor ( const image of getImagesFromChangeItem( editor, item ) ) {\n\t\t\t\t\t\t// Check if the image element still has upload id.\n\t\t\t\t\t\tconst uploadId = image.getAttribute( 'uploadId' );\n\n\t\t\t\t\t\tif ( !uploadId ) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Check if the image is loaded on this client.\n\t\t\t\t\t\tconst loader = fileRepository.loaders.get( uploadId );\n\n\t\t\t\t\t\tif ( !loader ) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isInGraveyard ) {\n\t\t\t\t\t\t\t// If the image was inserted to the graveyard - abort the loading process.\n\t\t\t\t\t\t\tloader.abort();\n\t\t\t\t\t\t} else if ( loader.status == 'idle' ) {\n\t\t\t\t\t\t\t// If the image was inserted into content and has not been loaded yet, start loading it.\n\t\t\t\t\t\t\tthis._readAndUpload( loader, image );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Reads and uploads an image.\n\t *\n\t * The image is read from the disk and as a Base64-encoded string it is set temporarily to\n\t * `image[src]`. When the image is successfully uploaded, the temporary data is replaced with the target\n\t * image's URL (the URL to the uploaded image on the server).\n\t *\n\t * @protected\n\t * @param {module:upload/filerepository~FileLoader} loader\n\t * @param {module:engine/model/element~Element} imageElement\n\t * @returns {Promise}\n\t */\n\t_readAndUpload( loader, imageElement ) {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst t = editor.locale.t;\n\t\tconst fileRepository = editor.plugins.get( FileRepository );\n\t\tconst notification = editor.plugins.get( Notification );\n\n\t\tmodel.enqueueChange( 'transparent', writer => {\n\t\t\twriter.setAttribute( 'uploadStatus', 'reading', imageElement );\n\t\t} );\n\n\t\treturn loader.read()\n\t\t\t.then( () => {\n\t\t\t\tconst promise = loader.upload();\n\n\t\t\t\t// Force re–paint in Safari. Without it, the image will display with a wrong size.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5/issues/1975\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif ( env.isSafari ) {\n\t\t\t\t\tconst viewFigure = editor.editing.mapper.toViewElement( imageElement );\n\t\t\t\t\tconst viewImg = getViewImgFromWidget( viewFigure );\n\n\t\t\t\t\teditor.editing.view.once( 'render', () => {\n\t\t\t\t\t\t// Early returns just to be safe. There might be some code ran\n\t\t\t\t\t\t// in between the outer scope and this callback.\n\t\t\t\t\t\tif ( !viewImg.parent ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst domFigure = editor.editing.view.domConverter.mapViewToDom( viewImg.parent );\n\n\t\t\t\t\t\tif ( !domFigure ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst originalDisplay = domFigure.style.display;\n\n\t\t\t\t\t\tdomFigure.style.display = 'none';\n\n\t\t\t\t\t\t// Make sure this line will never be removed during minification for having \"no effect\".\n\t\t\t\t\t\tdomFigure._ckHack = domFigure.offsetHeight;\n\n\t\t\t\t\t\tdomFigure.style.display = originalDisplay;\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tmodel.enqueueChange( 'transparent', writer => {\n\t\t\t\t\twriter.setAttribute( 'uploadStatus', 'uploading', imageElement );\n\t\t\t\t} );\n\n\t\t\t\treturn promise;\n\t\t\t} )\n\t\t\t.then( data => {\n\t\t\t\tmodel.enqueueChange( 'transparent', writer => {\n\t\t\t\t\twriter.setAttributes( { uploadStatus: 'complete', src: data.default }, imageElement );\n\t\t\t\t\tthis._parseAndSetSrcsetAttributeOnImage( data, imageElement, writer );\n\t\t\t\t} );\n\n\t\t\t\tclean();\n\t\t\t} )\n\t\t\t.catch( error => {\n\t\t\t\t// If status is not 'error' nor 'aborted' - throw error because it means that something else went wrong,\n\t\t\t\t// it might be generic error and it would be real pain to find what is going on.\n\t\t\t\tif ( loader.status !== 'error' && loader.status !== 'aborted' ) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// Might be 'aborted'.\n\t\t\t\tif ( loader.status == 'error' && error ) {\n\t\t\t\t\tnotification.showWarning( error, {\n\t\t\t\t\t\ttitle: t( 'Upload failed' ),\n\t\t\t\t\t\tnamespace: 'upload'\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tclean();\n\n\t\t\t\t// Permanently remove image from insertion batch.\n\t\t\t\tmodel.enqueueChange( 'transparent', writer => {\n\t\t\t\t\twriter.remove( imageElement );\n\t\t\t\t} );\n\t\t\t} );\n\n\t\tfunction clean() {\n\t\t\tmodel.enqueueChange( 'transparent', writer => {\n\t\t\t\twriter.removeAttribute( 'uploadId', imageElement );\n\t\t\t\twriter.removeAttribute( 'uploadStatus', imageElement );\n\t\t\t} );\n\n\t\t\tfileRepository.destroyLoader( loader );\n\t\t}\n\t}\n\n\t/**\n\t * Creates the `srcset` attribute based on a given file upload response and sets it as an attribute to a specific image element.\n\t *\n\t * @protected\n\t * @param {Object} data Data object from which `srcset` will be created.\n\t * @param {module:engine/model/element~Element} image The image element on which the `srcset` attribute will be set.\n\t * @param {module:engine/model/writer~Writer} writer\n\t */\n\t_parseAndSetSrcsetAttributeOnImage( data, image, writer ) {\n\t\t// Srcset attribute for responsive images support.\n\t\tlet maxWidth = 0;\n\n\t\tconst srcsetAttribute = Object.keys( data )\n\t\t// Filter out keys that are not integers.\n\t\t\t.filter( key => {\n\t\t\t\tconst width = parseInt( key, 10 );\n\n\t\t\t\tif ( !isNaN( width ) ) {\n\t\t\t\t\tmaxWidth = Math.max( maxWidth, width );\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} )\n\n\t\t\t// Convert each key to srcset entry.\n\t\t\t.map( key => `${ data[ key ] } ${ key }w` )\n\n\t\t\t// Join all entries.\n\t\t\t.join( ', ' );\n\n\t\tif ( srcsetAttribute != '' ) {\n\t\t\twriter.setAttribute( 'srcset', {\n\t\t\t\tdata: srcsetAttribute,\n\t\t\t\twidth: maxWidth\n\t\t\t}, image );\n\t\t}\n\t}\n}\n\n// Returns `true` if non-empty `text/html` is included in the data transfer.\n//\n// @param {module:clipboard/datatransfer~DataTransfer} dataTransfer\n// @returns {Boolean}\nexport function isHtmlIncluded( dataTransfer ) {\n\treturn Array.from( dataTransfer.types ).includes( 'text/html' ) && dataTransfer.getData( 'text/html' ) !== '';\n}\n\nfunction getImagesFromChangeItem( editor, item ) {\n\treturn Array.from( editor.model.createRangeOn( item ) )\n\t\t.filter( value => value.item.is( 'image' ) )\n\t\t.map( value => value.item );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageupload\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageUploadUI from './imageupload/imageuploadui';\nimport ImageUploadProgress from './imageupload/imageuploadprogress';\nimport ImageUploadEditing from './imageupload/imageuploadediting';\n\n/**\n * The image upload plugin.\n *\n * For a detailed overview, check the {@glink features/image-upload/image-upload image upload feature} documentation.\n *\n * This plugin does not do anything directly, but it loads a set of specific plugins to enable image uploading:\n *\n * * {@link module:image/imageupload/imageuploadediting~ImageUploadEditing},\n * * {@link module:image/imageupload/imageuploadui~ImageUploadUI},\n * * {@link module:image/imageupload/imageuploadprogress~ImageUploadProgress}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageUpload extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageUpload';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageUploadEditing, ImageUploadUI, ImageUploadProgress ];\n\t}\n}\n\n/**\n * Image upload configuration.\n *\n * @member {module:image/imageupload~ImageUploadConfig} module:image/image~ImageConfig#upload\n */\n\n/**\n * The configuration of the image upload feature. Used by the image upload feature in the `@ckeditor/ckeditor5-image` package.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\timage: {\n * \t\t\t\t\tupload:  ... // Image upload feature options.\n * \t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface module:image/imageupload~ImageUploadConfig\n */\n\n/**\n * The list of accepted image types.\n *\n * The accepted types of images can be customized to allow only certain types of images:\n *\n *\t\t// Allow only JPEG and PNG images:\n *\t\tconst imageUploadConfig = {\n *\t\t\ttypes: [ 'png', 'jpeg' ]\n *\t\t};\n *\n * The type string should match [one of the sub-types](https://www.iana.org/assignments/media-types/media-types.xhtml#image)\n * of the image MIME type. E.g. for the `image/jpeg` MIME type, add `'jpeg'` to your image upload configuration.\n *\n * **Note:** This setting only restricts some image types to be selected and uploaded through the CKEditor UI and commands. Image type\n * recognition and filtering should also be implemented on the server which accepts image uploads.\n *\n * @member {Array.<String>} module:image/imageupload~ImageUploadConfig#types\n * @default [ 'jpeg', 'png', 'gif', 'bmp', 'webp', 'tiff' ]\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ckfinder/ckfinderui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport browseFilesIcon from '../theme/icons/browse-files.svg';\n\n/**\n * The CKFinder UI plugin. It introduces the `'ckfinder'` toolbar button.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class CKFinderUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'CKFinderUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst componentFactory = editor.ui.componentFactory;\n\t\tconst t = editor.t;\n\n\t\tcomponentFactory.add( 'ckfinder', locale => {\n\t\t\tconst command = editor.commands.get( 'ckfinder' );\n\n\t\t\tconst button = new ButtonView( locale );\n\n\t\t\tbutton.set( {\n\t\t\t\tlabel: t( 'Insert image or file' ),\n\t\t\t\ticon: browseFilesIcon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tbutton.bind( 'isEnabled' ).to( command );\n\n\t\t\tbutton.on( 'execute', () => {\n\t\t\t\teditor.execute( 'ckfinder' );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn button;\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* global window */\n\n/**\n * @module ckfinder/ckfindercommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * The CKFinder command. It is used by the {@link module:ckfinder/ckfinderediting~CKFinderEditing CKFinder editing feature}\n * to open the CKFinder file manager to insert an image or a link to a file into the editor content.\n *\n *\t\teditor.execute( 'ckfinder' );\n *\n * **Note:** This command uses other features to perform tasks:\n * - To insert images the {@link module:image/image/imageinsertcommand~ImageInsertCommand 'imageInsert'} command\n * from the {@link module:image/image~Image Image feature}.\n * - To insert links to files the {@link module:link/linkcommand~LinkCommand 'link'} command\n * from the {@link module:link/link~Link Link feature}.\n *\n * @extends module:core/command~Command\n */\nexport default class CKFinderCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t// Remove default document listener to lower its priority.\n\t\tthis.stopListening( this.editor.model.document, 'change' );\n\n\t\t// Lower this command listener priority to be sure that refresh() will be called after link & image refresh.\n\t\tthis.listenTo( this.editor.model.document, 'change', () => this.refresh(), { priority: 'low' } );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst imageCommand = this.editor.commands.get( 'imageInsert' );\n\t\tconst linkCommand = this.editor.commands.get( 'link' );\n\n\t\t// The CKFinder command is enabled when one of image or link command is enabled.\n\t\tthis.isEnabled = imageCommand.isEnabled || linkCommand.isEnabled;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst editor = this.editor;\n\n\t\tconst openerMethod = this.editor.config.get( 'ckfinder.openerMethod' ) || 'modal';\n\n\t\tif ( openerMethod != 'popup' && openerMethod != 'modal' ) {\n\t\t\tthrow new CKEditorError( 'ckfinder-unknown-openerMethod: The openerMethod config option must by \"popup\" or \"modal\".', editor );\n\t\t}\n\n\t\tconst options = this.editor.config.get( 'ckfinder.options' ) || {};\n\n\t\toptions.chooseFiles = true;\n\n\t\t// Cache the user-defined onInit method\n\t\tconst originalOnInit = options.onInit;\n\n\t\t// Pass the lang code to the CKFinder if not defined by user.\n\t\tif ( !options.language ) {\n\t\t\toptions.language = editor.locale.uiLanguage;\n\t\t}\n\n\t\t// The onInit method allows to extend CKFinder's behavior. It is used to attach event listeners to file choosing related events.\n\t\toptions.onInit = finder => {\n\t\t\t// Call original options.onInit if it was defined by user.\n\t\t\tif ( originalOnInit ) {\n\t\t\t\toriginalOnInit( finder );\n\t\t\t}\n\n\t\t\tfinder.on( 'files:choose', evt => {\n\t\t\t\tconst files = evt.data.files.toArray();\n\n\t\t\t\t// Insert links\n\t\t\t\tconst links = files.filter( file => !file.isImage() );\n\t\t\t\tconst images = files.filter( file => file.isImage() );\n\n\t\t\t\tfor ( const linkFile of links ) {\n\t\t\t\t\teditor.execute( 'link', linkFile.getUrl() );\n\t\t\t\t}\n\n\t\t\t\tconst imagesUrls = [];\n\n\t\t\t\tfor ( const image of images ) {\n\t\t\t\t\tconst url = image.getUrl();\n\n\t\t\t\t\timagesUrls.push( url ? url : finder.request( 'file:getProxyUrl', { file: image } ) );\n\t\t\t\t}\n\n\t\t\t\tif ( imagesUrls.length ) {\n\t\t\t\t\tinsertImages( editor, imagesUrls );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tfinder.on( 'file:choose:resizedImage', evt => {\n\t\t\t\tconst resizedUrl = evt.data.resizedUrl;\n\n\t\t\t\tif ( !resizedUrl ) {\n\t\t\t\t\tconst notification = editor.plugins.get( 'Notification' );\n\t\t\t\t\tconst t = editor.locale.t;\n\n\t\t\t\t\tnotification.showWarning( t( 'Could not obtain resized image URL.' ), {\n\t\t\t\t\t\ttitle: t( 'Selecting resized image failed' ),\n\t\t\t\t\t\tnamespace: 'ckfinder'\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tinsertImages( editor, [ resizedUrl ] );\n\t\t\t} );\n\t\t};\n\n\t\twindow.CKFinder[ openerMethod ]( options );\n\t}\n}\n\nfunction insertImages( editor, urls ) {\n\tconst imageCommand = editor.commands.get( 'imageInsert' );\n\n\t// Check if inserting an image is actually possible - it might be possible to only insert a link.\n\tif ( !imageCommand.isEnabled ) {\n\t\tconst notification = editor.plugins.get( 'Notification' );\n\t\tconst t = editor.locale.t;\n\n\t\tnotification.showWarning( t( 'Could not insert image at the current position.' ), {\n\t\t\ttitle: t( 'Inserting image failed' ),\n\t\t\tnamespace: 'ckfinder'\n\t\t} );\n\n\t\treturn;\n\t}\n\n\teditor.execute( 'imageInsert', { source: urls } );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ckfinder/ckfinderediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageEditing from '@ckeditor/ckeditor5-image/src/image/imageediting';\nimport LinkEditing from '@ckeditor/ckeditor5-link/src/linkediting';\nimport Notification from '@ckeditor/ckeditor5-ui/src/notification/notification';\n\nimport CKFinderCommand from './ckfindercommand';\n\n/**\n * The CKFinder editing feature. It introduces the {@link module:ckfinder/ckfindercommand~CKFinderCommand CKFinder command}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class CKFinderEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'CKFinderEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Notification, ImageEditing, LinkEditing ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\teditor.commands.add( 'ckfinder', new CKFinderCommand( editor ) );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals window, document */\n\n/**\n * @module adapter-ckfinder/utils\n */\n\nconst TOKEN_COOKIE_NAME = 'ckCsrfToken';\nconst TOKEN_LENGTH = 40;\nconst tokenCharset = 'abcdefghijklmnopqrstuvwxyz0123456789';\n\n/**\n * Returns the CSRF token value. The value is a hash stored in `document.cookie`\n * under the `ckCsrfToken` key. The CSRF token can be used to secure the communication\n * between the web browser and the CKFinder server.\n *\n * @returns {String}\n */\nexport function getCsrfToken() {\n\tlet token = getCookie( TOKEN_COOKIE_NAME );\n\n\tif ( !token || token.length != TOKEN_LENGTH ) {\n\t\ttoken = generateToken( TOKEN_LENGTH );\n\t\tsetCookie( TOKEN_COOKIE_NAME, token );\n\t}\n\n\treturn token;\n}\n\n/**\n * Returns the value of the cookie with a given name or `null` if the cookie is not found.\n *\n * @param {String} name\n * @returns {String|null}\n */\nexport function getCookie( name ) {\n\tname = name.toLowerCase();\n\tconst parts = document.cookie.split( ';' );\n\n\tfor ( const part of parts ) {\n\t\tconst pair = part.split( '=' );\n\t\tconst key = decodeURIComponent( pair[ 0 ].trim().toLowerCase() );\n\n\t\tif ( key === name ) {\n\t\t\treturn decodeURIComponent( pair[ 1 ] );\n\t\t}\n\t}\n\n\treturn null;\n}\n\n/**\n * Sets the value of the cookie with a given name.\n *\n * @param {String} name\n * @param {String} value\n */\nexport function setCookie( name, value ) {\n\tdocument.cookie = encodeURIComponent( name ) + '=' + encodeURIComponent( value ) + ';path=/';\n}\n\n// Generates the CSRF token with the given length.\n//\n// @private\n// @param {Number} length\n// @returns {string}\nfunction generateToken( length ) {\n\tlet result = '';\n\tconst randValues = new Uint8Array( length );\n\n\twindow.crypto.getRandomValues( randValues );\n\n\tfor ( let j = 0; j < randValues.length; j++ ) {\n\t\tconst character = tokenCharset.charAt( randValues[ j ] % tokenCharset.length );\n\t\tresult += Math.random() > 0.5 ? character.toUpperCase() : character;\n\t}\n\n\treturn result;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals XMLHttpRequest, FormData */\n\n/**\n * @module adapter-ckfinder/uploadadapter\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FileRepository from '@ckeditor/ckeditor5-upload/src/filerepository';\nimport { getCsrfToken } from './utils';\n\n/**\n * A plugin that enables file uploads in CKEditor 5 using the CKFinder server–side connector.\n *\n * See the {@glink features/image-upload/ckfinder \"CKFinder file manager integration\" guide} to learn how to configure\n * and use this feature as well as find out more about the full integration with the file manager\n * provided by the {@link module:ckfinder/ckfinder~CKFinder} plugin.\n *\n * Check out the {@glink features/image-upload/image-upload comprehensive \"Image upload overview\"} to learn about\n * other ways to upload images into CKEditor 5.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class CKFinderUploadAdapter extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ FileRepository ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'CKFinderUploadAdapter';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst url = this.editor.config.get( 'ckfinder.uploadUrl' );\n\n\t\tif ( !url ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Register CKFinderAdapter\n\t\tthis.editor.plugins.get( FileRepository ).createUploadAdapter = loader => new UploadAdapter( loader, url, this.editor.t );\n\t}\n}\n\n/**\n * Upload adapter for CKFinder.\n *\n * @private\n * @implements module:upload/filerepository~UploadAdapter\n */\nclass UploadAdapter {\n\t/**\n\t * Creates a new adapter instance.\n\t *\n\t * @param {module:upload/filerepository~FileLoader} loader\n\t * @param {String} url\n\t * @param {module:utils/locale~Locale#t} t\n\t */\n\tconstructor( loader, url, t ) {\n\t\t/**\n\t\t * FileLoader instance to use during the upload.\n\t\t *\n\t\t * @member {module:upload/filerepository~FileLoader} #loader\n\t\t */\n\t\tthis.loader = loader;\n\n\t\t/**\n\t\t * Upload URL.\n\t\t *\n\t\t * @member {String} #url\n\t\t */\n\t\tthis.url = url;\n\n\t\t/**\n\t\t * Locale translation method.\n\t\t *\n\t\t * @member {module:utils/locale~Locale#t} #t\n\t\t */\n\t\tthis.t = t;\n\t}\n\n\t/**\n\t * Starts the upload process.\n\t *\n\t * @see module:upload/filerepository~UploadAdapter#upload\n\t * @returns {Promise.<Object>}\n\t */\n\tupload() {\n\t\treturn this.loader.file.then( file => {\n\t\t\treturn new Promise( ( resolve, reject ) => {\n\t\t\t\tthis._initRequest();\n\t\t\t\tthis._initListeners( resolve, reject, file );\n\t\t\t\tthis._sendRequest( file );\n\t\t\t} );\n\t\t} );\n\t}\n\n\t/**\n\t * Aborts the upload process.\n\t *\n\t * @see module:upload/filerepository~UploadAdapter#abort\n\t */\n\tabort() {\n\t\tif ( this.xhr ) {\n\t\t\tthis.xhr.abort();\n\t\t}\n\t}\n\n\t/**\n\t * Initializes the XMLHttpRequest object.\n\t *\n\t * @private\n\t */\n\t_initRequest() {\n\t\tconst xhr = this.xhr = new XMLHttpRequest();\n\n\t\txhr.open( 'POST', this.url, true );\n\t\txhr.responseType = 'json';\n\t}\n\n\t/**\n\t * Initializes XMLHttpRequest listeners.\n\t *\n\t * @private\n\t * @param {Function} resolve Callback function to be called when the request is successful.\n\t * @param {Function} reject Callback function to be called when the request cannot be completed.\n\t * @param {File} file File instance to be uploaded.\n\t */\n\t_initListeners( resolve, reject, file ) {\n\t\tconst xhr = this.xhr;\n\t\tconst loader = this.loader;\n\t\tconst t = this.t;\n\t\tconst genericError = t( 'Cannot upload file:' ) + ` ${ file.name }.`;\n\n\t\txhr.addEventListener( 'error', () => reject( genericError ) );\n\t\txhr.addEventListener( 'abort', () => reject() );\n\t\txhr.addEventListener( 'load', () => {\n\t\t\tconst response = xhr.response;\n\n\t\t\tif ( !response || !response.uploaded ) {\n\t\t\t\treturn reject( response && response.error && response.error.message ? response.error.message : genericError );\n\t\t\t}\n\n\t\t\tresolve( {\n\t\t\t\tdefault: response.url\n\t\t\t} );\n\t\t} );\n\n\t\t// Upload progress when it's supported.\n\t\t/* istanbul ignore else */\n\t\tif ( xhr.upload ) {\n\t\t\txhr.upload.addEventListener( 'progress', evt => {\n\t\t\t\tif ( evt.lengthComputable ) {\n\t\t\t\t\tloader.uploadTotal = evt.total;\n\t\t\t\t\tloader.uploaded = evt.loaded;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the data and sends the request.\n\t *\n\t * @private\n\t * @param {File} file File instance to be uploaded.\n\t */\n\t_sendRequest( file ) {\n\t\t// Prepare form data.\n\t\tconst data = new FormData();\n\t\tdata.append( 'upload', file );\n\t\tdata.append( 'ckCsrfToken', getCsrfToken() );\n\n\t\t// Send request.\n\t\tthis.xhr.send( data );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ckfinder/ckfinder\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport CKFinderUI from './ckfinderui';\nimport CKFinderEditing from './ckfinderediting';\nimport CKFinderUploadAdapter from '@ckeditor/ckeditor5-adapter-ckfinder/src/uploadadapter';\n\n/**\n * The CKFinder feature, a bridge between the CKEditor 5 WYSIWYG editor and the\n * [CKFinder](https://ckeditor.com/ckfinder) file manager and uploader.\n *\n * This is a \"glue\" plugin which enables:\n *\n * * {@link module:ckfinder/ckfinderediting~CKFinderEditing},\n * * {@link module:ckfinder/ckfinderui~CKFinderUI},\n * * {@link module:adapter-ckfinder/uploadadapter~CKFinderUploadAdapter}.\n *\n * See the {@glink features/image-upload/ckfinder \"CKFinder integration\" guide} to learn how to configure\n * and use this feature.\n *\n * Check out the {@glink features/image-upload/image-upload comprehensive \"Image upload\" guide} to learn about\n * other ways to upload images into CKEditor 5.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class CKFinder extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'CKFinder';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ CKFinderEditing, CKFinderUI, CKFinderUploadAdapter ];\n\t}\n}\n\n/**\n * The configuration of the {@link module:ckfinder/ckfinder~CKFinder CKFinder feature}.\n *\n * Read more in {@link module:ckfinder/ckfinder~CKFinderConfig}.\n *\n * @member {module:ckfinder/ckfinder~CKFinderConfig} module:core/editor/editorconfig~EditorConfig#ckfinder\n */\n\n/**\n * The configuration of the {@link module:ckfinder/ckfinder~CKFinder CKFinder feature}\n * and its {@link module:adapter-ckfinder/uploadadapter~CKFinderUploadAdapter upload adapter}.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\tckfinder: {\n *\t\t\t\t\toptions: {\n *\t\t\t\t\t\tresourceType: 'Images'\n *\t\t\t\t\t}\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface CKFinderConfig\n */\n\n/**\n * The configuration options passed to the CKFinder file manager instance.\n *\n * Check the file manager [documentation](https://ckeditor.com/docs/ckfinder/ckfinder3/#!/api/CKFinder.Config-cfg-language)\n * for the complete list of options.\n *\n * @member {Object} module:ckfinder/ckfinder~CKFinderConfig#options\n */\n\n/**\n * The type of the CKFinder opener method.\n *\n * Supported types are:\n *\n * * `'modal'` &ndash; Opens CKFinder in a modal,\n * * `'popup'` &ndash; Opens CKFinder in a new \"pop-up\" window.\n *\n * Defaults to `'modal'`.\n *\n * @member {String} module:ckfinder/ckfinder~CKFinderConfig#openerMethod\n */\n\n/**\n * The path (URL) to the connector which handles the file upload in CKFinder file manager.\n * When specified, it enables the automatic upload of resources such as images inserted into the content.\n *\n * For instance, to use CKFinder's\n * [quick upload](https://ckeditor.com/docs/ckfinder/ckfinder3-php/commands.html#command_quick_upload)\n * command, your can use the following (or similar) path:\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\tckfinder: {\n *\t\t\t\t\tuploadUrl: '/ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Files&responseType=json'\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * Used by the {@link module:adapter-ckfinder/uploadadapter~CKFinderUploadAdapter upload adapter}.\n *\n * @member {String} module:ckfinder/ckfinder~CKFinderConfig#uploadUrl\n */\n","<template>\r\n  <div id=\"calendarEvent\">\r\n    <!-- headerBox -->\r\n    <HeaderBox\r\n      @searchHandlerDate=\"searchHandlerDate\"\r\n      @changeHandler=\"changeHandler\"\r\n      @exportHandler=\"exportHandler\"\r\n      @importHandler=\"importHandler\"\r\n      @handleAddOrEdit=\"handleAddOrEdit\"\r\n      @getSearchDate=\"getSearchDate\"\r\n      :buttonList=\"buttonList\"\r\n      :showDatePicker=\"true\"\r\n      :isEvent=\"true\"\r\n      :searchLoading=\"searchLoading\"\r\n    ></HeaderBox>\r\n\r\n    <!-- mainTable -->\r\n    <div class=\"mainTable\" v-if=\"eventsData\">\r\n      <div class=\"tableContainer mt-5\">\r\n        <el-table\r\n          header-cell-class-name=\"tableHeader\"\r\n          empty-text=\"暫無資料\"\r\n          :data=\"eventsData\"\r\n          style=\"width: 100% ;overflow:auto\"\r\n          :default-sort=\"{ prop: 'date', order: 'descending' }\"\r\n          @selection-change=\"handleSelectionChange\"\r\n        >\r\n          <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n          <el-table-column width=\"160\" prop=\"EventName\" label=\"活動 / 會議名稱\" sortable></el-table-column>\r\n          <el-table-column width=\"130\" prop=\"EventTypeName\" label=\"行事曆類別\" sortable></el-table-column>\r\n          <el-table-column width=\"200\" prop=\"ShowStartDate\" label=\"公告時間\" sortable>\r\n            <template slot-scope=\"scope\">\r\n              <div class=\"showDateBox\">\r\n                <span class=\"dateFz\">{{ scope.row.ShowStartDate }}</span>\r\n                <div class=\"dateLine\"></div>\r\n                <span class=\"dateFz\">{{ scope.row.ShowEndDate }}</span>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column width=\"200\" prop=\"EventStartDate\" label=\"活動 / 會議時間\" sortable>\r\n            <template slot-scope=\"scope\">\r\n              <div class=\"eventDateBox\">\r\n                <span class=\"dateFz\">{{ scope.row.EventStartDate }}</span>\r\n                <div class=\"dateLine\"></div>\r\n                <span class=\"dateFz\">{{ scope.row.EventEndDate }}</span>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"EventAddr\" label=\"地點\" sortable>\r\n            <template slot-scope=\"scope\">\r\n              <el-tooltip class=\"item\" effect=\"dark\" :open-delay=\"500\" placement=\"top-start\">\r\n                <div slot=\"content\">\r\n                  <span>{{ scope.row.EventAddr }}</span>\r\n                </div>\r\n                <p class=\"textOverflow\">\r\n                  <span>{{ scope.row.EventAddr }}</span>\r\n                </p>\r\n              </el-tooltip>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column width=\"220\" prop=\"emit\" label=\"操作\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                v-if=\"hasBtn('btnEdit')\"\r\n                class=\"outline\"\r\n                size=\"mini\"\r\n                @click=\"copyHandler(scope.row)\"\r\n              >複製</el-button>\r\n              <el-button\r\n                v-if=\"hasBtn('btnEdit')\"\r\n                class=\"outline\"\r\n                size=\"mini\"\r\n                @click=\"handleAddOrEdit('edit', scope.row)\"\r\n              >編輯</el-button>\r\n              <el-button\r\n                v-if=\"hasBtn('btnDelete')\"\r\n                type=\"danger\"\r\n                class=\"outline\"\r\n                size=\"mini\"\r\n                @click=\"deleteHandler(scope.row)\"\r\n              >刪除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- <ckeditor :editor=\"editor\" v-model=\"inputDescription\" :config=\"editorConfig\"></ckeditor> -->\r\n    <!-- pagination -->\r\n    <Pagination\r\n      v-if=\"totalCount\"\r\n      :keyWord=\"keyWordInput\"\r\n      :start=\"startDate\"\r\n      :end=\"endDate\"\r\n      :total=\"totalCount\"\r\n      :page-size=\"pageSize\"\r\n      :currentPage=\"currentPage\"\r\n      @changePage=\"getEvents\"\r\n    ></Pagination>\r\n\r\n    <!-- addOrEditDialog -->\r\n\r\n    <el-dialog :close-on-click-modal=\"false\"\r\n      :title=\"addOrEdit\"\r\n      :visible.sync=\"addOrEditDialog\"\r\n      v-if=\"unitsData\"\r\n      custom-class=\"addOrEditDialog\"\r\n    >\r\n      <ValidationObserver ref=\"obs\">\r\n        <!-- <el-scrollbar class=\"scrollbar-handle\" ref=\"scrollBox\"> -->\r\n        <div class=\"inputBox\" style=\"margin-top: 3rem;\">\r\n          <div class=\"inputTitle\">活動 / 會議名稱</div>\r\n          <ValidationProvider name=\"請輸入活動會議名稱!!\" rules=\"required\" v-slot=\"{  errors,classes }\">\r\n            <el-input\r\n              :class=\"classes\"\r\n              type=\"textarea\"\r\n              :rows=\"2\"\r\n              style=\"width:550px\"\r\n              v-model=\"eventNameInput\"\r\n              placeholder=\"請輸入活動 / 會議名稱\"\r\n            ></el-input>\r\n            <span class=\"validateSpan\" v-if=\"errors[0]\">{{ errors[0] }}</span>\r\n          </ValidationProvider>\r\n        </div>\r\n\r\n        <div class=\"inputBox\">\r\n          <div class=\"inputTitle\">活動 / 會議描述</div>\r\n          <ValidationProvider name=\"請輸入活動會議描述!!\" rules=\"required\" v-slot=\"{  errors,classes }\">\r\n            <div class=\"personalContainer mt-5 ck\" ref=\"ck\">\r\n              <ckeditor\r\n                :class=\"classes\"\r\n                :editor=\"editor\"\r\n                v-model=\"inputDescription\"\r\n                :config=\"editorConfig\"\r\n              ></ckeditor>\r\n            </div>\r\n            <span class=\"validateSpan\" v-if=\"errors[0]\">{{ errors[0] }}</span>\r\n          </ValidationProvider>\r\n        </div>\r\n\r\n        <div class=\"inputBox\">\r\n          <div class=\"inputTitle\">行事曆類別</div>\r\n          <ValidationProvider name=\"請選擇類別!!\" rules=\"required\" v-slot=\"{  errors,classes }\">\r\n            <el-select\r\n              :class=\"classes\"\r\n              v-if=\"eventTypeData\"\r\n              v-model=\"eventCategorySelete\"\r\n              placeholder=\"請選擇行事曆類別\"\r\n            >\r\n              <el-option\r\n                v-for=\"type in eventTypeData\"\r\n                :key=\"type.Value\"\r\n                :label=\"type.Text\"\r\n                :value=\"type.Value\"\r\n              ></el-option>\r\n            </el-select>\r\n            <span class=\"validateSpan\" v-if=\"errors[0]\">{{ errors[0] }}</span>\r\n          </ValidationProvider>\r\n        </div>\r\n\r\n        <div class=\"inputBox\">\r\n          <div class=\"inputTitle\">公告時間</div>\r\n          <ValidationProvider name=\"請選擇公告時間!!\" rules=\"required\" v-slot=\"{  errors,classes }\">\r\n            <el-date-picker\r\n              :class=\"classes\"\r\n              v-model=\"showDate\"\r\n              type=\"datetimerange\"\r\n              range-separator=\"~\"\r\n              start-placeholder=\"公告時間開始\"\r\n              end-placeholder=\"公告時間結束\"\r\n              placeholder=\"請選擇時間\"\r\n            ></el-date-picker>\r\n            <span class=\"validateSpan\" v-if=\"errors[0]\">{{ errors[0] }}</span>\r\n          </ValidationProvider>\r\n        </div>\r\n\r\n        <div class=\"inputBox\">\r\n          <div class=\"inputTitle\">會議 / 活動時間</div>\r\n          <ValidationProvider name=\"請選擇活動時間!!\" rules=\"required\" v-slot=\"{  errors,classes }\">\r\n            <el-date-picker\r\n              :class=\"classes\"\r\n              v-model=\"eventDate\"\r\n              type=\"datetimerange\"\r\n              range-separator=\"~\"\r\n              start-placeholder=\"開始時間\"\r\n              end-placeholder=\"結束時間\"\r\n            ></el-date-picker>\r\n            <span class=\"validateSpan\" v-if=\"errors[0]\">{{ errors[0] }}</span>\r\n          </ValidationProvider>\r\n        </div>\r\n\r\n        <div class=\"inputBox\">\r\n          <div class=\"inputTitle\">會議 / 活動地點</div>\r\n          <ValidationProvider name=\"請輸入會議 / 活動地點!!\" rules=\"required\" v-slot=\"{  errors,classes }\">\r\n            <el-input\r\n              :class=\"classes\"\r\n              style=\"width:600px\"\r\n              v-model=\"eventSiteInput\"\r\n              placeholder=\"請輸入會議 / 活動地點\"\r\n            ></el-input>\r\n            <span class=\"validateSpan\" v-if=\"errors[0]\">{{ errors[0] }}</span>\r\n          </ValidationProvider>\r\n        </div>\r\n\r\n        <div class=\"inputBox\">\r\n          <div class=\"inputTitle\">連結</div>\r\n          <ValidationProvider name=\"請輸入會議 / 活動連結!!\" rules=\"required\" v-slot=\"{  errors,classes }\">\r\n            <el-input\r\n              :class=\"classes\"\r\n              style=\"width:600px\"\r\n              v-model=\"eventUrlInput\"\r\n              placeholder=\"請輸入會議 / 活動連結\"\r\n            ></el-input>\r\n            <span class=\"validateSpan\" v-if=\"errors[0]\">{{ errors[0] }}</span>\r\n          </ValidationProvider>\r\n        </div>\r\n\r\n        <div class=\"inputBox\">\r\n          <div class=\"inputTitle\">單位</div>\r\n          <ValidationProvider name=\"請選擇單位!!\" rules=\"required\" v-slot=\"{  errors,classes }\">\r\n            <el-select\r\n              filterable\r\n              no-match-text=\"暫無資料\"\r\n              :class=\"classes\"\r\n              v-if=\"userControlUnit\"\r\n              v-model=\"unitSelete\"\r\n              placeholder=\"請選擇單位\"\r\n            >\r\n              <el-option\r\n                v-for=\"unit in userControlUnit\"\r\n                :key=\"unit.UntId\"\r\n                :label=\"unit.UntNameFull\"\r\n                :value=\"unit.UntId\"\r\n              ></el-option>\r\n            </el-select>\r\n            <span class=\"validateSpan\" v-if=\"errors[0]\">{{ errors[0] }}</span>\r\n          </ValidationProvider>\r\n        </div>\r\n\r\n        <div class=\"inputBox\">\r\n          <div class=\"inputTitle\">上傳文件</div>\r\n          <el-upload\r\n            ref=\"upload\"\r\n            class=\"upload-demo\"\r\n            :action=\"$store.state.apiBase+'Img'\"\r\n            list-type=\"text\"\r\n            :headers=\"uploadHeader\"\r\n            :on-success=\"successUpload\"\r\n          >\r\n            <el-tooltip :open-delay=\"500\" class=\"item\" effect=\"dark\" placement=\"top-start\">\r\n              <div slot=\"content\">\r\n                檔案格式限制:doc/docx/xls/xlsx/ppt/pttx/pdf/jpg/png\r\n                <br />檔案大小限制:10MB\r\n              </div>\r\n              <el-button size=\"small\" type=\"primary\">選擇上傳文件</el-button>\r\n            </el-tooltip>\r\n          </el-upload>\r\n        </div>\r\n\r\n        <div class=\"inputBox\">\r\n          <div class=\"inputTitle\">已上傳文件</div>\r\n          <p class=\"noFiles\" v-if=\"uploadUrl.length === 0 \">尚未上傳文件</p>\r\n\r\n          <div v-if=\"uploadUrl\">\r\n            <el-button\r\n              v-for=\"(url,index) in uploadUrl\"\r\n              :key=\"index\"\r\n              class=\"downloadBtn\"\r\n              size=\"mini\"\r\n            >\r\n              <el-tooltip\r\n                :open-delay=\"500\"\r\n                class=\"item\"\r\n                effect=\"dark\"\r\n                :content=\"fileName(url)\"\r\n                placement=\"top-start\"\r\n              >\r\n                <p class=\"fileName\" v-if=\"url\">\r\n                  <i @click.capture=\"delFile(index)\" class=\"fas fa-trash-alt\"></i>\r\n                  {{fileName(url)}}\r\n                </p>\r\n              </el-tooltip>\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"inputBox\" style=\"align-items:flex-start\">\r\n          <div class=\"inputTitle\">參與人員</div>\r\n          <div>\r\n            <el-checkbox class=\"relatedCheck\" v-model=\"isRelated\">是否關聯</el-checkbox>\r\n            <div class=\"selectBox\">\r\n              <el-select\r\n                filterable\r\n                no-match-text=\"暫無資料\"\r\n                @change=\"lv1Change\"\r\n                class=\"unitSelect\"\r\n                v-model=\"unit1\"\r\n                placeholder=\"請選擇最高單位\"\r\n              >\r\n                <el-option\r\n                  :value=\"unit.UntId\"\r\n                  :label=\"unit.UntNameFull\"\r\n                  v-for=\"unit in unitLv1\"\r\n                  :key=\"unit.UntId\"\r\n                >{{unit.UntNameFull}}</el-option>\r\n              </el-select>\r\n              <el-select\r\n                filterable\r\n                no-match-text=\"暫無資料\"\r\n                @change=\"lv2Change\"\r\n                class=\"unitSelect\"\r\n                v-model=\"unit2\"\r\n                placeholder=\"請選擇次高單位\"\r\n                v-if=\"unit1 && unitLv2.length > 0\"\r\n              >\r\n                <el-option\r\n                  v-for=\"unit in unitLv2\"\r\n                  :key=\"unit.UntId\"\r\n                  :value=\"unit.UntId\"\r\n                  :label=\"unit.UntNameFull\"\r\n                >{{unit.UntNameFull}}</el-option>\r\n              </el-select>\r\n              <el-select\r\n                filterable\r\n                no-match-text=\"暫無資料\"\r\n                class=\"unitSelect\"\r\n                @change=\"lv3Change\"\r\n                v-model=\"unit3\"\r\n                placeholder=\"請選擇單位\"\r\n                v-if=\"unit2 && unitLv3.length > 0\"\r\n              >\r\n                <el-option\r\n                  v-for=\"unit in unitLv3\"\r\n                  :key=\"unit.UntId\"\r\n                  :value=\"unit.UntId\"\r\n                  :label=\"unit.UntNameFull\"\r\n                >{{unit.UntNameFull}}</el-option>\r\n              </el-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"inputBox\" style=\"align-items:flex-start\">\r\n          <div class=\"inputTitle\"></div>\r\n          <div class=\"selectBox\">\r\n            <el-select\r\n              filterable\r\n              no-match-text=\"暫無資料\"\r\n              :loading=\"userNameLoading\"\r\n              loading-text=\"Loading...\"\r\n              no-data-text=\"暫無資料\"\r\n              v-model=\"userNameSelect\"\r\n              placeholder=\"請選擇名稱\"\r\n              @change=\"setUser\"\r\n            >\r\n              <el-option\r\n                v-for=\"user in usersData\"\r\n                :key=\"user.Account\"\r\n                :value=\"user.Account\"\r\n                :label=\"user.Name\"\r\n              ></el-option>\r\n            </el-select>\r\n            <el-select v-model=\"memberTitle\" placeholder=\"職稱\">\r\n              <el-option :value=\"userData.Title\">{{userData.Title}}</el-option>\r\n            </el-select>\r\n            <el-select v-model=\"rloeSelect\" placeholder=\"Role\">\r\n              <el-option v-for=\"role in rolesData\" :key=\"role\" :value=\"role\"></el-option>\r\n            </el-select>\r\n          </div>\r\n          <el-button :loading=\"addLoading\" @click=\"addToTable\">加入</el-button>\r\n        </div>\r\n        <div class=\"inputBox\" style=\"align-items:flex-start\">\r\n          <div class=\"inputTitle\"></div>\r\n          <el-table\r\n            header-cell-class-name=\"tableHeader\"\r\n            v-if=\"usersTableData\"\r\n            empty-text=\"暫無資料\"\r\n            :data=\"usersTableData\"\r\n            style=\"width: 100%\"\r\n          >\r\n            <el-table-column prop=\"userName\" label=\"姓名\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"usertitle\" label=\"職稱\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"unit\" label=\"單位\"></el-table-column>\r\n            <el-table-column prop label=\"刪除\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"danger\"\r\n                  @click.native.prevent=\"deleteRow(scope.$index, usersTableData)\"\r\n                >刪除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n        <!-- </el-scrollbar> -->\r\n      </ValidationObserver>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addOrEditDialog = false\">取 消</el-button>\r\n        <el-button v-if=\"addOrEdit==='新增'\" type=\"primary\" @click=\"addHandler\">新 增</el-button>\r\n        <el-button v-if=\"addOrEdit==='編輯'\" type=\"primary\" @click=\"editHandler\">編 輯</el-button>\r\n        <el-button v-if=\"addOrEdit==='複製'\" type=\"primary\" @click=\"addHandler\">複 製</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- changeDialog -->\r\n\r\n    <el-dialog :close-on-click-modal=\"false\" title=\"替換人員\" custom-class=\"changeDialog\" :visible.sync=\"changeDialog\">\r\n      <ValidationObserver ref=\"obs2\">\r\n        <div class=\"changeInputBox\">\r\n          <p class=\"changeInputTitle\">原始人員</p>\r\n          <ValidationProvider name=\"請原始人員!!\" rules=\"required\" v-slot=\"{  errors,classes }\">\r\n            <el-select\r\n              filterable\r\n              :class=\"classes\"\r\n              no-match-text=\"無匹配資料\"\r\n              no-data-text=\"無資料\"\r\n              v-model=\"changeMember\"\r\n              placeholder=\"請選擇原始人員\"\r\n            >\r\n              <el-option\r\n                v-for=\"(member,index) in changeMemberData\"\r\n                :key=\"`${member + index}`\"\r\n                :value=\"member\"\r\n              ></el-option>\r\n            </el-select>\r\n            <span class=\"validateSpan\" v-if=\"errors[0]\">{{ errors[0] }}</span>\r\n          </ValidationProvider>\r\n        </div>\r\n\r\n        <div class=\"changeInputBox\">\r\n          <p class=\"changeInputTitle\">替換人員</p>\r\n          <ValidationProvider name=\"請輸入欲替換人員!!\" rules=\"required\" v-slot=\"{  errors,classes }\">\r\n            <el-autocomplete\r\n              class=\"inline-input\"\r\n              :class=\"classes\"\r\n              v-model=\"newChangeMember\"\r\n              :fetch-suggestions=\"querySearch\"\r\n              placeholder=\"請輸入欲替換人員\"\r\n              :trigger-on-focus=\"false\"\r\n            ></el-autocomplete>\r\n            <span class=\"validateSpan\" v-if=\"errors[0]\">{{ errors[0] }}</span>\r\n          </ValidationProvider>\r\n        </div>\r\n      </ValidationObserver>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"changeDialog = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"confirmChange\">提 交</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- importDialog -->\r\n    <el-dialog :close-on-click-modal=\"false\" title=\"匯入文件\" :visible.sync=\"importDialogVisible\" width=\"30%\">\r\n      <el-upload\r\n        ref=\"import\"\r\n        class=\"upload-demo\"\r\n        :multiple=\"false\"\r\n        action=\"https://scan.1966.org.tw/api/CalendarEvent/ImportExcel/xlsx\"\r\n        list-type=\"text\"\r\n        :headers=\"uploadHeader\"\r\n        :before-upload=\"beforeAvatarUpload\"\r\n        :on-success=\"successImport\"\r\n        :on-error=\"errorImport\"\r\n        :auto-upload=\"false\"\r\n        :limit=\"1\"\r\n        :on-exceed=\"importExceed\"\r\n      >\r\n        <el-button size=\"small\" type=\"primary\">選擇上傳文件</el-button>\r\n        <div slot=\"tip\" class=\"el-upload__tip\">限制上傳 xlsx 或 xls 格式文件</div>\r\n        <!-- <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg/png文件，且不超过500kb</div> -->\r\n      </el-upload>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"importDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"confireImport\">匯 入</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HeaderBox from \"../../components/HeaderBox\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport moment, { duration } from \"moment\";\r\n// ck\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-editor-classic/src/classiceditor\";\r\nimport EssentialsPlugin from \"@ckeditor/ckeditor5-essentials/src/essentials\";\r\nimport BoldPlugin from \"@ckeditor/ckeditor5-basic-styles/src/bold\";\r\nimport ItalicPlugin from \"@ckeditor/ckeditor5-basic-styles/src/italic\";\r\nimport LinkPlugin from \"@ckeditor/ckeditor5-link/src/link\";\r\nimport ParagraphPlugin from \"@ckeditor/ckeditor5-paragraph/src/paragraph\";\r\nimport Alignment from \"@ckeditor/ckeditor5-alignment/src/alignment\";\r\nimport Heading from \"@ckeditor/ckeditor5-heading/src/heading.js\";\r\nimport FontBackgroundColor from \"@ckeditor/ckeditor5-font/src/fontbackgroundcolor.js\";\r\nimport FontColor from \"@ckeditor/ckeditor5-font/src/fontcolor.js\";\r\nimport FontFamily from \"@ckeditor/ckeditor5-font/src/fontfamily.js\";\r\nimport FontSize from \"@ckeditor/ckeditor5-font/src/fontsize.js\";\r\nimport MediaEmbed from \"@ckeditor/ckeditor5-media-embed/src/mediaembed.js\";\r\nimport List from \"@ckeditor/ckeditor5-list/src/list.js\";\r\nimport Image from \"@ckeditor/ckeditor5-image/src/image.js\";\r\nimport ImageCaption from \"@ckeditor/ckeditor5-image/src/imagecaption.js\";\r\nimport ImageResize from \"@ckeditor/ckeditor5-image/src/imageresize.js\";\r\nimport ImageStyle from \"@ckeditor/ckeditor5-image/src/imagestyle.js\";\r\nimport ImageToolbar from \"@ckeditor/ckeditor5-image/src/imagetoolbar.js\";\r\nimport ImageUpload from \"@ckeditor/ckeditor5-image/src/imageupload.js\";\r\nimport CKFinder from \"@ckeditor/ckeditor5-ckfinder/src/ckfinder\";\r\nexport default {\r\n  name: \"CalendarEvents\",\r\n  components: {\r\n    HeaderBox,\r\n    Pagination\r\n  },\r\n  data() {\r\n    return {\r\n      // ck\r\n      editor: ClassicEditor,\r\n      editorData: \"\",\r\n      editorConfig: {\r\n        plugins: [\r\n          EssentialsPlugin,\r\n          BoldPlugin,\r\n          ItalicPlugin,\r\n          LinkPlugin,\r\n          ParagraphPlugin,\r\n          Alignment,\r\n          Heading,\r\n          FontBackgroundColor,\r\n          FontColor,\r\n          FontFamily,\r\n          FontSize,\r\n          MediaEmbed,\r\n          List,\r\n          Image,\r\n          ImageResize,\r\n          ImageUpload,\r\n          ImageToolbar,\r\n          ImageCaption,\r\n          ImageStyle,\r\n          CKFinder\r\n        ],\r\n\r\n        toolbar: {\r\n          items: [\r\n            \"heading\",\r\n            \"|\",\r\n            \"bold\",\r\n            \"italic\",\r\n            \"|\",\r\n            \"fontBackgroundColor\",\r\n            \"fontColor\",\r\n            \"fontSize\",\r\n            \"|\",\r\n            \"link\",\r\n            \"imageUpload\",\r\n            \"mediaEmbed\",\r\n            \"|\",\r\n            \"alignment\",\r\n            \"numberedList\",\r\n            \"|\",\r\n            \"undo\",\r\n            \"redo\"\r\n          ]\r\n        },\r\n        image: {\r\n          toolbar: [\r\n            \"imageTextAlternative\",\r\n            \"|\",\r\n            \"imageStyle:full\",\r\n            \"imageStyle:side\"\r\n          ]\r\n        },\r\n        ckfinder: {\r\n          uploadUrl: `https://scan.1966.org.tw/images/Upload/Pic`,\r\n          // 後端的上傳圖片 API 路徑\r\n          options: {\r\n            resourceType: \"Images\"\r\n            // 限定類型為圖片\r\n          }\r\n        }\r\n      },\r\n\r\n      userNameLoading: false,\r\n      // 全域資料\r\n      eventsData: \"\",\r\n      eventTypeData: \"\",\r\n      unitsData: \"\",\r\n      usersData: \"\",\r\n      rolesData: [\r\n        \"主席/主任委員\",\r\n        \"副主任委員\",\r\n        \"執行秘書\",\r\n        \"副執行秘書\",\r\n        \"當任委員/代表\",\r\n        \"選任委員/代表\",\r\n        \"系(中心)主任代表\",\r\n        \"導師代表\",\r\n        \"教師代表\",\r\n        \"學生代表\",\r\n        \"職員(工)代表\",\r\n        \"家長代表\",\r\n        \"業務單位代表\",\r\n        \"專家(學者)顧問代表\",\r\n        \"業界代表\",\r\n        \"列席代表(人員)\",\r\n        \"諮詢顧問\",\r\n        \"社會公正人士\",\r\n        \"工作小組人員\"\r\n      ],\r\n      userData: \"\",\r\n      usersTable: [],\r\n      allMembersData: \"\",\r\n\r\n      //欄位\r\n      eventNameInput: \"\",\r\n      inputDescription: \"\",\r\n      eventCategorySelete: \"\",\r\n      showDate: [],\r\n      eventDate: [],\r\n      eventSiteInput: \"\",\r\n      eventUrlInput: \"\",\r\n      unitSelete: \"\",\r\n      uploadUrl: \"\",\r\n      unit1: \"\",\r\n      unit2: \"\",\r\n      unit3: \"\",\r\n      userNameSelect: \"\",\r\n      rloeSelect: \"\",\r\n      isRelated: true,\r\n      memberTitle: \"\",\r\n\r\n      // 替換\r\n      eventIds: \"\",\r\n      changeMemberData: [],\r\n      changeMember: \"\",\r\n      newChangeMember: \"\",\r\n      allMembersData: \"\",\r\n\r\n      // copy\r\n      copyEventId: \"\",\r\n\r\n      //全域變數\r\n      searchLoading: false,\r\n      addLoading: false,\r\n      totalCount: \"\",\r\n      pageSize: \"\",\r\n      currentPage: 1,\r\n      addOrEdit: \"新增\",\r\n      editEventId: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      keyWordInput: \"\",\r\n      uploadHeader: {\r\n        Authorization: `Bearer ${window.localStorage.getItem(\"Token\")}`\r\n      },\r\n      member: \"\",\r\n      buttonList: [],\r\n      addOrEditDialog: false,\r\n      importDialogVisible: false,\r\n      changeDialog: false,\r\n      searchDate: \"\"\r\n    };\r\n  },\r\n  computed: {\r\n    unitLv1() {\r\n      const vm = this;\r\n      return vm.unitsData.filter(unit => {\r\n        return unit.UntLevelb === \"1\";\r\n      });\r\n    },\r\n    unitLv2() {\r\n      const vm = this;\r\n      let arrLv1 = vm.unitsData.filter(unit => {\r\n        return unit.UntId === vm.unit1;\r\n      });\r\n      let uintLv1 = arrLv1[0];\r\n      return vm.unitsData.filter(unit => {\r\n        return unit.UntIdUp === uintLv1.UntId && unit.UntLevelb === \"2\";\r\n      });\r\n    },\r\n    unitLv3() {\r\n      const vm = this;\r\n      let arrLv2 = vm.unitsData.filter(unit => {\r\n        return unit.UntId === vm.unit2;\r\n      });\r\n      let uintLv2 = arrLv2[0];\r\n      return vm.unitsData.filter(unit => {\r\n        return unit.UntIdUp === uintLv2.UntId && unit.UntLevelb === \"3\";\r\n      });\r\n    },\r\n    usersTableData() {\r\n      return this.usersTable;\r\n    },\r\n    userControlUnit() {\r\n      const vm = this;\r\n      let userCtrl = JSON.parse(window.localStorage.getItem(\"user\")).CtrlUnits;\r\n      let arr = userCtrl.map(uc => {\r\n        return vm.unitsData.filter(unit => {\r\n          return unit.UntId === uc;\r\n        })[0];\r\n      });\r\n      return arr;\r\n    }\r\n  },\r\n  methods: {\r\n    onReady(editor) {\r\n      let ck = this.$refs.ck;\r\n      console.log(ck);\r\n      this.$refs.ck.prepend(editor.ui.view.toolbar.element);\r\n    },\r\n    beforeUpload(file) {\r\n      console.log(file);\r\n      return false;\r\n    },\r\n    async getUnits() {\r\n      const vm = this;\r\n      await vm.$api.GetUnits().then(res => {\r\n        vm.unitsData = res.data;\r\n      });\r\n    },\r\n    getEvents(page = 1, key, startDate, endDate) {\r\n      const vm = this;\r\n      let params = {\r\n        key: vm.keyWordInput,\r\n        page,\r\n        startDate: vm.startDate,\r\n        endDate: vm.endDate\r\n      };\r\n      vm.$api.GetEventsPage(params).then(res => {\r\n        console.log(res);\r\n        vm.totalCount = res.data.response.dataCount;\r\n        vm.pageSize = res.data.response.PageSize;\r\n        vm.currentPage = page;\r\n        let arr = res.data.response.data;\r\n        arr.map(event => {\r\n          event.EventEndDate = moment(event.EventEndDate).format(\r\n            \"YYYY-MM-DD HH:mm\"\r\n          );\r\n          event.EventStartDate = moment(event.EventStartDate).format(\r\n            \"YYYY-MM-DD HH:mm\"\r\n          );\r\n          event.ShowEndDate = moment(event.ShowEndDate).format(\r\n            \"YYYY-MM-DD HH:mm\"\r\n          );\r\n          event.ShowStartDate = moment(event.ShowStartDate).format(\r\n            \"YYYY-MM-DD HH:mm\"\r\n          );\r\n        });\r\n        vm.eventsData = arr;\r\n        vm.$store.dispatch(\"loadingHandler\", false);\r\n      });\r\n    },\r\n    getEventType() {\r\n      let user = JSON.parse(window.localStorage.user);\r\n      this.eventTypeData = user.DropCtrlTypes;\r\n    },\r\n    getAllUser() {\r\n      const vm = this;\r\n      let arr = [];\r\n      vm.$api.GetUsers({ unitCode: \"\" }).then(res => {\r\n        vm.allMembersData = res.data.map(u => {\r\n          u.value = u.Name;\r\n          return u;\r\n        });\r\n      });\r\n    },\r\n    lv1Change() {\r\n      const vm = this;\r\n      vm.unit2 = \"\";\r\n      vm.unit3 = \"\";\r\n      vm.userNameSelect = \"\";\r\n      let unitCode = vm.unit1;\r\n      let params = {\r\n        unitCode\r\n      };\r\n      vm.getUsers(params);\r\n    },\r\n    lv2Change() {\r\n      const vm = this;\r\n      vm.unit3 = \"\";\r\n      vm.userNameSelect = \"\";\r\n      let unitCode = vm.unit2;\r\n      let params = {\r\n        unitCode\r\n      };\r\n      vm.getUsers(params);\r\n    },\r\n    lv3Change() {\r\n      const vm = this;\r\n      vm.userNameSelect = \"\";\r\n      let unitCode = vm.unit3;\r\n      let params = {\r\n        unitCode\r\n      };\r\n      vm.getUsers(params);\r\n    },\r\n    setUser() {\r\n      const vm = this;\r\n      let id = vm.userNameSelect;\r\n      let userArr = vm.usersData.filter(user => {\r\n        return user.Account === id;\r\n      });\r\n      vm.userData = userArr[0];\r\n      console.log(vm.userData);\r\n    },\r\n    getUsers(params) {\r\n      const vm = this;\r\n      vm.userNameLoading = true;\r\n      if (!vm.isRelated) {\r\n        let params1 = {\r\n          unitCode: \"\"\r\n        };\r\n        vm.$api.GetUsers(params1).then(res => {\r\n          console.log(res);\r\n          vm.usersData = res.data;\r\n          vm.userNameLoading = false;\r\n        });\r\n      } else {\r\n        vm.$api.GetUsers(params).then(res => {\r\n          vm.usersData = res.data;\r\n          vm.userNameLoading = false;\r\n        });\r\n      }\r\n    },\r\n    successUpload(res) {\r\n      const vm = this;\r\n      vm.uploadUrl.push(res.response);\r\n      vm.$nextTick(() => {\r\n        vm.$refs.upload.clearFiles();\r\n      });\r\n    },\r\n    delFile(id) {\r\n      console.log(id);\r\n      this.uploadUrl.splice(id, 1);\r\n    },\r\n    fileName(url) {\r\n      if (url) {\r\n        return url.split(\"\\\\\")[1].split(\".\")[0];\r\n      }\r\n    },\r\n    addToTable() {\r\n      const vm = this;\r\n      if (!vm.userData) {\r\n        vm.$alertM.fire({\r\n          icon: \"error\",\r\n          title: \"請確認是否正確選擇參與人員及會議 / 活動時間\"\r\n        });\r\n      } else {\r\n        vm.addLoading = true;\r\n        if (vm.isRelated) {\r\n          let userId = vm.userData.Account;\r\n          let userType = vm.userData.UserType;\r\n          let unitCode = vm.userData.UnitCode;\r\n          let userName = vm.userData.Name;\r\n          let usertitle = vm.memberTitle;\r\n          let unit = vm.userData.UnitName;\r\n          let eventId = vm.eventCategorySelete;\r\n          let userData = {\r\n            userId,\r\n            eventId,\r\n            userType,\r\n            unitCode,\r\n            userName,\r\n            usertitle,\r\n            unit\r\n          };\r\n          let startDate = moment(vm.eventDate[0]).format(\"YYYY-MM-DD HH:mm:ss\");\r\n          let EndDate = moment(vm.eventDate[1]).format(\"YYYY-MM-DD HH:mm:ss\");\r\n          let UserName = vm.userData.Name;\r\n          let params = {\r\n            startDate,\r\n            EndDate,\r\n            UserName\r\n          };\r\n          vm.$api.CheckUserHasEvent(params).then(res => {\r\n            if (res.data.success) {\r\n              vm.$alertT.fire({\r\n                icon: \"success\",\r\n                title: `成功加入${UserName}`\r\n              });\r\n              vm.addLoading = false;\r\n              vm.usersTable.push(userData);\r\n              vm.unit1 = \"\";\r\n              vm.unit2 = \"\";\r\n              vm.unit3 = \"\";\r\n              vm.memberTitle = \"\";\r\n              vm.rloeSelect = \"\";\r\n              vm.userNameSelect = \"\";\r\n              vm.userData = \"\";\r\n              vm.usersData = \"\";\r\n            } else {\r\n              vm.$swal({\r\n                title: \"重複參與活動/會議提示\",\r\n                text: `${userName} 已於同時間參與 ${res.data.response} 活動，是否依舊將加入活動參與人員 ?`,\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#2f3e52\",\r\n                cancelButtonColor: \"#522f2f\",\r\n                confirmButtonText: \"確定\",\r\n                cancelButtonText: \"取消\"\r\n              }).then(result => {\r\n                if (result.value) {\r\n                  vm.addLoading = false;\r\n                  vm.$alertT.fire({\r\n                    icon: \"success\",\r\n                    title: `成功加入${UserName}`\r\n                  });\r\n                  vm.usersTable.push(userData);\r\n                  vm.unit1 = \"\";\r\n                  vm.unit2 = \"\";\r\n                  vm.unit3 = \"\";\r\n                  vm.memberTitle = \"\";\r\n                  vm.rloeSelect = \"\";\r\n                  vm.userNameSelect = \"\";\r\n                  vm.userData = \"\";\r\n                  vm.usersData = \"\";\r\n                } else {\r\n                  vm.addLoading = false;\r\n                  vm.$alertT.fire({\r\n                    icon: \"info\",\r\n                    title: `已取消加入`\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          console.log(\"nR\");\r\n          let userId = vm.userData.Account;\r\n          let userType = vm.userData.UserType;\r\n          let unitCode = vm.unit3 || vm.unit2 || vm.unit1;\r\n          let userName = vm.userData.Name;\r\n          let usertitle = vm.memberTitle;\r\n          let unitArr = vm.unitsData.filter(u => {\r\n            return u.UntId === unitCode;\r\n          });\r\n          let unit = unitArr[0].UntNameFull;\r\n          let eventId = vm.eventCategorySelete;\r\n          let userData = {\r\n            userId,\r\n            eventId,\r\n            userType,\r\n            unitCode,\r\n            userName,\r\n            usertitle,\r\n            unit\r\n          };\r\n          let startDate = moment(vm.eventDate[0]).format(\"YYYY-MM-DD HH:mm:ss\");\r\n          let EndDate = moment(vm.eventDate[1]).format(\"YYYY-MM-DD HH:mm:ss\");\r\n          let UserName = vm.userData.Name;\r\n          let params = {\r\n            startDate,\r\n            EndDate,\r\n            UserName\r\n          };\r\n          vm.$api.CheckUserHasEvent(params).then(res => {\r\n            console.log(res);\r\n            if (res.data.success) {\r\n              vm.addLoading = false;\r\n              vm.$alertT.fire({\r\n                icon: \"success\",\r\n                title: `成功加入${UserName}`\r\n              });\r\n              vm.usersTable.push(userData);\r\n              vm.unit1 = \"\";\r\n              vm.unit2 = \"\";\r\n              vm.unit3 = \"\";\r\n              vm.memberTitle = \"\";\r\n              vm.rloeSelect = \"\";\r\n              vm.userNameSelect = \"\";\r\n              vm.userData = \"\";\r\n              vm.usersData = \"\";\r\n            } else {\r\n              vm.$swal({\r\n                title: \"重複參與活動/會議提示\",\r\n                text: `${userName} 已於同時間參與 ${res.data.response} 活動，是否依舊將加入活動參與人員 ?`,\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#2f3e52\",\r\n                cancelButtonColor: \"#522f2f\",\r\n                confirmButtonText: \"確定\",\r\n                cancelButtonText: \"取消\"\r\n              }).then(result => {\r\n                if (result.value) {\r\n                  vm.addLoading = false;\r\n                  vm.$alertT.fire({\r\n                    icon: \"success\",\r\n                    title: `成功加入${UserName}`\r\n                  });\r\n                  vm.usersTable.push(userData);\r\n                  vm.unit1 = \"\";\r\n                  vm.unit2 = \"\";\r\n                  vm.unit3 = \"\";\r\n                  vm.memberTitle = \"\";\r\n                  vm.rloeSelect = \"\";\r\n                  vm.userNameSelect = \"\";\r\n                  vm.userData = \"\";\r\n                  vm.usersData = \"\";\r\n                } else {\r\n                  vm.addLoading = false;\r\n                  vm.$alertT.fire({\r\n                    icon: \"info\",\r\n                    title: `已取消加入`\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    deleteRow(index, rows) {\r\n      rows.splice(index, 1);\r\n    },\r\n    async addHandler() {\r\n      const vm = this;\r\n      const isValid = await vm.$refs.obs.validate();\r\n      if (!isValid) {\r\n        vm.$alertM.fire({\r\n          icon: \"error\",\r\n          title: \"請確認欄位是否正確填寫\"\r\n        });\r\n        // Vue.swal(\"Hello Vue world!!!\");\r\n      } else {\r\n        if (vm.usersTableData.length == 0) {\r\n          vm.$alertM.fire({\r\n            icon: \"error\",\r\n            title: `請確實新增參與人員!`\r\n          });\r\n        } else {\r\n          let eventName = vm.eventNameInput;\r\n          let eventTypeId = vm.eventCategorySelete;\r\n          let summary = vm.inputDescription;\r\n          let eventStartDate = moment(vm.eventDate[0]).format(\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          );\r\n          let eventEndDate = moment(vm.eventDate[1]).format(\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          );\r\n          let showStartDate = moment(vm.showDate[0]).format(\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          );\r\n          let showEndDate = moment(vm.showDate[1]).format(\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          );\r\n          let eventAddr = vm.eventSiteInput;\r\n          let pushData = true;\r\n          let unitCode = vm.unitSelete;\r\n          let attachDoc = vm.uploadUrl;\r\n          let linkUrl = vm.eventUrlInput;\r\n          let joinUsers = vm.usersTableData;\r\n          let params = {\r\n            eventName,\r\n            eventTypeId,\r\n            summary,\r\n            eventStartDate,\r\n            eventEndDate,\r\n            showStartDate,\r\n            showEndDate,\r\n            eventAddr,\r\n            pushData,\r\n            unitCode,\r\n            attachDoc,\r\n            linkUrl,\r\n            joinUsers\r\n          };\r\n          console.log(params);\r\n          vm.$api.AddEvent(params).then(res => {\r\n            if (res.data.success) {\r\n              vm.addOrEditDialog = false;\r\n\r\n              vm.$alertM.fire({\r\n                icon: \"success\",\r\n                title: `成功${vm.addOrEdit}${eventName}`\r\n              });\r\n              vm.getEvents();\r\n            } else {\r\n              vm.addOrEditDialog = false;\r\n              vm.$alertM.fire({\r\n                icon: \"error\",\r\n                title: `${vm.addOrEdit}失敗`\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    async handleAddOrEdit(act, info) {\r\n      const vm = this;\r\n      if (vm.$refs.obs) {\r\n        await vm.$refs.obs.reset();\r\n      }\r\n      if (act === \"add\") {\r\n        vm.addOrEdit = \"新增\";\r\n        vm.addOrEditDialog = true;\r\n        vm.eventNameInput = \"\";\r\n        vm.inputDescription = \"\";\r\n        vm.eventCategorySelete = \"\";\r\n        vm.showDate = [];\r\n        vm.eventDate = [];\r\n        vm.eventSiteInput = \"\";\r\n        vm.eventUrlInput = \"\";\r\n        vm.uploadUrl = [];\r\n        vm.unit1 = \"\";\r\n        vm.unit2 = \"\";\r\n        vm.unit3 = \"\";\r\n        vm.userNameSelect = \"\";\r\n        vm.unitSelete = \"\";\r\n        vm.rloeSelect = \"\";\r\n        vm.usersTable = [];\r\n        vm.$nextTick(() => {\r\n          vm.$refs.upload.clearFiles();\r\n        });\r\n      } else {\r\n        vm.addOrEdit = \"編輯\";\r\n        vm.editEventId = info.Id;\r\n        vm.$store.dispatch(\"loadingHandler\", true);\r\n        let params = {\r\n          Id: info.Id\r\n        };\r\n        vm.$api.GetEventById(params).then(res => {\r\n          let event = res.data.response;\r\n\r\n          vm.$store.dispatch(\"loadingHandler\", false);\r\n          console.log(event);\r\n          vm.showDate = [];\r\n          vm.eventDate = [];\r\n          vm.eventNameInput = event.EventName;\r\n          vm.inputDescription = event.Summary;\r\n          vm.uploadUrl = event.AttachDoc;\r\n          vm.eventCategorySelete = event.EventTypeId;\r\n          vm.showDate[0] = moment(event.ShowStartDate).format(\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          );\r\n          vm.showDate[1] = moment(event.ShowEndDate).format(\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          );\r\n          vm.eventDate[0] = moment(event.EventStartDate).format(\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          );\r\n          vm.eventDate[1] = moment(event.EventEndDate).format(\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          );\r\n          vm.eventSiteInput = event.EventAddr;\r\n          vm.eventUrlInput = event.LinkUrl;\r\n          vm.unitSelete = event.UnitCode;\r\n          vm.unit1 = \"\";\r\n          vm.unit2 = \"\";\r\n          vm.unit3 = \"\";\r\n          vm.userNameSelect = \"\";\r\n          vm.rloeSelect = \"\";\r\n          vm.usersTable = event.JoinUsers;\r\n          vm.$nextTick(() => {\r\n            vm.addOrEditDialog = true;\r\n            vm.$nextTick(() => {\r\n              vm.$refs.upload.clearFiles();\r\n            });\r\n          });\r\n        });\r\n      }\r\n    },\r\n    async changeHandler() {\r\n      const vm = this;\r\n\r\n      vm.$store.dispatch(\"loadingHandler\", true);\r\n      if (vm.$refs.obs2) {\r\n        await vm.$refs.obs2.reset();\r\n      }\r\n      vm.changeMember = \"\";\r\n      vm.newChangeMember = \"\";\r\n      let eventIds = vm.eventIds;\r\n      if (!eventIds) {\r\n        vm.$store.dispatch(\"loadingHandler\", false);\r\n        vm.$alertM.fire({\r\n          icon: \"error\",\r\n          title: `請勾選欲替換人員之活動`\r\n        });\r\n      } else {\r\n        let params = {\r\n          eventIds\r\n        };\r\n        vm.$api.GetJoinUserByEventIds(params).then(res => {\r\n          console.log(res.data.response);\r\n          vm.changeMemberData = res.data.response;\r\n          vm.changeDialog = true;\r\n          vm.$store.dispatch(\"loadingHandler\", false);\r\n        });\r\n      }\r\n    },\r\n    async confirmChange() {\r\n      const vm = this;\r\n      const isValid = await vm.$refs.obs2.validate();\r\n      if (!isValid) {\r\n        vm.$alertM.fire({\r\n          icon: \"error\",\r\n          title: `請確認欄位是否正確填寫`\r\n        });\r\n      } else {\r\n        if (!vm.changeMember) {\r\n          vm.$alertM.fire({\r\n            icon: \"error\",\r\n            title: `請確認欄位是否正確填寫`\r\n          });\r\n        } else {\r\n          let eventIds = vm.eventIds;\r\n          let oldName = vm.changeMember;\r\n          let newName = vm.newChangeMember;\r\n          let params = { eventIds, oldName, newName };\r\n          vm.$api.ChangeMember(params).then(res => {\r\n            vm.changeDialog = false;\r\n            console.log(res);\r\n            vm.getEvents();\r\n            vm.$alertM.fire({\r\n              icon: \"success\",\r\n              title: `人員替換成功! ${res.data.response}`\r\n            });\r\n          });\r\n        }\r\n      }\r\n    },\r\n    searchHandlerDate({ page, key, startDate, endDate }) {\r\n      console.log(page, key, startDate, endDate);\r\n      const vm = this;\r\n      vm.searchLoading = true;\r\n      vm.keyWordInput = key;\r\n      vm.startDate = startDate;\r\n      vm.endDate = endDate;\r\n      let params = {\r\n        key,\r\n        page,\r\n        startDate,\r\n        endDate\r\n      };\r\n      vm.$api.SearchEvent(params).then(res => {\r\n        vm.totalCount = res.data.response.dataCount;\r\n        vm.pageSize = res.data.response.PageSize;\r\n        // vm.eventsData = res.data.response.data;\r\n        let arr = res.data.response.data;\r\n        arr.map(event => {\r\n          event.EventEndDate = moment(event.EventEndDate).format(\r\n            \"YYYY-MM-DD HH:mm\"\r\n          );\r\n          event.EventStartDate = moment(event.EventStartDate).format(\r\n            \"YYYY-MM-DD HH:mm\"\r\n          );\r\n          event.ShowEndDate = moment(event.ShowEndDate).format(\r\n            \"YYYY-MM-DD HH:mm\"\r\n          );\r\n          event.ShowStartDate = moment(event.ShowStartDate).format(\r\n            \"YYYY-MM-DD HH:mm\"\r\n          );\r\n        });\r\n        vm.eventsData = arr;\r\n        vm.searchLoading = false;\r\n        vm.currentPage = 1;\r\n      });\r\n    },\r\n\r\n    exportHandler({ key, startDate, endDate }) {\r\n      const vm = this;\r\n      let date = moment(new Date()).format(\"YYYYMMDDHHMM\");\r\n      let sed;\r\n      let keytxt;\r\n      if (!startDate) {\r\n        sed = \"所有\";\r\n      } else {\r\n        sed = `${startDate} ~ ${endDate}`;\r\n      }\r\n      if (!key) {\r\n        keytxt = \"\";\r\n      } else {\r\n        keytxt = `關鍵字為${key}`;\r\n      }\r\n      vm.$swal({\r\n        title: \"匯出提示\",\r\n        html: `即將匯出${sed}${keytxt}的資料 <br /><p class='fontRed'>*匯出內容將與搜尋結果相同*</p>`,\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#2f3e52\",\r\n        cancelButtonColor: \"#522f2f\",\r\n        confirmButtonText: \"確定匯出\",\r\n        cancelButtonText: \"取消\"\r\n      }).then(result => {\r\n        if (result.value) {\r\n          let config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${vm.$store.state.token}`\r\n            },\r\n            responseType: \"blob\" //// 回應類型為 blob\r\n          };\r\n          this.$http\r\n            .get(\r\n              `https://scan.1966.org.tw/api/CalendarEvent/GetCalendarExcel?key=${key}&startDate=${startDate}&endDate=${endDate}`,\r\n              config\r\n            )\r\n            .then(res => {\r\n              console.log(res);\r\n              let blob = new Blob([res.data], {\r\n                type: \"application/\" + res.headers[\"content-type\"]\r\n              });\r\n              let downloadElement = document.createElement(\"a\");\r\n              let href = window.URL.createObjectURL(blob); // 創建下載的鏈接\r\n              downloadElement.href = href;\r\n              downloadElement.download = `行事曆事件_${date}.xlsx`; // 下載後文件名\r\n              // 此寫法兼容可火狐瀏覽器\r\n              document.body.appendChild(downloadElement);\r\n              downloadElement.click(); // 點擊下載\r\n              document.body.removeChild(downloadElement); // 下載完成移除元素\r\n              window.URL.revokeObjectURL(href); // 釋放掉 blob 對象\r\n              vm.$alertT.fire({\r\n                icon: \"success\",\r\n                title: `匯出成功`\r\n              });\r\n            });\r\n        } else {\r\n          vm.$alertT.fire({\r\n            icon: \"info\",\r\n            title: `已取消匯出`\r\n          });\r\n        }\r\n      });\r\n    },\r\n    importHandler(boolen) {\r\n      this.importDialogVisible = boolen;\r\n      this.$nextTick(() => {\r\n        this.$refs.import.clearFiles();\r\n      });\r\n    },\r\n    importExceed() {\r\n      const vm = this;\r\n      vm.$alertM.fire({\r\n        icon: \"info\",\r\n        title: \"限制單檔上傳\"\r\n      });\r\n    },\r\n    confireImport() {\r\n      this.$refs.import.submit();\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      const vm = this;\r\n      // const isJPG = file.type === 'image/jpeg';\r\n      let testmsg = file.name.substring(file.name.lastIndexOf(\".\") + 1);\r\n      const extension = testmsg === \"xls\";\r\n      const extension2 = testmsg === \"xlsx\";\r\n      // const isLt2M = file.size / 1024 / 1024 < 2;\r\n      if (!extension && !extension2) {\r\n        vm.$alertM.fire({\r\n          icon: \"error\",\r\n          title: `僅接受檔案格式為 xlsx 或 xls !`\r\n        });\r\n        return false;\r\n      }\r\n      // if (!isLt2M) {\r\n      //   this.$message.error(\"大於2M!\");\r\n      // }\r\n      // return isJPG && isLt2M;\r\n    },\r\n    successImport(res) {\r\n      const vm = this;\r\n      if (res.success) {\r\n        vm.$alertM.fire({\r\n          icon: \"success\",\r\n          title: res.msg\r\n        });\r\n        vm.importDialogVisible = false;\r\n        vm.getEvents();\r\n      } else {\r\n        vm.$alertM.fire({\r\n          icon: \"error\",\r\n          title: res.msg\r\n        });\r\n        vm.importDialogVisible = false;\r\n      }\r\n    },\r\n    errorImport(res) {\r\n      const vm = this;\r\n      vm.$alertM.fire({\r\n        icon: \"error\",\r\n        title: res.msg\r\n      });\r\n    },\r\n    copyHandler(info) {\r\n      console.log(info);\r\n      const vm = this;\r\n      vm.addOrEdit = \"複製\";\r\n      vm.copyEventId = info.Id;\r\n      vm.$store.dispatch(\"loadingHandler\", true);\r\n      let params = {\r\n        Id: info.Id\r\n      };\r\n      vm.$api.GetEventById(params).then(res => {\r\n        let event = res.data.response;\r\n\r\n        vm.$store.dispatch(\"loadingHandler\", false);\r\n        console.log(event);\r\n        vm.showDate = [];\r\n        vm.eventDate = [];\r\n        vm.eventNameInput = event.EventName;\r\n        vm.inputDescription = event.Summary;\r\n        vm.eventCategorySelete = event.EventTypeId;\r\n        vm.uploadUrl = event.AttachDoc;\r\n        vm.showDate[0] = moment(event.ShowStartDate).format(\r\n          \"YYYY-MM-DD HH:mm:ss\"\r\n        );\r\n        vm.showDate[1] = moment(event.ShowEndDate).format(\r\n          \"YYYY-MM-DD HH:mm:ss\"\r\n        );\r\n        vm.eventDate[0] = moment(event.EventStartDate).format(\r\n          \"YYYY-MM-DD HH:mm:ss\"\r\n        );\r\n        vm.eventDate[1] = moment(event.EventEndDate).format(\r\n          \"YYYY-MM-DD HH:mm:ss\"\r\n        );\r\n        vm.eventSiteInput = event.EventAddr;\r\n        vm.eventUrlInput = event.LinkUrl;\r\n        vm.unitSelete = event.UnitCode;\r\n        vm.unit1 = \"\";\r\n        vm.unit2 = \"\";\r\n        vm.unit3 = \"\";\r\n        vm.userNameSelect = \"\";\r\n        vm.rloeSelect = \"\";\r\n        vm.usersTable = event.JoinUsers;\r\n        vm.$nextTick(() => {\r\n          vm.addOrEditDialog = true;\r\n          vm.$nextTick(() => {\r\n            vm.$refs.upload.clearFiles();\r\n          });\r\n        });\r\n      });\r\n    },\r\n    async editHandler() {\r\n      const vm = this;\r\n      const isValid = await vm.$refs.obs.validate();\r\n      if (!isValid) {\r\n        vm.$alertM.fire({\r\n          icon: \"error\",\r\n          title: `請確認欄位是否正確填寫!`\r\n        });\r\n      } else {\r\n        if (vm.usersTableData.length == 0) {\r\n          vm.$alertM.fire({\r\n            icon: \"error\",\r\n            title: `請確實新增參與人員!`\r\n          });\r\n        } else {\r\n          let id = vm.editEventId;\r\n          let eventName = vm.eventNameInput;\r\n          let eventTypeId = vm.eventCategorySelete;\r\n          let summary = vm.inputDescription;\r\n          let eventStartDate = moment(vm.eventDate[0]).format(\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          );\r\n          let eventEndDate = moment(vm.eventDate[1]).format(\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          );\r\n          let showStartDate = moment(vm.showDate[0]).format(\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          );\r\n          let showEndDate = moment(vm.showDate[1]).format(\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          );\r\n          let eventAddr = vm.eventSiteInput;\r\n          let pushData = true;\r\n          let unitCode = vm.unitSelete;\r\n          let attachDoc = vm.uploadUrl;\r\n          let linkUrl = vm.eventUrlInput;\r\n          let joinUsers = vm.usersTableData;\r\n          let params = {\r\n            id,\r\n            eventName,\r\n            eventTypeId,\r\n            summary,\r\n            eventStartDate,\r\n            eventEndDate,\r\n            showStartDate,\r\n            showEndDate,\r\n            eventAddr,\r\n            pushData,\r\n            unitCode,\r\n            attachDoc,\r\n            linkUrl,\r\n            joinUsers\r\n          };\r\n          console.log(params);\r\n          vm.$api.EditEvent(params).then(res => {\r\n            if (res.data.success) {\r\n              vm.addOrEditDialog = false;\r\n              vm.$alertM.fire({\r\n                icon: \"success\",\r\n                title: `${eventName} 編輯成功`\r\n              });\r\n              vm.getEvents();\r\n            } else {\r\n              vm.addOrEditDialog = false;\r\n              vm.$alertM.fire({\r\n                icon: \"error\",\r\n                title: `編輯失敗`\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    hasBtn(btnType) {\r\n      const vm = this;\r\n      return this.buttonList.some(btn => btn.iconCls == btnType);\r\n    },\r\n    deleteHandler(event) {\r\n      console.log(event);\r\n      const vm = this;\r\n      vm.$swal({\r\n        title: \"刪除提示\",\r\n        text: `確認刪除 ${event.EventName} (${event.EventTypeName}) ?`,\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#2f3e52\",\r\n        cancelButtonColor: \"#522f2f\",\r\n        confirmButtonText: \"確定\",\r\n        cancelButtonText: \"取消\"\r\n      }).then(result => {\r\n        if (result.value) {\r\n          let params = {\r\n            id: event.Id\r\n          };\r\n          vm.$api.DeleteEvent(params).then(res => {\r\n            vm.getEvents();\r\n          });\r\n          vm.$alertM.fire({\r\n            icon: \"success\",\r\n            title: `${event.EventName} (${event.EventTypeName}) 删除成功`\r\n          });\r\n        } else {\r\n          vm.addLoading = false;\r\n          vm.$alertT.fire({\r\n            icon: \"info\",\r\n            title: `已取消刪除`\r\n          });\r\n        }\r\n      });\r\n    },\r\n    handleSelectionChange(val) {\r\n      const vm = this;\r\n      let arr = [];\r\n      val.map(event => {\r\n        arr.push(event.Id);\r\n      });\r\n      vm.eventIds = arr.join(\",\");\r\n    },\r\n    getSearchDate(dateArr) {\r\n      this.searchDate = dateArr;\r\n    },\r\n    // scrollToTop() {\r\n    //   this.$refs.scrollBox.wrap.scrollTop = 0;\r\n    // },\r\n    getButtonList(routePath, routers) {\r\n      const vm = this;\r\n      let buttonList = [];\r\n      routers.forEach(element => {\r\n        if (routePath && element.path) {\r\n          let path = routePath.toLowerCase();\r\n          if (element.path && element.path.toLowerCase() === path) {\r\n            buttonList = element.children;\r\n            vm.buttonList = buttonList;\r\n            return;\r\n          } else if (element.children) {\r\n            vm.getButtonList(path, element.children);\r\n          }\r\n        }\r\n      });\r\n      return buttonList;\r\n    },\r\n    querySearch(queryString, cb) {\r\n      let allMembersDatas = this.allMembersData;\r\n      let results = queryString\r\n        ? allMembersDatas.filter(this.createFilter(queryString))\r\n        : allMembersDatas;\r\n      // 调用 callback 返回建议列表的数据\r\n      cb(results);\r\n      console.log(results);\r\n    },\r\n    createFilter(queryString) {\r\n      return str => {\r\n        return str.value.indexOf(queryString) === 0;\r\n      };\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.$store.dispatch(\"loadingHandler\", true);\r\n    let routers = JSON.parse(window.localStorage.router)\r\n      ? JSON.parse(window.localStorage.router)\r\n      : [];\r\n    this.getButtonList(this.$route.path, routers);\r\n    this.getEvents();\r\n    this.getEventType();\r\n    this.getAllUser();\r\n    await this.getUnits();\r\n    this.$store.dispatch(\"loadingHandler\", false);\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Events.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Events.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Events.vue?vue&type=template&id=c6ff7a66&\"\nimport script from \"./Events.vue?vue&type=script&lang=js&\"\nexport * from \"./Events.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/ckeditorerror\n */\n\n/**\n * URL to the documentation with error codes.\n */\nexport const DOCUMENTATION_URL =\n\t'https://ckeditor.com/docs/ckeditor5/latest/framework/guides/support/error-codes.html';\n\n/**\n * The CKEditor error class.\n *\n * You should throw `CKEditorError` when:\n *\n * * An unexpected situation occurred and the editor (most probably) will not work properly. Such exception will be handled\n * by the {@link module:watchdog/watchdog~Watchdog watchdog} (if it is integrated),\n * * If the editor is incorrectly integrated or the editor API is used in the wrong way. This way you will give\n * feedback to the developer as soon as possible. Keep in mind that for common integration issues which should not\n * stop editor initialization (like missing upload adapter, wrong name of a toolbar component) we use `console.warn()` with\n * {@link module:utils/ckeditorerror~attachLinkToDocumentation `attachLinkToDocumentation()`}\n * to improve developers experience and let them see the working editor as soon as possible.\n *\n *\t\t/**\n *\t\t * Error thrown when a plugin cannot be loaded due to JavaScript errors, lack of plugins with a given name, etc.\n *\t\t *\n *\t\t * @error plugin-load\n *\t\t * @param pluginName The name of the plugin that could not be loaded.\n *\t\t * @param moduleName The name of the module which tried to load this plugin.\n *\t\t * /\n *\t\tthrow new CKEditorError( 'plugin-load: It was not possible to load the \"{$pluginName}\" plugin in module \"{$moduleName}', {\n *\t\t\tpluginName: 'foo',\n *\t\t\tmoduleName: 'bar'\n *\t\t} );\n *\n * @extends Error\n */\nexport default class CKEditorError extends Error {\n\t/**\n\t * Creates an instance of the CKEditorError class.\n\t *\n\t * @param {String} message The error message in an `error-name: Error message.` format.\n\t * During the minification process the \"Error message\" part will be removed to limit the code size\n\t * and a link to this error documentation will be added to the `message`.\n\t * @param {Object|null} context A context of the error by which the {@link module:watchdog/watchdog~Watchdog watchdog}\n\t * is able to determine which editor crashed. It should be an editor instance or a property connected to it. It can be also\n\t * a `null` value if the editor should not be restarted in case of the error (e.g. during the editor initialization).\n\t * The error context should be checked using the `areConnectedThroughProperties( editor, context )` utility\n\t * to check if the object works as the context.\n\t * @param {Object} [data] Additional data describing the error. A stringified version of this object\n\t * will be appended to the error message, so the data are quickly visible in the console. The original\n\t * data object will also be later available under the {@link #data} property.\n\t */\n\tconstructor( message, context, data ) {\n\t\tmessage = attachLinkToDocumentation( message );\n\n\t\tif ( data ) {\n\t\t\tmessage += ' ' + JSON.stringify( data );\n\t\t}\n\n\t\tsuper( message );\n\n\t\t/**\n\t\t * @type {String}\n\t\t */\n\t\tthis.name = 'CKEditorError';\n\n\t\t/**\n\t\t * A context of the error by which the Watchdog is able to determine which editor crashed.\n\t\t *\n\t\t * @type {Object|null}\n\t\t */\n\t\tthis.context = context;\n\n\t\t/**\n\t\t * The additional error data passed to the constructor. Undefined if none was passed.\n\t\t *\n\t\t * @type {Object|undefined}\n\t\t */\n\t\tthis.data = data;\n\t}\n\n\t/**\n\t * Checks if the error is of the `CKEditorError` type.\n\t */\n\tis( type ) {\n\t\treturn type === 'CKEditorError';\n\t}\n\n\t/**\n\t * A utility that ensures the the thrown error is a {@link module:utils/ckeditorerror~CKEditorError} one.\n\t * It is useful when combined with the {@link module:watchdog/watchdog~Watchdog} feature, which can restart the editor in case\n\t * of a {@link module:utils/ckeditorerror~CKEditorError} error.\n\t *\n\t * @param {Error} err An error.\n\t * @param {Object} context An object connected through properties with the editor instance. This context will be used\n\t * by the watchdog to verify which editor should be restarted.\n\t */\n\tstatic rethrowUnexpectedError( err, context ) {\n\t\tif ( err.is && err.is( 'CKEditorError' ) ) {\n\t\t\tthrow err;\n\t\t}\n\n\t\t/**\n\t\t * An unexpected error occurred inside the CKEditor 5 codebase. This error will look like the original one\n\t\t * to make the debugging easier.\n\t\t *\n\t\t * This error is only useful when the editor is initialized using the {@link module:watchdog/watchdog~Watchdog} feature.\n\t\t * In case of such error (or any {@link module:utils/ckeditorerror~CKEditorError} error) the watchdog should restart the editor.\n\t\t *\n\t\t * @error unexpected-error\n\t\t */\n\t\tconst error = new CKEditorError( err.message, context );\n\n\t\t// Restore the original stack trace to make the error look like the original one.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/5595 for more details.\n\t\terror.stack = err.stack;\n\n\t\tthrow error;\n\t}\n}\n\n/**\n * Attaches the link to the documentation at the end of the error message. Use whenever you log a warning or error on the\n * console. It is also used by {@link module:utils/ckeditorerror~CKEditorError}.\n *\n *\t\t /**\n *\t\t  * There was a problem processing the configuration of the toolbar. The item with the given\n *\t\t  * name does not exist so it was omitted when rendering the toolbar.\n *\t\t  *\n *\t\t  * @error toolbarview-item-unavailable\n *\t\t  * @param {String} name The name of the component.\n *\t\t  * /\n *\t\t console.warn( attachLinkToDocumentation(\n *\t\t \t'toolbarview-item-unavailable: The requested toolbar item is unavailable.' ), { name } );\n *\n * @param {String} message Message to be logged.\n * @returns {String}\n */\nexport function attachLinkToDocumentation( message ) {\n\tconst matchedErrorName = message.match( /^([^:]+):/ );\n\n\tif ( !matchedErrorName ) {\n\t\treturn message;\n\t}\n\n\treturn message + ` Read more: ${ DOCUMENTATION_URL }#error-${ matchedErrorName[ 1 ] }\\n`;\n}\n","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M8.537 14.813a.888.888 0 1 1-1.254-1.255L10.84 10 7.283 6.442a.888.888 0 1 1 1.254-1.255L12.74 9.39a.888.888 0 0 1-.16 1.382l-4.043 4.042z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M5.042 9.367l2.189 1.837a.75.75 0 0 1-.965 1.149l-3.788-3.18a.747.747 0 0 1-.21-.284.75.75 0 0 1 .17-.945L6.23 4.762a.75.75 0 1 1 .964 1.15L4.863 7.866h8.917A.75.75 0 0 1 14 7.9a4 4 0 1 1-1.477 7.718l.344-1.489a2.5 2.5 0 1 0 1.094-4.73l.008-.032H5.042z\\\"/></svg>\"","module.exports = \"<svg width=\\\"20\\\" height=\\\"20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M.75 15.5a.75.75 0 0 1 .75.75V18l.008.09A.5.5 0 0 0 2 18.5h1.75a.75.75 0 1 1 0 1.5H1.5l-.144-.007a1.5 1.5 0 0 1-1.35-1.349L0 18.5v-2.25a.75.75 0 0 1 .75-.75zm18.5 0a.75.75 0 0 1 .75.75v2.25l-.007.144a1.5 1.5 0 0 1-1.349 1.35L18.5 20h-2.25a.75.75 0 1 1 0-1.5H18a.5.5 0 0 0 .492-.41L18.5 18v-1.75a.75.75 0 0 1 .75-.75zm-10.45 3c.11 0 .2.09.2.2v1.1a.2.2 0 0 1-.2.2H7.2a.2.2 0 0 1-.2-.2v-1.1c0-.11.09-.2.2-.2h1.6zm4 0c.11 0 .2.09.2.2v1.1a.2.2 0 0 1-.2.2h-1.6a.2.2 0 0 1-.2-.2v-1.1c0-.11.09-.2.2-.2h1.6zm.45-5.5a.75.75 0 1 1 0 1.5h-8.5a.75.75 0 1 1 0-1.5h8.5zM1.3 11c.11 0 .2.09.2.2v1.6a.2.2 0 0 1-.2.2H.2a.2.2 0 0 1-.2-.2v-1.6c0-.11.09-.2.2-.2h1.1zm18.5 0c.11 0 .2.09.2.2v1.6a.2.2 0 0 1-.2.2h-1.1a.2.2 0 0 1-.2-.2v-1.6c0-.11.09-.2.2-.2h1.1zm-4.55-2a.75.75 0 1 1 0 1.5H4.75a.75.75 0 1 1 0-1.5h10.5zM1.3 7c.11 0 .2.09.2.2v1.6a.2.2 0 0 1-.2.2H.2a.2.2 0 0 1-.2-.2V7.2c0-.11.09-.2.2-.2h1.1zm18.5 0c.11 0 .2.09.2.2v1.6a.2.2 0 0 1-.2.2h-1.1a.2.2 0 0 1-.2-.2V7.2c0-.11.09-.2.2-.2h1.1zm-4.55-2a.75.75 0 1 1 0 1.5h-2.5a.75.75 0 1 1 0-1.5h2.5zm-5 0a.75.75 0 1 1 0 1.5h-5.5a.75.75 0 0 1 0-1.5h5.5zm-6.5-5a.75.75 0 0 1 0 1.5H2a.5.5 0 0 0-.492.41L1.5 2v1.75a.75.75 0 0 1-1.5 0V1.5l.007-.144A1.5 1.5 0 0 1 1.356.006L1.5 0h2.25zM18.5 0l.144.007a1.5 1.5 0 0 1 1.35 1.349L20 1.5v2.25a.75.75 0 1 1-1.5 0V2l-.008-.09A.5.5 0 0 0 18 1.5h-1.75a.75.75 0 1 1 0-1.5h2.25zM8.8 0c.11 0 .2.09.2.2v1.1a.2.2 0 0 1-.2.2H7.2a.2.2 0 0 1-.2-.2V.2c0-.11.09-.2.2-.2h1.6zm4 0c.11 0 .2.09.2.2v1.1a.2.2 0 0 1-.2.2h-1.6a.2.2 0 0 1-.2-.2V.2c0-.11.09-.2.2-.2h1.6z\\\"/></svg>\""],"sourceRoot":""}