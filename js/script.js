"use strict";

  var v = new Vue({
    el: ".main",
    data: function data() {
      return {
        name: "韓寒寒",
        img: "https://p2.bahamut.com.tw/S/2KU/37/a0a03ed3c88c8770dbe4ae87b4169pl5.JPG"
      };
    },
    mounted: function mounted() {},
    methods: {}
  });

  var ctx = document.getElementById("myChart").getContext("2d");
  var jsonfile = {
    jsonarray: [{
      name: "Joe",
      age: 12
    }, {
      name: "Tom",
      age: 14
    }]
  };

  var labels = jsonfile.jsonarray.map(function (e) {
    return e.name;
  });
  var data = jsonfile.jsonarray.map(function (e) {
    return e.age;
  });

  function draw(el, x) {
    var myChart = new Chart(el, {
      type: x,
      data: {
        labels: labels,
        datasets: [{
          label: "# of Votes",
          data: data,
          backgroundColor: ["rgba(255, 99, 132, 0.2)", "rgba(54, 162, 235, 0.2)", "rgba(255, 206, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(255, 159, 64, 0.2)"],
          borderColor: ["rgba(255, 99, 132, 1)", "rgba(54, 162, 235, 1)", "rgba(255, 206, 86, 1)", "rgba(75, 192, 192, 1)", "rgba(153, 102, 255, 1)", "rgba(255, 159, 64, 1)"],
          borderWidth: 1
        }]
      }
    });
  }
  draw(ctx, "line");

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9qcy9zY3JpcHQuanMiXSwibmFtZXMiOlsiJCIsIkxPR0lOIiwiVnVlIiwiZWwiLCJkYXRhIiwibmFtZSIsImltZyIsImxvZ2luX2VtYWlsIiwibG9naW5fcGFzc3dvcmQiLCJmb3JnZXRfc21zIiwiZm9yZ2V0X25ld3Bhc3N3b3JkIiwiZm9yZ2V0X3Bob25lIiwibWVzc2FnZSIsIm1vdW50ZWQiLCJtZXRob2RzIiwiaXNTaG93IiwidmFsIiwiY29uc29sZSIsImxvZyIsInYiLCJjdHgiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiZ2V0Q29udGV4dCIsImpzb25maWxlIiwianNvbmFycmF5IiwiYWdlIiwibGFiZWxzIiwibWFwIiwiZSIsImRyYXciLCJ4IiwibXlDaGFydCIsIkNoYXJ0IiwidHlwZSIsImRhdGFzZXRzIiwibGFiZWwiLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXJDb2xvciIsImJvcmRlcldpZHRoIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxFQUFFLFlBQVc7QUFDWCxNQUFJQyxRQUFRLElBQUlDLEdBQUosQ0FBUTtBQUNsQkMsUUFBSSxRQURjO0FBRWxCQyxVQUFNLGdCQUFXO0FBQ2YsYUFBTztBQUNMQyxjQUFNLEtBREQ7QUFFTEMsYUFBSyx5RUFGQTtBQUdMQyxxQkFBYSxFQUhSO0FBSUxDLHdCQUFnQixFQUpYO0FBS0xDLG9CQUFZLEVBTFA7QUFNTEMsNEJBQW9CLEVBTmY7QUFPTEMsc0JBQWMsRUFQVDtBQVFMQyxpQkFBUztBQVJKLE9BQVA7QUFVRCxLQWJpQjtBQWNsQkMsYUFBUyxtQkFBVyxDQUFFLENBZEo7QUFlbEJDLGFBQVM7QUFDUEMsY0FBUSxnQkFBU0MsR0FBVCxFQUFjO0FBQ3BCLGdCQUFRQSxHQUFSO0FBQ0UsZUFBSyxDQUFMO0FBQ0UsaUJBQUtKLE9BQUwsR0FBZSxPQUFmO0FBQ0E7QUFDRixlQUFLLENBQUw7QUFDRSxpQkFBS0EsT0FBTCxHQUFlLG9CQUFmO0FBQ0E7QUFDRixlQUFLLENBQUw7QUFDRSxpQkFBS0EsT0FBTCxHQUFlLFlBQWY7QUFDQTtBQUNGLGVBQUssQ0FBTDtBQUNFLGlCQUFLQSxPQUFMLEdBQWUsdUJBQWY7QUFDQTtBQUNGO0FBQ0UsaUJBQUtBLE9BQUwsR0FBZSxPQUFmO0FBQ0FLLG9CQUFRQyxHQUFSLENBQVksUUFBWjtBQWZKO0FBaUJBLGVBQU8sS0FBS04sT0FBWjtBQUNEO0FBcEJNO0FBZlMsR0FBUixDQUFaO0FBc0NBLE1BQUlPLElBQUksSUFBSWpCLEdBQUosQ0FBUTtBQUNkQyxRQUFJLE9BRFU7QUFFZEMsVUFBTSxnQkFBVztBQUNmLGFBQU87QUFDTEMsY0FBTSxLQUREO0FBRUxDLGFBQUs7QUFGQSxPQUFQO0FBSUQsS0FQYTtBQVFkTyxhQUFTLG1CQUFXLENBQUUsQ0FSUjtBQVNkQyxhQUFTO0FBVEssR0FBUixDQUFSOztBQVlBLE1BQUlNLE1BQU1DLFNBQVNDLGNBQVQsQ0FBd0IsU0FBeEIsRUFBbUNDLFVBQW5DLENBQThDLElBQTlDLENBQVY7QUFDQSxNQUFJQyxXQUFXO0FBQ2JDLGVBQVcsQ0FDVDtBQUNFcEIsWUFBTSxLQURSO0FBRUVxQixXQUFLO0FBRlAsS0FEUyxFQUtUO0FBQ0VyQixZQUFNLEtBRFI7QUFFRXFCLFdBQUs7QUFGUCxLQUxTO0FBREUsR0FBZjs7QUFhQSxNQUFJQyxTQUFTSCxTQUFTQyxTQUFULENBQW1CRyxHQUFuQixDQUF1QixVQUFTQyxDQUFULEVBQVk7QUFDOUMsV0FBT0EsRUFBRXhCLElBQVQ7QUFDRCxHQUZZLENBQWI7QUFHQSxNQUFJRCxPQUFPb0IsU0FBU0MsU0FBVCxDQUFtQkcsR0FBbkIsQ0FBdUIsVUFBU0MsQ0FBVCxFQUFZO0FBQzVDLFdBQU9BLEVBQUVILEdBQVQ7QUFDRCxHQUZVLENBQVg7O0FBSUEsV0FBU0ksSUFBVCxDQUFjM0IsRUFBZCxFQUFrQjRCLENBQWxCLEVBQXFCO0FBQ25CLFFBQUlDLFVBQVUsSUFBSUMsS0FBSixDQUFVOUIsRUFBVixFQUFjO0FBQzFCK0IsWUFBTUgsQ0FEb0I7QUFFMUIzQixZQUFNO0FBQ0p1QixnQkFBUUEsTUFESjtBQUVKUSxrQkFBVSxDQUNSO0FBQ0VDLGlCQUFPLFlBRFQ7QUFFRWhDLGdCQUFNQSxJQUZSO0FBR0VpQywyQkFBaUIsQ0FDZix5QkFEZSxFQUVmLHlCQUZlLEVBR2YseUJBSGUsRUFJZix5QkFKZSxFQUtmLDBCQUxlLEVBTWYseUJBTmUsQ0FIbkI7QUFXRUMsdUJBQWEsQ0FDWCx1QkFEVyxFQUVYLHVCQUZXLEVBR1gsdUJBSFcsRUFJWCx1QkFKVyxFQUtYLHdCQUxXLEVBTVgsdUJBTlcsQ0FYZjtBQW1CRUMsdUJBQWE7QUFuQmYsU0FEUTtBQUZOO0FBRm9CLEtBQWQsQ0FBZDtBQTZCRDtBQUNEVCxPQUFLVixHQUFMLEVBQVUsTUFBVjtBQUdELENBMUdEIiwiZmlsZSI6InNjcmlwdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQoZnVuY3Rpb24oKSB7XHJcbiAgbGV0IExPR0lOID0gbmV3IFZ1ZSh7XHJcbiAgICBlbDogXCIjTE9HSU5cIixcclxuICAgIGRhdGE6IGZ1bmN0aW9uKCkge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIG5hbWU6IFwi6Z+T5a+S5a+SXCIsXHJcbiAgICAgICAgaW1nOiBcImh0dHBzOi8vcDIuYmFoYW11dC5jb20udHcvUy8yS1UvMzcvYTBhMDNlZDNjODhjODc3MGRiZTRhZTg3YjQxNjlwbDUuSlBHXCIsXHJcbiAgICAgICAgbG9naW5fZW1haWw6IFwiXCIsXHJcbiAgICAgICAgbG9naW5fcGFzc3dvcmQ6IFwiXCIsXHJcbiAgICAgICAgZm9yZ2V0X3NtczogXCJcIixcclxuICAgICAgICBmb3JnZXRfbmV3cGFzc3dvcmQ6IFwiXCIsXHJcbiAgICAgICAgZm9yZ2V0X3Bob25lOiBcIlwiLFxyXG4gICAgICAgIG1lc3NhZ2U6IFwibG9naW5cIlxyXG4gICAgICB9O1xyXG4gICAgfSxcclxuICAgIG1vdW50ZWQ6IGZ1bmN0aW9uKCkge30sXHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgIGlzU2hvdzogZnVuY3Rpb24odmFsKSB7XHJcbiAgICAgICAgc3dpdGNoICh2YWwpIHtcclxuICAgICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gXCJsb2dpblwiO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gXCJmb3JnZXRfbmV3cGFzc3dvcmRcIjtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgIHRoaXMubWVzc2FnZSA9IFwiZm9yZ2V0X3Ntc1wiO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gXCJmb3JnZXRfc2V0bmV3cGFzc3dvcmRcIjtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSBcImxvZ2luXCI7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5pyJ5ZWP6aGM5Zue55m75YWlXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5tZXNzYWdlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSk7XHJcbiAgbGV0IHYgPSBuZXcgVnVlKHtcclxuICAgIGVsOiBcIi5tYWluXCIsXHJcbiAgICBkYXRhOiBmdW5jdGlvbigpIHtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBuYW1lOiBcIumfk+WvkuWvklwiLFxyXG4gICAgICAgIGltZzogXCJodHRwczovL3AyLmJhaGFtdXQuY29tLnR3L1MvMktVLzM3L2EwYTAzZWQzYzg4Yzg3NzBkYmU0YWU4N2I0MTY5cGw1LkpQR1wiXHJcbiAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgbW91bnRlZDogZnVuY3Rpb24oKSB7fSxcclxuICAgIG1ldGhvZHM6IHt9XHJcbiAgfSk7XHJcblxyXG4gIHZhciBjdHggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm15Q2hhcnRcIikuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG4gIHZhciBqc29uZmlsZSA9IHtcclxuICAgIGpzb25hcnJheTogW1xyXG4gICAgICB7XHJcbiAgICAgICAgbmFtZTogXCJKb2VcIixcclxuICAgICAgICBhZ2U6IDEyXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOiBcIlRvbVwiLFxyXG4gICAgICAgIGFnZTogMTRcclxuICAgICAgfVxyXG4gICAgXVxyXG4gIH07XHJcblxyXG4gIHZhciBsYWJlbHMgPSBqc29uZmlsZS5qc29uYXJyYXkubWFwKGZ1bmN0aW9uKGUpIHtcclxuICAgIHJldHVybiBlLm5hbWU7XHJcbiAgfSk7XHJcbiAgdmFyIGRhdGEgPSBqc29uZmlsZS5qc29uYXJyYXkubWFwKGZ1bmN0aW9uKGUpIHtcclxuICAgIHJldHVybiBlLmFnZTtcclxuICB9KTtcclxuXHJcbiAgZnVuY3Rpb24gZHJhdyhlbCwgeCkge1xyXG4gICAgdmFyIG15Q2hhcnQgPSBuZXcgQ2hhcnQoZWwsIHtcclxuICAgICAgdHlwZTogeCxcclxuICAgICAgZGF0YToge1xyXG4gICAgICAgIGxhYmVsczogbGFiZWxzLFxyXG4gICAgICAgIGRhdGFzZXRzOiBbXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIGxhYmVsOiBcIiMgb2YgVm90ZXNcIixcclxuICAgICAgICAgICAgZGF0YTogZGF0YSxcclxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBbXHJcbiAgICAgICAgICAgICAgXCJyZ2JhKDI1NSwgOTksIDEzMiwgMC4yKVwiLFxyXG4gICAgICAgICAgICAgIFwicmdiYSg1NCwgMTYyLCAyMzUsIDAuMilcIixcclxuICAgICAgICAgICAgICBcInJnYmEoMjU1LCAyMDYsIDg2LCAwLjIpXCIsXHJcbiAgICAgICAgICAgICAgXCJyZ2JhKDc1LCAxOTIsIDE5MiwgMC4yKVwiLFxyXG4gICAgICAgICAgICAgIFwicmdiYSgxNTMsIDEwMiwgMjU1LCAwLjIpXCIsXHJcbiAgICAgICAgICAgICAgXCJyZ2JhKDI1NSwgMTU5LCA2NCwgMC4yKVwiXHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIGJvcmRlckNvbG9yOiBbXHJcbiAgICAgICAgICAgICAgXCJyZ2JhKDI1NSwgOTksIDEzMiwgMSlcIixcclxuICAgICAgICAgICAgICBcInJnYmEoNTQsIDE2MiwgMjM1LCAxKVwiLFxyXG4gICAgICAgICAgICAgIFwicmdiYSgyNTUsIDIwNiwgODYsIDEpXCIsXHJcbiAgICAgICAgICAgICAgXCJyZ2JhKDc1LCAxOTIsIDE5MiwgMSlcIixcclxuICAgICAgICAgICAgICBcInJnYmEoMTUzLCAxMDIsIDI1NSwgMSlcIixcclxuICAgICAgICAgICAgICBcInJnYmEoMjU1LCAxNTksIDY0LCAxKVwiXHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIGJvcmRlcldpZHRoOiAxXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbiAgZHJhdyhjdHgsIFwibGluZVwiKTtcclxuXHJcbiBcclxufSk7XHJcbiJdfQ==